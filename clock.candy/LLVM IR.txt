; ModuleID = 'module'
source_filename = "module"

@"Builtins::equals:6" = global ptr null
@"Builtins::fitsInRustU128:10" = global ptr null
@"Builtins::fitsInRustU128:16" = global ptr null
@"Builtins::fitsInRustU128:5" = global ptr null
@"Builtins::fitsInRustU128:8" = global ptr null
@"Builtins::functionRun:11" = global ptr null
@"Builtins::functionRun:16" = global ptr null
@"Builtins::functionRun:22" = global ptr null
@"Builtins::functionRun:5" = global ptr null
@"Builtins::getArgumentCount:11" = global ptr null
@"Builtins::getArgumentCount:5" = global ptr null
@"Builtins::ifElse:1" = global ptr null
@"Builtins::ifElse:11" = global ptr null
@"Builtins::ifElse:14" = global ptr null
@"Builtins::ifElse:19" = global ptr null
@"Builtins::ifElse:25" = global ptr null
@"Builtins::ifElse:28" = global ptr null
@"Builtins::ifElse:33" = global ptr null
@"Builtins::ifElse:41" = global ptr null
@"Builtins::ifElse:5" = global ptr null
@"Builtins::intAdd:11" = global ptr null
@"Builtins::intAdd:18" = global ptr null
@"Builtins::intAdd:5" = global ptr null
@"Builtins::intBitwiseAnd:18" = global ptr null
@"Builtins::intBitwiseAnd:5" = global ptr null
@"Builtins::intCompareTo:11" = global ptr null
@"Builtins::intCompareTo:18" = global ptr null
@"Builtins::intCompareTo:5" = global ptr null
@"Builtins::intDivideTruncating:11" = global ptr null
@"Builtins::intDivideTruncating:17" = global ptr null
@"Builtins::intDivideTruncating:25" = global ptr null
@"Builtins::intDivideTruncating:32" = global ptr null
@"Builtins::intDivideTruncating:5" = global ptr null
@"Builtins::intMultiply:11" = global ptr null
@"Builtins::intMultiply:18" = global ptr null
@"Builtins::intMultiply:5" = global ptr null
@"Builtins::intShiftRight:11" = global ptr null
@"Builtins::intShiftRight:14" = global ptr null
@"Builtins::intShiftRight:23" = global ptr null
@"Builtins::intShiftRight:24" = global ptr null
@"Builtins::intShiftRight:26:0" = global ptr null
@"Builtins::intShiftRight:27" = global ptr null
@"Builtins::intShiftRight:29" = global ptr null
@"Builtins::intShiftRight:30" = global ptr null
@"Builtins::intShiftRight:31" = global ptr null
@"Builtins::intShiftRight:34" = global ptr null
@"Builtins::intShiftRight:42" = global ptr null
@"Builtins::intShiftRight:49" = global ptr null
@"Builtins::intShiftRight:5" = global ptr null
@"Builtins::intSubtract:11" = global ptr null
@"Builtins::intSubtract:18" = global ptr null
@"Builtins::intSubtract:5" = global ptr null
@"Builtins::isLessThanOrEqualTo:11" = global ptr null
@"Builtins::isLessThanOrEqualTo:18" = global ptr null
@"Builtins::isLessThanOrEqualTo:19" = global ptr null
@"Builtins::isLessThanOrEqualTo:5" = global ptr null
@"Builtins::isNonNegative:12" = global ptr null
@"Builtins::isNonNegative:13" = global ptr null
@"Builtins::isNonNegative:5" = global ptr null
@"Builtins::not:1" = global ptr null
@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:14" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::tagGetValue:11" = global ptr null
@"Builtins::tagGetValue:13" = global ptr null
@"Builtins::tagGetValue:19" = global ptr null
@"Builtins::tagGetValue:5" = global ptr null
@"Builtins::toDebugText:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Builtins::typeOf:5" = global ptr null
@"Core:bool:and:13" = global ptr null
@"Core:bool:and:2" = global ptr null
@"Core:bool:and:4" = global ptr null
@"Core:bool:and:7" = global ptr null
@"Core:bool:and:9" = global ptr null
@"Core:bool:is:1" = global ptr null
@"Core:bool:lazyAnd:14" = global ptr null
@"Core:bool:lazyAnd:16" = global ptr null
@"Core:bool:lazyAnd:18" = global ptr null
@"Core:bool:lazyAnd:18:13" = global ptr null
@"Core:bool:lazyAnd:18:21" = global ptr null
@"Core:bool:lazyAnd:18:9" = global ptr null
@"Core:bool:lazyAnd:2" = global ptr null
@"Core:bool:lazyAnd:4" = global ptr null
@"Core:bool:lazyOr:14" = global ptr null
@"Core:bool:lazyOr:16" = global ptr null
@"Core:bool:lazyOr:18" = global ptr null
@"Core:bool:lazyOr:18:10" = global ptr null
@"Core:bool:lazyOr:18:14" = global ptr null
@"Core:bool:lazyOr:18:22" = global ptr null
@"Core:bool:lazyOr:2" = global ptr null
@"Core:bool:lazyOr:4" = global ptr null
@"Core:bool:not:2" = global ptr null
@"Core:bool:not:4" = global ptr null
@"Core:bool:not:6" = global ptr null
@"Core:bool:or:13" = global ptr null
@"Core:bool:or:2" = global ptr null
@"Core:bool:or:4" = global ptr null
@"Core:bool:or:7" = global ptr null
@"Core:bool:or:9" = global ptr null
@"Core:check:checkEquals:12" = global ptr null
@"Core:check:checkEquals:13" = global ptr null
@"Core:check:checkEquals:15:0" = global ptr null
@"Core:check:checkEquals:16" = global ptr null
@"Core:check:checkEquals:19" = global ptr null
@"Core:check:checkEquals:20" = global ptr null
@"Core:check:checkEquals:22:0" = global ptr null
@"Core:check:checkEquals:23" = global ptr null
@"Core:check:checkEquals:25" = global ptr null
@"Core:check:checkEquals:26" = global ptr null
@"Core:check:checkEquals:27" = global ptr null
@"Core:check:checkEquals:28" = global ptr null
@"Core:check:checkEquals:29" = global ptr null
@"Core:controlFlow:if:11" = global ptr null
@"Core:controlFlow:if:21" = global ptr null
@"Core:controlFlow:if:23" = global ptr null
@"Core:controlFlow:if:28" = global ptr null
@"Core:controlFlow:if:9" = global ptr null
@"Core:controlFlow:recursive:17" = global ptr null
@"Core:controlFlow:recursive:18:0:3" = global ptr null
@"Core:controlFlow:recursive:18:5" = global ptr null
@"Core:controlFlow:recursive:23" = global ptr null
@"Core:controlFlow:recursive:9" = global ptr null
@"Core:fixedDecimal:fromInt:11" = global ptr null
@"Core:fixedDecimal:fromInt:15" = global ptr null
@"Core:fixedDecimal:fromIntScaled:11" = global ptr null
@"Core:fixedDecimal:fromIntScaled:16" = global ptr null
@"Core:fixedDecimal:is:1" = global ptr null
@"Core:fixedDecimal:is:1:19" = global ptr null
@"Core:fixedDecimal:is:1:minorUnits" = global ptr null
@"Core:fixedDecimal:is:1:scale" = global ptr null
@"Core:fixedDecimal:isScale:18:9" = global ptr null
@"Core:fixedDecimal:isScale:19" = global ptr null
@"Core:fixedDecimal:minorUnits:19" = global ptr null
@"Core:fixedDecimal:minorUnits:2" = global ptr null
@"Core:fixedDecimal:minorUnits:21" = global ptr null
@"Core:fixedDecimal:minorUnits:4" = global ptr null
@"Core:fixedDecimal:scale:19" = global ptr null
@"Core:fixedDecimal:scale:2" = global ptr null
@"Core:fixedDecimal:scale:21" = global ptr null
@"Core:fixedDecimal:scale:4" = global ptr null
@"Core:fixedDecimal:scaleFactor:15" = global ptr null
@"Core:fixedDecimal:scaleFactor:4" = global ptr null
@"Core:function:is0:11:3" = global ptr null
@"Core:function:is0:13" = global ptr null
@"Core:function:is2:11:3" = global ptr null
@"Core:function:is2:13" = global ptr null
@"Core:function:run:14" = global ptr null
@"Core:function:run:2" = global ptr null
@"Core:function:run:4" = global ptr null
@"Core:int:compareTo:20" = global ptr null
@"Core:int:compareTo:4" = global ptr null
@"Core:int:compareTo:9" = global ptr null
@"Core:int:isEven:4" = global ptr null
@"Core:int:isEven:8" = global ptr null
@"Core:int:isGreaterThan:13" = global ptr null
@"Core:int:isGreaterThan:4" = global ptr null
@"Core:int:isGreaterThan:9" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:13" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:22" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:4" = global ptr null
@"Core:int:isGreaterThanOrEqualTo:9" = global ptr null
@"Core:int:isLessThan:13" = global ptr null
@"Core:int:isLessThan:4" = global ptr null
@"Core:int:isLessThan:9" = global ptr null
@"Core:int:isNegative:4" = global ptr null
@"Core:int:isNegative:8" = global ptr null
@"Core:int:isNonNegative:16" = global ptr null
@"Core:int:isNonNegative:4" = global ptr null
@"Core:int:isNonNegative:7" = global ptr null
@"Core:int:max:14" = global ptr null
@"Core:int:max:17" = global ptr null
@"Core:int:max:4" = global ptr null
@"Core:int:max:9" = global ptr null
@"Core:int:pow:12" = global ptr null
@"Core:int:pow:14" = global ptr null
@"Core:int:pow:21:1" = global ptr null
@"Core:int:pow:21:4" = global ptr null
@"Core:int:pow:21:4:4" = global ptr null
@"Core:int:pow:21:4:5:10" = global ptr null
@"Core:int:pow:21:4:5:12" = global ptr null
@"Core:int:pow:21:4:5:5" = global ptr null
@"Core:int:pow:21:4:6:12" = global ptr null
@"Core:int:pow:21:4:6:15" = global ptr null
@"Core:int:pow:21:4:6:17" = global ptr null
@"Core:int:pow:21:4:6:18" = global ptr null
@"Core:int:pow:21:4:6:7" = global ptr null
@"Core:int:pow:21:4:7" = global ptr null
@"Core:int:pow:21:base" = global ptr null
@"Core:int:pow:21:exponent" = global ptr null
@"Core:int:pow:22" = global ptr null
@"Core:int:pow:4" = global ptr null
@"Core:int:pow:9" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_get_argument_count = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_int_add = global ptr null
@fun_candy_builtin_int_bitwise_and = global ptr null
@fun_candy_builtin_int_compare_to = global ptr null
@fun_candy_builtin_int_divide_truncating = global ptr null
@fun_candy_builtin_int_multiply = global ptr null
@fun_candy_builtin_int_shift_right = global ptr null
@fun_candy_builtin_int_subtract = global ptr null
@fun_candy_builtin_list_get = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_tag_get_value = global ptr null
@fun_candy_builtin_tag_has_value = global ptr null
@fun_candy_builtin_tag_without_value = global ptr null
@fun_candy_builtin_text_concatenate = global ptr null
@fun_candy_builtin_to_debug_text = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_Base = global ptr null
@tag_Equal = global ptr null
@tag_Exponent = global ptr null
@tag_False = global ptr null
@tag_FixedDecimal = global ptr null
@tag_Function = global ptr null
@tag_Greater = global ptr null
@tag_Int = global ptr null
@tag_Less = global ptr null
@tag_Match = global ptr null
@tag_MinorUnits = global ptr null
@tag_NoMatch = global ptr null
@tag_Nothing = global ptr null
@tag_Scale = global ptr null
@tag_Struct = global ptr null
@tag_Tag = global ptr null
@tag_Text = global ptr null
@tag_True = global ptr null
@num_0 = global ptr null
@num_1 = global ptr null
@num_2 = global ptr null
@num_3 = global ptr null
@num_4 = global ptr null
@num_5 = global ptr null
@num_10 = global ptr null
@num_340282366920938463463374607431768211455 = global ptr null
@"text_ to be " = global ptr null
@text_. = global ptr null
@"text_. You might want to call `shiftLeft` instead." = global ptr null
@"text_A check failed: Expected " = global ptr null
@"text_Expected Equal, got " = global ptr null
@"text_Expected False, got " = global ptr null
@"text_Expected FixedDecimal, got " = global ptr null
@"text_Expected Greater, got " = global ptr null
@"text_Expected Less, got " = global ptr null
@"text_Expected True, got " = global ptr null
@"text_Expected `0`, got `" = global ptr null
@"text_Expected a Struct, got `" = global ptr null
@"text_Expected a Tag, got `" = global ptr null
@"text_Expected tag to have a value, but it doesn't have any." = global ptr null
@"text_Expected tag to not have a value, but it has one: `" = global ptr null
@"text_No case matched the given expression." = global ptr null
@"text_Shifts by that much are not yet supported." = global ptr null
@"text_Struct doesn't contain key `Base`: `" = global ptr null
@"text_Struct doesn't contain key `Exponent`: `" = global ptr null
@"text_Struct doesn't contain key `MinorUnits`: `" = global ptr null
@"text_Struct doesn't contain key `Scale`: `" = global ptr null
@"text_The `body` should take the recursive function and the argument." = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_The shift `amount` is negative: " = global ptr null
@"text_You can't divide by zero." = global ptr null
@"text_`." = global ptr null
@"text_`False` was not satisfied" = global ptr null
@"text_`a | typeIs Int` was not satisfied" = global ptr null
@"text_`amount | typeIs Int` was not satisfied" = global ptr null
@"text_`b | typeIs Int` was not satisfied" = global ptr null
@"text_`b` didn't return a bool." = global ptr null
@"text_`bool.is condition` was not satisfied" = global ptr null
@"text_`conditionIsBool` was not satisfied" = global ptr null
@"text_`dividend | typeIs Int` was not satisfied" = global ptr null
@"text_`divisor | typeIs Int` was not satisfied" = global ptr null
@"text_`else | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`else | typeIs Function` was not satisfied" = global ptr null
@"text_`factorA | typeIs Int` was not satisfied" = global ptr null
@"text_`factorB | typeIs Int` was not satisfied" = global ptr null
@"text_`function | typeIs Function` was not satisfied" = global ptr null
@"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`function.is0 b` was not satisfied" = global ptr null
@"text_`function.is0 then` was not satisfied" = global ptr null
@"text_`int | typeIs Int` was not satisfied" = global ptr null
@"text_`int.is a` was not satisfied" = global ptr null
@"text_`int.is minorUnits` was not satisfied" = global ptr null
@"text_`is a` was not satisfied" = global ptr null
@"text_`is b` was not satisfied" = global ptr null
@"text_`is base` was not satisfied" = global ptr null
@"text_`is exponent` was not satisfied" = global ptr null
@"text_`is valueA` was not satisfied" = global ptr null
@"text_`is valueB` was not satisfied" = global ptr null
@"text_`is value` was not satisfied" = global ptr null
@"text_`is0 body` was not satisfied" = global ptr null
@"text_`isNonNegative exponent` was not satisfied" = global ptr null
@"text_`isScale scale` was not satisfied" = global ptr null
@"text_`minuend | typeIs Int` was not satisfied" = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied" = global ptr null
@"text_`subtrahend | typeIs Int` was not satisfied" = global ptr null
@"text_`tag | typeIs Tag` was not satisfied" = global ptr null
@"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied" = global ptr null
@"text_`then | getArgumentCount | equals 0` was not satisfied" = global ptr null
@"text_`then | typeIs Function` was not satisfied" = global ptr null
@"text_`value | isNonNegative` was not satisfied" = global ptr null
@"text_`value | typeIs Int` was not satisfied" = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@0 = global ptr null
@"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then" = global ptr null
@"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@fun_Builtins__ifElse = global ptr null
@fun_Builtins__ifElse_1_equals_then = global ptr null
@fun_Builtins__ifElse_1_equals_then.2 = global ptr null
@fun_Builtins__ifElse_1_equals_else = global ptr null
@1 = global ptr null
@fun_Builtins__ifElse_1_equals_else.4 = global ptr null
@2 = global ptr null
@fun_Builtins__ifElse_1_equals_else.6 = global ptr null
@3 = global ptr null
@fun_Builtins__ifElse_1_isMatch_then = global ptr null
@fun_Builtins__ifElse_1_isMatch_else = global ptr null
@fun_Builtins__ifElse_1_equals_then.8 = global ptr null
@fun_Builtins__ifElse_1_equals_then.10 = global ptr null
@fun_Builtins__ifElse_1_equals_else.12 = global ptr null
@4 = global ptr null
@fun_Builtins__ifElse_1_equals_else.14 = global ptr null
@5 = global ptr null
@fun_Builtins__ifElse_1_equals_else.16 = global ptr null
@6 = global ptr null
@fun_Builtins__ifElse_1_case-0_didNotMatch = global ptr null
@fun_Core_function_is0 = global ptr null
@fun_Core_function_is0_11 = global ptr null
@fun_Core_function_run = global ptr null
@fun_Core_bool_is = global ptr null
@fun_Core_bool_is_1_equals_then = global ptr null
@fun_Core_bool_is_1_equals_then.18 = global ptr null
@fun_Core_bool_is_1_equals_else = global ptr null
@7 = global ptr null
@fun_Core_bool_is_1_equals_else.20 = global ptr null
@8 = global ptr null
@fun_Core_bool_is_1_equals_else.22 = global ptr null
@9 = global ptr null
@fun_Core_bool_is_1_isMatch_then = global ptr null
@fun_Core_bool_is_1_isMatch_else = global ptr null
@fun_Core_bool_is_1_equals_then.24 = global ptr null
@fun_Core_bool_is_1_equals_then.26 = global ptr null
@fun_Core_bool_is_1_equals_else.28 = global ptr null
@10 = global ptr null
@fun_Core_bool_is_1_equals_else.30 = global ptr null
@11 = global ptr null
@fun_Core_bool_is_1_equals_else.32 = global ptr null
@12 = global ptr null
@fun_Core_bool_is_1_case-0_didNotMatch = global ptr null
@fun_Core_bool_not = global ptr null
@fun_Core_bool_not_6_equals_then = global ptr null
@fun_Core_bool_not_6_equals_then.34 = global ptr null
@fun_Core_bool_not_6_equals_else = global ptr null
@13 = global ptr null
@fun_Core_bool_not_6_equals_else.36 = global ptr null
@14 = global ptr null
@fun_Core_bool_not_6_equals_else.38 = global ptr null
@15 = global ptr null
@fun_Core_bool_not_6_case-0_didNotMatch = global ptr null
@fun_Core_bool_not_6_equals_then.40 = global ptr null
@fun_Core_bool_not_6_equals_then.42 = global ptr null
@fun_Core_bool_not_6_equals_else.44 = global ptr null
@16 = global ptr null
@fun_Core_bool_not_6_equals_else.46 = global ptr null
@17 = global ptr null
@fun_Core_bool_not_6_equals_else.48 = global ptr null
@18 = global ptr null
@fun_Core_bool_not_6_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.50 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else = global ptr null
@19 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.52 = global ptr null
@20 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.54 = global ptr null
@21 = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_matched = global ptr null
@fun_Core_bool_lazyAnd_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.56 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_then.58 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.60 = global ptr null
@22 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.62 = global ptr null
@23 = global ptr null
@fun_Core_bool_lazyAnd_18_equals_else.64 = global ptr null
@24 = global ptr null
@fun_Core_bool_lazyAnd_18_case-1_didNotMatch = global ptr null
@fun_Core_bool_lazyOr = global ptr null
@fun_Core_bool_lazyOr_18_equals_then = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.66 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else = global ptr null
@25 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.68 = global ptr null
@26 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.70 = global ptr null
@27 = global ptr null
@fun_Core_bool_lazyOr_18_case-0_didNotMatch = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.72 = global ptr null
@fun_Core_bool_lazyOr_18_equals_then.74 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.76 = global ptr null
@28 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.78 = global ptr null
@29 = global ptr null
@fun_Core_bool_lazyOr_18_equals_else.80 = global ptr null
@30 = global ptr null
@fun_Core_bool_lazyOr_18_case-1_matched = global ptr null
@fun_Core_bool_lazyOr_18_case-1_didNotMatch = global ptr null
@fun_Core_check_checkEquals = global ptr null
@fun_Core_check_checkEquals_14 = global ptr null
@fun_Core_check_checkEquals_15 = global ptr null
@fun_Core_check_checkEquals_21 = global ptr null
@fun_Core_check_checkEquals_22 = global ptr null
@fun_Core_function_is2 = global ptr null
@fun_Core_function_is2_11 = global ptr null
@fun_Builtins__not = global ptr null
@fun_Builtins__not_1_equals_then = global ptr null
@fun_Builtins__not_1_equals_then.82 = global ptr null
@fun_Builtins__not_1_equals_else = global ptr null
@31 = global ptr null
@fun_Builtins__not_1_equals_else.84 = global ptr null
@32 = global ptr null
@fun_Builtins__not_1_equals_else.86 = global ptr null
@33 = global ptr null
@fun_Builtins__not_1_case-0_didNotMatch = global ptr null
@fun_Builtins__not_1_equals_then.88 = global ptr null
@fun_Builtins__not_1_equals_then.90 = global ptr null
@fun_Builtins__not_1_equals_else.92 = global ptr null
@34 = global ptr null
@fun_Builtins__not_1_equals_else.94 = global ptr null
@35 = global ptr null
@fun_Builtins__not_1_equals_else.96 = global ptr null
@36 = global ptr null
@fun_Builtins__not_1_case-1_didNotMatch = global ptr null
@fun_Builtins__isNonNegative = global ptr null
@fun_Builtins__isNonNegative_13_equals_then = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.98 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else = global ptr null
@37 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.100 = global ptr null
@38 = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_then = global ptr null
@fun_Builtins__isNonNegative_13_isMatch_else = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.102 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.104 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.106 = global ptr null
@39 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.108 = global ptr null
@40 = global ptr null
@fun_Builtins__isNonNegative_13_case-0_didNotMatch = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.110 = global ptr null
@fun_Builtins__isNonNegative_13_equals_then.112 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.114 = global ptr null
@41 = global ptr null
@fun_Builtins__isNonNegative_13_equals_else.116 = global ptr null
@42 = global ptr null
@fun_Builtins__isNonNegative_13_case-1_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.118 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else = global ptr null
@43 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.120 = global ptr null
@44 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_then = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_isMatch_else = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.122 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.124 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.126 = global ptr null
@45 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.128 = global ptr null
@46 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.130 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_then.132 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.134 = global ptr null
@47 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_equals_else.136 = global ptr null
@48 = global ptr null
@fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch = global ptr null
@fun_Builtins__intDivideTruncating = global ptr null
@fun_Builtins__intShiftRight = global ptr null
@fun_Builtins__intShiftRight_25 = global ptr null
@fun_Builtins__intShiftRight_26 = global ptr null
@fun_Core_int_compareTo = global ptr null
@fun_Core_int_isLessThan = global ptr null
@fun_Core_int_isGreaterThan = global ptr null
@fun_Core_int_isGreaterThanOrEqualTo = global ptr null
@fun_Core_int_isNonNegative = global ptr null
@fun_Core_int_isEven = global ptr null
@fun_Core_int_max = global ptr null
@fun_Core_int_max_15 = global ptr null
@fun_Core_int_max_16 = global ptr null
@fun_Core_int_pow_21_4_case-0_matched = global ptr null
@fun_Core_int_pow_21 = global ptr null
@fun_Core_int_pow_21_1_equals_then = global ptr null
@fun_Core_int_pow_21_1_hasKey_then = global ptr null
@49 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else = global ptr null
@50 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then = global ptr null
@fun_Core_int_pow_21_1_hasKey_then.138 = global ptr null
@51 = global ptr null
@fun_Core_int_pow_21_1_hasKey_else.140 = global ptr null
@52 = global ptr null
@fun_Core_int_pow_21_1_isMatch_then.142 = global ptr null
@53 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.144 = global ptr null
@fun_Core_int_pow_21_1_equals_else = global ptr null
@54 = global ptr null
@fun_Core_int_pow_21_1_isMatch_else.146 = global ptr null
@fun_Core_int_pow_21_4_equals_else = global ptr null
@55 = global ptr null
@fun_Core_int_pow_21_4_case-0_didNotMatch = global ptr null
@fun_Core_int_pow_21_4_case-1_matched = global ptr null
@fun_Core_int_pow_21_4_5 = global ptr null
@fun_Core_int_pow_21_4_6 = global ptr null
@fun_Core_controlFlow_recursive_18 = global ptr null
@fun_Core_controlFlow_recursive_18_0 = global ptr null
@fun_Core_int_pow = global ptr null
@56 = global ptr null
@fun_Core_fixedDecimal_is = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.148 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.150 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_then.152 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then = global ptr null
@57 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else = global ptr null
@58 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_then.154 = global ptr null
@59 = global ptr null
@fun_Core_fixedDecimal_is_1_hasKey_else.156 = global ptr null
@60 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_then.158 = global ptr null
@61 = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else = global ptr null
@fun_Core_fixedDecimal_is_1_isMatch_else.160 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else = global ptr null
@62 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.162 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.164 = global ptr null
@63 = global ptr null
@fun_Core_fixedDecimal_is_1_equals_else.166 = global ptr null
@64 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_matched = global ptr null
@fun_Core_fixedDecimal_is_1_18 = global ptr null
@fun_Core_fixedDecimal_isScale_18 = global ptr null
@fun_Core_fixedDecimal_is_1_case-0_didNotMatch = global ptr null
@fun_Core_fixedDecimal_minorUnits = global ptr null
@fun_Core_fixedDecimal_scale = global ptr null
@fun_Core_fixedDecimal_fromIntScaled = global ptr null
@fun_Core_fixedDecimal_isScale_18.168 = global ptr null
@tag_FixedDecimal.169 = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:4" = global ptr null
@"text_`isScale targetScale` was not satisfied" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:9" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:13" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:23" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:14" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:24" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:25" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:24:26" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:2" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:23" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:24" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:25" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:25:26" = global ptr null
@"Core:fixedDecimal:rescaledMinorUnits:26" = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits = global ptr null
@fun_Core_fixedDecimal_isScale_18.171 = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits_24 = global ptr null
@fun_Core_fixedDecimal_isScale_18.173 = global ptr null
@fun_Core_fixedDecimal_rescaledMinorUnits_25 = global ptr null
@fun_Core_fixedDecimal_isScale_18.175 = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:2" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:4" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:7" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:9" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:20" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:23" = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:24" = global ptr null
@tag_ValueA = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:30" = global ptr null
@tag_ValueB = global ptr null
@"Core:fixedDecimal:comparableMinorUnits:35" = global ptr null
@tag_TargetScale = global ptr null
@fun_Core_fixedDecimal_comparableMinorUnits = global ptr null
@"text_Struct doesn't contain key `ValueA`: `" = global ptr null
@"text_Struct doesn't contain key `ValueB`: `" = global ptr null
@"text_Struct doesn't contain key `TargetScale`: `" = global ptr null
@"Core:fixedDecimal:subtract:2" = global ptr null
@"text_`is minuend` was not satisfied" = global ptr null
@"Core:fixedDecimal:subtract:4" = global ptr null
@"Core:fixedDecimal:subtract:7" = global ptr null
@"text_`is subtrahend` was not satisfied" = global ptr null
@"Core:fixedDecimal:subtract:9" = global ptr null
@"Core:fixedDecimal:subtract:13" = global ptr null
@"Core:fixedDecimal:subtract:14" = global ptr null
@"Core:fixedDecimal:subtract:valueA" = global ptr null
@"Core:fixedDecimal:subtract:valueB" = global ptr null
@"Core:fixedDecimal:subtract:targetScale" = global ptr null
@"Core:fixedDecimal:subtract:27" = global ptr null
@"Core:fixedDecimal:subtract:29" = global ptr null
@fun_Core_fixedDecimal_subtract = global ptr null
@fun_Core_fixedDecimal_subtract_14_equals_then = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_then = global ptr null
@65 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_else = global ptr null
@66 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_then = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_then.177 = global ptr null
@67 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_else.179 = global ptr null
@68 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_then.181 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_then.183 = global ptr null
@69 = global ptr null
@fun_Core_fixedDecimal_subtract_14_hasKey_else.185 = global ptr null
@70 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_then.187 = global ptr null
@71 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else.189 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else.191 = global ptr null
@fun_Core_fixedDecimal_subtract_14_equals_else = global ptr null
@72 = global ptr null
@fun_Core_fixedDecimal_subtract_14_isMatch_else.193 = global ptr null
@"Core:fixedDecimal:divideTruncating:2" = global ptr null
@"text_`is dividend` was not satisfied" = global ptr null
@"Core:fixedDecimal:divideTruncating:4" = global ptr null
@"Core:fixedDecimal:divideTruncating:7" = global ptr null
@"text_`is divisor` was not satisfied" = global ptr null
@"Core:fixedDecimal:divideTruncating:9" = global ptr null
@"Core:fixedDecimal:divideTruncating:12" = global ptr null
@"Core:fixedDecimal:divideTruncating:24" = global ptr null
@"Core:fixedDecimal:divideTruncating:32" = global ptr null
@"Core:fixedDecimal:divideTruncating:36" = global ptr null
@"Core:fixedDecimal:divideTruncating:37" = global ptr null
@"Core:fixedDecimal:divideTruncating:valueA" = global ptr null
@"Core:fixedDecimal:divideTruncating:valueB" = global ptr null
@"Core:fixedDecimal:divideTruncating:targetScale" = global ptr null
@"Core:fixedDecimal:divideTruncating:51" = global ptr null
@"Core:fixedDecimal:divideTruncating:52" = global ptr null
@"Core:fixedDecimal:divideTruncating:62" = global ptr null
@"Core:fixedDecimal:divideTruncating:64" = global ptr null
@fun_Core_fixedDecimal_divideTruncating = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_equals_then = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_then = global ptr null
@73 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_else = global ptr null
@74 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_then = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.195 = global ptr null
@75 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.197 = global ptr null
@76 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.199 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.201 = global ptr null
@77 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.203 = global ptr null
@78 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.205 = global ptr null
@79 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_else = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.207 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.209 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_equals_else = global ptr null
@80 = global ptr null
@fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.211 = global ptr null
@fun_Core_fixedDecimal_isScale_18.213 = global ptr null
@"Core:function:is1:11:3" = global ptr null
@"Core:function:is1:13" = global ptr null
@fun_Core_function_is1 = global ptr null
@fun_Core_function_is1_11 = global ptr null
@"Core:int:fitsInRustU32:15" = global ptr null
@"Core:int:fitsInRustU32:4" = global ptr null
@"Core:int:fitsInRustU32:7" = global ptr null
@"Core:int:fitsInRustU32:9" = global ptr null
@"Core:int:isOdd:4" = global ptr null
@"Core:int:isOdd:8" = global ptr null
@"Core:int:isPositive:4" = global ptr null
@"Core:int:isPositive:8" = global ptr null
@num_4294967295 = global ptr null
@"text_`isNonNegative value` was not satisfied" = global ptr null
@fun_Core_int_isOdd = global ptr null
@"Builtins::listGet:11" = global ptr null
@"Builtins::listGet:14" = global ptr null
@"Builtins::listGet:16" = global ptr null
@"Builtins::listGet:24" = global ptr null
@"Builtins::listGet:25" = global ptr null
@"Builtins::listGet:30" = global ptr null
@"Builtins::listGet:37" = global ptr null
@"Builtins::listGet:5" = global ptr null
@"Builtins::listInsert:11" = global ptr null
@"Builtins::listInsert:14" = global ptr null
@"Builtins::listInsert:16" = global ptr null
@"Builtins::listInsert:24" = global ptr null
@"Builtins::listInsert:25" = global ptr null
@"Builtins::listInsert:27" = global ptr null
@"Builtins::listInsert:35" = global ptr null
@"Builtins::listInsert:5" = global ptr null
@"Builtins::listLength:11" = global ptr null
@"Builtins::listLength:5" = global ptr null
@"Builtins::textConcatenate:11" = global ptr null
@"Builtins::textConcatenate:18" = global ptr null
@"Builtins::textConcatenate:5" = global ptr null
@"Core:iterator:109" = global ptr null
@"Core:iterator:all:11" = global ptr null
@"Core:iterator:all:15" = global ptr null
@"Core:iterator:all:18:13" = global ptr null
@"Core:iterator:all:18:15" = global ptr null
@"Core:iterator:all:18:2" = global ptr null
@"Core:iterator:all:18:26" = global ptr null
@"Core:iterator:all:19" = global ptr null
@"Core:iterator:all:9" = global ptr null
@"Core:iterator:any:11" = global ptr null
@"Core:iterator:any:15" = global ptr null
@"Core:iterator:any:18:13" = global ptr null
@"Core:iterator:any:18:15" = global ptr null
@"Core:iterator:any:18:2" = global ptr null
@"Core:iterator:any:18:26" = global ptr null
@"Core:iterator:any:19" = global ptr null
@"Core:iterator:any:9" = global ptr null
@"Core:iterator:chunked:11" = global ptr null
@"Core:iterator:chunked:21" = global ptr null
@"Core:iterator:chunked:23" = global ptr null
@"Core:iterator:chunked:27" = global ptr null
@"Core:iterator:chunked:32" = global ptr null
@"Core:iterator:ensure:11" = global ptr null
@"Core:iterator:ensure:15" = global ptr null
@"Core:iterator:ensure:19:2" = global ptr null
@"Core:iterator:ensure:20" = global ptr null
@"Core:iterator:ensure:9" = global ptr null
@"Core:iterator:foldLeft:14" = global ptr null
@"Core:iterator:foldLeft:16" = global ptr null
@"Core:iterator:foldLeft:23:1" = global ptr null
@"Core:iterator:foldLeft:23:4" = global ptr null
@"Core:iterator:foldLeft:23:5" = global ptr null
@"Core:iterator:foldLeft:23:5:10" = global ptr null
@"Core:iterator:foldLeft:23:5:8" = global ptr null
@"Core:iterator:foldLeft:23:5:item" = global ptr null
@"Core:iterator:foldLeft:23:5:rest" = global ptr null
@"Core:iterator:foldLeft:23:iterator" = global ptr null
@"Core:iterator:foldLeft:23:value" = global ptr null
@"Core:iterator:foldLeft:24" = global ptr null
@"Core:iterator:foldLeft:3" = global ptr null
@"Core:iterator:fromList:11" = global ptr null
@"Core:iterator:fromList:22" = global ptr null
@"Core:iterator:fromList:23:10" = global ptr null
@"Core:iterator:fromList:24" = global ptr null
@"Core:iterator:generate:11" = global ptr null
@"Core:iterator:generate:21" = global ptr null
@"Core:iterator:generate:23" = global ptr null
@"Core:iterator:generate:33" = global ptr null
@"Core:iterator:generate:35" = global ptr null
@"Core:iterator:generate:45" = global ptr null
@"Core:iterator:generate:47" = global ptr null
@"Core:iterator:generate:50:6:16" = global ptr null
@"Core:iterator:generate:50:6:4" = global ptr null
@"Core:iterator:generate:50:7" = global ptr null
@"Core:iterator:generate:51" = global ptr null
@"Core:iterator:generateWithState:11" = global ptr null
@"Core:iterator:generateWithState:14:1:2" = global ptr null
@"Core:iterator:generateWithState:14:1:3" = global ptr null
@"Core:iterator:generateWithState:14:1:3:19" = global ptr null
@"Core:iterator:generateWithState:14:1:3:20" = global ptr null
@"Core:iterator:generateWithState:14:1:3:22:0" = global ptr null
@"Core:iterator:generateWithState:14:1:3:23" = global ptr null
@"Core:iterator:generateWithState:14:1:3:25" = global ptr null
@"Core:iterator:generateWithState:14:1:3:26" = global ptr null
@"Core:iterator:generateWithState:14:1:3:27" = global ptr null
@"Core:iterator:generateWithState:14:1:3:6" = global ptr null
@"Core:iterator:generateWithState:14:1:3:item" = global ptr null
@"Core:iterator:generateWithState:14:1:3:state" = global ptr null
@"Core:iterator:generateWithState:15" = global ptr null
@"Core:iterator:generateWithState:9" = global ptr null
@"Core:iterator:isEmpty:3" = global ptr null
@"Core:iterator:isEmpty:7" = global ptr null
@"Core:iterator:joinToText:12:11" = global ptr null
@"Core:iterator:joinToText:12:22" = global ptr null
@"Core:iterator:joinToText:13" = global ptr null
@"Core:iterator:joinToText:3" = global ptr null
@"Core:iterator:length:3" = global ptr null
@"Core:iterator:length:6" = global ptr null
@"Core:iterator:length:8" = global ptr null
@"Core:iterator:map:14" = global ptr null
@"Core:iterator:map:16" = global ptr null
@"Core:iterator:map:19:2" = global ptr null
@"Core:iterator:map:19:3" = global ptr null
@"Core:iterator:map:19:3:5" = global ptr null
@"Core:iterator:map:19:3:item" = global ptr null
@"Core:iterator:map:19:3:rest" = global ptr null
@"Core:iterator:map:20" = global ptr null
@"Core:iterator:map:3" = global ptr null
@"Core:iterator:next:17" = global ptr null
@"Core:iterator:next:3" = global ptr null
@"Core:iterator:next:6" = global ptr null
@"Core:iterator:next:nextFunction" = global ptr null
@"Core:iterator:reduceLeft:11" = global ptr null
@"Core:iterator:reduceLeft:15" = global ptr null
@"Core:iterator:reduceLeft:17" = global ptr null
@"Core:iterator:reduceLeft:18" = global ptr null
@"Core:iterator:reduceLeft:18:14" = global ptr null
@"Core:iterator:reduceLeft:18:item" = global ptr null
@"Core:iterator:reduceLeft:18:rest" = global ptr null
@"Core:iterator:reduceLeft:9" = global ptr null
@"Core:iterator:skip:16" = global ptr null
@"Core:iterator:skip:26" = global ptr null
@"Core:iterator:skip:28" = global ptr null
@"Core:iterator:skip:3" = global ptr null
@"Core:iterator:skip:30:6:1" = global ptr null
@"Core:iterator:skip:30:6:7:2" = global ptr null
@"Core:iterator:skip:30:6:8:2" = global ptr null
@"Core:iterator:skip:30:6:8:3" = global ptr null
@"Core:iterator:skip:30:6:8:3:15" = global ptr null
@"Core:iterator:skip:30:6:8:3:17" = global ptr null
@"Core:iterator:skip:30:6:8:3:rest" = global ptr null
@"Core:iterator:skip:30:6:9" = global ptr null
@"Core:iterator:skip:30:6:iterator" = global ptr null
@"Core:iterator:skip:30:6:n" = global ptr null
@"Core:iterator:skip:30:7" = global ptr null
@"Core:iterator:sum:19" = global ptr null
@"Core:iterator:sum:3" = global ptr null
@"Core:iterator:sum:5:17" = global ptr null
@"Core:iterator:sum:6" = global ptr null
@"Core:iterator:sum:8:10" = global ptr null
@"Core:iterator:sum:9" = global ptr null
@"Core:iterator:take:11" = global ptr null
@"Core:iterator:take:21" = global ptr null
@"Core:iterator:take:23" = global ptr null
@"Core:iterator:take:27" = global ptr null
@"Core:iterator:take:29" = global ptr null
@"Core:iterator:take:31:1" = global ptr null
@"Core:iterator:take:31:12" = global ptr null
@"Core:iterator:take:31:index" = global ptr null
@"Core:iterator:take:31:item" = global ptr null
@"Core:iterator:take:32" = global ptr null
@"Core:iterator:take:34:7" = global ptr null
@"Core:iterator:take:35" = global ptr null
@"Core:iterator:takeWhile:3" = global ptr null
@"Core:iterator:takeWhile:7:2" = global ptr null
@"Core:iterator:takeWhile:7:3" = global ptr null
@"Core:iterator:takeWhile:7:3:4" = global ptr null
@"Core:iterator:takeWhile:7:3:7" = global ptr null
@"Core:iterator:takeWhile:7:3:item" = global ptr null
@"Core:iterator:takeWhile:7:3:rest" = global ptr null
@"Core:iterator:takeWhile:8" = global ptr null
@"Core:iterator:toList:3" = global ptr null
@"Core:iterator:toList:6:10" = global ptr null
@"Core:iterator:toList:7" = global ptr null
@"Core:iterator:where:14" = global ptr null
@"Core:iterator:where:16" = global ptr null
@"Core:iterator:where:19:2:2" = global ptr null
@"Core:iterator:where:19:2:3" = global ptr null
@"Core:iterator:where:19:2:3:4" = global ptr null
@"Core:iterator:where:19:2:3:6:2" = global ptr null
@"Core:iterator:where:19:2:3:6:4" = global ptr null
@"Core:iterator:where:19:2:3:6:5" = global ptr null
@"Core:iterator:where:19:2:3:6:5:item" = global ptr null
@"Core:iterator:where:19:2:3:6:5:rest" = global ptr null
@"Core:iterator:where:19:2:3:7" = global ptr null
@"Core:iterator:where:19:2:3:item" = global ptr null
@"Core:iterator:where:19:2:3:rest" = global ptr null
@"Core:iterator:where:19:3" = global ptr null
@"Core:iterator:where:20" = global ptr null
@"Core:iterator:where:3" = global ptr null
@"Core:iterator:windowed:16" = global ptr null
@"Core:iterator:windowed:26" = global ptr null
@"Core:iterator:windowed:28" = global ptr null
@"Core:iterator:windowed:3" = global ptr null
@"Core:iterator:windowed:40" = global ptr null
@"Core:iterator:windowed:50" = global ptr null
@"Core:iterator:windowed:52" = global ptr null
@"Core:iterator:windowed:62" = global ptr null
@"Core:iterator:windowed:64" = global ptr null
@"Core:iterator:windowed:67:16" = global ptr null
@"Core:iterator:windowed:67:22" = global ptr null
@"Core:iterator:windowed:67:26:7" = global ptr null
@"Core:iterator:windowed:67:28" = global ptr null
@"Core:iterator:windowed:67:3" = global ptr null
@"Core:iterator:windowed:67:5" = global ptr null
@"Core:iterator:windowed:68" = global ptr null
@"Core:iterator:withIndex:11:1" = global ptr null
@"Core:iterator:withIndex:11:4" = global ptr null
@"Core:iterator:withIndex:11:5" = global ptr null
@"Core:iterator:withIndex:11:5:22" = global ptr null
@"Core:iterator:withIndex:11:5:item" = global ptr null
@"Core:iterator:withIndex:11:5:rest" = global ptr null
@"Core:iterator:withIndex:11:index" = global ptr null
@"Core:iterator:withIndex:11:iterator" = global ptr null
@"Core:iterator:withIndex:12" = global ptr null
@"Core:iterator:withIndex:3" = global ptr null
@"Core:iterator:wrapSafe:11" = global ptr null
@"Core:iterator:wrapSafe:12:9" = global ptr null
@"Core:iterator:wrapSafe:16:1" = global ptr null
@"Core:iterator:wrapSafe:16:13" = global ptr null
@"Core:iterator:wrapSafe:16:1:10" = global ptr null
@"Core:iterator:wrapSafe:16:1:function" = global ptr null
@"Core:iterator:wrapSafe:16:22" = global ptr null
@"Core:iterator:wrapSafe:16:24" = global ptr null
@"Core:iterator:wrapSafe:16:26:10" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:19" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:7" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:item" = global ptr null
@"Core:iterator:wrapSafe:16:26:10:rest" = global ptr null
@"Core:iterator:wrapSafe:16:26:9" = global ptr null
@"Core:iterator:wrapSafe:17" = global ptr null
@"Core:iterator:wrapSafe:9" = global ptr null
@"Core:list:append:11" = global ptr null
@"Core:list:append:4" = global ptr null
@"Core:list:append:9" = global ptr null
@"Core:result:is:1" = global ptr null
@"Core:result:is:1:_" = global ptr null
@"Core:result:mapOrElse:14" = global ptr null
@"Core:result:mapOrElse:16" = global ptr null
@"Core:result:mapOrElse:2" = global ptr null
@"Core:result:mapOrElse:26" = global ptr null
@"Core:result:mapOrElse:28" = global ptr null
@"Core:result:mapOrElse:30" = global ptr null
@"Core:result:mapOrElse:30:2" = global ptr null
@"Core:result:mapOrElse:30:5" = global ptr null
@"Core:result:mapOrElse:30:value" = global ptr null
@"Core:result:mapOrElse:30:value#1" = global ptr null
@"Core:result:mapOrElse:4" = global ptr null
@"Core:result:unwrapOr:2" = global ptr null
@"Core:result:unwrapOr:4" = global ptr null
@"Core:result:unwrapOr:8" = global ptr null
@"Core:result:unwrapOrElse:14" = global ptr null
@"Core:result:unwrapOrElse:16" = global ptr null
@"Core:result:unwrapOrElse:2" = global ptr null
@"Core:result:unwrapOrElse:20:9" = global ptr null
@"Core:result:unwrapOrElse:21" = global ptr null
@"Core:result:unwrapOrElse:4" = global ptr null
@fun_candy_builtin_list_insert = global ptr null
@fun_candy_builtin_list_length = global ptr null
@tag_Empty = global ptr null
@tag_Error = global ptr null
@tag_Index = global ptr null
@tag_Item = global ptr null
@tag_Iterator = global ptr null
@tag_List = global ptr null
@tag_More = global ptr null
@tag_N = global ptr null
@tag_Ok = global ptr null
@tag_Rest = global ptr null
@tag_State = global ptr null
@tag_Value = global ptr null
@text_ = global ptr null
@"text_Can't `reduceLeft` an empty iterator" = global ptr null
@"text_Expected Empty, got " = global ptr null
@"text_Expected Error, got " = global ptr null
@"text_Expected Iterator, got " = global ptr null
@"text_Expected More, got " = global ptr null
@"text_Expected Ok, got " = global ptr null
@"text_Iterator items need to be ints." = global ptr null
@"text_Struct doesn't contain key `Index`: `" = global ptr null
@"text_Struct doesn't contain key `Item`: `" = global ptr null
@"text_Struct doesn't contain key `Iterator`: `" = global ptr null
@"text_Struct doesn't contain key `N`: `" = global ptr null
@"text_Struct doesn't contain key `Rest`: `" = global ptr null
@"text_Struct doesn't contain key `State`: `" = global ptr null
@"text_Struct doesn't contain key `Value`: `" = global ptr null
@"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `" = global ptr null
@"text_The guard needs to panic." = global ptr null
@"text_`" = global ptr null
@"text_`a | typeIs Text` was not satisfied" = global ptr null
@"text_`all` needs an iterator." = global ptr null
@"text_`any` needs an iterator." = global ptr null
@"text_`b | typeIs Text` was not satisfied" = global ptr null
@"text_`bool.is allowPartialWindows` was not satisfied" = global ptr null
@"text_`bool.is itemResult` was not satisfied" = global ptr null
@"text_`chunked` needs an iterator." = global ptr null
@"text_`ensure` needs an iterator." = global ptr null
@"text_`foldLeft` needs an iterator." = global ptr null
@"text_`function.is0 defaultGetter` was not satisfied" = global ptr null
@"text_`function.is0 notIteratorGuard` was not satisfied" = global ptr null
@"text_`function.is1 errorMapper` was not satisfied" = global ptr null
@"text_`function.is1 guard` was not satisfied" = global ptr null
@"text_`function.is1 mapper` was not satisfied" = global ptr null
@"text_`function.is1 okMapper` was not satisfied" = global ptr null
@"text_`function.is1 tester` was not satisfied" = global ptr null
@"text_`function.is1 valueGetter` was not satisfied" = global ptr null
@"text_`function.is2 combine` was not satisfied" = global ptr null
@"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied" = global ptr null
@"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied" = global ptr null
@"text_`index | isNonNegative` was not satisfied" = global ptr null
@"text_`index | typeIs Int` was not satisfied" = global ptr null
@"text_`int.fitsInRustU32 length` was not satisfied" = global ptr null
@"text_`int.is length` was not satisfied" = global ptr null
@"text_`int.is n` was not satisfied" = global ptr null
@"text_`int.is size` was not satisfied" = global ptr null
@"text_`int.is step` was not satisfied" = global ptr null
@"text_`int.isNonNegative length` was not satisfied" = global ptr null
@"text_`int.isNonNegative n` was not satisfied" = global ptr null
@"text_`int.isPositive size` was not satisfied" = global ptr null
@"text_`int.isPositive step` was not satisfied" = global ptr null
@"text_`is list` was not satisfied" = global ptr null
@"text_`is result` was not satisfied" = global ptr null
@"text_`isEmpty` needs an iterator." = global ptr null
@"text_`joinToText` needs an iterator." = global ptr null
@"text_`length` needs an iterator." = global ptr null
@"text_`list | typeIs List` was not satisfied" = global ptr null
@"text_`list.is l` was not satisfied" = global ptr null
@"text_`map` needs an iterator." = global ptr null
@"text_`next` needs an iterator." = global ptr null
@"text_`reduceLeft` needs an iterator." = global ptr null
@"text_`skip` needs an iterator." = global ptr null
@"text_`sum` needs an iterator." = global ptr null
@"text_`takeWhile` needs an iterator." = global ptr null
@"text_`take` needs an iterator." = global ptr null
@"text_`text.is item` was not satisfied" = global ptr null
@"text_`toList` needs an iterator." = global ptr null
@"text_`where` needs an iterator." = global ptr null
@"text_`windowed` needs an iterator." = global ptr null
@"text_`withIndex` needs an iterator." = global ptr null
@fun_Core_result_is = global ptr null
@fun_Core_result_is_1_equals_then = global ptr null
@fun_Core_result_is_1_equals_then.215 = global ptr null
@fun_Core_result_is_1_equals_then.217 = global ptr null
@81 = global ptr null
@fun_Core_result_is_1_equals_else = global ptr null
@fun_Core_result_is_1_equals_else.219 = global ptr null
@82 = global ptr null
@fun_Core_result_is_1_equals_else.221 = global ptr null
@83 = global ptr null
@fun_Core_result_is_1_isMatch_then = global ptr null
@fun_Core_result_is_1_isMatch_else = global ptr null
@fun_Core_result_is_1_equals_then.223 = global ptr null
@fun_Core_result_is_1_equals_then.225 = global ptr null
@fun_Core_result_is_1_equals_then.227 = global ptr null
@84 = global ptr null
@fun_Core_result_is_1_equals_else.229 = global ptr null
@fun_Core_result_is_1_equals_else.231 = global ptr null
@85 = global ptr null
@fun_Core_result_is_1_equals_else.233 = global ptr null
@86 = global ptr null
@fun_Core_result_is_1_case-0_matched = global ptr null
@fun_Core_result_is_1_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse = global ptr null
@fun_Core_result_mapOrElse_30_equals_then = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.235 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.237 = global ptr null
@87 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.239 = global ptr null
@88 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.241 = global ptr null
@89 = global ptr null
@fun_Core_result_mapOrElse_30_case-0_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-0_didNotMatch = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.243 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.245 = global ptr null
@fun_Core_result_mapOrElse_30_equals_then.247 = global ptr null
@90 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.249 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.251 = global ptr null
@91 = global ptr null
@fun_Core_result_mapOrElse_30_equals_else.253 = global ptr null
@92 = global ptr null
@fun_Core_result_mapOrElse_30_case-1_matched = global ptr null
@fun_Core_result_mapOrElse_30_case-1_didNotMatch = global ptr null
@"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19" = global ptr null
@fun_Core_result_unwrapOr = global ptr null
@fun_Core_result_unwrapOr_7 = global ptr null
@fun_Core_result_unwrapOrElse_20 = global ptr null
@fun_Builtins__listGet = global ptr null
@fun_Builtins__listInsert = global ptr null
@fun_Core_list_append = global ptr null
@"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched" = global ptr null
@fun_Core_iterator_wrapSafe = global ptr null
@fun_Core_iterator_wrapSafe_12 = global ptr null
@fun_Core_iterator_wrapSafe_16 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_then = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_then.255 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_then.257 = global ptr null
@93 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_else = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_else.259 = global ptr null
@94 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_equals_else.261 = global ptr null
@95 = global ptr null
@fun_Core_iterator_wrapSafe_16_1_case-0_matched = global ptr null
@fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_16_26 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.263 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else = global ptr null
@96 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.265 = global ptr null
@97 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.267 = global ptr null
@98 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.269 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.271 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.273 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_then.275 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_then = global ptr null
@99 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_else = global ptr null
@100 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_then = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.277 = global ptr null
@101 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.279 = global ptr null
@102 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.281 = global ptr null
@103 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_else = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.283 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.285 = global ptr null
@104 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.287 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.289 = global ptr null
@105 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_equals_else.291 = global ptr null
@106 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_case-1_matched = global ptr null
@tag_More.292 = global ptr null
@fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch = global ptr null
@tag_Iterator.293 = global ptr null
@fun_Core_controlFlow_recursive_18.295 = global ptr null
@fun_Core_controlFlow_recursive_18_0.297 = global ptr null
@fun_Core_iterator_next = global ptr null
@fun_Core_iterator_next_2 = global ptr null
@fun_Core_iterator_next_6_equals_then = global ptr null
@fun_Core_iterator_next_6_equals_then.299 = global ptr null
@fun_Core_iterator_next_6_equals_then.301 = global ptr null
@107 = global ptr null
@fun_Core_iterator_next_6_equals_else = global ptr null
@fun_Core_iterator_next_6_equals_else.303 = global ptr null
@108 = global ptr null
@fun_Core_iterator_next_6_equals_else.305 = global ptr null
@109 = global ptr null
@fun_Core_iterator_next_6_isMatch_else = global ptr null
@fun_Core_iterator_generateWithState = global ptr null
@fun_Core_iterator_generateWithState_14 = global ptr null
@fun_Core_iterator_generateWithState_14_1 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.307 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.309 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.311 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_then = global ptr null
@110 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_else = global ptr null
@111 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_then = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_then.313 = global ptr null
@112 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_hasKey_else.315 = global ptr null
@113 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_then.317 = global ptr null
@114 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_else = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_isMatch_else.319 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else = global ptr null
@115 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.321 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.323 = global ptr null
@116 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.325 = global ptr null
@117 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-0_matched = global ptr null
@tag_More.326 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.328 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_then.330 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.332 = global ptr null
@118 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.334 = global ptr null
@119 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_equals_else.336 = global ptr null
@120 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_case-2_matched = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_21 = global ptr null
@fun_Core_iterator_generateWithState_14_1_3_22 = global ptr null
@tag_Iterator.337 = global ptr null
@fun_Core_controlFlow_recursive_18.339 = global ptr null
@fun_Core_controlFlow_recursive_18_0.341 = global ptr null
@fun_Core_iterator_generate = global ptr null
@fun_Core_iterator_generate_50 = global ptr null
@fun_Core_iterator_generate_50_6 = global ptr null
@tag_More.342 = global ptr null
@fun_Core_iterator_map = global ptr null
@fun_Core_iterator_map_2 = global ptr null
@fun_Core_iterator_map_19 = global ptr null
@fun_Core_iterator_map_19_3_equals_then = global ptr null
@fun_Core_iterator_map_19_3_equals_then.344 = global ptr null
@fun_Core_iterator_map_19_3_equals_else = global ptr null
@121 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.346 = global ptr null
@122 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.348 = global ptr null
@123 = global ptr null
@fun_Core_iterator_map_19_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_map_19_3_equals_then.350 = global ptr null
@fun_Core_iterator_map_19_3_equals_then.352 = global ptr null
@fun_Core_iterator_map_19_3_equals_then.354 = global ptr null
@fun_Core_iterator_map_19_3_equals_then.356 = global ptr null
@fun_Core_iterator_map_19_3_hasKey_then = global ptr null
@124 = global ptr null
@fun_Core_iterator_map_19_3_hasKey_else = global ptr null
@125 = global ptr null
@fun_Core_iterator_map_19_3_isMatch_then = global ptr null
@fun_Core_iterator_map_19_3_hasKey_then.358 = global ptr null
@126 = global ptr null
@fun_Core_iterator_map_19_3_hasKey_else.360 = global ptr null
@127 = global ptr null
@fun_Core_iterator_map_19_3_isMatch_then.362 = global ptr null
@128 = global ptr null
@fun_Core_iterator_map_19_3_isMatch_else = global ptr null
@fun_Core_iterator_map_19_3_isMatch_else.364 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.366 = global ptr null
@129 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.368 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.370 = global ptr null
@130 = global ptr null
@fun_Core_iterator_map_19_3_equals_else.372 = global ptr null
@131 = global ptr null
@fun_Core_iterator_map_19_3_case-1_matched = global ptr null
@tag_More.373 = global ptr null
@fun_Core_iterator_map_19_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_11 = global ptr null
@fun_Core_iterator_withIndex_11_1_equals_then = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_then = global ptr null
@132 = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_else = global ptr null
@133 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_then = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_then.375 = global ptr null
@134 = global ptr null
@fun_Core_iterator_withIndex_11_1_hasKey_else.377 = global ptr null
@135 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_then.379 = global ptr null
@136 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else.381 = global ptr null
@fun_Core_iterator_withIndex_11_1_equals_else = global ptr null
@137 = global ptr null
@fun_Core_iterator_withIndex_11_1_isMatch_else.383 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.385 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else = global ptr null
@138 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.387 = global ptr null
@139 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.389 = global ptr null
@140 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.391 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.393 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.395 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_then.397 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_then = global ptr null
@141 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_else = global ptr null
@142 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_then = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_then.399 = global ptr null
@143 = global ptr null
@fun_Core_iterator_withIndex_11_5_hasKey_else.401 = global ptr null
@144 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_then.403 = global ptr null
@145 = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_else = global ptr null
@fun_Core_iterator_withIndex_11_5_isMatch_else.405 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.407 = global ptr null
@146 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.409 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.411 = global ptr null
@147 = global ptr null
@fun_Core_iterator_withIndex_11_5_equals_else.413 = global ptr null
@148 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-1_matched = global ptr null
@tag_More.414 = global ptr null
@fun_Core_iterator_withIndex_11_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_ensure = global ptr null
@fun_Core_iterator_ensure_14 = global ptr null
@fun_Core_iterator_ensure_19 = global ptr null
@fun_Core_iterator_foldLeft = global ptr null
@fun_Core_iterator_foldLeft_2 = global ptr null
@fun_Core_iterator_foldLeft_23 = global ptr null
@fun_Core_iterator_foldLeft_23_1_equals_then = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_then = global ptr null
@149 = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_else = global ptr null
@150 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_then = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_then.416 = global ptr null
@151 = global ptr null
@fun_Core_iterator_foldLeft_23_1_hasKey_else.418 = global ptr null
@152 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_then.420 = global ptr null
@153 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_else = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_else.422 = global ptr null
@fun_Core_iterator_foldLeft_23_1_equals_else = global ptr null
@154 = global ptr null
@fun_Core_iterator_foldLeft_23_1_isMatch_else.424 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.426 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else = global ptr null
@155 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.428 = global ptr null
@156 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.430 = global ptr null
@157 = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-0_matched = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.432 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.434 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.436 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_then.438 = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_then = global ptr null
@158 = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_else = global ptr null
@159 = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_then = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_then.440 = global ptr null
@160 = global ptr null
@fun_Core_iterator_foldLeft_23_5_hasKey_else.442 = global ptr null
@161 = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_then.444 = global ptr null
@162 = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_else = global ptr null
@fun_Core_iterator_foldLeft_23_5_isMatch_else.446 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.448 = global ptr null
@163 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.450 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.452 = global ptr null
@164 = global ptr null
@fun_Core_iterator_foldLeft_23_5_equals_else.454 = global ptr null
@165 = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-1_matched = global ptr null
@fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch = global ptr null
@fun_Core_controlFlow_recursive_18.456 = global ptr null
@fun_Core_controlFlow_recursive_18_0.458 = global ptr null
@tag_Error.459 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-0_matched = global ptr null
@fun_Core_iterator_reduceLeft = global ptr null
@fun_Core_iterator_reduceLeft_14 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.461 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else = global ptr null
@166 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.463 = global ptr null
@167 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.465 = global ptr null
@168 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-0_didNotMatch = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.467 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.469 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.471 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_then.473 = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_then = global ptr null
@169 = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_else = global ptr null
@170 = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_then = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_then.475 = global ptr null
@171 = global ptr null
@fun_Core_iterator_reduceLeft_18_hasKey_else.477 = global ptr null
@172 = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_then.479 = global ptr null
@173 = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_else = global ptr null
@fun_Core_iterator_reduceLeft_18_isMatch_else.481 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.483 = global ptr null
@174 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.485 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.487 = global ptr null
@175 = global ptr null
@fun_Core_iterator_reduceLeft_18_equals_else.489 = global ptr null
@176 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-1_matched = global ptr null
@tag_Ok.490 = global ptr null
@fun_Core_iterator_reduceLeft_18_case-1_didNotMatch = global ptr null
@fun_Core_iterator_sum_8 = global ptr null
@fun_Core_iterator_sum = global ptr null
@fun_Core_iterator_sum_2 = global ptr null
@fun_Core_iterator_sum_5 = global ptr null
@fun_Core_iterator_length_5 = global ptr null
@fun_Core_iterator_all = global ptr null
@fun_Core_iterator_all_14 = global ptr null
@fun_Core_iterator_all_18 = global ptr null
@fun_Core_bool_and_12 = global ptr null
@fun_Core_iterator_any = global ptr null
@fun_Core_iterator_any_14 = global ptr null
@fun_Core_iterator_any_18 = global ptr null
@fun_Core_bool_or_12 = global ptr null
@fun_Core_iterator_joinToText = global ptr null
@fun_Core_iterator_joinToText_2 = global ptr null
@fun_Core_iterator_joinToText_12 = global ptr null
@fun_Core_iterator_where = global ptr null
@fun_Core_iterator_where_2 = global ptr null
@fun_Core_iterator_where_19 = global ptr null
@fun_Core_iterator_where_19_2 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.492 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else = global ptr null
@177 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.494 = global ptr null
@178 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.496 = global ptr null
@179 = global ptr null
@fun_Core_iterator_where_19_2_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.498 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.500 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.502 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_then.504 = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_then = global ptr null
@180 = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_else = global ptr null
@181 = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_then = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_then.506 = global ptr null
@182 = global ptr null
@fun_Core_iterator_where_19_2_3_hasKey_else.508 = global ptr null
@183 = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_then.510 = global ptr null
@184 = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_else = global ptr null
@fun_Core_iterator_where_19_2_3_isMatch_else.512 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.514 = global ptr null
@185 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.516 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.518 = global ptr null
@186 = global ptr null
@fun_Core_iterator_where_19_2_3_equals_else.520 = global ptr null
@187 = global ptr null
@fun_Core_iterator_where_19_2_3_case-1_matched = global ptr null
@fun_Core_iterator_where_19_2_3_5 = global ptr null
@tag_More.521 = global ptr null
@fun_Core_iterator_where_19_2_3_6 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.523 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else = global ptr null
@188 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.525 = global ptr null
@189 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.527 = global ptr null
@190 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.529 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.531 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.533 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_then.535 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_then = global ptr null
@191 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_else = global ptr null
@192 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_then = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_then.537 = global ptr null
@193 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_hasKey_else.539 = global ptr null
@194 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_then.541 = global ptr null
@195 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_else = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_isMatch_else.543 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.545 = global ptr null
@196 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.547 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.549 = global ptr null
@197 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_equals_else.551 = global ptr null
@198 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_case-1_matched = global ptr null
@tag_More.552 = global ptr null
@fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch = global ptr null
@fun_Core_iterator_where_19_2_3_case-1_didNotMatch = global ptr null
@fun_Core_controlFlow_recursive_18.554 = global ptr null
@fun_Core_controlFlow_recursive_18_0.556 = global ptr null
@fun_Core_iterator_takeWhile = global ptr null
@fun_Core_iterator_takeWhile_2 = global ptr null
@fun_Core_iterator_takeWhile_7 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.558 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else = global ptr null
@199 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.560 = global ptr null
@200 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.562 = global ptr null
@201 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.564 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.566 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.568 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_then.570 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then = global ptr null
@202 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else = global ptr null
@203 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_then.572 = global ptr null
@204 = global ptr null
@fun_Core_iterator_takeWhile_7_3_hasKey_else.574 = global ptr null
@205 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_then.576 = global ptr null
@206 = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else = global ptr null
@fun_Core_iterator_takeWhile_7_3_isMatch_else.578 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.580 = global ptr null
@207 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.582 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.584 = global ptr null
@208 = global ptr null
@fun_Core_iterator_takeWhile_7_3_equals_else.586 = global ptr null
@209 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_matched = global ptr null
@fun_Core_iterator_takeWhile_7_3_5 = global ptr null
@tag_More.587 = global ptr null
@fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch = global ptr null
@fun_Core_iterator_withIndex_2 = global ptr null
@fun_Core_iterator_take_34 = global ptr null
@fun_Core_iterator_take = global ptr null
@fun_Core_iterator_take_26 = global ptr null
@fun_Core_iterator_take_31 = global ptr null
@fun_Core_iterator_take_31_1_equals_then = global ptr null
@fun_Core_iterator_take_31_1_hasKey_then = global ptr null
@210 = global ptr null
@fun_Core_iterator_take_31_1_hasKey_else = global ptr null
@211 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_then = global ptr null
@fun_Core_iterator_take_31_1_hasKey_then.589 = global ptr null
@212 = global ptr null
@fun_Core_iterator_take_31_1_hasKey_else.591 = global ptr null
@213 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_then.593 = global ptr null
@214 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_else = global ptr null
@fun_Core_iterator_take_31_1_isMatch_else.595 = global ptr null
@fun_Core_iterator_take_31_1_equals_else = global ptr null
@215 = global ptr null
@fun_Core_iterator_take_31_1_isMatch_else.597 = global ptr null
@fun_Core_iterator_skip_30_6 = global ptr null
@fun_Core_iterator_skip_30_6_1_equals_then = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_then = global ptr null
@216 = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_else = global ptr null
@217 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_then = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_then.599 = global ptr null
@218 = global ptr null
@fun_Core_iterator_skip_30_6_1_hasKey_else.601 = global ptr null
@219 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_then.603 = global ptr null
@220 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_else = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_else.605 = global ptr null
@fun_Core_iterator_skip_30_6_1_equals_else = global ptr null
@221 = global ptr null
@fun_Core_iterator_skip_30_6_1_isMatch_else.607 = global ptr null
@fun_Core_iterator_skip_30_6_7 = global ptr null
@fun_Core_iterator_skip_30_6_8 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.609 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else = global ptr null
@222 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.611 = global ptr null
@223 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.613 = global ptr null
@224 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.615 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.617 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.619 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_then.621 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_hasKey_then = global ptr null
@225 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_hasKey_else = global ptr null
@226 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_isMatch_then = global ptr null
@227 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_isMatch_else = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.623 = global ptr null
@228 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.625 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.627 = global ptr null
@229 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_equals_else.629 = global ptr null
@230 = global ptr null
@fun_Core_iterator_skip_30_6_8_3_case-1_matched = global ptr null
@fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch = global ptr null
@fun_Core_controlFlow_recursive_18.631 = global ptr null
@fun_Core_controlFlow_recursive_18_0.633 = global ptr null
@fun_Core_iterator_skip = global ptr null
@fun_Core_iterator_skip_2 = global ptr null
@fun_Core_iterator_skip_30 = global ptr null
@tag_Iterator.634 = global ptr null
@fun_Core_iterator_fromList = global ptr null
@fun_Core_iterator_fromList_23 = global ptr null
@231 = global ptr null
@fun_Core_iterator_toList_6 = global ptr null
@fun_Core_iterator_toList_2 = global ptr null
@fun_Core_iterator_windowed = global ptr null
@fun_Core_iterator_windowed_2 = global ptr null
@fun_Core_iterator_windowed_67 = global ptr null
@fun_Core_iterator_windowed_67_20 = global ptr null
@fun_Core_iterator_windowed_67_21 = global ptr null
@fun_Core_iterator_windowed_67_26 = global ptr null
@tag_More.635 = global ptr null
@fun_Core_iterator_chunked = global ptr null
@fun_Core_iterator_chunked_26 = global ptr null
@"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText" = global ptr null
@232 = global ptr null
@num_6 = global ptr null
@num_7 = global ptr null
@num_8 = global ptr null
@num_9 = global ptr null
@233 = global ptr null
@"Core:iterator:123" = global ptr null
@"Core:iterator:127" = global ptr null
@"Core:iterator:128" = global ptr null
@fun_Core_iterator_128_equals_then = global ptr null
@fun_Core_iterator_128_equals_then.637 = global ptr null
@fun_Core_iterator_128_equals_then.639 = global ptr null
@fun_Core_iterator_128_equals_then.641 = global ptr null
@fun_Core_iterator_128_hasKey_then = global ptr null
@234 = global ptr null
@fun_Core_iterator_128_hasKey_else = global ptr null
@235 = global ptr null
@fun_Core_iterator_128_isMatch_then = global ptr null
@fun_Core_iterator_128_hasKey_then.643 = global ptr null
@236 = global ptr null
@fun_Core_iterator_128_hasKey_else.645 = global ptr null
@237 = global ptr null
@fun_Core_iterator_128_isMatch_then.647 = global ptr null
@238 = global ptr null
@fun_Core_iterator_128_isMatch_else = global ptr null
@fun_Core_iterator_128_isMatch_else.649 = global ptr null
@fun_Core_iterator_128_equals_else = global ptr null
@239 = global ptr null
@fun_Core_iterator_128_equals_else.651 = global ptr null
@fun_Core_iterator_128_equals_else.653 = global ptr null
@240 = global ptr null
@fun_Core_iterator_128_equals_else.655 = global ptr null
@241 = global ptr null
@fun_Core_iterator_128_isMatch_else.657 = global ptr null
@"Core:iterator:item" = global ptr null
@"Core:iterator:rest" = global ptr null
@"Core:iterator:133" = global ptr null
@"Core:iterator:136" = global ptr null
@"Core:iterator:137" = global ptr null
@fun_Core_iterator_137_equals_then = global ptr null
@fun_Core_iterator_137_equals_then.659 = global ptr null
@fun_Core_iterator_137_equals_then.661 = global ptr null
@fun_Core_iterator_137_equals_then.663 = global ptr null
@fun_Core_iterator_137_hasKey_then = global ptr null
@242 = global ptr null
@fun_Core_iterator_137_hasKey_else = global ptr null
@243 = global ptr null
@fun_Core_iterator_137_isMatch_then = global ptr null
@fun_Core_iterator_137_hasKey_then.665 = global ptr null
@244 = global ptr null
@fun_Core_iterator_137_hasKey_else.667 = global ptr null
@245 = global ptr null
@fun_Core_iterator_137_isMatch_then.669 = global ptr null
@246 = global ptr null
@fun_Core_iterator_137_isMatch_else = global ptr null
@fun_Core_iterator_137_isMatch_else.671 = global ptr null
@fun_Core_iterator_137_equals_else = global ptr null
@247 = global ptr null
@fun_Core_iterator_137_equals_else.673 = global ptr null
@fun_Core_iterator_137_equals_else.675 = global ptr null
@248 = global ptr null
@fun_Core_iterator_137_equals_else.677 = global ptr null
@249 = global ptr null
@fun_Core_iterator_137_isMatch_else.679 = global ptr null
@"Core:iterator:item#1" = global ptr null
@"Core:iterator:rest#1" = global ptr null
@"Core:iterator:142" = global ptr null
@"Core:iterator:147" = global ptr null
@fun_Core_iterator_isEmpty_2 = global ptr null
@"Core:iterator:149" = global ptr null
@"Core:iterator:154" = global ptr null
@"Core:iterator:155" = global ptr null
@fun_Core_iterator_isEmpty_2.681 = global ptr null
@"Core:iterator:157" = global ptr null
@"Core:iterator:161:10" = global ptr null
@fun_Core_iterator_161 = global ptr null
@"Core:iterator:162" = global ptr null
@"Core:iterator:164" = global ptr null
@fun_Core_iterator_toList_2.683 = global ptr null
@250 = global ptr null
@"Core:iterator:169" = global ptr null
@"Core:iterator:173" = global ptr null
@"Core:iterator:175" = global ptr null
@"Core:iterator:179" = global ptr null
@fun_Core_iterator_length_2 = global ptr null
@"Core:iterator:181" = global ptr null
@"Core:iterator:185:9" = global ptr null
@fun_Core_iterator_185 = global ptr null
@"Core:iterator:186" = global ptr null
@"Core:iterator:188" = global ptr null
@fun_Core_iterator_192 = global ptr null
@"Core:iterator:193" = global ptr null
@"Core:iterator:195" = global ptr null
@"Core:iterator:200" = global ptr null
@"Core:iterator:202" = global ptr null
@text_123 = global ptr null
@"Core:iterator:210" = global ptr null
@"Core:iterator:214:9" = global ptr null
@fun_Core_iterator_214 = global ptr null
@"Core:iterator:215" = global ptr null
@"Core:iterator:217" = global ptr null
@fun_Core_iterator_toList_2.685 = global ptr null
@251 = global ptr null
@"Core:iterator:224" = global ptr null
@"Core:iterator:228:10" = global ptr null
@fun_Core_iterator_228 = global ptr null
@"Core:iterator:229" = global ptr null
@"Core:iterator:231" = global ptr null
@fun_Core_iterator_toList_2.687 = global ptr null
@"Core:iterator:236" = global ptr null
@"Core:iterator:241" = global ptr null
@"Core:iterator:243" = global ptr null
@fun_Core_iterator_toList_2.689 = global ptr null
@252 = global ptr null
@"Core:iterator:249" = global ptr null
@num_12 = global ptr null
@"Core:iterator:254" = global ptr null
@"Core:iterator:256" = global ptr null
@fun_Core_iterator_toList_2.691 = global ptr null
@"Core:iterator:268" = global ptr null
@"Core:iterator:273" = global ptr null
@"Core:iterator:275" = global ptr null
@fun_Core_iterator_toList_2.693 = global ptr null
@253 = global ptr null
@"Core:iterator:283" = global ptr null
@num_40 = global ptr null
@"Core:iterator:288" = global ptr null
@"Core:iterator:290" = global ptr null
@fun_Core_iterator_toList_2.695 = global ptr null
@"Core:iterator:292" = global ptr null
@"Core:iterator:299" = global ptr null
@"Core:iterator:301" = global ptr null
@fun_Core_iterator_toList_2.697 = global ptr null
@254 = global ptr null
@255 = global ptr null
@256 = global ptr null
@"Core:iterator:318" = global ptr null
@"Core:iterator:323" = global ptr null
@"Core:iterator:325" = global ptr null
@fun_Core_iterator_toList_2.699 = global ptr null
@257 = global ptr null
@258 = global ptr null
@259 = global ptr null
@260 = global ptr null
@"Core:iterator:341" = global ptr null
@fun_Core_iterator_128_equals_then.701 = global ptr null
@fun_Core_iterator_128_equals_then.703 = global ptr null
@fun_Core_iterator_128_equals_then.705 = global ptr null
@fun_Core_iterator_128_equals_then.707 = global ptr null
@fun_Core_iterator_128_hasKey_then.709 = global ptr null
@261 = global ptr null
@fun_Core_iterator_128_hasKey_else.711 = global ptr null
@262 = global ptr null
@fun_Core_iterator_128_isMatch_then.713 = global ptr null
@fun_Core_iterator_128_hasKey_then.715 = global ptr null
@263 = global ptr null
@fun_Core_iterator_128_hasKey_else.717 = global ptr null
@264 = global ptr null
@fun_Core_iterator_128_isMatch_then.719 = global ptr null
@265 = global ptr null
@fun_Core_iterator_128_isMatch_else.721 = global ptr null
@fun_Core_iterator_128_isMatch_else.723 = global ptr null
@fun_Core_iterator_128_equals_else.725 = global ptr null
@266 = global ptr null
@fun_Core_iterator_128_equals_else.727 = global ptr null
@fun_Core_iterator_128_equals_else.729 = global ptr null
@267 = global ptr null
@fun_Core_iterator_128_equals_else.731 = global ptr null
@268 = global ptr null
@fun_Core_iterator_128_isMatch_else.733 = global ptr null
@fun_Core_iterator_137_equals_then.735 = global ptr null
@fun_Core_iterator_137_equals_then.737 = global ptr null
@fun_Core_iterator_137_equals_then.739 = global ptr null
@fun_Core_iterator_137_equals_then.741 = global ptr null
@fun_Core_iterator_137_hasKey_then.743 = global ptr null
@269 = global ptr null
@fun_Core_iterator_137_hasKey_else.745 = global ptr null
@270 = global ptr null
@fun_Core_iterator_137_isMatch_then.747 = global ptr null
@fun_Core_iterator_137_hasKey_then.749 = global ptr null
@271 = global ptr null
@fun_Core_iterator_137_hasKey_else.751 = global ptr null
@272 = global ptr null
@fun_Core_iterator_137_isMatch_then.753 = global ptr null
@273 = global ptr null
@fun_Core_iterator_137_isMatch_else.755 = global ptr null
@fun_Core_iterator_137_isMatch_else.757 = global ptr null
@fun_Core_iterator_137_equals_else.759 = global ptr null
@274 = global ptr null
@fun_Core_iterator_137_equals_else.761 = global ptr null
@fun_Core_iterator_137_equals_else.763 = global ptr null
@275 = global ptr null
@fun_Core_iterator_137_equals_else.765 = global ptr null
@276 = global ptr null
@fun_Core_iterator_137_isMatch_else.767 = global ptr null
@fun_Core_iterator_128_equals_then.769 = global ptr null
@fun_Core_iterator_128_equals_then.771 = global ptr null
@fun_Core_iterator_128_equals_then.773 = global ptr null
@fun_Core_iterator_128_equals_then.775 = global ptr null
@fun_Core_iterator_128_hasKey_then.777 = global ptr null
@277 = global ptr null
@fun_Core_iterator_128_hasKey_else.779 = global ptr null
@278 = global ptr null
@fun_Core_iterator_128_isMatch_then.781 = global ptr null
@fun_Core_iterator_128_hasKey_then.783 = global ptr null
@279 = global ptr null
@fun_Core_iterator_128_hasKey_else.785 = global ptr null
@280 = global ptr null
@fun_Core_iterator_128_isMatch_then.787 = global ptr null
@281 = global ptr null
@fun_Core_iterator_128_isMatch_else.789 = global ptr null
@fun_Core_iterator_128_isMatch_else.791 = global ptr null
@fun_Core_iterator_128_equals_else.793 = global ptr null
@282 = global ptr null
@fun_Core_iterator_128_equals_else.795 = global ptr null
@fun_Core_iterator_128_equals_else.797 = global ptr null
@283 = global ptr null
@fun_Core_iterator_128_equals_else.799 = global ptr null
@284 = global ptr null
@fun_Core_iterator_128_isMatch_else.801 = global ptr null
@fun_Core_iterator_137_equals_then.803 = global ptr null
@fun_Core_iterator_137_equals_then.805 = global ptr null
@fun_Core_iterator_137_equals_then.807 = global ptr null
@fun_Core_iterator_137_equals_then.809 = global ptr null
@fun_Core_iterator_137_hasKey_then.811 = global ptr null
@285 = global ptr null
@fun_Core_iterator_137_hasKey_else.813 = global ptr null
@286 = global ptr null
@fun_Core_iterator_137_isMatch_then.815 = global ptr null
@fun_Core_iterator_137_hasKey_then.817 = global ptr null
@287 = global ptr null
@fun_Core_iterator_137_hasKey_else.819 = global ptr null
@288 = global ptr null
@fun_Core_iterator_137_isMatch_then.821 = global ptr null
@289 = global ptr null
@fun_Core_iterator_137_isMatch_else.823 = global ptr null
@fun_Core_iterator_137_isMatch_else.825 = global ptr null
@fun_Core_iterator_137_equals_else.827 = global ptr null
@290 = global ptr null
@fun_Core_iterator_137_equals_else.829 = global ptr null
@fun_Core_iterator_137_equals_else.831 = global ptr null
@291 = global ptr null
@fun_Core_iterator_137_equals_else.833 = global ptr null
@292 = global ptr null
@fun_Core_iterator_137_isMatch_else.835 = global ptr null
@fun_Core_iterator_128_equals_then.837 = global ptr null
@fun_Core_iterator_128_equals_then.839 = global ptr null
@fun_Core_iterator_128_equals_then.841 = global ptr null
@fun_Core_iterator_128_equals_then.843 = global ptr null
@fun_Core_iterator_128_hasKey_then.845 = global ptr null
@293 = global ptr null
@fun_Core_iterator_128_hasKey_else.847 = global ptr null
@294 = global ptr null
@fun_Core_iterator_128_isMatch_then.849 = global ptr null
@fun_Core_iterator_128_hasKey_then.851 = global ptr null
@295 = global ptr null
@fun_Core_iterator_128_hasKey_else.853 = global ptr null
@296 = global ptr null
@fun_Core_iterator_128_isMatch_then.855 = global ptr null
@297 = global ptr null
@fun_Core_iterator_128_isMatch_else.857 = global ptr null
@fun_Core_iterator_128_isMatch_else.859 = global ptr null
@fun_Core_iterator_128_equals_else.861 = global ptr null
@298 = global ptr null
@fun_Core_iterator_128_equals_else.863 = global ptr null
@fun_Core_iterator_128_equals_else.865 = global ptr null
@299 = global ptr null
@fun_Core_iterator_128_equals_else.867 = global ptr null
@300 = global ptr null
@fun_Core_iterator_128_isMatch_else.869 = global ptr null
@fun_Core_iterator_137_equals_then.871 = global ptr null
@fun_Core_iterator_137_equals_then.873 = global ptr null
@fun_Core_iterator_137_equals_then.875 = global ptr null
@fun_Core_iterator_137_equals_then.877 = global ptr null
@fun_Core_iterator_137_hasKey_then.879 = global ptr null
@301 = global ptr null
@fun_Core_iterator_137_hasKey_else.881 = global ptr null
@302 = global ptr null
@fun_Core_iterator_137_isMatch_then.883 = global ptr null
@fun_Core_iterator_137_hasKey_then.885 = global ptr null
@303 = global ptr null
@fun_Core_iterator_137_hasKey_else.887 = global ptr null
@304 = global ptr null
@fun_Core_iterator_137_isMatch_then.889 = global ptr null
@305 = global ptr null
@fun_Core_iterator_137_isMatch_else.891 = global ptr null
@fun_Core_iterator_137_isMatch_else.893 = global ptr null
@fun_Core_iterator_137_equals_else.895 = global ptr null
@306 = global ptr null
@fun_Core_iterator_137_equals_else.897 = global ptr null
@fun_Core_iterator_137_equals_else.899 = global ptr null
@307 = global ptr null
@fun_Core_iterator_137_equals_else.901 = global ptr null
@308 = global ptr null
@fun_Core_iterator_137_isMatch_else.903 = global ptr null
@fun_Core_iterator_128_equals_then.905 = global ptr null
@fun_Core_iterator_128_equals_then.907 = global ptr null
@fun_Core_iterator_128_equals_then.909 = global ptr null
@fun_Core_iterator_128_equals_then.911 = global ptr null
@fun_Core_iterator_128_hasKey_then.913 = global ptr null
@309 = global ptr null
@fun_Core_iterator_128_hasKey_else.915 = global ptr null
@310 = global ptr null
@fun_Core_iterator_128_isMatch_then.917 = global ptr null
@fun_Core_iterator_128_hasKey_then.919 = global ptr null
@311 = global ptr null
@fun_Core_iterator_128_hasKey_else.921 = global ptr null
@312 = global ptr null
@fun_Core_iterator_128_isMatch_then.923 = global ptr null
@313 = global ptr null
@fun_Core_iterator_128_isMatch_else.925 = global ptr null
@fun_Core_iterator_128_isMatch_else.927 = global ptr null
@fun_Core_iterator_128_equals_else.929 = global ptr null
@314 = global ptr null
@fun_Core_iterator_128_equals_else.931 = global ptr null
@fun_Core_iterator_128_equals_else.933 = global ptr null
@315 = global ptr null
@fun_Core_iterator_128_equals_else.935 = global ptr null
@316 = global ptr null
@fun_Core_iterator_128_isMatch_else.937 = global ptr null
@fun_Core_iterator_137_equals_then.939 = global ptr null
@fun_Core_iterator_137_equals_then.941 = global ptr null
@fun_Core_iterator_137_equals_then.943 = global ptr null
@fun_Core_iterator_137_equals_then.945 = global ptr null
@fun_Core_iterator_137_hasKey_then.947 = global ptr null
@317 = global ptr null
@fun_Core_iterator_137_hasKey_else.949 = global ptr null
@318 = global ptr null
@fun_Core_iterator_137_isMatch_then.951 = global ptr null
@fun_Core_iterator_137_hasKey_then.953 = global ptr null
@319 = global ptr null
@fun_Core_iterator_137_hasKey_else.955 = global ptr null
@320 = global ptr null
@fun_Core_iterator_137_isMatch_then.957 = global ptr null
@321 = global ptr null
@fun_Core_iterator_137_isMatch_else.959 = global ptr null
@fun_Core_iterator_137_isMatch_else.961 = global ptr null
@fun_Core_iterator_137_equals_else.963 = global ptr null
@322 = global ptr null
@fun_Core_iterator_137_equals_else.965 = global ptr null
@fun_Core_iterator_137_equals_else.967 = global ptr null
@323 = global ptr null
@fun_Core_iterator_137_equals_else.969 = global ptr null
@324 = global ptr null
@fun_Core_iterator_137_isMatch_else.971 = global ptr null
@"Chrono:duration:is:1" = global ptr null
@tag_Duration = global ptr null
@"text_Expected Duration, got " = global ptr null
@"Chrono:duration:is:1:seconds" = global ptr null
@"Chrono:duration:is:1:9" = global ptr null
@fun_Chrono_duration_is = global ptr null
@fun_Chrono_duration_is_1_equals_then = global ptr null
@fun_Chrono_duration_is_1_equals_then.973 = global ptr null
@fun_Chrono_duration_is_1_equals_then.975 = global ptr null
@325 = global ptr null
@fun_Chrono_duration_is_1_equals_else = global ptr null
@fun_Chrono_duration_is_1_equals_else.977 = global ptr null
@326 = global ptr null
@fun_Chrono_duration_is_1_equals_else.979 = global ptr null
@327 = global ptr null
@fun_Chrono_duration_is_1_case-0_matched = global ptr null
@fun_Chrono_duration_is_1_case-0_didNotMatch = global ptr null
@"Chrono:duration:subtract:2" = global ptr null
@"Chrono:duration:subtract:4" = global ptr null
@"Chrono:duration:subtract:7" = global ptr null
@"Chrono:duration:subtract:9" = global ptr null
@"Chrono:duration:subtract:28" = global ptr null
@"Chrono:duration:subtract:38" = global ptr null
@"Chrono:duration:subtract:39" = global ptr null
@fun_Chrono_duration_subtract = global ptr null
@tag_Duration.980 = global ptr null
@"Chrono:instant:is:1" = global ptr null
@tag_Instant = global ptr null
@"text_Expected Instant, got " = global ptr null
@"Chrono:instant:is:1:dur" = global ptr null
@"Chrono:instant:is:1:9" = global ptr null
@fun_Chrono_instant_is = global ptr null
@fun_Chrono_instant_is_1_equals_then = global ptr null
@fun_Chrono_instant_is_1_equals_then.982 = global ptr null
@fun_Chrono_instant_is_1_equals_then.984 = global ptr null
@328 = global ptr null
@fun_Chrono_instant_is_1_equals_else = global ptr null
@fun_Chrono_instant_is_1_equals_else.986 = global ptr null
@329 = global ptr null
@fun_Chrono_instant_is_1_equals_else.988 = global ptr null
@330 = global ptr null
@fun_Chrono_instant_is_1_case-0_matched = global ptr null
@fun_Chrono_instant_is_1_case-0_didNotMatch = global ptr null
@"Chrono:instant:fromUnixDuration:9" = global ptr null
@"text_`duration.is dur` was not satisfied" = global ptr null
@"Chrono:instant:fromUnixDuration:11" = global ptr null
@"text_`is instant` was not satisfied" = global ptr null
@"Chrono:instant:toUnixTimeDuration:2" = global ptr null
@"Chrono:instant:toUnixTimeDuration:4" = global ptr null
@"Chrono:instant:toUnixTimeDuration:14" = global ptr null
@fun_Chrono_instant_toUnixTimeDuration = global ptr null
@fun_Core_iterator_128_equals_then.990 = global ptr null
@fun_Core_iterator_128_equals_then.992 = global ptr null
@fun_Core_iterator_128_equals_then.994 = global ptr null
@fun_Core_iterator_128_equals_then.996 = global ptr null
@fun_Core_iterator_128_hasKey_then.998 = global ptr null
@331 = global ptr null
@fun_Core_iterator_128_hasKey_else.1000 = global ptr null
@332 = global ptr null
@fun_Core_iterator_128_isMatch_then.1002 = global ptr null
@fun_Core_iterator_128_hasKey_then.1004 = global ptr null
@333 = global ptr null
@fun_Core_iterator_128_hasKey_else.1006 = global ptr null
@334 = global ptr null
@fun_Core_iterator_128_isMatch_then.1008 = global ptr null
@335 = global ptr null
@fun_Core_iterator_128_isMatch_else.1010 = global ptr null
@fun_Core_iterator_128_isMatch_else.1012 = global ptr null
@fun_Core_iterator_128_equals_else.1014 = global ptr null
@336 = global ptr null
@fun_Core_iterator_128_equals_else.1016 = global ptr null
@fun_Core_iterator_128_equals_else.1018 = global ptr null
@337 = global ptr null
@fun_Core_iterator_128_equals_else.1020 = global ptr null
@338 = global ptr null
@fun_Core_iterator_128_isMatch_else.1022 = global ptr null
@fun_Core_iterator_137_equals_then.1024 = global ptr null
@fun_Core_iterator_137_equals_then.1026 = global ptr null
@fun_Core_iterator_137_equals_then.1028 = global ptr null
@fun_Core_iterator_137_equals_then.1030 = global ptr null
@fun_Core_iterator_137_hasKey_then.1032 = global ptr null
@339 = global ptr null
@fun_Core_iterator_137_hasKey_else.1034 = global ptr null
@340 = global ptr null
@fun_Core_iterator_137_isMatch_then.1036 = global ptr null
@fun_Core_iterator_137_hasKey_then.1038 = global ptr null
@341 = global ptr null
@fun_Core_iterator_137_hasKey_else.1040 = global ptr null
@342 = global ptr null
@fun_Core_iterator_137_isMatch_then.1042 = global ptr null
@343 = global ptr null
@fun_Core_iterator_137_isMatch_else.1044 = global ptr null
@fun_Core_iterator_137_isMatch_else.1046 = global ptr null
@fun_Core_iterator_137_equals_else.1048 = global ptr null
@344 = global ptr null
@fun_Core_iterator_137_equals_else.1050 = global ptr null
@fun_Core_iterator_137_equals_else.1052 = global ptr null
@345 = global ptr null
@fun_Core_iterator_137_equals_else.1054 = global ptr null
@346 = global ptr null
@fun_Core_iterator_137_isMatch_else.1056 = global ptr null
@fun_Core_iterator_128_equals_then.1058 = global ptr null
@fun_Core_iterator_128_equals_then.1060 = global ptr null
@fun_Core_iterator_128_equals_then.1062 = global ptr null
@fun_Core_iterator_128_equals_then.1064 = global ptr null
@fun_Core_iterator_128_hasKey_then.1066 = global ptr null
@347 = global ptr null
@fun_Core_iterator_128_hasKey_else.1068 = global ptr null
@348 = global ptr null
@fun_Core_iterator_128_isMatch_then.1070 = global ptr null
@fun_Core_iterator_128_hasKey_then.1072 = global ptr null
@349 = global ptr null
@fun_Core_iterator_128_hasKey_else.1074 = global ptr null
@350 = global ptr null
@fun_Core_iterator_128_isMatch_then.1076 = global ptr null
@351 = global ptr null
@fun_Core_iterator_128_isMatch_else.1078 = global ptr null
@fun_Core_iterator_128_isMatch_else.1080 = global ptr null
@fun_Core_iterator_128_equals_else.1082 = global ptr null
@352 = global ptr null
@fun_Core_iterator_128_equals_else.1084 = global ptr null
@fun_Core_iterator_128_equals_else.1086 = global ptr null
@353 = global ptr null
@fun_Core_iterator_128_equals_else.1088 = global ptr null
@354 = global ptr null
@fun_Core_iterator_128_isMatch_else.1090 = global ptr null
@fun_Core_iterator_137_equals_then.1092 = global ptr null
@fun_Core_iterator_137_equals_then.1094 = global ptr null
@fun_Core_iterator_137_equals_then.1096 = global ptr null
@fun_Core_iterator_137_equals_then.1098 = global ptr null
@fun_Core_iterator_137_hasKey_then.1100 = global ptr null
@355 = global ptr null
@fun_Core_iterator_137_hasKey_else.1102 = global ptr null
@356 = global ptr null
@fun_Core_iterator_137_isMatch_then.1104 = global ptr null
@fun_Core_iterator_137_hasKey_then.1106 = global ptr null
@357 = global ptr null
@fun_Core_iterator_137_hasKey_else.1108 = global ptr null
@358 = global ptr null
@fun_Core_iterator_137_isMatch_then.1110 = global ptr null
@359 = global ptr null
@fun_Core_iterator_137_isMatch_else.1112 = global ptr null
@fun_Core_iterator_137_isMatch_else.1114 = global ptr null
@fun_Core_iterator_137_equals_else.1116 = global ptr null
@360 = global ptr null
@fun_Core_iterator_137_equals_else.1118 = global ptr null
@fun_Core_iterator_137_equals_else.1120 = global ptr null
@361 = global ptr null
@fun_Core_iterator_137_equals_else.1122 = global ptr null
@362 = global ptr null
@fun_Core_iterator_137_isMatch_else.1124 = global ptr null
@num_1000000000 = global ptr null
@"Chrono:duration:isNumber:18:9" = global ptr null
@"Chrono:duration:isNumber:19" = global ptr null
@"text_`isNumber n` was not satisfied" = global ptr null
@"Chrono:duration:numberAsFixedDecimal:4" = global ptr null
@"Chrono:duration:numberAsFixedDecimal:15" = global ptr null
@"Chrono:duration:numberAsFixedDecimal:17:9" = global ptr null
@"Chrono:duration:numberAsFixedDecimal:18" = global ptr null
@fun_Chrono_duration_numberAsFixedDecimal = global ptr null
@fun_Chrono_duration_isNumber_18 = global ptr null
@fun_Chrono_duration_numberAsFixedDecimal_16 = global ptr null
@fun_Chrono_duration_numberAsFixedDecimal_17 = global ptr null
@"text_`isNumber nanoseconds` was not satisfied" = global ptr null
@"Chrono:duration:fromNanoseconds:4" = global ptr null
@"Chrono:duration:fromNanoseconds:8" = global ptr null
@"Chrono:duration:fromNanoseconds:34" = global ptr null
@fun_Chrono_duration_fromNanoseconds = global ptr null
@fun_Chrono_duration_isNumber_18.1126 = global ptr null
@tag_Duration.1127 = global ptr null
@"Chrono:clock:is:1" = global ptr null
@tag_Clock = global ptr null
@"text_Expected Clock, got " = global ptr null
@"Chrono:clock:is:1:f" = global ptr null
@"Chrono:clock:is:1:9" = global ptr null
@fun_Chrono_clock_is = global ptr null
@fun_Chrono_clock_is_1_equals_then = global ptr null
@fun_Chrono_clock_is_1_equals_then.1129 = global ptr null
@fun_Chrono_clock_is_1_equals_then.1131 = global ptr null
@363 = global ptr null
@fun_Chrono_clock_is_1_equals_else = global ptr null
@fun_Chrono_clock_is_1_equals_else.1133 = global ptr null
@364 = global ptr null
@fun_Chrono_clock_is_1_equals_else.1135 = global ptr null
@365 = global ptr null
@fun_Chrono_clock_is_1_case-0_matched = global ptr null
@fun_Chrono_clock_is_1_case-0_didNotMatch = global ptr null
@"Chrono:clock:fromSystemClock:9" = global ptr null
@"text_`function.is0 systemClock` was not satisfied" = global ptr null
@"Chrono:clock:fromSystemClock:11" = global ptr null
@"Chrono:clock:fromSystemClock:13:9" = global ptr null
@"Chrono:clock:fromSystemClock:13:18" = global ptr null
@"Chrono:clock:fromSystemClock:13:27" = global ptr null
@fun_Chrono_clock_fromSystemClock = global ptr null
@fun_Chrono_clock_fromSystemClock_13 = global ptr null
@tag_Instant.1136 = global ptr null
@tag_Clock.1137 = global ptr null
@"Chrono:clock:now:2" = global ptr null
@"text_`is clock` was not satisfied" = global ptr null
@"Chrono:clock:now:4" = global ptr null
@"Chrono:clock:now:14" = global ptr null
@"Chrono:clock:now:23" = global ptr null
@fun_Chrono_clock_now = global ptr null
@fun_Core_iterator_128_equals_then.1139 = global ptr null
@fun_Core_iterator_128_equals_then.1141 = global ptr null
@fun_Core_iterator_128_equals_then.1143 = global ptr null
@fun_Core_iterator_128_equals_then.1145 = global ptr null
@fun_Core_iterator_128_hasKey_then.1147 = global ptr null
@366 = global ptr null
@fun_Core_iterator_128_hasKey_else.1149 = global ptr null
@367 = global ptr null
@fun_Core_iterator_128_isMatch_then.1151 = global ptr null
@fun_Core_iterator_128_hasKey_then.1153 = global ptr null
@368 = global ptr null
@fun_Core_iterator_128_hasKey_else.1155 = global ptr null
@369 = global ptr null
@fun_Core_iterator_128_isMatch_then.1157 = global ptr null
@370 = global ptr null
@fun_Core_iterator_128_isMatch_else.1159 = global ptr null
@fun_Core_iterator_128_isMatch_else.1161 = global ptr null
@fun_Core_iterator_128_equals_else.1163 = global ptr null
@371 = global ptr null
@fun_Core_iterator_128_equals_else.1165 = global ptr null
@fun_Core_iterator_128_equals_else.1167 = global ptr null
@372 = global ptr null
@fun_Core_iterator_128_equals_else.1169 = global ptr null
@373 = global ptr null
@fun_Core_iterator_128_isMatch_else.1171 = global ptr null
@fun_Core_iterator_137_equals_then.1173 = global ptr null
@fun_Core_iterator_137_equals_then.1175 = global ptr null
@fun_Core_iterator_137_equals_then.1177 = global ptr null
@fun_Core_iterator_137_equals_then.1179 = global ptr null
@fun_Core_iterator_137_hasKey_then.1181 = global ptr null
@374 = global ptr null
@fun_Core_iterator_137_hasKey_else.1183 = global ptr null
@375 = global ptr null
@fun_Core_iterator_137_isMatch_then.1185 = global ptr null
@fun_Core_iterator_137_hasKey_then.1187 = global ptr null
@376 = global ptr null
@fun_Core_iterator_137_hasKey_else.1189 = global ptr null
@377 = global ptr null
@fun_Core_iterator_137_isMatch_then.1191 = global ptr null
@378 = global ptr null
@fun_Core_iterator_137_isMatch_else.1193 = global ptr null
@fun_Core_iterator_137_isMatch_else.1195 = global ptr null
@fun_Core_iterator_137_equals_else.1197 = global ptr null
@379 = global ptr null
@fun_Core_iterator_137_equals_else.1199 = global ptr null
@fun_Core_iterator_137_equals_else.1201 = global ptr null
@380 = global ptr null
@fun_Core_iterator_137_equals_else.1203 = global ptr null
@381 = global ptr null
@fun_Core_iterator_137_isMatch_else.1205 = global ptr null
@num_60 = global ptr null
@num_3600 = global ptr null
@num_86400 = global ptr null
@"Builtins::intRemainder:11" = global ptr null
@"Builtins::intRemainder:17" = global ptr null
@"Builtins::intRemainder:25" = global ptr null
@"Builtins::intRemainder:32" = global ptr null
@"Builtins::intRemainder:5" = global ptr null
@"Builtins::textGetRange:11" = global ptr null
@"Builtins::textGetRange:14" = global ptr null
@"Builtins::textGetRange:16" = global ptr null
@"Builtins::textGetRange:24" = global ptr null
@"Builtins::textGetRange:25" = global ptr null
@"Builtins::textGetRange:27" = global ptr null
@"Builtins::textGetRange:33" = global ptr null
@"Builtins::textGetRange:36" = global ptr null
@"Builtins::textGetRange:38" = global ptr null
@"Builtins::textGetRange:46" = global ptr null
@"Builtins::textGetRange:47" = global ptr null
@"Builtins::textGetRange:49" = global ptr null
@"Builtins::textGetRange:5" = global ptr null
@"Builtins::textGetRange:53" = global ptr null
@"Builtins::textGetRange:55" = global ptr null
@"Builtins::textGetRange:63" = global ptr null
@"Builtins::textLength:11" = global ptr null
@"Builtins::textLength:5" = global ptr null
@"Builtins::textStartsWith:11" = global ptr null
@"Builtins::textStartsWith:18" = global ptr null
@"Builtins::textStartsWith:5" = global ptr null
@"Core:fixedDecimal:floorToInt:18" = global ptr null
@"Core:fixedDecimal:floorToInt:2" = global ptr null
@"Core:fixedDecimal:floorToInt:20" = global ptr null
@"Core:fixedDecimal:floorToInt:21" = global ptr null
@"Core:fixedDecimal:floorToInt:4" = global ptr null
@"Core:fixedDecimal:floorToInt:7" = global ptr null
@"Core:text:removePrefix:14" = global ptr null
@"Core:text:removePrefix:15:4" = global ptr null
@"Core:text:removePrefix:15:7" = global ptr null
@"Core:text:removePrefix:15:8" = global ptr null
@"Core:text:removePrefix:17" = global ptr null
@"Core:text:removePrefix:4" = global ptr null
@"Core:text:removePrefix:9" = global ptr null
@fun_candy_builtin_int_remainder = global ptr null
@fun_candy_builtin_text_get_range = global ptr null
@fun_candy_builtin_text_length = global ptr null
@fun_candy_builtin_text_starts_with = global ptr null
@text_1 = global ptr null
@"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`endExclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`endExclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`is prefix` was not satisfied" = global ptr null
@"text_`is text` was not satisfied" = global ptr null
@"text_`prefix | typeIs Text` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied" = global ptr null
@"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied" = global ptr null
@"text_`startInclusive | isNonNegative` was not satisfied" = global ptr null
@"text_`startInclusive | typeIs Int` was not satisfied" = global ptr null
@"text_`text | typeIs Text` was not satisfied" = global ptr null
@fun_Builtins__intRemainder = global ptr null
@fun_Builtins__textGetRange = global ptr null
@fun_Core_text_removePrefix = global ptr null
@fun_Core_text_removePrefix_15 = global ptr null
@fun_Core_text_removePrefix_16 = global ptr null
@fun_Core_fixedDecimal_floorToInt = global ptr null
@fun_Core_fixedDecimal_isScale_18.1207 = global ptr null
@"Core:fixedDecimal:multiply:2" = global ptr null
@"text_`is factorA` was not satisfied" = global ptr null
@"Core:fixedDecimal:multiply:4" = global ptr null
@"Core:fixedDecimal:multiply:7" = global ptr null
@"text_`is factorB` was not satisfied" = global ptr null
@"Core:fixedDecimal:multiply:9" = global ptr null
@"Core:fixedDecimal:multiply:13" = global ptr null
@"Core:fixedDecimal:multiply:24" = global ptr null
@"Core:fixedDecimal:multiply:25" = global ptr null
@"Core:fixedDecimal:multiply:28" = global ptr null
@"Core:fixedDecimal:multiply:39" = global ptr null
@"Core:fixedDecimal:multiply:40" = global ptr null
@"Core:fixedDecimal:multiply:41" = global ptr null
@fun_Core_fixedDecimal_multiply = global ptr null
@"Core:fixedDecimal:isNegative:2" = global ptr null
@"Core:fixedDecimal:isNegative:4" = global ptr null
@"Core:fixedDecimal:isNegative:7" = global ptr null
@"Core:fixedDecimal:isNegative:17" = global ptr null
@"Core:fixedDecimal:toText:2" = global ptr null
@"Core:fixedDecimal:toText:4" = global ptr null
@"Core:fixedDecimal:toText:7" = global ptr null
@"Core:fixedDecimal:toText:10:2" = global ptr null
@"Core:fixedDecimal:toText:10:4" = global ptr null
@"Core:fixedDecimal:toText:10:8" = global ptr null
@"Core:fixedDecimal:toText:10:18" = global ptr null
@"Core:fixedDecimal:toText:10:30" = global ptr null
@"Core:fixedDecimal:toText:10:31:10" = global ptr null
@"Core:fixedDecimal:toText:10:31:28" = global ptr null
@"Core:fixedDecimal:toText:10:32:10" = global ptr null
@text_-1 = global ptr null
@"Core:fixedDecimal:toText:10:32:28" = global ptr null
@"Core:fixedDecimal:toText:10:33" = global ptr null
@"Core:fixedDecimal:toText:11" = global ptr null
@"Core:fixedDecimal:toText:20" = global ptr null
@"Core:fixedDecimal:toText:21" = global ptr null
@"Core:fixedDecimal:toText:23:0" = global ptr null
@"Core:fixedDecimal:toText:24" = global ptr null
@"Core:fixedDecimal:toText:27" = global ptr null
@"Core:fixedDecimal:toText:28" = global ptr null
@"Core:fixedDecimal:toText:30:0" = global ptr null
@"Core:fixedDecimal:toText:31" = global ptr null
@"Core:fixedDecimal:toText:32" = global ptr null
@"Core:fixedDecimal:toText:33" = global ptr null
@fun_Core_fixedDecimal_toText = global ptr null
@fun_Core_fixedDecimal_toText_10 = global ptr null
@fun_Core_fixedDecimal_isScale_18.1209 = global ptr null
@fun_Core_fixedDecimal_toText_10_31 = global ptr null
@fun_Core_fixedDecimal_toText_10_32 = global ptr null
@fun_Core_fixedDecimal_toText_22 = global ptr null
@fun_Core_fixedDecimal_toText_23 = global ptr null
@fun_Core_fixedDecimal_toText_29 = global ptr null
@fun_Core_fixedDecimal_toText_30 = global ptr null
@fun_Core_iterator_128_equals_then.1211 = global ptr null
@fun_Core_iterator_128_equals_then.1213 = global ptr null
@fun_Core_iterator_128_equals_then.1215 = global ptr null
@fun_Core_iterator_128_equals_then.1217 = global ptr null
@fun_Core_iterator_128_hasKey_then.1219 = global ptr null
@382 = global ptr null
@fun_Core_iterator_128_hasKey_else.1221 = global ptr null
@383 = global ptr null
@fun_Core_iterator_128_isMatch_then.1223 = global ptr null
@fun_Core_iterator_128_hasKey_then.1225 = global ptr null
@384 = global ptr null
@fun_Core_iterator_128_hasKey_else.1227 = global ptr null
@385 = global ptr null
@fun_Core_iterator_128_isMatch_then.1229 = global ptr null
@386 = global ptr null
@fun_Core_iterator_128_isMatch_else.1231 = global ptr null
@fun_Core_iterator_128_isMatch_else.1233 = global ptr null
@fun_Core_iterator_128_equals_else.1235 = global ptr null
@387 = global ptr null
@fun_Core_iterator_128_equals_else.1237 = global ptr null
@fun_Core_iterator_128_equals_else.1239 = global ptr null
@388 = global ptr null
@fun_Core_iterator_128_equals_else.1241 = global ptr null
@389 = global ptr null
@fun_Core_iterator_128_isMatch_else.1243 = global ptr null
@fun_Core_iterator_137_equals_then.1245 = global ptr null
@fun_Core_iterator_137_equals_then.1247 = global ptr null
@fun_Core_iterator_137_equals_then.1249 = global ptr null
@fun_Core_iterator_137_equals_then.1251 = global ptr null
@fun_Core_iterator_137_hasKey_then.1253 = global ptr null
@390 = global ptr null
@fun_Core_iterator_137_hasKey_else.1255 = global ptr null
@391 = global ptr null
@fun_Core_iterator_137_isMatch_then.1257 = global ptr null
@fun_Core_iterator_137_hasKey_then.1259 = global ptr null
@392 = global ptr null
@fun_Core_iterator_137_hasKey_else.1261 = global ptr null
@393 = global ptr null
@fun_Core_iterator_137_isMatch_then.1263 = global ptr null
@394 = global ptr null
@fun_Core_iterator_137_isMatch_else.1265 = global ptr null
@fun_Core_iterator_137_isMatch_else.1267 = global ptr null
@fun_Core_iterator_137_equals_else.1269 = global ptr null
@395 = global ptr null
@fun_Core_iterator_137_equals_else.1271 = global ptr null
@fun_Core_iterator_137_equals_else.1273 = global ptr null
@396 = global ptr null
@fun_Core_iterator_137_equals_else.1275 = global ptr null
@397 = global ptr null
@fun_Core_iterator_137_isMatch_else.1277 = global ptr null
@"Core:list:firstIndexOf:8" = global ptr null
@"Core:list:firstIndexWhere:14" = global ptr null
@"Core:list:firstIndexWhere:16" = global ptr null
@"Core:list:firstIndexWhere:23:1" = global ptr null
@"Core:list:firstIndexWhere:23:10:16" = global ptr null
@"Core:list:firstIndexWhere:23:10:18" = global ptr null
@"Core:list:firstIndexWhere:23:10:22:14" = global ptr null
@"Core:list:firstIndexWhere:23:10:22:16" = global ptr null
@"Core:list:firstIndexWhere:23:10:23" = global ptr null
@"Core:list:firstIndexWhere:23:10:4" = global ptr null
@"Core:list:firstIndexWhere:23:10:5" = global ptr null
@"Core:list:firstIndexWhere:23:11" = global ptr null
@"Core:list:firstIndexWhere:23:7" = global ptr null
@"Core:list:firstIndexWhere:23:index" = global ptr null
@"Core:list:firstIndexWhere:23:list" = global ptr null
@"Core:list:firstIndexWhere:24" = global ptr null
@"Core:list:firstIndexWhere:4" = global ptr null
@tag_NotFound = global ptr null
@"text_Expected a List, got `" = global ptr null
@"text_Struct doesn't contain key `List`: `" = global ptr null
@"text_`bool.is predicateResult` was not satisfied" = global ptr null
@"text_`function.is1 predicate` was not satisfied" = global ptr null
@"fun_Core_list_firstIndexWhere_23_9, Core_list_firstWhere_21_case-1_matched, Core_list_lastIndexWhere_44_16, Core_list_lastWhere_21_case-1_matched" = global ptr null
@fun_Core_list_firstIndexWhere = global ptr null
@fun_Core_list_firstIndexWhere_23 = global ptr null
@fun_Core_list_firstIndexWhere_23_1_equals_then = global ptr null
@fun_Core_list_firstIndexWhere_23_1_hasKey_then = global ptr null
@398 = global ptr null
@fun_Core_list_firstIndexWhere_23_1_hasKey_else = global ptr null
@399 = global ptr null
@fun_Core_list_firstIndexWhere_23_1_isMatch_then = global ptr null
@fun_Core_list_firstIndexWhere_23_1_hasKey_then.1279 = global ptr null
@400 = global ptr null
@fun_Core_list_firstIndexWhere_23_1_hasKey_else.1281 = global ptr null
@401 = global ptr null
@fun_Core_list_firstIndexWhere_23_1_isMatch_then.1283 = global ptr null
@402 = global ptr null
@fun_Core_list_firstIndexWhere_23_1_isMatch_else = global ptr null
@fun_Core_list_firstIndexWhere_23_1_isMatch_else.1285 = global ptr null
@fun_Core_list_firstIndexWhere_23_1_equals_else = global ptr null
@403 = global ptr null
@fun_Core_list_firstIndexWhere_23_1_isMatch_else.1287 = global ptr null
@fun_Core_list_firstIndexWhere_23_10 = global ptr null
@fun_Core_list_firstIndexWhere_23_10_21 = global ptr null
@tag_FoundAt = global ptr null
@fun_Core_list_firstIndexWhere_23_10_22 = global ptr null
@fun_Core_controlFlow_recursive_18.1289 = global ptr null
@fun_Core_controlFlow_recursive_18_0.1291 = global ptr null
@"Builtins::textCharacters:11" = global ptr null
@"Builtins::textCharacters:5" = global ptr null
@"Core:text:firstIndexOf:12" = global ptr null
@"Core:text:firstIndexOf:17" = global ptr null
@"Core:text:firstIndexOf:20" = global ptr null
@"Core:text:firstIndexOf:4" = global ptr null
@"Core:text:firstIndexOf:9" = global ptr null
@"Core:text:padEnd:16" = global ptr null
@"Core:text:padEnd:21" = global ptr null
@"Core:text:padEnd:24" = global ptr null
@"Core:text:padEnd:29" = global ptr null
@"Core:text:padEnd:32" = global ptr null
@"Core:text:padEnd:4" = global ptr null
@"Core:text:padEnd:45" = global ptr null
@"Core:text:padEnd:47:14" = global ptr null
@"Core:text:padEnd:47:15" = global ptr null
@"Core:text:padEnd:47:16" = global ptr null
@"Core:text:padEnd:48" = global ptr null
@"Core:text:padStart:16" = global ptr null
@"Core:text:padStart:21" = global ptr null
@"Core:text:padStart:24" = global ptr null
@"Core:text:padStart:29" = global ptr null
@"Core:text:padStart:32" = global ptr null
@"Core:text:padStart:4" = global ptr null
@"Core:text:padStart:45" = global ptr null
@"Core:text:padStart:47:12" = global ptr null
@"Core:text:padStart:47:13" = global ptr null
@"Core:text:padStart:47:16" = global ptr null
@"Core:text:padStart:48" = global ptr null
@"Core:text:repeat:16" = global ptr null
@"Core:text:repeat:27" = global ptr null
@"Core:text:repeat:29" = global ptr null
@"Core:text:repeat:34:1" = global ptr null
@"Core:text:repeat:34:8:14" = global ptr null
@"Core:text:repeat:34:8:17" = global ptr null
@"Core:text:repeat:34:8:3" = global ptr null
@"Core:text:repeat:34:9" = global ptr null
@"Core:text:repeat:34:repeatedText" = global ptr null
@"Core:text:repeat:34:times" = global ptr null
@"Core:text:repeat:35" = global ptr null
@"Core:text:repeat:4" = global ptr null
@fun_candy_builtin_text_characters = global ptr null
@text_0 = global ptr null
@"text_Expected 2 items, got " = global ptr null
@"text_`character | length | equals 1` was not satisfied" = global ptr null
@"text_`int.is len` was not satisfied" = global ptr null
@"text_`int.is times` was not satisfied" = global ptr null
@"text_`is character` was not satisfied" = global ptr null
@"text_`times | int.isGreaterThanOrEqualTo 1` was not satisfied" = global ptr null
@fun_Core_text_firstIndexOf = global ptr null
@fun_Core_list_firstIndexOf_7 = global ptr null
@fun_Core_text_repeat = global ptr null
@404 = global ptr null
@fun_Core_text_repeat_34 = global ptr null
@fun_Core_text_repeat_34_1_equals_then = global ptr null
@fun_Core_text_repeat_34_1_equals_then.1293 = global ptr null
@405 = global ptr null
@fun_Core_text_repeat_34_1_equals_else = global ptr null
@406 = global ptr null
@fun_Core_text_repeat_34_1_equals_else.1295 = global ptr null
@407 = global ptr null
@fun_Core_text_repeat_34_1_isMatch_else = global ptr null
@fun_Core_text_repeat_34_7 = global ptr null
@fun_Core_text_repeat_34_8 = global ptr null
@408 = global ptr null
@fun_Core_controlFlow_recursive_18.1297 = global ptr null
@fun_Core_controlFlow_recursive_18_0.1299 = global ptr null
@fun_Core_text_padStart = global ptr null
@fun_Core_text_padStart_46 = global ptr null
@fun_Core_text_padStart_47 = global ptr null
@fun_Core_text_padEnd = global ptr null
@fun_Core_text_padEnd_46 = global ptr null
@fun_Core_text_padEnd_47 = global ptr null
@fun_Core_iterator_128_equals_then.1301 = global ptr null
@fun_Core_iterator_128_equals_then.1303 = global ptr null
@fun_Core_iterator_128_equals_then.1305 = global ptr null
@fun_Core_iterator_128_equals_then.1307 = global ptr null
@fun_Core_iterator_128_hasKey_then.1309 = global ptr null
@409 = global ptr null
@fun_Core_iterator_128_hasKey_else.1311 = global ptr null
@410 = global ptr null
@fun_Core_iterator_128_isMatch_then.1313 = global ptr null
@fun_Core_iterator_128_hasKey_then.1315 = global ptr null
@411 = global ptr null
@fun_Core_iterator_128_hasKey_else.1317 = global ptr null
@412 = global ptr null
@fun_Core_iterator_128_isMatch_then.1319 = global ptr null
@413 = global ptr null
@fun_Core_iterator_128_isMatch_else.1321 = global ptr null
@fun_Core_iterator_128_isMatch_else.1323 = global ptr null
@fun_Core_iterator_128_equals_else.1325 = global ptr null
@414 = global ptr null
@fun_Core_iterator_128_equals_else.1327 = global ptr null
@fun_Core_iterator_128_equals_else.1329 = global ptr null
@415 = global ptr null
@fun_Core_iterator_128_equals_else.1331 = global ptr null
@416 = global ptr null
@fun_Core_iterator_128_isMatch_else.1333 = global ptr null
@fun_Core_iterator_137_equals_then.1335 = global ptr null
@fun_Core_iterator_137_equals_then.1337 = global ptr null
@fun_Core_iterator_137_equals_then.1339 = global ptr null
@fun_Core_iterator_137_equals_then.1341 = global ptr null
@fun_Core_iterator_137_hasKey_then.1343 = global ptr null
@417 = global ptr null
@fun_Core_iterator_137_hasKey_else.1345 = global ptr null
@418 = global ptr null
@fun_Core_iterator_137_isMatch_then.1347 = global ptr null
@fun_Core_iterator_137_hasKey_then.1349 = global ptr null
@419 = global ptr null
@fun_Core_iterator_137_hasKey_else.1351 = global ptr null
@420 = global ptr null
@fun_Core_iterator_137_isMatch_then.1353 = global ptr null
@421 = global ptr null
@fun_Core_iterator_137_isMatch_else.1355 = global ptr null
@fun_Core_iterator_137_isMatch_else.1357 = global ptr null
@fun_Core_iterator_137_equals_else.1359 = global ptr null
@422 = global ptr null
@fun_Core_iterator_137_equals_else.1361 = global ptr null
@fun_Core_iterator_137_equals_else.1363 = global ptr null
@423 = global ptr null
@fun_Core_iterator_137_equals_else.1365 = global ptr null
@424 = global ptr null
@fun_Core_iterator_137_isMatch_else.1367 = global ptr null
@"text_`isNumber seconds` was not satisfied" = global ptr null
@"Chrono:duration:fromSeconds:4" = global ptr null
@"Chrono:duration:fromSeconds:8" = global ptr null
@fun_Chrono_duration_fromSeconds = global ptr null
@fun_Chrono_duration_isNumber_18.1369 = global ptr null
@tag_Duration.1370 = global ptr null
@"text_`isNumber minutes` was not satisfied" = global ptr null
@"Chrono:duration:fromMinutes:4" = global ptr null
@"Chrono:duration:fromMinutes:8" = global ptr null
@"Chrono:duration:fromMinutes:34" = global ptr null
@fun_Chrono_duration_fromMinutes = global ptr null
@fun_Chrono_duration_isNumber_18.1372 = global ptr null
@tag_Duration.1373 = global ptr null
@"text_`isNumber hours` was not satisfied" = global ptr null
@"Chrono:duration:fromHours:4" = global ptr null
@"Chrono:duration:fromHours:8" = global ptr null
@"Chrono:duration:fromHours:34" = global ptr null
@fun_Chrono_duration_fromHours = global ptr null
@fun_Chrono_duration_isNumber_18.1375 = global ptr null
@tag_Duration.1376 = global ptr null
@"text_`isNumber days` was not satisfied" = global ptr null
@"Chrono:duration:fromNormalDays:4" = global ptr null
@"Chrono:duration:fromNormalDays:8" = global ptr null
@"Chrono:duration:fromNormalDays:34" = global ptr null
@fun_Chrono_duration_fromNormalDays = global ptr null
@fun_Chrono_duration_isNumber_18.1378 = global ptr null
@tag_Duration.1379 = global ptr null
@"text_`is duration` was not satisfied" = global ptr null
@"Chrono:duration:totalSeconds:2" = global ptr null
@"Chrono:duration:totalSeconds:4" = global ptr null
@"Chrono:duration:totalSeconds:14" = global ptr null
@fun_Chrono_duration_totalSeconds = global ptr null
@"Chrono:duration:totalMinutes:2" = global ptr null
@"Chrono:duration:totalMinutes:4" = global ptr null
@"Chrono:duration:totalMinutes:14" = global ptr null
@"Chrono:duration:totalMinutes:40" = global ptr null
@fun_Chrono_duration_totalMinutes = global ptr null
@"Chrono:duration:totalHours:2" = global ptr null
@"Chrono:duration:totalHours:4" = global ptr null
@"Chrono:duration:totalHours:14" = global ptr null
@"Chrono:duration:totalHours:40" = global ptr null
@fun_Chrono_duration_totalHours = global ptr null
@"Chrono:duration:totalNormalDays:2" = global ptr null
@"Chrono:duration:totalNormalDays:4" = global ptr null
@"Chrono:duration:totalNormalDays:14" = global ptr null
@"Chrono:duration:totalNormalDays:40" = global ptr null
@fun_Chrono_duration_totalNormalDays = global ptr null
@"Chrono:duration:subNormalDayComponent:2" = global ptr null
@"Chrono:duration:subNormalDayComponent:4" = global ptr null
@"Chrono:duration:subNormalDayComponent:10" = global ptr null
@"Chrono:duration:subNormalDayComponent:19" = global ptr null
@"Chrono:duration:subNormalDayComponent:20" = global ptr null
@"Chrono:duration:subNormalDayComponent:21" = global ptr null
@"Chrono:duration:subHourComponent:2" = global ptr null
@"Chrono:duration:subHourComponent:4" = global ptr null
@"Chrono:duration:subHourComponent:10" = global ptr null
@"Chrono:duration:subHourComponent:19" = global ptr null
@"Chrono:duration:subHourComponent:20" = global ptr null
@"Chrono:duration:subHourComponent:21" = global ptr null
@"Chrono:duration:subMinuteComponent:2" = global ptr null
@"Chrono:duration:subMinuteComponent:4" = global ptr null
@"Chrono:duration:subMinuteComponent:10" = global ptr null
@"Chrono:duration:subMinuteComponent:19" = global ptr null
@"Chrono:duration:subMinuteComponent:20" = global ptr null
@"Chrono:duration:subMinuteComponent:21" = global ptr null
@"Chrono:duration:subSecondComponent:2" = global ptr null
@"Chrono:duration:subSecondComponent:4" = global ptr null
@"Chrono:duration:subSecondComponent:10" = global ptr null
@"Chrono:duration:subSecondComponent:19" = global ptr null
@"Chrono:duration:subSecondComponent:20" = global ptr null
@"Chrono:duration:subSecondComponent:21" = global ptr null
@"Chrono:duration:normalDays:2" = global ptr null
@"Chrono:duration:normalDays:4" = global ptr null
@"Chrono:duration:normalDays:7" = global ptr null
@"Chrono:duration:normalDays:16" = global ptr null
@"Chrono:duration:hours:2" = global ptr null
@"Chrono:duration:hours:4" = global ptr null
@"Chrono:duration:hours:7" = global ptr null
@"Chrono:duration:hours:9" = global ptr null
@"Chrono:duration:hours:18" = global ptr null
@fun_Chrono_duration_hours = global ptr null
@"Chrono:duration:minutes:2" = global ptr null
@"Chrono:duration:minutes:4" = global ptr null
@"Chrono:duration:minutes:7" = global ptr null
@"Chrono:duration:minutes:9" = global ptr null
@"Chrono:duration:minutes:18" = global ptr null
@fun_Chrono_duration_minutes = global ptr null
@"Chrono:duration:seconds:2" = global ptr null
@"Chrono:duration:seconds:4" = global ptr null
@"Chrono:duration:seconds:7" = global ptr null
@"Chrono:duration:seconds:9" = global ptr null
@"Chrono:duration:seconds:18" = global ptr null
@fun_Chrono_duration_seconds = global ptr null
@"Chrono:duration:isNegative:2" = global ptr null
@"Chrono:duration:isNegative:4" = global ptr null
@"Chrono:duration:isNegative:14" = global ptr null
@"Chrono:duration:isNegative:23" = global ptr null
@fun_Chrono_duration_isNegative = global ptr null
@"Chrono:duration:toText:2" = global ptr null
@"Chrono:duration:toText:4" = global ptr null
@"Chrono:duration:toText:8" = global ptr null
@text_- = global ptr null
@fun_Chrono_duration_toText_9 = global ptr null
@fun_Chrono_duration_toText_10 = global ptr null
@"Chrono:duration:toText:11" = global ptr null
@"Chrono:duration:toText:15" = global ptr null
@"Chrono:duration:toText:19" = global ptr null
@"Chrono:duration:toText:38" = global ptr null
@"Chrono:duration:toText:42" = global ptr null
@"Chrono:duration:toText:61" = global ptr null
@"Chrono:duration:toText:65" = global ptr null
@"Chrono:duration:toText:84" = global ptr null
@"Chrono:duration:toText:88" = global ptr null
@"Chrono:duration:toText:97" = global ptr null
@"Chrono:duration:toText:106" = global ptr null
@"Chrono:duration:toText:134" = global ptr null
@"Chrono:duration:toText:135" = global ptr null
@"Chrono:duration:toText:152" = global ptr null
@"Chrono:duration:toText:161" = global ptr null
@"Chrono:duration:toText:162" = global ptr null
@"Chrono:duration:toText:164:0" = global ptr null
@"Chrono:duration:toText:165" = global ptr null
@"Chrono:duration:toText:167" = global ptr null
@"Chrono:duration:toText:168" = global ptr null
@"Chrono:duration:toText:170:0" = global ptr null
@"Chrono:duration:toText:171" = global ptr null
@"text_:" = global ptr null
@"Chrono:duration:toText:174" = global ptr null
@"Chrono:duration:toText:175" = global ptr null
@"Chrono:duration:toText:177:0" = global ptr null
@"Chrono:duration:toText:178" = global ptr null
@"Chrono:duration:toText:181" = global ptr null
@"Chrono:duration:toText:182" = global ptr null
@"Chrono:duration:toText:184:0" = global ptr null
@"Chrono:duration:toText:185" = global ptr null
@"Chrono:duration:toText:188" = global ptr null
@"Chrono:duration:toText:189" = global ptr null
@"Chrono:duration:toText:191:0" = global ptr null
@"Chrono:duration:toText:192" = global ptr null
@"Chrono:duration:toText:195" = global ptr null
@"Chrono:duration:toText:196" = global ptr null
@"Chrono:duration:toText:198:0" = global ptr null
@"Chrono:duration:toText:199" = global ptr null
@"Chrono:duration:toText:200" = global ptr null
@"Chrono:duration:toText:201" = global ptr null
@"Chrono:duration:toText:202" = global ptr null
@"Chrono:duration:toText:203" = global ptr null
@"Chrono:duration:toText:204" = global ptr null
@"Chrono:duration:toText:205" = global ptr null
@"Chrono:duration:toText:206" = global ptr null
@"Chrono:duration:toText:207" = global ptr null
@"Chrono:duration:toText:208" = global ptr null
@fun_Chrono_duration_toText = global ptr null
@fun_Chrono_duration_toText_163 = global ptr null
@fun_Chrono_duration_toText_164 = global ptr null
@fun_Chrono_duration_toText_169 = global ptr null
@fun_Chrono_duration_toText_170 = global ptr null
@fun_Chrono_duration_toText_176 = global ptr null
@fun_Chrono_duration_toText_177 = global ptr null
@fun_Chrono_duration_toText_183 = global ptr null
@fun_Chrono_duration_toText_184 = global ptr null
@fun_Chrono_duration_toText_190 = global ptr null
@fun_Chrono_duration_toText_191 = global ptr null
@fun_Chrono_duration_toText_197 = global ptr null
@fun_Chrono_duration_toText_198 = global ptr null
@fun_Core_iterator_128_equals_then.1381 = global ptr null
@fun_Core_iterator_128_equals_then.1383 = global ptr null
@fun_Core_iterator_128_equals_then.1385 = global ptr null
@fun_Core_iterator_128_equals_then.1387 = global ptr null
@fun_Core_iterator_128_hasKey_then.1389 = global ptr null
@425 = global ptr null
@fun_Core_iterator_128_hasKey_else.1391 = global ptr null
@426 = global ptr null
@fun_Core_iterator_128_isMatch_then.1393 = global ptr null
@fun_Core_iterator_128_hasKey_then.1395 = global ptr null
@427 = global ptr null
@fun_Core_iterator_128_hasKey_else.1397 = global ptr null
@428 = global ptr null
@fun_Core_iterator_128_isMatch_then.1399 = global ptr null
@429 = global ptr null
@fun_Core_iterator_128_isMatch_else.1401 = global ptr null
@fun_Core_iterator_128_isMatch_else.1403 = global ptr null
@fun_Core_iterator_128_equals_else.1405 = global ptr null
@430 = global ptr null
@fun_Core_iterator_128_equals_else.1407 = global ptr null
@fun_Core_iterator_128_equals_else.1409 = global ptr null
@431 = global ptr null
@fun_Core_iterator_128_equals_else.1411 = global ptr null
@432 = global ptr null
@fun_Core_iterator_128_isMatch_else.1413 = global ptr null
@fun_Core_iterator_137_equals_then.1415 = global ptr null
@fun_Core_iterator_137_equals_then.1417 = global ptr null
@fun_Core_iterator_137_equals_then.1419 = global ptr null
@fun_Core_iterator_137_equals_then.1421 = global ptr null
@fun_Core_iterator_137_hasKey_then.1423 = global ptr null
@433 = global ptr null
@fun_Core_iterator_137_hasKey_else.1425 = global ptr null
@434 = global ptr null
@fun_Core_iterator_137_isMatch_then.1427 = global ptr null
@fun_Core_iterator_137_hasKey_then.1429 = global ptr null
@435 = global ptr null
@fun_Core_iterator_137_hasKey_else.1431 = global ptr null
@436 = global ptr null
@fun_Core_iterator_137_isMatch_then.1433 = global ptr null
@437 = global ptr null
@fun_Core_iterator_137_isMatch_else.1435 = global ptr null
@fun_Core_iterator_137_isMatch_else.1437 = global ptr null
@fun_Core_iterator_137_equals_else.1439 = global ptr null
@438 = global ptr null
@fun_Core_iterator_137_equals_else.1441 = global ptr null
@fun_Core_iterator_137_equals_else.1443 = global ptr null
@439 = global ptr null
@fun_Core_iterator_137_equals_else.1445 = global ptr null
@440 = global ptr null
@fun_Core_iterator_137_isMatch_else.1447 = global ptr null
@fun_Core_iterator_128_equals_then.1449 = global ptr null
@fun_Core_iterator_128_equals_then.1451 = global ptr null
@fun_Core_iterator_128_equals_then.1453 = global ptr null
@fun_Core_iterator_128_equals_then.1455 = global ptr null
@fun_Core_iterator_128_hasKey_then.1457 = global ptr null
@441 = global ptr null
@fun_Core_iterator_128_hasKey_else.1459 = global ptr null
@442 = global ptr null
@fun_Core_iterator_128_isMatch_then.1461 = global ptr null
@fun_Core_iterator_128_hasKey_then.1463 = global ptr null
@443 = global ptr null
@fun_Core_iterator_128_hasKey_else.1465 = global ptr null
@444 = global ptr null
@fun_Core_iterator_128_isMatch_then.1467 = global ptr null
@445 = global ptr null
@fun_Core_iterator_128_isMatch_else.1469 = global ptr null
@fun_Core_iterator_128_isMatch_else.1471 = global ptr null
@fun_Core_iterator_128_equals_else.1473 = global ptr null
@446 = global ptr null
@fun_Core_iterator_128_equals_else.1475 = global ptr null
@fun_Core_iterator_128_equals_else.1477 = global ptr null
@447 = global ptr null
@fun_Core_iterator_128_equals_else.1479 = global ptr null
@448 = global ptr null
@fun_Core_iterator_128_isMatch_else.1481 = global ptr null
@fun_Core_iterator_137_equals_then.1483 = global ptr null
@fun_Core_iterator_137_equals_then.1485 = global ptr null
@fun_Core_iterator_137_equals_then.1487 = global ptr null
@fun_Core_iterator_137_equals_then.1489 = global ptr null
@fun_Core_iterator_137_hasKey_then.1491 = global ptr null
@449 = global ptr null
@fun_Core_iterator_137_hasKey_else.1493 = global ptr null
@450 = global ptr null
@fun_Core_iterator_137_isMatch_then.1495 = global ptr null
@fun_Core_iterator_137_hasKey_then.1497 = global ptr null
@451 = global ptr null
@fun_Core_iterator_137_hasKey_else.1499 = global ptr null
@452 = global ptr null
@fun_Core_iterator_137_isMatch_then.1501 = global ptr null
@453 = global ptr null
@fun_Core_iterator_137_isMatch_else.1503 = global ptr null
@fun_Core_iterator_137_isMatch_else.1505 = global ptr null
@fun_Core_iterator_137_equals_else.1507 = global ptr null
@454 = global ptr null
@fun_Core_iterator_137_equals_else.1509 = global ptr null
@fun_Core_iterator_137_equals_else.1511 = global ptr null
@455 = global ptr null
@fun_Core_iterator_137_equals_else.1513 = global ptr null
@456 = global ptr null
@fun_Core_iterator_137_isMatch_else.1515 = global ptr null
@fun_Core_iterator_128_equals_then.1517 = global ptr null
@fun_Core_iterator_128_equals_then.1519 = global ptr null
@fun_Core_iterator_128_equals_then.1521 = global ptr null
@fun_Core_iterator_128_equals_then.1523 = global ptr null
@fun_Core_iterator_128_hasKey_then.1525 = global ptr null
@457 = global ptr null
@fun_Core_iterator_128_hasKey_else.1527 = global ptr null
@458 = global ptr null
@fun_Core_iterator_128_isMatch_then.1529 = global ptr null
@fun_Core_iterator_128_hasKey_then.1531 = global ptr null
@459 = global ptr null
@fun_Core_iterator_128_hasKey_else.1533 = global ptr null
@460 = global ptr null
@fun_Core_iterator_128_isMatch_then.1535 = global ptr null
@461 = global ptr null
@fun_Core_iterator_128_isMatch_else.1537 = global ptr null
@fun_Core_iterator_128_isMatch_else.1539 = global ptr null
@fun_Core_iterator_128_equals_else.1541 = global ptr null
@462 = global ptr null
@fun_Core_iterator_128_equals_else.1543 = global ptr null
@fun_Core_iterator_128_equals_else.1545 = global ptr null
@463 = global ptr null
@fun_Core_iterator_128_equals_else.1547 = global ptr null
@464 = global ptr null
@fun_Core_iterator_128_isMatch_else.1549 = global ptr null
@fun_Core_iterator_137_equals_then.1551 = global ptr null
@fun_Core_iterator_137_equals_then.1553 = global ptr null
@fun_Core_iterator_137_equals_then.1555 = global ptr null
@fun_Core_iterator_137_equals_then.1557 = global ptr null
@fun_Core_iterator_137_hasKey_then.1559 = global ptr null
@465 = global ptr null
@fun_Core_iterator_137_hasKey_else.1561 = global ptr null
@466 = global ptr null
@fun_Core_iterator_137_isMatch_then.1563 = global ptr null
@fun_Core_iterator_137_hasKey_then.1565 = global ptr null
@467 = global ptr null
@fun_Core_iterator_137_hasKey_else.1567 = global ptr null
@468 = global ptr null
@fun_Core_iterator_137_isMatch_then.1569 = global ptr null
@469 = global ptr null
@fun_Core_iterator_137_isMatch_else.1571 = global ptr null
@fun_Core_iterator_137_isMatch_else.1573 = global ptr null
@fun_Core_iterator_137_equals_else.1575 = global ptr null
@470 = global ptr null
@fun_Core_iterator_137_equals_else.1577 = global ptr null
@fun_Core_iterator_137_equals_else.1579 = global ptr null
@471 = global ptr null
@fun_Core_iterator_137_equals_else.1581 = global ptr null
@472 = global ptr null
@fun_Core_iterator_137_isMatch_else.1583 = global ptr null
@fun_Core_iterator_128_equals_then.1585 = global ptr null
@fun_Core_iterator_128_equals_then.1587 = global ptr null
@fun_Core_iterator_128_equals_then.1589 = global ptr null
@fun_Core_iterator_128_equals_then.1591 = global ptr null
@fun_Core_iterator_128_hasKey_then.1593 = global ptr null
@473 = global ptr null
@fun_Core_iterator_128_hasKey_else.1595 = global ptr null
@474 = global ptr null
@fun_Core_iterator_128_isMatch_then.1597 = global ptr null
@fun_Core_iterator_128_hasKey_then.1599 = global ptr null
@475 = global ptr null
@fun_Core_iterator_128_hasKey_else.1601 = global ptr null
@476 = global ptr null
@fun_Core_iterator_128_isMatch_then.1603 = global ptr null
@477 = global ptr null
@fun_Core_iterator_128_isMatch_else.1605 = global ptr null
@fun_Core_iterator_128_isMatch_else.1607 = global ptr null
@fun_Core_iterator_128_equals_else.1609 = global ptr null
@478 = global ptr null
@fun_Core_iterator_128_equals_else.1611 = global ptr null
@fun_Core_iterator_128_equals_else.1613 = global ptr null
@479 = global ptr null
@fun_Core_iterator_128_equals_else.1615 = global ptr null
@480 = global ptr null
@fun_Core_iterator_128_isMatch_else.1617 = global ptr null
@fun_Core_iterator_137_equals_then.1619 = global ptr null
@fun_Core_iterator_137_equals_then.1621 = global ptr null
@fun_Core_iterator_137_equals_then.1623 = global ptr null
@fun_Core_iterator_137_equals_then.1625 = global ptr null
@fun_Core_iterator_137_hasKey_then.1627 = global ptr null
@481 = global ptr null
@fun_Core_iterator_137_hasKey_else.1629 = global ptr null
@482 = global ptr null
@fun_Core_iterator_137_isMatch_then.1631 = global ptr null
@fun_Core_iterator_137_hasKey_then.1633 = global ptr null
@483 = global ptr null
@fun_Core_iterator_137_hasKey_else.1635 = global ptr null
@484 = global ptr null
@fun_Core_iterator_137_isMatch_then.1637 = global ptr null
@485 = global ptr null
@fun_Core_iterator_137_isMatch_else.1639 = global ptr null
@fun_Core_iterator_137_isMatch_else.1641 = global ptr null
@fun_Core_iterator_137_equals_else.1643 = global ptr null
@486 = global ptr null
@fun_Core_iterator_137_equals_else.1645 = global ptr null
@fun_Core_iterator_137_equals_else.1647 = global ptr null
@487 = global ptr null
@fun_Core_iterator_137_equals_else.1649 = global ptr null
@488 = global ptr null
@fun_Core_iterator_137_isMatch_else.1651 = global ptr null
@fun_Core_iterator_128_equals_then.1653 = global ptr null
@fun_Core_iterator_128_equals_then.1655 = global ptr null
@fun_Core_iterator_128_equals_then.1657 = global ptr null
@fun_Core_iterator_128_equals_then.1659 = global ptr null
@fun_Core_iterator_128_hasKey_then.1661 = global ptr null
@489 = global ptr null
@fun_Core_iterator_128_hasKey_else.1663 = global ptr null
@490 = global ptr null
@fun_Core_iterator_128_isMatch_then.1665 = global ptr null
@fun_Core_iterator_128_hasKey_then.1667 = global ptr null
@491 = global ptr null
@fun_Core_iterator_128_hasKey_else.1669 = global ptr null
@492 = global ptr null
@fun_Core_iterator_128_isMatch_then.1671 = global ptr null
@493 = global ptr null
@fun_Core_iterator_128_isMatch_else.1673 = global ptr null
@fun_Core_iterator_128_isMatch_else.1675 = global ptr null
@fun_Core_iterator_128_equals_else.1677 = global ptr null
@494 = global ptr null
@fun_Core_iterator_128_equals_else.1679 = global ptr null
@fun_Core_iterator_128_equals_else.1681 = global ptr null
@495 = global ptr null
@fun_Core_iterator_128_equals_else.1683 = global ptr null
@496 = global ptr null
@fun_Core_iterator_128_isMatch_else.1685 = global ptr null
@fun_Core_iterator_137_equals_then.1687 = global ptr null
@fun_Core_iterator_137_equals_then.1689 = global ptr null
@fun_Core_iterator_137_equals_then.1691 = global ptr null
@fun_Core_iterator_137_equals_then.1693 = global ptr null
@fun_Core_iterator_137_hasKey_then.1695 = global ptr null
@497 = global ptr null
@fun_Core_iterator_137_hasKey_else.1697 = global ptr null
@498 = global ptr null
@fun_Core_iterator_137_isMatch_then.1699 = global ptr null
@fun_Core_iterator_137_hasKey_then.1701 = global ptr null
@499 = global ptr null
@fun_Core_iterator_137_hasKey_else.1703 = global ptr null
@500 = global ptr null
@fun_Core_iterator_137_isMatch_then.1705 = global ptr null
@501 = global ptr null
@fun_Core_iterator_137_isMatch_else.1707 = global ptr null
@fun_Core_iterator_137_isMatch_else.1709 = global ptr null
@fun_Core_iterator_137_equals_else.1711 = global ptr null
@502 = global ptr null
@fun_Core_iterator_137_equals_else.1713 = global ptr null
@fun_Core_iterator_137_equals_else.1715 = global ptr null
@503 = global ptr null
@fun_Core_iterator_137_equals_else.1717 = global ptr null
@504 = global ptr null
@fun_Core_iterator_137_isMatch_else.1719 = global ptr null
@tag_Stdout = global ptr null
@"Examples:clock:22:print:7" = global ptr null
@"Examples:clock:22:print:9" = global ptr null
@tag_SystemClock = global ptr null
@"Examples:clock:22:15" = global ptr null
@"Examples:clock:22:16" = global ptr null
@"Examples:clock:22:27" = global ptr null
@"text_It has been " = global ptr null
@"Examples:clock:22:46" = global ptr null
@"Examples:clock:22:55" = global ptr null
@"Examples:clock:22:56" = global ptr null
@"Examples:clock:22:57" = global ptr null
@"Examples:clock:22:59:0" = global ptr null
@"Examples:clock:22:60" = global ptr null
@"text_ since the start the of Unix epoch" = global ptr null
@"Examples:clock:22:62" = global ptr null
@"Examples:clock:22:63" = global ptr null
@fun_Examples_clock_22 = global ptr null
@fun_Examples_clock_22_58 = global ptr null
@fun_Examples_clock_22_59 = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::equals:6\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::equals:6", align 8
  %2 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:10\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::fitsInRustU128:10", align 8
  %4 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::fitsInRustU128:16\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::fitsInRustU128:16", align 8
  %6 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:5\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::fitsInRustU128:5", align 8
  %8 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::fitsInRustU128:8\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::fitsInRustU128:8", align 8
  %10 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:11\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::functionRun:11", align 8
  %12 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:16\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Builtins::functionRun:16", align 8
  %14 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::functionRun:22\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Builtins::functionRun:22", align 8
  %16 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::functionRun:5\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"Builtins::functionRun:5", align 8
  %18 = alloca i8, i64 30, align 1
  store [30 x i8] c"Builtins::getArgumentCount:11\00", ptr %18, align 1
  %19 = call ptr @make_candy_text(ptr %18)
  store ptr %19, ptr @"Builtins::getArgumentCount:11", align 8
  %20 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::getArgumentCount:5\00", ptr %20, align 1
  %21 = call ptr @make_candy_text(ptr %20)
  store ptr %21, ptr @"Builtins::getArgumentCount:5", align 8
  %22 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:1\00", ptr %22, align 1
  %23 = call ptr @make_candy_text(ptr %22)
  store ptr %23, ptr @"Builtins::ifElse:1", align 8
  %24 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:11\00", ptr %24, align 1
  %25 = call ptr @make_candy_text(ptr %24)
  store ptr %25, ptr @"Builtins::ifElse:11", align 8
  %26 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:14\00", ptr %26, align 1
  %27 = call ptr @make_candy_text(ptr %26)
  store ptr %27, ptr @"Builtins::ifElse:14", align 8
  %28 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:19\00", ptr %28, align 1
  %29 = call ptr @make_candy_text(ptr %28)
  store ptr %29, ptr @"Builtins::ifElse:19", align 8
  %30 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:25\00", ptr %30, align 1
  %31 = call ptr @make_candy_text(ptr %30)
  store ptr %31, ptr @"Builtins::ifElse:25", align 8
  %32 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:28\00", ptr %32, align 1
  %33 = call ptr @make_candy_text(ptr %32)
  store ptr %33, ptr @"Builtins::ifElse:28", align 8
  %34 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:33\00", ptr %34, align 1
  %35 = call ptr @make_candy_text(ptr %34)
  store ptr %35, ptr @"Builtins::ifElse:33", align 8
  %36 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::ifElse:41\00", ptr %36, align 1
  %37 = call ptr @make_candy_text(ptr %36)
  store ptr %37, ptr @"Builtins::ifElse:41", align 8
  %38 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::ifElse:5\00", ptr %38, align 1
  %39 = call ptr @make_candy_text(ptr %38)
  store ptr %39, ptr @"Builtins::ifElse:5", align 8
  %40 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:11\00", ptr %40, align 1
  %41 = call ptr @make_candy_text(ptr %40)
  store ptr %41, ptr @"Builtins::intAdd:11", align 8
  %42 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::intAdd:18\00", ptr %42, align 1
  %43 = call ptr @make_candy_text(ptr %42)
  store ptr %43, ptr @"Builtins::intAdd:18", align 8
  %44 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::intAdd:5\00", ptr %44, align 1
  %45 = call ptr @make_candy_text(ptr %44)
  store ptr %45, ptr @"Builtins::intAdd:5", align 8
  %46 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intBitwiseAnd:18\00", ptr %46, align 1
  %47 = call ptr @make_candy_text(ptr %46)
  store ptr %47, ptr @"Builtins::intBitwiseAnd:18", align 8
  %48 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intBitwiseAnd:5\00", ptr %48, align 1
  %49 = call ptr @make_candy_text(ptr %48)
  store ptr %49, ptr @"Builtins::intBitwiseAnd:5", align 8
  %50 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:11\00", ptr %50, align 1
  %51 = call ptr @make_candy_text(ptr %50)
  store ptr %51, ptr @"Builtins::intCompareTo:11", align 8
  %52 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intCompareTo:18\00", ptr %52, align 1
  %53 = call ptr @make_candy_text(ptr %52)
  store ptr %53, ptr @"Builtins::intCompareTo:18", align 8
  %54 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intCompareTo:5\00", ptr %54, align 1
  %55 = call ptr @make_candy_text(ptr %54)
  store ptr %55, ptr @"Builtins::intCompareTo:5", align 8
  %56 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:11\00", ptr %56, align 1
  %57 = call ptr @make_candy_text(ptr %56)
  store ptr %57, ptr @"Builtins::intDivideTruncating:11", align 8
  %58 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:17\00", ptr %58, align 1
  %59 = call ptr @make_candy_text(ptr %58)
  store ptr %59, ptr @"Builtins::intDivideTruncating:17", align 8
  %60 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:25\00", ptr %60, align 1
  %61 = call ptr @make_candy_text(ptr %60)
  store ptr %61, ptr @"Builtins::intDivideTruncating:25", align 8
  %62 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::intDivideTruncating:32\00", ptr %62, align 1
  %63 = call ptr @make_candy_text(ptr %62)
  store ptr %63, ptr @"Builtins::intDivideTruncating:32", align 8
  %64 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::intDivideTruncating:5\00", ptr %64, align 1
  %65 = call ptr @make_candy_text(ptr %64)
  store ptr %65, ptr @"Builtins::intDivideTruncating:5", align 8
  %66 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:11\00", ptr %66, align 1
  %67 = call ptr @make_candy_text(ptr %66)
  store ptr %67, ptr @"Builtins::intMultiply:11", align 8
  %68 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intMultiply:18\00", ptr %68, align 1
  %69 = call ptr @make_candy_text(ptr %68)
  store ptr %69, ptr @"Builtins::intMultiply:18", align 8
  %70 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intMultiply:5\00", ptr %70, align 1
  %71 = call ptr @make_candy_text(ptr %70)
  store ptr %71, ptr @"Builtins::intMultiply:5", align 8
  %72 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:11\00", ptr %72, align 1
  %73 = call ptr @make_candy_text(ptr %72)
  store ptr %73, ptr @"Builtins::intShiftRight:11", align 8
  %74 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:14\00", ptr %74, align 1
  %75 = call ptr @make_candy_text(ptr %74)
  store ptr %75, ptr @"Builtins::intShiftRight:14", align 8
  %76 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:23\00", ptr %76, align 1
  %77 = call ptr @make_candy_text(ptr %76)
  store ptr %77, ptr @"Builtins::intShiftRight:23", align 8
  %78 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:24\00", ptr %78, align 1
  %79 = call ptr @make_candy_text(ptr %78)
  store ptr %79, ptr @"Builtins::intShiftRight:24", align 8
  %80 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::intShiftRight:26:0\00", ptr %80, align 1
  %81 = call ptr @make_candy_text(ptr %80)
  store ptr %81, ptr @"Builtins::intShiftRight:26:0", align 8
  %82 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:27\00", ptr %82, align 1
  %83 = call ptr @make_candy_text(ptr %82)
  store ptr %83, ptr @"Builtins::intShiftRight:27", align 8
  %84 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:29\00", ptr %84, align 1
  %85 = call ptr @make_candy_text(ptr %84)
  store ptr %85, ptr @"Builtins::intShiftRight:29", align 8
  %86 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:30\00", ptr %86, align 1
  %87 = call ptr @make_candy_text(ptr %86)
  store ptr %87, ptr @"Builtins::intShiftRight:30", align 8
  %88 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:31\00", ptr %88, align 1
  %89 = call ptr @make_candy_text(ptr %88)
  store ptr %89, ptr @"Builtins::intShiftRight:31", align 8
  %90 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:34\00", ptr %90, align 1
  %91 = call ptr @make_candy_text(ptr %90)
  store ptr %91, ptr @"Builtins::intShiftRight:34", align 8
  %92 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:42\00", ptr %92, align 1
  %93 = call ptr @make_candy_text(ptr %92)
  store ptr %93, ptr @"Builtins::intShiftRight:42", align 8
  %94 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::intShiftRight:49\00", ptr %94, align 1
  %95 = call ptr @make_candy_text(ptr %94)
  store ptr %95, ptr @"Builtins::intShiftRight:49", align 8
  %96 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intShiftRight:5\00", ptr %96, align 1
  %97 = call ptr @make_candy_text(ptr %96)
  store ptr %97, ptr @"Builtins::intShiftRight:5", align 8
  %98 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:11\00", ptr %98, align 1
  %99 = call ptr @make_candy_text(ptr %98)
  store ptr %99, ptr @"Builtins::intSubtract:11", align 8
  %100 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intSubtract:18\00", ptr %100, align 1
  %101 = call ptr @make_candy_text(ptr %100)
  store ptr %101, ptr @"Builtins::intSubtract:18", align 8
  %102 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::intSubtract:5\00", ptr %102, align 1
  %103 = call ptr @make_candy_text(ptr %102)
  store ptr %103, ptr @"Builtins::intSubtract:5", align 8
  %104 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:11\00", ptr %104, align 1
  %105 = call ptr @make_candy_text(ptr %104)
  store ptr %105, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  %106 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:18\00", ptr %106, align 1
  %107 = call ptr @make_candy_text(ptr %106)
  store ptr %107, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  %108 = alloca i8, i64 33, align 1
  store [33 x i8] c"Builtins::isLessThanOrEqualTo:19\00", ptr %108, align 1
  %109 = call ptr @make_candy_text(ptr %108)
  store ptr %109, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  %110 = alloca i8, i64 32, align 1
  store [32 x i8] c"Builtins::isLessThanOrEqualTo:5\00", ptr %110, align 1
  %111 = call ptr @make_candy_text(ptr %110)
  store ptr %111, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  %112 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:12\00", ptr %112, align 1
  %113 = call ptr @make_candy_text(ptr %112)
  store ptr %113, ptr @"Builtins::isNonNegative:12", align 8
  %114 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::isNonNegative:13\00", ptr %114, align 1
  %115 = call ptr @make_candy_text(ptr %114)
  store ptr %115, ptr @"Builtins::isNonNegative:13", align 8
  %116 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::isNonNegative:5\00", ptr %116, align 1
  %117 = call ptr @make_candy_text(ptr %116)
  store ptr %117, ptr @"Builtins::isNonNegative:5", align 8
  %118 = alloca i8, i64 16, align 1
  store [16 x i8] c"Builtins::not:1\00", ptr %118, align 1
  %119 = call ptr @make_candy_text(ptr %118)
  store ptr %119, ptr @"Builtins::not:1", align 8
  %120 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %120, align 1
  %121 = call ptr @make_candy_text(ptr %120)
  store ptr %121, ptr @"Builtins::structGet:12", align 8
  %122 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:14\00", ptr %122, align 1
  %123 = call ptr @make_candy_text(ptr %122)
  store ptr %123, ptr @"Builtins::structGet:14", align 8
  %124 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %124, align 1
  %125 = call ptr @make_candy_text(ptr %124)
  store ptr %125, ptr @"Builtins::structGet:21", align 8
  %126 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %126, align 1
  %127 = call ptr @make_candy_text(ptr %126)
  store ptr %127, ptr @"Builtins::structGet:5", align 8
  %128 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:11\00", ptr %128, align 1
  %129 = call ptr @make_candy_text(ptr %128)
  store ptr %129, ptr @"Builtins::tagGetValue:11", align 8
  %130 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:13\00", ptr %130, align 1
  %131 = call ptr @make_candy_text(ptr %130)
  store ptr %131, ptr @"Builtins::tagGetValue:13", align 8
  %132 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::tagGetValue:19\00", ptr %132, align 1
  %133 = call ptr @make_candy_text(ptr %132)
  store ptr %133, ptr @"Builtins::tagGetValue:19", align 8
  %134 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::tagGetValue:5\00", ptr %134, align 1
  %135 = call ptr @make_candy_text(ptr %134)
  store ptr %135, ptr @"Builtins::tagGetValue:5", align 8
  %136 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::toDebugText:5\00", ptr %136, align 1
  %137 = call ptr @make_candy_text(ptr %136)
  store ptr %137, ptr @"Builtins::toDebugText:5", align 8
  %138 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %138, align 1
  %139 = call ptr @make_candy_text(ptr %138)
  store ptr %139, ptr @"Builtins::typeIs:19", align 8
  %140 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %140, align 1
  %141 = call ptr @make_candy_text(ptr %140)
  store ptr %141, ptr @"Builtins::typeIs:25", align 8
  %142 = alloca i8, i64 19, align 1
  store [19 x i8] c"Builtins::typeOf:5\00", ptr %142, align 1
  %143 = call ptr @make_candy_text(ptr %142)
  store ptr %143, ptr @"Builtins::typeOf:5", align 8
  %144 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:bool:and:13\00", ptr %144, align 1
  %145 = call ptr @make_candy_text(ptr %144)
  store ptr %145, ptr @"Core:bool:and:13", align 8
  %146 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:2\00", ptr %146, align 1
  %147 = call ptr @make_candy_text(ptr %146)
  store ptr %147, ptr @"Core:bool:and:2", align 8
  %148 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:4\00", ptr %148, align 1
  %149 = call ptr @make_candy_text(ptr %148)
  store ptr %149, ptr @"Core:bool:and:4", align 8
  %150 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:7\00", ptr %150, align 1
  %151 = call ptr @make_candy_text(ptr %150)
  store ptr %151, ptr @"Core:bool:and:7", align 8
  %152 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:and:9\00", ptr %152, align 1
  %153 = call ptr @make_candy_text(ptr %152)
  store ptr %153, ptr @"Core:bool:and:9", align 8
  %154 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:is:1\00", ptr %154, align 1
  %155 = call ptr @make_candy_text(ptr %154)
  store ptr %155, ptr @"Core:bool:is:1", align 8
  %156 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:14\00", ptr %156, align 1
  %157 = call ptr @make_candy_text(ptr %156)
  store ptr %157, ptr @"Core:bool:lazyAnd:14", align 8
  %158 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:16\00", ptr %158, align 1
  %159 = call ptr @make_candy_text(ptr %158)
  store ptr %159, ptr @"Core:bool:lazyAnd:16", align 8
  %160 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:bool:lazyAnd:18\00", ptr %160, align 1
  %161 = call ptr @make_candy_text(ptr %160)
  store ptr %161, ptr @"Core:bool:lazyAnd:18", align 8
  %162 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:13\00", ptr %162, align 1
  %163 = call ptr @make_candy_text(ptr %162)
  store ptr %163, ptr @"Core:bool:lazyAnd:18:13", align 8
  %164 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:bool:lazyAnd:18:21\00", ptr %164, align 1
  %165 = call ptr @make_candy_text(ptr %164)
  store ptr %165, ptr @"Core:bool:lazyAnd:18:21", align 8
  %166 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyAnd:18:9\00", ptr %166, align 1
  %167 = call ptr @make_candy_text(ptr %166)
  store ptr %167, ptr @"Core:bool:lazyAnd:18:9", align 8
  %168 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:2\00", ptr %168, align 1
  %169 = call ptr @make_candy_text(ptr %168)
  store ptr %169, ptr @"Core:bool:lazyAnd:2", align 8
  %170 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyAnd:4\00", ptr %170, align 1
  %171 = call ptr @make_candy_text(ptr %170)
  store ptr %171, ptr @"Core:bool:lazyAnd:4", align 8
  %172 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:14\00", ptr %172, align 1
  %173 = call ptr @make_candy_text(ptr %172)
  store ptr %173, ptr @"Core:bool:lazyOr:14", align 8
  %174 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:16\00", ptr %174, align 1
  %175 = call ptr @make_candy_text(ptr %174)
  store ptr %175, ptr @"Core:bool:lazyOr:16", align 8
  %176 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:bool:lazyOr:18\00", ptr %176, align 1
  %177 = call ptr @make_candy_text(ptr %176)
  store ptr %177, ptr @"Core:bool:lazyOr:18", align 8
  %178 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:10\00", ptr %178, align 1
  %179 = call ptr @make_candy_text(ptr %178)
  store ptr %179, ptr @"Core:bool:lazyOr:18:10", align 8
  %180 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:14\00", ptr %180, align 1
  %181 = call ptr @make_candy_text(ptr %180)
  store ptr %181, ptr @"Core:bool:lazyOr:18:14", align 8
  %182 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:bool:lazyOr:18:22\00", ptr %182, align 1
  %183 = call ptr @make_candy_text(ptr %182)
  store ptr %183, ptr @"Core:bool:lazyOr:18:22", align 8
  %184 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:2\00", ptr %184, align 1
  %185 = call ptr @make_candy_text(ptr %184)
  store ptr %185, ptr @"Core:bool:lazyOr:2", align 8
  %186 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:bool:lazyOr:4\00", ptr %186, align 1
  %187 = call ptr @make_candy_text(ptr %186)
  store ptr %187, ptr @"Core:bool:lazyOr:4", align 8
  %188 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:2\00", ptr %188, align 1
  %189 = call ptr @make_candy_text(ptr %188)
  store ptr %189, ptr @"Core:bool:not:2", align 8
  %190 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:4\00", ptr %190, align 1
  %191 = call ptr @make_candy_text(ptr %190)
  store ptr %191, ptr @"Core:bool:not:4", align 8
  %192 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:not:6\00", ptr %192, align 1
  %193 = call ptr @make_candy_text(ptr %192)
  store ptr %193, ptr @"Core:bool:not:6", align 8
  %194 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:bool:or:13\00", ptr %194, align 1
  %195 = call ptr @make_candy_text(ptr %194)
  store ptr %195, ptr @"Core:bool:or:13", align 8
  %196 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:2\00", ptr %196, align 1
  %197 = call ptr @make_candy_text(ptr %196)
  store ptr %197, ptr @"Core:bool:or:2", align 8
  %198 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:4\00", ptr %198, align 1
  %199 = call ptr @make_candy_text(ptr %198)
  store ptr %199, ptr @"Core:bool:or:4", align 8
  %200 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:7\00", ptr %200, align 1
  %201 = call ptr @make_candy_text(ptr %200)
  store ptr %201, ptr @"Core:bool:or:7", align 8
  %202 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:bool:or:9\00", ptr %202, align 1
  %203 = call ptr @make_candy_text(ptr %202)
  store ptr %203, ptr @"Core:bool:or:9", align 8
  %204 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:12\00", ptr %204, align 1
  %205 = call ptr @make_candy_text(ptr %204)
  store ptr %205, ptr @"Core:check:checkEquals:12", align 8
  %206 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:13\00", ptr %206, align 1
  %207 = call ptr @make_candy_text(ptr %206)
  store ptr %207, ptr @"Core:check:checkEquals:13", align 8
  %208 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:check:checkEquals:15:0\00", ptr %208, align 1
  %209 = call ptr @make_candy_text(ptr %208)
  store ptr %209, ptr @"Core:check:checkEquals:15:0", align 8
  %210 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:16\00", ptr %210, align 1
  %211 = call ptr @make_candy_text(ptr %210)
  store ptr %211, ptr @"Core:check:checkEquals:16", align 8
  %212 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:19\00", ptr %212, align 1
  %213 = call ptr @make_candy_text(ptr %212)
  store ptr %213, ptr @"Core:check:checkEquals:19", align 8
  %214 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:20\00", ptr %214, align 1
  %215 = call ptr @make_candy_text(ptr %214)
  store ptr %215, ptr @"Core:check:checkEquals:20", align 8
  %216 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:check:checkEquals:22:0\00", ptr %216, align 1
  %217 = call ptr @make_candy_text(ptr %216)
  store ptr %217, ptr @"Core:check:checkEquals:22:0", align 8
  %218 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:23\00", ptr %218, align 1
  %219 = call ptr @make_candy_text(ptr %218)
  store ptr %219, ptr @"Core:check:checkEquals:23", align 8
  %220 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:25\00", ptr %220, align 1
  %221 = call ptr @make_candy_text(ptr %220)
  store ptr %221, ptr @"Core:check:checkEquals:25", align 8
  %222 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:26\00", ptr %222, align 1
  %223 = call ptr @make_candy_text(ptr %222)
  store ptr %223, ptr @"Core:check:checkEquals:26", align 8
  %224 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:27\00", ptr %224, align 1
  %225 = call ptr @make_candy_text(ptr %224)
  store ptr %225, ptr @"Core:check:checkEquals:27", align 8
  %226 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:28\00", ptr %226, align 1
  %227 = call ptr @make_candy_text(ptr %226)
  store ptr %227, ptr @"Core:check:checkEquals:28", align 8
  %228 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:check:checkEquals:29\00", ptr %228, align 1
  %229 = call ptr @make_candy_text(ptr %228)
  store ptr %229, ptr @"Core:check:checkEquals:29", align 8
  %230 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:11\00", ptr %230, align 1
  %231 = call ptr @make_candy_text(ptr %230)
  store ptr %231, ptr @"Core:controlFlow:if:11", align 8
  %232 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:21\00", ptr %232, align 1
  %233 = call ptr @make_candy_text(ptr %232)
  store ptr %233, ptr @"Core:controlFlow:if:21", align 8
  %234 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:23\00", ptr %234, align 1
  %235 = call ptr @make_candy_text(ptr %234)
  store ptr %235, ptr @"Core:controlFlow:if:23", align 8
  %236 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:controlFlow:if:28\00", ptr %236, align 1
  %237 = call ptr @make_candy_text(ptr %236)
  store ptr %237, ptr @"Core:controlFlow:if:28", align 8
  %238 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:controlFlow:if:9\00", ptr %238, align 1
  %239 = call ptr @make_candy_text(ptr %238)
  store ptr %239, ptr @"Core:controlFlow:if:9", align 8
  %240 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:17\00", ptr %240, align 1
  %241 = call ptr @make_candy_text(ptr %240)
  store ptr %241, ptr @"Core:controlFlow:recursive:17", align 8
  %242 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:controlFlow:recursive:18:0:3\00", ptr %242, align 1
  %243 = call ptr @make_candy_text(ptr %242)
  store ptr %243, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  %244 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:controlFlow:recursive:18:5\00", ptr %244, align 1
  %245 = call ptr @make_candy_text(ptr %244)
  store ptr %245, ptr @"Core:controlFlow:recursive:18:5", align 8
  %246 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:controlFlow:recursive:23\00", ptr %246, align 1
  %247 = call ptr @make_candy_text(ptr %246)
  store ptr %247, ptr @"Core:controlFlow:recursive:23", align 8
  %248 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:controlFlow:recursive:9\00", ptr %248, align 1
  %249 = call ptr @make_candy_text(ptr %248)
  store ptr %249, ptr @"Core:controlFlow:recursive:9", align 8
  %250 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:fromInt:11\00", ptr %250, align 1
  %251 = call ptr @make_candy_text(ptr %250)
  store ptr %251, ptr @"Core:fixedDecimal:fromInt:11", align 8
  %252 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:fromInt:15\00", ptr %252, align 1
  %253 = call ptr @make_candy_text(ptr %252)
  store ptr %253, ptr @"Core:fixedDecimal:fromInt:15", align 8
  %254 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:fromIntScaled:11\00", ptr %254, align 1
  %255 = call ptr @make_candy_text(ptr %254)
  store ptr %255, ptr @"Core:fixedDecimal:fromIntScaled:11", align 8
  %256 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:fixedDecimal:fromIntScaled:16\00", ptr %256, align 1
  %257 = call ptr @make_candy_text(ptr %256)
  store ptr %257, ptr @"Core:fixedDecimal:fromIntScaled:16", align 8
  %258 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:fixedDecimal:is:1\00", ptr %258, align 1
  %259 = call ptr @make_candy_text(ptr %258)
  store ptr %259, ptr @"Core:fixedDecimal:is:1", align 8
  %260 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:is:1:19\00", ptr %260, align 1
  %261 = call ptr @make_candy_text(ptr %260)
  store ptr %261, ptr @"Core:fixedDecimal:is:1:19", align 8
  %262 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:is:1:minorUnits\00", ptr %262, align 1
  %263 = call ptr @make_candy_text(ptr %262)
  store ptr %263, ptr @"Core:fixedDecimal:is:1:minorUnits", align 8
  %264 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:is:1:scale\00", ptr %264, align 1
  %265 = call ptr @make_candy_text(ptr %264)
  store ptr %265, ptr @"Core:fixedDecimal:is:1:scale", align 8
  %266 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isScale:18:9\00", ptr %266, align 1
  %267 = call ptr @make_candy_text(ptr %266)
  store ptr %267, ptr @"Core:fixedDecimal:isScale:18:9", align 8
  %268 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:isScale:19\00", ptr %268, align 1
  %269 = call ptr @make_candy_text(ptr %268)
  store ptr %269, ptr @"Core:fixedDecimal:isScale:19", align 8
  %270 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:minorUnits:19\00", ptr %270, align 1
  %271 = call ptr @make_candy_text(ptr %270)
  store ptr %271, ptr @"Core:fixedDecimal:minorUnits:19", align 8
  %272 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:minorUnits:2\00", ptr %272, align 1
  %273 = call ptr @make_candy_text(ptr %272)
  store ptr %273, ptr @"Core:fixedDecimal:minorUnits:2", align 8
  %274 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:minorUnits:21\00", ptr %274, align 1
  %275 = call ptr @make_candy_text(ptr %274)
  store ptr %275, ptr @"Core:fixedDecimal:minorUnits:21", align 8
  %276 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:minorUnits:4\00", ptr %276, align 1
  %277 = call ptr @make_candy_text(ptr %276)
  store ptr %277, ptr @"Core:fixedDecimal:minorUnits:4", align 8
  %278 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:scale:19\00", ptr %278, align 1
  %279 = call ptr @make_candy_text(ptr %278)
  store ptr %279, ptr @"Core:fixedDecimal:scale:19", align 8
  %280 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:scale:2\00", ptr %280, align 1
  %281 = call ptr @make_candy_text(ptr %280)
  store ptr %281, ptr @"Core:fixedDecimal:scale:2", align 8
  %282 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:scale:21\00", ptr %282, align 1
  %283 = call ptr @make_candy_text(ptr %282)
  store ptr %283, ptr @"Core:fixedDecimal:scale:21", align 8
  %284 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:fixedDecimal:scale:4\00", ptr %284, align 1
  %285 = call ptr @make_candy_text(ptr %284)
  store ptr %285, ptr @"Core:fixedDecimal:scale:4", align 8
  %286 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:fixedDecimal:scaleFactor:15\00", ptr %286, align 1
  %287 = call ptr @make_candy_text(ptr %286)
  store ptr %287, ptr @"Core:fixedDecimal:scaleFactor:15", align 8
  %288 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:scaleFactor:4\00", ptr %288, align 1
  %289 = call ptr @make_candy_text(ptr %288)
  store ptr %289, ptr @"Core:fixedDecimal:scaleFactor:4", align 8
  %290 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is0:11:3\00", ptr %290, align 1
  %291 = call ptr @make_candy_text(ptr %290)
  store ptr %291, ptr @"Core:function:is0:11:3", align 8
  %292 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is0:13\00", ptr %292, align 1
  %293 = call ptr @make_candy_text(ptr %292)
  store ptr %293, ptr @"Core:function:is0:13", align 8
  %294 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is2:11:3\00", ptr %294, align 1
  %295 = call ptr @make_candy_text(ptr %294)
  store ptr %295, ptr @"Core:function:is2:11:3", align 8
  %296 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is2:13\00", ptr %296, align 1
  %297 = call ptr @make_candy_text(ptr %296)
  store ptr %297, ptr @"Core:function:is2:13", align 8
  %298 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:run:14\00", ptr %298, align 1
  %299 = call ptr @make_candy_text(ptr %298)
  store ptr %299, ptr @"Core:function:run:14", align 8
  %300 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:2\00", ptr %300, align 1
  %301 = call ptr @make_candy_text(ptr %300)
  store ptr %301, ptr @"Core:function:run:2", align 8
  %302 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:function:run:4\00", ptr %302, align 1
  %303 = call ptr @make_candy_text(ptr %302)
  store ptr %303, ptr @"Core:function:run:4", align 8
  %304 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:compareTo:20\00", ptr %304, align 1
  %305 = call ptr @make_candy_text(ptr %304)
  store ptr %305, ptr @"Core:int:compareTo:20", align 8
  %306 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:4\00", ptr %306, align 1
  %307 = call ptr @make_candy_text(ptr %306)
  store ptr %307, ptr @"Core:int:compareTo:4", align 8
  %308 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:compareTo:9\00", ptr %308, align 1
  %309 = call ptr @make_candy_text(ptr %308)
  store ptr %309, ptr @"Core:int:compareTo:9", align 8
  %310 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isEven:4\00", ptr %310, align 1
  %311 = call ptr @make_candy_text(ptr %310)
  store ptr %311, ptr @"Core:int:isEven:4", align 8
  %312 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:isEven:8\00", ptr %312, align 1
  %313 = call ptr @make_candy_text(ptr %312)
  store ptr %313, ptr @"Core:int:isEven:8", align 8
  %314 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isGreaterThan:13\00", ptr %314, align 1
  %315 = call ptr @make_candy_text(ptr %314)
  store ptr %315, ptr @"Core:int:isGreaterThan:13", align 8
  %316 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:4\00", ptr %316, align 1
  %317 = call ptr @make_candy_text(ptr %316)
  store ptr %317, ptr @"Core:int:isGreaterThan:4", align 8
  %318 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isGreaterThan:9\00", ptr %318, align 1
  %319 = call ptr @make_candy_text(ptr %318)
  store ptr %319, ptr @"Core:int:isGreaterThan:9", align 8
  %320 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:13\00", ptr %320, align 1
  %321 = call ptr @make_candy_text(ptr %320)
  store ptr %321, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  %322 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:int:isGreaterThanOrEqualTo:22\00", ptr %322, align 1
  %323 = call ptr @make_candy_text(ptr %322)
  store ptr %323, ptr @"Core:int:isGreaterThanOrEqualTo:22", align 8
  %324 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:int:isGreaterThanOrEqualTo:4\00", ptr %324, align 1
  %325 = call ptr @make_candy_text(ptr %324)
  store ptr %325, ptr @"Core:int:isGreaterThanOrEqualTo:4", align 8
  %326 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:int:isGreaterThanOrEqualTo:9\00", ptr %326, align 1
  %327 = call ptr @make_candy_text(ptr %326)
  store ptr %327, ptr @"Core:int:isGreaterThanOrEqualTo:9", align 8
  %328 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:isLessThan:13\00", ptr %328, align 1
  %329 = call ptr @make_candy_text(ptr %328)
  store ptr %329, ptr @"Core:int:isLessThan:13", align 8
  %330 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:4\00", ptr %330, align 1
  %331 = call ptr @make_candy_text(ptr %330)
  store ptr %331, ptr @"Core:int:isLessThan:4", align 8
  %332 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isLessThan:9\00", ptr %332, align 1
  %333 = call ptr @make_candy_text(ptr %332)
  store ptr %333, ptr @"Core:int:isLessThan:9", align 8
  %334 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:4\00", ptr %334, align 1
  %335 = call ptr @make_candy_text(ptr %334)
  store ptr %335, ptr @"Core:int:isNegative:4", align 8
  %336 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isNegative:8\00", ptr %336, align 1
  %337 = call ptr @make_candy_text(ptr %336)
  store ptr %337, ptr @"Core:int:isNegative:8", align 8
  %338 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:isNonNegative:16\00", ptr %338, align 1
  %339 = call ptr @make_candy_text(ptr %338)
  store ptr %339, ptr @"Core:int:isNonNegative:16", align 8
  %340 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:4\00", ptr %340, align 1
  %341 = call ptr @make_candy_text(ptr %340)
  store ptr %341, ptr @"Core:int:isNonNegative:4", align 8
  %342 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:isNonNegative:7\00", ptr %342, align 1
  %343 = call ptr @make_candy_text(ptr %342)
  store ptr %343, ptr @"Core:int:isNonNegative:7", align 8
  %344 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:max:14\00", ptr %344, align 1
  %345 = call ptr @make_candy_text(ptr %344)
  store ptr %345, ptr @"Core:int:max:14", align 8
  %346 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:max:17\00", ptr %346, align 1
  %347 = call ptr @make_candy_text(ptr %346)
  store ptr %347, ptr @"Core:int:max:17", align 8
  %348 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:max:4\00", ptr %348, align 1
  %349 = call ptr @make_candy_text(ptr %348)
  store ptr %349, ptr @"Core:int:max:4", align 8
  %350 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:max:9\00", ptr %350, align 1
  %351 = call ptr @make_candy_text(ptr %350)
  store ptr %351, ptr @"Core:int:max:9", align 8
  %352 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:12\00", ptr %352, align 1
  %353 = call ptr @make_candy_text(ptr %352)
  store ptr %353, ptr @"Core:int:pow:12", align 8
  %354 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:14\00", ptr %354, align 1
  %355 = call ptr @make_candy_text(ptr %354)
  store ptr %355, ptr @"Core:int:pow:14", align 8
  %356 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:pow:21:1\00", ptr %356, align 1
  %357 = call ptr @make_candy_text(ptr %356)
  store ptr %357, ptr @"Core:int:pow:21:1", align 8
  %358 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:int:pow:21:4\00", ptr %358, align 1
  %359 = call ptr @make_candy_text(ptr %358)
  store ptr %359, ptr @"Core:int:pow:21:4", align 8
  %360 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:pow:21:4:4\00", ptr %360, align 1
  %361 = call ptr @make_candy_text(ptr %360)
  store ptr %361, ptr @"Core:int:pow:21:4:4", align 8
  %362 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:5:10\00", ptr %362, align 1
  %363 = call ptr @make_candy_text(ptr %362)
  store ptr %363, ptr @"Core:int:pow:21:4:5:10", align 8
  %364 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:5:12\00", ptr %364, align 1
  %365 = call ptr @make_candy_text(ptr %364)
  store ptr %365, ptr @"Core:int:pow:21:4:5:12", align 8
  %366 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:pow:21:4:5:5\00", ptr %366, align 1
  %367 = call ptr @make_candy_text(ptr %366)
  store ptr %367, ptr @"Core:int:pow:21:4:5:5", align 8
  %368 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:12\00", ptr %368, align 1
  %369 = call ptr @make_candy_text(ptr %368)
  store ptr %369, ptr @"Core:int:pow:21:4:6:12", align 8
  %370 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:15\00", ptr %370, align 1
  %371 = call ptr @make_candy_text(ptr %370)
  store ptr %371, ptr @"Core:int:pow:21:4:6:15", align 8
  %372 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:17\00", ptr %372, align 1
  %373 = call ptr @make_candy_text(ptr %372)
  store ptr %373, ptr @"Core:int:pow:21:4:6:17", align 8
  %374 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:int:pow:21:4:6:18\00", ptr %374, align 1
  %375 = call ptr @make_candy_text(ptr %374)
  store ptr %375, ptr @"Core:int:pow:21:4:6:18", align 8
  %376 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:pow:21:4:6:7\00", ptr %376, align 1
  %377 = call ptr @make_candy_text(ptr %376)
  store ptr %377, ptr @"Core:int:pow:21:4:6:7", align 8
  %378 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:int:pow:21:4:7\00", ptr %378, align 1
  %379 = call ptr @make_candy_text(ptr %378)
  store ptr %379, ptr @"Core:int:pow:21:4:7", align 8
  %380 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:int:pow:21:base\00", ptr %380, align 1
  %381 = call ptr @make_candy_text(ptr %380)
  store ptr %381, ptr @"Core:int:pow:21:base", align 8
  %382 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:pow:21:exponent\00", ptr %382, align 1
  %383 = call ptr @make_candy_text(ptr %382)
  store ptr %383, ptr @"Core:int:pow:21:exponent", align 8
  %384 = alloca i8, i64 16, align 1
  store [16 x i8] c"Core:int:pow:22\00", ptr %384, align 1
  %385 = call ptr @make_candy_text(ptr %384)
  store ptr %385, ptr @"Core:int:pow:22", align 8
  %386 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:pow:4\00", ptr %386, align 1
  %387 = call ptr @make_candy_text(ptr %386)
  store ptr %387, ptr @"Core:int:pow:4", align 8
  %388 = alloca i8, i64 15, align 1
  store [15 x i8] c"Core:int:pow:9\00", ptr %388, align 1
  %389 = call ptr @make_candy_text(ptr %388)
  store ptr %389, ptr @"Core:int:pow:9", align 8
  %390 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %390, align 1
  %391 = call ptr @make_candy_text(ptr %390)
  store ptr %391, ptr @"anonymous:$generated::needs", align 8
  %392 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %392, ptr @fun_candy_builtin_equals, align 8
  %393 = call ptr @make_candy_function(ptr @candy_builtin_get_argument_count, ptr null, i64 0)
  store ptr %393, ptr @fun_candy_builtin_get_argument_count, align 8
  %394 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %394, ptr @fun_candy_builtin_if_else, align 8
  %395 = call ptr @make_candy_function(ptr @candy_builtin_int_add, ptr null, i64 0)
  store ptr %395, ptr @fun_candy_builtin_int_add, align 8
  %396 = call ptr @make_candy_function(ptr @candy_builtin_int_bitwise_and, ptr null, i64 0)
  store ptr %396, ptr @fun_candy_builtin_int_bitwise_and, align 8
  %397 = call ptr @make_candy_function(ptr @candy_builtin_int_compare_to, ptr null, i64 0)
  store ptr %397, ptr @fun_candy_builtin_int_compare_to, align 8
  %398 = call ptr @make_candy_function(ptr @candy_builtin_int_divide_truncating, ptr null, i64 0)
  store ptr %398, ptr @fun_candy_builtin_int_divide_truncating, align 8
  %399 = call ptr @make_candy_function(ptr @candy_builtin_int_multiply, ptr null, i64 0)
  store ptr %399, ptr @fun_candy_builtin_int_multiply, align 8
  %400 = call ptr @make_candy_function(ptr @candy_builtin_int_shift_right, ptr null, i64 0)
  store ptr %400, ptr @fun_candy_builtin_int_shift_right, align 8
  %401 = call ptr @make_candy_function(ptr @candy_builtin_int_subtract, ptr null, i64 0)
  store ptr %401, ptr @fun_candy_builtin_int_subtract, align 8
  %402 = call ptr @make_candy_function(ptr @candy_builtin_list_get, ptr null, i64 0)
  store ptr %402, ptr @fun_candy_builtin_list_get, align 8
  %403 = call ptr @make_candy_function(ptr @candy_builtin_struct_get, ptr null, i64 0)
  store ptr %403, ptr @fun_candy_builtin_struct_get, align 8
  %404 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %404, ptr @fun_candy_builtin_struct_has_key, align 8
  %405 = call ptr @make_candy_function(ptr @candy_builtin_tag_get_value, ptr null, i64 0)
  store ptr %405, ptr @fun_candy_builtin_tag_get_value, align 8
  %406 = call ptr @make_candy_function(ptr @candy_builtin_tag_has_value, ptr null, i64 0)
  store ptr %406, ptr @fun_candy_builtin_tag_has_value, align 8
  %407 = call ptr @make_candy_function(ptr @candy_builtin_tag_without_value, ptr null, i64 0)
  store ptr %407, ptr @fun_candy_builtin_tag_without_value, align 8
  %408 = call ptr @make_candy_function(ptr @candy_builtin_text_concatenate, ptr null, i64 0)
  store ptr %408, ptr @fun_candy_builtin_text_concatenate, align 8
  %409 = call ptr @make_candy_function(ptr @candy_builtin_to_debug_text, ptr null, i64 0)
  store ptr %409, ptr @fun_candy_builtin_to_debug_text, align 8
  %410 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %410, ptr @fun_candy_builtin_type_of, align 8
  %411 = alloca i8, i64 5, align 1
  store [5 x i8] c"Base\00", ptr %411, align 1
  %412 = call ptr @make_candy_tag(ptr %411, ptr null)
  store ptr %412, ptr @tag_Base, align 8
  %413 = alloca i8, i64 6, align 1
  store [6 x i8] c"Equal\00", ptr %413, align 1
  %414 = call ptr @make_candy_tag(ptr %413, ptr null)
  store ptr %414, ptr @tag_Equal, align 8
  %415 = alloca i8, i64 9, align 1
  store [9 x i8] c"Exponent\00", ptr %415, align 1
  %416 = call ptr @make_candy_tag(ptr %415, ptr null)
  store ptr %416, ptr @tag_Exponent, align 8
  %417 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %417, align 1
  %418 = call ptr @make_candy_tag(ptr %417, ptr null)
  store ptr %418, ptr @tag_False, align 8
  %419 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %419, align 1
  %420 = call ptr @make_candy_tag(ptr %419, ptr null)
  store ptr %420, ptr @tag_FixedDecimal, align 8
  %421 = alloca i8, i64 9, align 1
  store [9 x i8] c"Function\00", ptr %421, align 1
  %422 = call ptr @make_candy_tag(ptr %421, ptr null)
  store ptr %422, ptr @tag_Function, align 8
  %423 = alloca i8, i64 8, align 1
  store [8 x i8] c"Greater\00", ptr %423, align 1
  %424 = call ptr @make_candy_tag(ptr %423, ptr null)
  store ptr %424, ptr @tag_Greater, align 8
  %425 = alloca i8, i64 4, align 1
  store [4 x i8] c"Int\00", ptr %425, align 1
  %426 = call ptr @make_candy_tag(ptr %425, ptr null)
  store ptr %426, ptr @tag_Int, align 8
  %427 = alloca i8, i64 5, align 1
  store [5 x i8] c"Less\00", ptr %427, align 1
  %428 = call ptr @make_candy_tag(ptr %427, ptr null)
  store ptr %428, ptr @tag_Less, align 8
  %429 = alloca i8, i64 6, align 1
  store [6 x i8] c"Match\00", ptr %429, align 1
  %430 = call ptr @make_candy_tag(ptr %429, ptr null)
  store ptr %430, ptr @tag_Match, align 8
  %431 = alloca i8, i64 11, align 1
  store [11 x i8] c"MinorUnits\00", ptr %431, align 1
  %432 = call ptr @make_candy_tag(ptr %431, ptr null)
  store ptr %432, ptr @tag_MinorUnits, align 8
  %433 = alloca i8, i64 8, align 1
  store [8 x i8] c"NoMatch\00", ptr %433, align 1
  %434 = call ptr @make_candy_tag(ptr %433, ptr null)
  store ptr %434, ptr @tag_NoMatch, align 8
  %435 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %435, align 1
  %436 = call ptr @make_candy_tag(ptr %435, ptr null)
  store ptr %436, ptr @tag_Nothing, align 8
  %437 = alloca i8, i64 6, align 1
  store [6 x i8] c"Scale\00", ptr %437, align 1
  %438 = call ptr @make_candy_tag(ptr %437, ptr null)
  store ptr %438, ptr @tag_Scale, align 8
  %439 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %439, align 1
  %440 = call ptr @make_candy_tag(ptr %439, ptr null)
  store ptr %440, ptr @tag_Struct, align 8
  %441 = alloca i8, i64 4, align 1
  store [4 x i8] c"Tag\00", ptr %441, align 1
  %442 = call ptr @make_candy_tag(ptr %441, ptr null)
  store ptr %442, ptr @tag_Tag, align 8
  %443 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %443, align 1
  %444 = call ptr @make_candy_tag(ptr %443, ptr null)
  store ptr %444, ptr @tag_Text, align 8
  %445 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %445, align 1
  %446 = call ptr @make_candy_tag(ptr %445, ptr null)
  store ptr %446, ptr @tag_True, align 8
  %447 = call ptr @make_candy_int(i64 0)
  store ptr %447, ptr @num_0, align 8
  %448 = call ptr @make_candy_int(i64 1)
  store ptr %448, ptr @num_1, align 8
  %449 = call ptr @make_candy_int(i64 2)
  store ptr %449, ptr @num_2, align 8
  %450 = call ptr @make_candy_int(i64 3)
  store ptr %450, ptr @num_3, align 8
  %451 = call ptr @make_candy_int(i64 4)
  store ptr %451, ptr @num_4, align 8
  %452 = call ptr @make_candy_int(i64 5)
  store ptr %452, ptr @num_5, align 8
  %453 = call ptr @make_candy_int(i64 10)
  store ptr %453, ptr @num_10, align 8
  %454 = call ptr @make_candy_int(i64 -1)
  store ptr %454, ptr @num_340282366920938463463374607431768211455, align 8
  %455 = alloca i8, i64 8, align 1
  store [8 x i8] c" to be \00", ptr %455, align 1
  %456 = call ptr @make_candy_text(ptr %455)
  store ptr %456, ptr @"text_ to be ", align 8
  %457 = alloca i8, i64 2, align 1
  store [2 x i8] c".\00", ptr %457, align 1
  %458 = call ptr @make_candy_text(ptr %457)
  store ptr %458, ptr @text_., align 8
  %459 = alloca i8, i64 46, align 1
  store [46 x i8] c". You might want to call `shiftLeft` instead.\00", ptr %459, align 1
  %460 = call ptr @make_candy_text(ptr %459)
  store ptr %460, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %461 = alloca i8, i64 26, align 1
  store [26 x i8] c"A check failed: Expected \00", ptr %461, align 1
  %462 = call ptr @make_candy_text(ptr %461)
  store ptr %462, ptr @"text_A check failed: Expected ", align 8
  %463 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Equal, got \00", ptr %463, align 1
  %464 = call ptr @make_candy_text(ptr %463)
  store ptr %464, ptr @"text_Expected Equal, got ", align 8
  %465 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected False, got \00", ptr %465, align 1
  %466 = call ptr @make_candy_text(ptr %465)
  store ptr %466, ptr @"text_Expected False, got ", align 8
  %467 = alloca i8, i64 28, align 1
  store [28 x i8] c"Expected FixedDecimal, got \00", ptr %467, align 1
  %468 = call ptr @make_candy_text(ptr %467)
  store ptr %468, ptr @"text_Expected FixedDecimal, got ", align 8
  %469 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected Greater, got \00", ptr %469, align 1
  %470 = call ptr @make_candy_text(ptr %469)
  store ptr %470, ptr @"text_Expected Greater, got ", align 8
  %471 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected Less, got \00", ptr %471, align 1
  %472 = call ptr @make_candy_text(ptr %471)
  store ptr %472, ptr @"text_Expected Less, got ", align 8
  %473 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected True, got \00", ptr %473, align 1
  %474 = call ptr @make_candy_text(ptr %473)
  store ptr %474, ptr @"text_Expected True, got ", align 8
  %475 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected `0`, got `\00", ptr %475, align 1
  %476 = call ptr @make_candy_text(ptr %475)
  store ptr %476, ptr @"text_Expected `0`, got `", align 8
  %477 = alloca i8, i64 25, align 1
  store [25 x i8] c"Expected a Struct, got `\00", ptr %477, align 1
  %478 = call ptr @make_candy_text(ptr %477)
  store ptr %478, ptr @"text_Expected a Struct, got `", align 8
  %479 = alloca i8, i64 22, align 1
  store [22 x i8] c"Expected a Tag, got `\00", ptr %479, align 1
  %480 = call ptr @make_candy_text(ptr %479)
  store ptr %480, ptr @"text_Expected a Tag, got `", align 8
  %481 = alloca i8, i64 55, align 1
  store [55 x i8] c"Expected tag to have a value, but it doesn't have any.\00", ptr %481, align 1
  %482 = call ptr @make_candy_text(ptr %481)
  store ptr %482, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %483 = alloca i8, i64 52, align 1
  store [52 x i8] c"Expected tag to not have a value, but it has one: `\00", ptr %483, align 1
  %484 = call ptr @make_candy_text(ptr %483)
  store ptr %484, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %485 = alloca i8, i64 38, align 1
  store [38 x i8] c"No case matched the given expression.\00", ptr %485, align 1
  %486 = call ptr @make_candy_text(ptr %485)
  store ptr %486, ptr @"text_No case matched the given expression.", align 8
  %487 = alloca i8, i64 43, align 1
  store [43 x i8] c"Shifts by that much are not yet supported.\00", ptr %487, align 1
  %488 = call ptr @make_candy_text(ptr %487)
  store ptr %488, ptr @"text_Shifts by that much are not yet supported.", align 8
  %489 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Base`: `\00", ptr %489, align 1
  %490 = call ptr @make_candy_text(ptr %489)
  store ptr %490, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %491 = alloca i8, i64 41, align 1
  store [41 x i8] c"Struct doesn't contain key `Exponent`: `\00", ptr %491, align 1
  %492 = call ptr @make_candy_text(ptr %491)
  store ptr %492, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %493 = alloca i8, i64 43, align 1
  store [43 x i8] c"Struct doesn't contain key `MinorUnits`: `\00", ptr %493, align 1
  %494 = call ptr @make_candy_text(ptr %493)
  store ptr %494, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %495 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Scale`: `\00", ptr %495, align 1
  %496 = call ptr @make_candy_text(ptr %495)
  store ptr %496, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %497 = alloca i8, i64 64, align 1
  store [64 x i8] c"The `body` should take the recursive function and the argument.\00", ptr %497, align 1
  %498 = call ptr @make_candy_text(ptr %497)
  store ptr %498, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %499 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %499, align 1
  %500 = call ptr @make_candy_text(ptr %499)
  store ptr %500, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %501 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %501, align 1
  %502 = call ptr @make_candy_text(ptr %501)
  store ptr %502, ptr @"text_The `reason` must be a text.", align 8
  %503 = alloca i8, i64 33, align 1
  store [33 x i8] c"The shift `amount` is negative: \00", ptr %503, align 1
  %504 = call ptr @make_candy_text(ptr %503)
  store ptr %504, ptr @"text_The shift `amount` is negative: ", align 8
  %505 = alloca i8, i64 26, align 1
  store [26 x i8] c"You can't divide by zero.\00", ptr %505, align 1
  %506 = call ptr @make_candy_text(ptr %505)
  store ptr %506, ptr @"text_You can't divide by zero.", align 8
  %507 = alloca i8, i64 3, align 1
  store [3 x i8] c"`.\00", ptr %507, align 1
  %508 = call ptr @make_candy_text(ptr %507)
  store ptr %508, ptr @"text_`.", align 8
  %509 = alloca i8, i64 26, align 1
  store [26 x i8] c"`False` was not satisfied\00", ptr %509, align 1
  %510 = call ptr @make_candy_text(ptr %509)
  store ptr %510, ptr @"text_`False` was not satisfied", align 8
  %511 = alloca i8, i64 35, align 1
  store [35 x i8] c"`a | typeIs Int` was not satisfied\00", ptr %511, align 1
  %512 = call ptr @make_candy_text(ptr %511)
  store ptr %512, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %513 = alloca i8, i64 40, align 1
  store [40 x i8] c"`amount | typeIs Int` was not satisfied\00", ptr %513, align 1
  %514 = call ptr @make_candy_text(ptr %513)
  store ptr %514, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %515 = alloca i8, i64 35, align 1
  store [35 x i8] c"`b | typeIs Int` was not satisfied\00", ptr %515, align 1
  %516 = call ptr @make_candy_text(ptr %515)
  store ptr %516, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %517 = alloca i8, i64 26, align 1
  store [26 x i8] c"`b` didn't return a bool.\00", ptr %517, align 1
  %518 = call ptr @make_candy_text(ptr %517)
  store ptr %518, ptr @"text_`b` didn't return a bool.", align 8
  %519 = alloca i8, i64 38, align 1
  store [38 x i8] c"`bool.is condition` was not satisfied\00", ptr %519, align 1
  %520 = call ptr @make_candy_text(ptr %519)
  store ptr %520, ptr @"text_`bool.is condition` was not satisfied", align 8
  %521 = alloca i8, i64 36, align 1
  store [36 x i8] c"`conditionIsBool` was not satisfied\00", ptr %521, align 1
  %522 = call ptr @make_candy_text(ptr %521)
  store ptr %522, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %523 = alloca i8, i64 42, align 1
  store [42 x i8] c"`dividend | typeIs Int` was not satisfied\00", ptr %523, align 1
  %524 = call ptr @make_candy_text(ptr %523)
  store ptr %524, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %525 = alloca i8, i64 41, align 1
  store [41 x i8] c"`divisor | typeIs Int` was not satisfied\00", ptr %525, align 1
  %526 = call ptr @make_candy_text(ptr %525)
  store ptr %526, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %527 = alloca i8, i64 55, align 1
  store [55 x i8] c"`else | getArgumentCount | equals 0` was not satisfied\00", ptr %527, align 1
  %528 = call ptr @make_candy_text(ptr %527)
  store ptr %528, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %529 = alloca i8, i64 43, align 1
  store [43 x i8] c"`else | typeIs Function` was not satisfied\00", ptr %529, align 1
  %530 = call ptr @make_candy_text(ptr %529)
  store ptr %530, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %531 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorA | typeIs Int` was not satisfied\00", ptr %531, align 1
  %532 = call ptr @make_candy_text(ptr %531)
  store ptr %532, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %533 = alloca i8, i64 41, align 1
  store [41 x i8] c"`factorB | typeIs Int` was not satisfied\00", ptr %533, align 1
  %534 = call ptr @make_candy_text(ptr %533)
  store ptr %534, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %535 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function | typeIs Function` was not satisfied\00", ptr %535, align 1
  %536 = call ptr @make_candy_text(ptr %535)
  store ptr %536, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %537 = alloca i8, i64 63, align 1
  store [61 x i8] c"`function | (.getArgumentCount | equals 0` was not satisfied\00", ptr %537, align 1
  %538 = call ptr @make_candy_text(ptr %537)
  store ptr %538, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %539 = alloca i8, i64 35, align 1
  store [35 x i8] c"`function.is0 b` was not satisfied\00", ptr %539, align 1
  %540 = call ptr @make_candy_text(ptr %539)
  store ptr %540, ptr @"text_`function.is0 b` was not satisfied", align 8
  %541 = alloca i8, i64 38, align 1
  store [38 x i8] c"`function.is0 then` was not satisfied\00", ptr %541, align 1
  %542 = call ptr @make_candy_text(ptr %541)
  store ptr %542, ptr @"text_`function.is0 then` was not satisfied", align 8
  %543 = alloca i8, i64 37, align 1
  store [37 x i8] c"`int | typeIs Int` was not satisfied\00", ptr %543, align 1
  %544 = call ptr @make_candy_text(ptr %543)
  store ptr %544, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %545 = alloca i8, i64 29, align 1
  store [29 x i8] c"`int.is a` was not satisfied\00", ptr %545, align 1
  %546 = call ptr @make_candy_text(ptr %545)
  store ptr %546, ptr @"text_`int.is a` was not satisfied", align 8
  %547 = alloca i8, i64 38, align 1
  store [38 x i8] c"`int.is minorUnits` was not satisfied\00", ptr %547, align 1
  %548 = call ptr @make_candy_text(ptr %547)
  store ptr %548, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %549 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is a` was not satisfied\00", ptr %549, align 1
  %550 = call ptr @make_candy_text(ptr %549)
  store ptr %550, ptr @"text_`is a` was not satisfied", align 8
  %551 = alloca i8, i64 25, align 1
  store [25 x i8] c"`is b` was not satisfied\00", ptr %551, align 1
  %552 = call ptr @make_candy_text(ptr %551)
  store ptr %552, ptr @"text_`is b` was not satisfied", align 8
  %553 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is base` was not satisfied\00", ptr %553, align 1
  %554 = call ptr @make_candy_text(ptr %553)
  store ptr %554, ptr @"text_`is base` was not satisfied", align 8
  %555 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is exponent` was not satisfied\00", ptr %555, align 1
  %556 = call ptr @make_candy_text(ptr %555)
  store ptr %556, ptr @"text_`is exponent` was not satisfied", align 8
  %557 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueA` was not satisfied\00", ptr %557, align 1
  %558 = call ptr @make_candy_text(ptr %557)
  store ptr %558, ptr @"text_`is valueA` was not satisfied", align 8
  %559 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is valueB` was not satisfied\00", ptr %559, align 1
  %560 = call ptr @make_candy_text(ptr %559)
  store ptr %560, ptr @"text_`is valueB` was not satisfied", align 8
  %561 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is value` was not satisfied\00", ptr %561, align 1
  %562 = call ptr @make_candy_text(ptr %561)
  store ptr %562, ptr @"text_`is value` was not satisfied", align 8
  %563 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is0 body` was not satisfied\00", ptr %563, align 1
  %564 = call ptr @make_candy_text(ptr %563)
  store ptr %564, ptr @"text_`is0 body` was not satisfied", align 8
  %565 = alloca i8, i64 43, align 1
  store [43 x i8] c"`isNonNegative exponent` was not satisfied\00", ptr %565, align 1
  %566 = call ptr @make_candy_text(ptr %565)
  store ptr %566, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %567 = alloca i8, i64 34, align 1
  store [34 x i8] c"`isScale scale` was not satisfied\00", ptr %567, align 1
  %568 = call ptr @make_candy_text(ptr %567)
  store ptr %568, ptr @"text_`isScale scale` was not satisfied", align 8
  %569 = alloca i8, i64 41, align 1
  store [41 x i8] c"`minuend | typeIs Int` was not satisfied\00", ptr %569, align 1
  %570 = call ptr @make_candy_text(ptr %569)
  store ptr %570, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %571 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %571, align 1
  %572 = call ptr @make_candy_text(ptr %571)
  store ptr %572, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %573 = alloca i8, i64 50, align 1
  store [48 x i8] c"`struct | (.structHasKey key` was not satisfied\00", ptr %573, align 1
  %574 = call ptr @make_candy_text(ptr %573)
  store ptr %574, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %575 = alloca i8, i64 44, align 1
  store [44 x i8] c"`subtrahend | typeIs Int` was not satisfied\00", ptr %575, align 1
  %576 = call ptr @make_candy_text(ptr %575)
  store ptr %576, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %577 = alloca i8, i64 37, align 1
  store [37 x i8] c"`tag | typeIs Tag` was not satisfied\00", ptr %577, align 1
  %578 = call ptr @make_candy_text(ptr %577)
  store ptr %578, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %579 = alloca i8, i64 42, align 1
  store [40 x i8] c"`tag | (.tagHasValue` was not satisfied\00", ptr %579, align 1
  %580 = call ptr @make_candy_text(ptr %579)
  store ptr %580, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %581 = alloca i8, i64 55, align 1
  store [55 x i8] c"`then | getArgumentCount | equals 0` was not satisfied\00", ptr %581, align 1
  %582 = call ptr @make_candy_text(ptr %581)
  store ptr %582, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %583 = alloca i8, i64 43, align 1
  store [43 x i8] c"`then | typeIs Function` was not satisfied\00", ptr %583, align 1
  %584 = call ptr @make_candy_text(ptr %583)
  store ptr %584, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %585 = alloca i8, i64 42, align 1
  store [42 x i8] c"`value | isNonNegative` was not satisfied\00", ptr %585, align 1
  %586 = call ptr @make_candy_text(ptr %585)
  store ptr %586, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %587 = alloca i8, i64 39, align 1
  store [39 x i8] c"`value | typeIs Int` was not satisfied\00", ptr %587, align 1
  %588 = call ptr @make_candy_text(ptr %587)
  store ptr %588, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %589 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %590 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", ptr %589, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %590, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %591 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %592 = call ptr @make_candy_function(ptr @"Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %591, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %592, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %593 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %594 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %593, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %594, ptr @"fun_anonymous_$generated__needs", align 8
  %595 = alloca ptr, i64 2, align 8
  %596 = load ptr, ptr @tag_Match, align 8
  %597 = getelementptr ptr, ptr %595, i64 0
  store ptr %596, ptr %597, align 8
  %598 = getelementptr ptr, ptr %595, i64 1
  store ptr null, ptr %598, align 8
  %599 = call ptr @make_candy_list(ptr %595)
  store ptr %599, ptr @0, align 8
  %600 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %601 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", ptr %600, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %601, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %602 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %603 = call ptr @make_candy_function(ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", ptr %602, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %603, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %604 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %605 = call ptr @make_candy_function(ptr @Builtins__ifElse, ptr %604, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %605, ptr @fun_Builtins__ifElse, align 8
  %606 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %607 = call ptr @make_candy_function(ptr @Core_function_is0, ptr %606, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %607, ptr @fun_Core_function_is0, align 8
  %608 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %609 = call ptr @make_candy_function(ptr @Core_function_run, ptr %608, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %609, ptr @fun_Core_function_run, align 8
  %610 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %611 = call ptr @make_candy_function(ptr @Core_bool_is, ptr %610, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %611, ptr @fun_Core_bool_is, align 8
  %612 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %613 = call ptr @make_candy_function(ptr @Core_bool_not, ptr %612, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %613, ptr @fun_Core_bool_not, align 8
  %614 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %615 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd, ptr %614, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %615, ptr @fun_Core_bool_lazyAnd, align 8
  %616 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %617 = call ptr @make_candy_function(ptr @Core_bool_lazyOr, ptr %616, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %617, ptr @fun_Core_bool_lazyOr, align 8
  %618 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %619 = call ptr @make_candy_function(ptr @Core_check_checkEquals, ptr %618, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %619, ptr @fun_Core_check_checkEquals, align 8
  %620 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %621 = call ptr @make_candy_function(ptr @Core_function_is2, ptr %620, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %621, ptr @fun_Core_function_is2, align 8
  %622 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %623 = call ptr @make_candy_function(ptr @Builtins__not, ptr %622, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %623, ptr @fun_Builtins__not, align 8
  %624 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %625 = call ptr @make_candy_function(ptr @Builtins__isNonNegative, ptr %624, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %625, ptr @fun_Builtins__isNonNegative, align 8
  %626 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %627 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo, ptr %626, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %627, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  %628 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %629 = call ptr @make_candy_function(ptr @Builtins__intDivideTruncating, ptr %628, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %629, ptr @fun_Builtins__intDivideTruncating, align 8
  %630 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %631 = call ptr @make_candy_function(ptr @Builtins__intShiftRight, ptr %630, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %631, ptr @fun_Builtins__intShiftRight, align 8
  %632 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %633 = call ptr @make_candy_function(ptr @Core_int_compareTo, ptr %632, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %633, ptr @fun_Core_int_compareTo, align 8
  %634 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %635 = call ptr @make_candy_function(ptr @Core_int_isLessThan, ptr %634, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %635, ptr @fun_Core_int_isLessThan, align 8
  %636 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %637 = call ptr @make_candy_function(ptr @Core_int_isGreaterThan, ptr %636, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %637, ptr @fun_Core_int_isGreaterThan, align 8
  %638 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %639 = call ptr @make_candy_function(ptr @Core_int_isGreaterThanOrEqualTo, ptr %638, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %639, ptr @fun_Core_int_isGreaterThanOrEqualTo, align 8
  %640 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %641 = call ptr @make_candy_function(ptr @Core_int_isNonNegative, ptr %640, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %641, ptr @fun_Core_int_isNonNegative, align 8
  %642 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %643 = call ptr @make_candy_function(ptr @Core_int_isEven, ptr %642, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %643, ptr @fun_Core_int_isEven, align 8
  %644 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %645 = call ptr @make_candy_function(ptr @Core_int_max, ptr %644, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %645, ptr @fun_Core_int_max, align 8
  %646 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %647 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_matched, ptr %646, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %647, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %648 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %649 = call ptr @make_candy_function(ptr @Core_int_pow_21, ptr %648, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %649, ptr @fun_Core_int_pow_21, align 8
  %650 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %651 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18, ptr %650, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %651, ptr @fun_Core_controlFlow_recursive_18, align 8
  %652 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %653 = call ptr @make_candy_function(ptr @Core_int_pow, ptr %652, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %653, ptr @fun_Core_int_pow, align 8
  %654 = alloca ptr, i64 3, align 8
  %655 = load ptr, ptr @tag_NoMatch, align 8
  %656 = getelementptr ptr, ptr %654, i64 0
  store ptr %655, ptr %656, align 8
  %657 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  %658 = getelementptr ptr, ptr %654, i64 1
  store ptr %657, ptr %658, align 8
  %659 = getelementptr ptr, ptr %654, i64 2
  store ptr null, ptr %659, align 8
  %660 = call ptr @make_candy_list(ptr %654)
  store ptr %660, ptr @56, align 8
  %661 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %662 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is, ptr %661, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %662, ptr @fun_Core_fixedDecimal_is, align 8
  %663 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %664 = call ptr @make_candy_function(ptr @Core_fixedDecimal_minorUnits, ptr %663, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %664, ptr @fun_Core_fixedDecimal_minorUnits, align 8
  %665 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %666 = call ptr @make_candy_function(ptr @Core_fixedDecimal_scale, ptr %665, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %666, ptr @fun_Core_fixedDecimal_scale, align 8
  %667 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %668 = call ptr @make_candy_function(ptr @Core_fixedDecimal_fromIntScaled, ptr %667, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %668, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  %669 = load ptr, ptr @num_0, align 8
  %670 = load ptr, ptr @num_0, align 8
  %671 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %669, ptr %670)
  %672 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:2\00", ptr %672, align 1
  %673 = call ptr @make_candy_text(ptr %672)
  store ptr %673, ptr @"Core:fixedDecimal:rescaledMinorUnits:2", align 8
  %674 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:4\00", ptr %674, align 1
  %675 = call ptr @make_candy_text(ptr %674)
  store ptr %675, ptr @"Core:fixedDecimal:rescaledMinorUnits:4", align 8
  %676 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isScale targetScale` was not satisfied\00", ptr %676, align 1
  %677 = call ptr @make_candy_text(ptr %676)
  store ptr %677, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %678 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:rescaledMinorUnits:9\00", ptr %678, align 1
  %679 = call ptr @make_candy_text(ptr %678)
  store ptr %679, ptr @"Core:fixedDecimal:rescaledMinorUnits:9", align 8
  %680 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:13\00", ptr %680, align 1
  %681 = call ptr @make_candy_text(ptr %680)
  store ptr %681, ptr @"Core:fixedDecimal:rescaledMinorUnits:13", align 8
  %682 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:23\00", ptr %682, align 1
  %683 = call ptr @make_candy_text(ptr %682)
  store ptr %683, ptr @"Core:fixedDecimal:rescaledMinorUnits:23", align 8
  %684 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:2\00", ptr %684, align 1
  %685 = call ptr @make_candy_text(ptr %684)
  store ptr %685, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:2", align 8
  %686 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:14\00", ptr %686, align 1
  %687 = call ptr @make_candy_text(ptr %686)
  store ptr %687, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:14", align 8
  %688 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:24\00", ptr %688, align 1
  %689 = call ptr @make_candy_text(ptr %688)
  store ptr %689, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:24", align 8
  %690 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:25\00", ptr %690, align 1
  %691 = call ptr @make_candy_text(ptr %690)
  store ptr %691, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:25", align 8
  %692 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:24:26\00", ptr %692, align 1
  %693 = call ptr @make_candy_text(ptr %692)
  store ptr %693, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:26", align 8
  %694 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:2\00", ptr %694, align 1
  %695 = call ptr @make_candy_text(ptr %694)
  store ptr %695, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:2", align 8
  %696 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:23\00", ptr %696, align 1
  %697 = call ptr @make_candy_text(ptr %696)
  store ptr %697, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:23", align 8
  %698 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:24\00", ptr %698, align 1
  %699 = call ptr @make_candy_text(ptr %698)
  store ptr %699, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:24", align 8
  %700 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:25\00", ptr %700, align 1
  %701 = call ptr @make_candy_text(ptr %700)
  store ptr %701, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:25", align 8
  %702 = alloca i8, i64 43, align 1
  store [43 x i8] c"Core:fixedDecimal:rescaledMinorUnits:25:26\00", ptr %702, align 1
  %703 = call ptr @make_candy_text(ptr %702)
  store ptr %703, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:26", align 8
  %704 = alloca i8, i64 40, align 1
  store [40 x i8] c"Core:fixedDecimal:rescaledMinorUnits:26\00", ptr %704, align 1
  %705 = call ptr @make_candy_text(ptr %704)
  store ptr %705, ptr @"Core:fixedDecimal:rescaledMinorUnits:26", align 8
  %706 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %707 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits, ptr %706, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %707, ptr @fun_Core_fixedDecimal_rescaledMinorUnits, align 8
  %708 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:2\00", ptr %708, align 1
  %709 = call ptr @make_candy_text(ptr %708)
  store ptr %709, ptr @"Core:fixedDecimal:comparableMinorUnits:2", align 8
  %710 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:4\00", ptr %710, align 1
  %711 = call ptr @make_candy_text(ptr %710)
  store ptr %711, ptr @"Core:fixedDecimal:comparableMinorUnits:4", align 8
  %712 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:7\00", ptr %712, align 1
  %713 = call ptr @make_candy_text(ptr %712)
  store ptr %713, ptr @"Core:fixedDecimal:comparableMinorUnits:7", align 8
  %714 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:fixedDecimal:comparableMinorUnits:9\00", ptr %714, align 1
  %715 = call ptr @make_candy_text(ptr %714)
  store ptr %715, ptr @"Core:fixedDecimal:comparableMinorUnits:9", align 8
  %716 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:20\00", ptr %716, align 1
  %717 = call ptr @make_candy_text(ptr %716)
  store ptr %717, ptr @"Core:fixedDecimal:comparableMinorUnits:20", align 8
  %718 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:23\00", ptr %718, align 1
  %719 = call ptr @make_candy_text(ptr %718)
  store ptr %719, ptr @"Core:fixedDecimal:comparableMinorUnits:23", align 8
  %720 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:24\00", ptr %720, align 1
  %721 = call ptr @make_candy_text(ptr %720)
  store ptr %721, ptr @"Core:fixedDecimal:comparableMinorUnits:24", align 8
  %722 = alloca i8, i64 7, align 1
  store [7 x i8] c"ValueA\00", ptr %722, align 1
  %723 = call ptr @make_candy_tag(ptr %722, ptr null)
  store ptr %723, ptr @tag_ValueA, align 8
  %724 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:30\00", ptr %724, align 1
  %725 = call ptr @make_candy_text(ptr %724)
  store ptr %725, ptr @"Core:fixedDecimal:comparableMinorUnits:30", align 8
  %726 = alloca i8, i64 7, align 1
  store [7 x i8] c"ValueB\00", ptr %726, align 1
  %727 = call ptr @make_candy_tag(ptr %726, ptr null)
  store ptr %727, ptr @tag_ValueB, align 8
  %728 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:comparableMinorUnits:35\00", ptr %728, align 1
  %729 = call ptr @make_candy_text(ptr %728)
  store ptr %729, ptr @"Core:fixedDecimal:comparableMinorUnits:35", align 8
  %730 = alloca i8, i64 12, align 1
  store [12 x i8] c"TargetScale\00", ptr %730, align 1
  %731 = call ptr @make_candy_tag(ptr %730, ptr null)
  store ptr %731, ptr @tag_TargetScale, align 8
  %732 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %733 = call ptr @make_candy_function(ptr @Core_fixedDecimal_comparableMinorUnits, ptr %732, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %733, ptr @fun_Core_fixedDecimal_comparableMinorUnits, align 8
  %734 = alloca i8, i64 39, align 1
  store [39 x i8] c"Struct doesn't contain key `ValueA`: `\00", ptr %734, align 1
  %735 = call ptr @make_candy_text(ptr %734)
  store ptr %735, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %736 = alloca i8, i64 39, align 1
  store [39 x i8] c"Struct doesn't contain key `ValueB`: `\00", ptr %736, align 1
  %737 = call ptr @make_candy_text(ptr %736)
  store ptr %737, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %738 = alloca i8, i64 44, align 1
  store [44 x i8] c"Struct doesn't contain key `TargetScale`: `\00", ptr %738, align 1
  %739 = call ptr @make_candy_text(ptr %738)
  store ptr %739, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  %740 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:2\00", ptr %740, align 1
  %741 = call ptr @make_candy_text(ptr %740)
  store ptr %741, ptr @"Core:fixedDecimal:subtract:2", align 8
  %742 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is minuend` was not satisfied\00", ptr %742, align 1
  %743 = call ptr @make_candy_text(ptr %742)
  store ptr %743, ptr @"text_`is minuend` was not satisfied", align 8
  %744 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:4\00", ptr %744, align 1
  %745 = call ptr @make_candy_text(ptr %744)
  store ptr %745, ptr @"Core:fixedDecimal:subtract:4", align 8
  %746 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:7\00", ptr %746, align 1
  %747 = call ptr @make_candy_text(ptr %746)
  store ptr %747, ptr @"Core:fixedDecimal:subtract:7", align 8
  %748 = alloca i8, i64 34, align 1
  store [34 x i8] c"`is subtrahend` was not satisfied\00", ptr %748, align 1
  %749 = call ptr @make_candy_text(ptr %748)
  store ptr %749, ptr @"text_`is subtrahend` was not satisfied", align 8
  %750 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:subtract:9\00", ptr %750, align 1
  %751 = call ptr @make_candy_text(ptr %750)
  store ptr %751, ptr @"Core:fixedDecimal:subtract:9", align 8
  %752 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:13\00", ptr %752, align 1
  %753 = call ptr @make_candy_text(ptr %752)
  store ptr %753, ptr @"Core:fixedDecimal:subtract:13", align 8
  %754 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:14\00", ptr %754, align 1
  %755 = call ptr @make_candy_text(ptr %754)
  store ptr %755, ptr @"Core:fixedDecimal:subtract:14", align 8
  %756 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:subtract:valueA\00", ptr %756, align 1
  %757 = call ptr @make_candy_text(ptr %756)
  store ptr %757, ptr @"Core:fixedDecimal:subtract:valueA", align 8
  %758 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:subtract:valueB\00", ptr %758, align 1
  %759 = call ptr @make_candy_text(ptr %758)
  store ptr %759, ptr @"Core:fixedDecimal:subtract:valueB", align 8
  %760 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:fixedDecimal:subtract:targetScale\00", ptr %760, align 1
  %761 = call ptr @make_candy_text(ptr %760)
  store ptr %761, ptr @"Core:fixedDecimal:subtract:targetScale", align 8
  %762 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:27\00", ptr %762, align 1
  %763 = call ptr @make_candy_text(ptr %762)
  store ptr %763, ptr @"Core:fixedDecimal:subtract:27", align 8
  %764 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:subtract:29\00", ptr %764, align 1
  %765 = call ptr @make_candy_text(ptr %764)
  store ptr %765, ptr @"Core:fixedDecimal:subtract:29", align 8
  %766 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %767 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract, ptr %766, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %767, ptr @fun_Core_fixedDecimal_subtract, align 8
  %768 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:divideTruncating:2\00", ptr %768, align 1
  %769 = call ptr @make_candy_text(ptr %768)
  store ptr %769, ptr @"Core:fixedDecimal:divideTruncating:2", align 8
  %770 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is dividend` was not satisfied\00", ptr %770, align 1
  %771 = call ptr @make_candy_text(ptr %770)
  store ptr %771, ptr @"text_`is dividend` was not satisfied", align 8
  %772 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:divideTruncating:4\00", ptr %772, align 1
  %773 = call ptr @make_candy_text(ptr %772)
  store ptr %773, ptr @"Core:fixedDecimal:divideTruncating:4", align 8
  %774 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:divideTruncating:7\00", ptr %774, align 1
  %775 = call ptr @make_candy_text(ptr %774)
  store ptr %775, ptr @"Core:fixedDecimal:divideTruncating:7", align 8
  %776 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is divisor` was not satisfied\00", ptr %776, align 1
  %777 = call ptr @make_candy_text(ptr %776)
  store ptr %777, ptr @"text_`is divisor` was not satisfied", align 8
  %778 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:fixedDecimal:divideTruncating:9\00", ptr %778, align 1
  %779 = call ptr @make_candy_text(ptr %778)
  store ptr %779, ptr @"Core:fixedDecimal:divideTruncating:9", align 8
  %780 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:12\00", ptr %780, align 1
  %781 = call ptr @make_candy_text(ptr %780)
  store ptr %781, ptr @"Core:fixedDecimal:divideTruncating:12", align 8
  %782 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:24\00", ptr %782, align 1
  %783 = call ptr @make_candy_text(ptr %782)
  store ptr %783, ptr @"Core:fixedDecimal:divideTruncating:24", align 8
  %784 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:32\00", ptr %784, align 1
  %785 = call ptr @make_candy_text(ptr %784)
  store ptr %785, ptr @"Core:fixedDecimal:divideTruncating:32", align 8
  %786 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:36\00", ptr %786, align 1
  %787 = call ptr @make_candy_text(ptr %786)
  store ptr %787, ptr @"Core:fixedDecimal:divideTruncating:36", align 8
  %788 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:37\00", ptr %788, align 1
  %789 = call ptr @make_candy_text(ptr %788)
  store ptr %789, ptr @"Core:fixedDecimal:divideTruncating:37", align 8
  %790 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:divideTruncating:valueA\00", ptr %790, align 1
  %791 = call ptr @make_candy_text(ptr %790)
  store ptr %791, ptr @"Core:fixedDecimal:divideTruncating:valueA", align 8
  %792 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:fixedDecimal:divideTruncating:valueB\00", ptr %792, align 1
  %793 = call ptr @make_candy_text(ptr %792)
  store ptr %793, ptr @"Core:fixedDecimal:divideTruncating:valueB", align 8
  %794 = alloca i8, i64 47, align 1
  store [47 x i8] c"Core:fixedDecimal:divideTruncating:targetScale\00", ptr %794, align 1
  %795 = call ptr @make_candy_text(ptr %794)
  store ptr %795, ptr @"Core:fixedDecimal:divideTruncating:targetScale", align 8
  %796 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:51\00", ptr %796, align 1
  %797 = call ptr @make_candy_text(ptr %796)
  store ptr %797, ptr @"Core:fixedDecimal:divideTruncating:51", align 8
  %798 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:52\00", ptr %798, align 1
  %799 = call ptr @make_candy_text(ptr %798)
  store ptr %799, ptr @"Core:fixedDecimal:divideTruncating:52", align 8
  %800 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:62\00", ptr %800, align 1
  %801 = call ptr @make_candy_text(ptr %800)
  store ptr %801, ptr @"Core:fixedDecimal:divideTruncating:62", align 8
  %802 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:fixedDecimal:divideTruncating:64\00", ptr %802, align 1
  %803 = call ptr @make_candy_text(ptr %802)
  store ptr %803, ptr @"Core:fixedDecimal:divideTruncating:64", align 8
  %804 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %805 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating, ptr %804, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %805, ptr @fun_Core_fixedDecimal_divideTruncating, align 8
  %806 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:function:is1:11:3\00", ptr %806, align 1
  %807 = call ptr @make_candy_text(ptr %806)
  store ptr %807, ptr @"Core:function:is1:11:3", align 8
  %808 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:function:is1:13\00", ptr %808, align 1
  %809 = call ptr @make_candy_text(ptr %808)
  store ptr %809, ptr @"Core:function:is1:13", align 8
  %810 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %811 = call ptr @make_candy_function(ptr @Core_function_is1, ptr %810, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %811, ptr @fun_Core_function_is1, align 8
  %812 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:int:fitsInRustU32:15\00", ptr %812, align 1
  %813 = call ptr @make_candy_text(ptr %812)
  store ptr %813, ptr @"Core:int:fitsInRustU32:15", align 8
  %814 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:4\00", ptr %814, align 1
  %815 = call ptr @make_candy_text(ptr %814)
  store ptr %815, ptr @"Core:int:fitsInRustU32:4", align 8
  %816 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:7\00", ptr %816, align 1
  %817 = call ptr @make_candy_text(ptr %816)
  store ptr %817, ptr @"Core:int:fitsInRustU32:7", align 8
  %818 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:int:fitsInRustU32:9\00", ptr %818, align 1
  %819 = call ptr @make_candy_text(ptr %818)
  store ptr %819, ptr @"Core:int:fitsInRustU32:9", align 8
  %820 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:4\00", ptr %820, align 1
  %821 = call ptr @make_candy_text(ptr %820)
  store ptr %821, ptr @"Core:int:isOdd:4", align 8
  %822 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:int:isOdd:8\00", ptr %822, align 1
  %823 = call ptr @make_candy_text(ptr %822)
  store ptr %823, ptr @"Core:int:isOdd:8", align 8
  %824 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:4\00", ptr %824, align 1
  %825 = call ptr @make_candy_text(ptr %824)
  store ptr %825, ptr @"Core:int:isPositive:4", align 8
  %826 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:int:isPositive:8\00", ptr %826, align 1
  %827 = call ptr @make_candy_text(ptr %826)
  store ptr %827, ptr @"Core:int:isPositive:8", align 8
  %828 = call ptr @make_candy_int(i64 4294967295)
  store ptr %828, ptr @num_4294967295, align 8
  %829 = alloca i8, i64 40, align 1
  store [40 x i8] c"`isNonNegative value` was not satisfied\00", ptr %829, align 1
  %830 = call ptr @make_candy_text(ptr %829)
  store ptr %830, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %831 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %832 = call ptr @make_candy_function(ptr @Core_int_isOdd, ptr %831, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %832, ptr @fun_Core_int_isOdd, align 8
  %833 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:11\00", ptr %833, align 1
  %834 = call ptr @make_candy_text(ptr %833)
  store ptr %834, ptr @"Builtins::listGet:11", align 8
  %835 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:14\00", ptr %835, align 1
  %836 = call ptr @make_candy_text(ptr %835)
  store ptr %836, ptr @"Builtins::listGet:14", align 8
  %837 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:16\00", ptr %837, align 1
  %838 = call ptr @make_candy_text(ptr %837)
  store ptr %838, ptr @"Builtins::listGet:16", align 8
  %839 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:24\00", ptr %839, align 1
  %840 = call ptr @make_candy_text(ptr %839)
  store ptr %840, ptr @"Builtins::listGet:24", align 8
  %841 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:25\00", ptr %841, align 1
  %842 = call ptr @make_candy_text(ptr %841)
  store ptr %842, ptr @"Builtins::listGet:25", align 8
  %843 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:30\00", ptr %843, align 1
  %844 = call ptr @make_candy_text(ptr %843)
  store ptr %844, ptr @"Builtins::listGet:30", align 8
  %845 = alloca i8, i64 21, align 1
  store [21 x i8] c"Builtins::listGet:37\00", ptr %845, align 1
  %846 = call ptr @make_candy_text(ptr %845)
  store ptr %846, ptr @"Builtins::listGet:37", align 8
  %847 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::listGet:5\00", ptr %847, align 1
  %848 = call ptr @make_candy_text(ptr %847)
  store ptr %848, ptr @"Builtins::listGet:5", align 8
  %849 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:11\00", ptr %849, align 1
  %850 = call ptr @make_candy_text(ptr %849)
  store ptr %850, ptr @"Builtins::listInsert:11", align 8
  %851 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:14\00", ptr %851, align 1
  %852 = call ptr @make_candy_text(ptr %851)
  store ptr %852, ptr @"Builtins::listInsert:14", align 8
  %853 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:16\00", ptr %853, align 1
  %854 = call ptr @make_candy_text(ptr %853)
  store ptr %854, ptr @"Builtins::listInsert:16", align 8
  %855 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:24\00", ptr %855, align 1
  %856 = call ptr @make_candy_text(ptr %855)
  store ptr %856, ptr @"Builtins::listInsert:24", align 8
  %857 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:25\00", ptr %857, align 1
  %858 = call ptr @make_candy_text(ptr %857)
  store ptr %858, ptr @"Builtins::listInsert:25", align 8
  %859 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:27\00", ptr %859, align 1
  %860 = call ptr @make_candy_text(ptr %859)
  store ptr %860, ptr @"Builtins::listInsert:27", align 8
  %861 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listInsert:35\00", ptr %861, align 1
  %862 = call ptr @make_candy_text(ptr %861)
  store ptr %862, ptr @"Builtins::listInsert:35", align 8
  %863 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listInsert:5\00", ptr %863, align 1
  %864 = call ptr @make_candy_text(ptr %863)
  store ptr %864, ptr @"Builtins::listInsert:5", align 8
  %865 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::listLength:11\00", ptr %865, align 1
  %866 = call ptr @make_candy_text(ptr %865)
  store ptr %866, ptr @"Builtins::listLength:11", align 8
  %867 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::listLength:5\00", ptr %867, align 1
  %868 = call ptr @make_candy_text(ptr %867)
  store ptr %868, ptr @"Builtins::listLength:5", align 8
  %869 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:11\00", ptr %869, align 1
  %870 = call ptr @make_candy_text(ptr %869)
  store ptr %870, ptr @"Builtins::textConcatenate:11", align 8
  %871 = alloca i8, i64 29, align 1
  store [29 x i8] c"Builtins::textConcatenate:18\00", ptr %871, align 1
  %872 = call ptr @make_candy_text(ptr %871)
  store ptr %872, ptr @"Builtins::textConcatenate:18", align 8
  %873 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textConcatenate:5\00", ptr %873, align 1
  %874 = call ptr @make_candy_text(ptr %873)
  store ptr %874, ptr @"Builtins::textConcatenate:5", align 8
  %875 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:109\00", ptr %875, align 1
  %876 = call ptr @make_candy_text(ptr %875)
  store ptr %876, ptr @"Core:iterator:109", align 8
  %877 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:11\00", ptr %877, align 1
  %878 = call ptr @make_candy_text(ptr %877)
  store ptr %878, ptr @"Core:iterator:all:11", align 8
  %879 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:15\00", ptr %879, align 1
  %880 = call ptr @make_candy_text(ptr %879)
  store ptr %880, ptr @"Core:iterator:all:15", align 8
  %881 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:18:13\00", ptr %881, align 1
  %882 = call ptr @make_candy_text(ptr %881)
  store ptr %882, ptr @"Core:iterator:all:18:13", align 8
  %883 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:18:15\00", ptr %883, align 1
  %884 = call ptr @make_candy_text(ptr %883)
  store ptr %884, ptr @"Core:iterator:all:18:15", align 8
  %885 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:all:18:2\00", ptr %885, align 1
  %886 = call ptr @make_candy_text(ptr %885)
  store ptr %886, ptr @"Core:iterator:all:18:2", align 8
  %887 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:all:18:26\00", ptr %887, align 1
  %888 = call ptr @make_candy_text(ptr %887)
  store ptr %888, ptr @"Core:iterator:all:18:26", align 8
  %889 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:all:19\00", ptr %889, align 1
  %890 = call ptr @make_candy_text(ptr %889)
  store ptr %890, ptr @"Core:iterator:all:19", align 8
  %891 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:all:9\00", ptr %891, align 1
  %892 = call ptr @make_candy_text(ptr %891)
  store ptr %892, ptr @"Core:iterator:all:9", align 8
  %893 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:11\00", ptr %893, align 1
  %894 = call ptr @make_candy_text(ptr %893)
  store ptr %894, ptr @"Core:iterator:any:11", align 8
  %895 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:15\00", ptr %895, align 1
  %896 = call ptr @make_candy_text(ptr %895)
  store ptr %896, ptr @"Core:iterator:any:15", align 8
  %897 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:18:13\00", ptr %897, align 1
  %898 = call ptr @make_candy_text(ptr %897)
  store ptr %898, ptr @"Core:iterator:any:18:13", align 8
  %899 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:18:15\00", ptr %899, align 1
  %900 = call ptr @make_candy_text(ptr %899)
  store ptr %900, ptr @"Core:iterator:any:18:15", align 8
  %901 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:any:18:2\00", ptr %901, align 1
  %902 = call ptr @make_candy_text(ptr %901)
  store ptr %902, ptr @"Core:iterator:any:18:2", align 8
  %903 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:any:18:26\00", ptr %903, align 1
  %904 = call ptr @make_candy_text(ptr %903)
  store ptr %904, ptr @"Core:iterator:any:18:26", align 8
  %905 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:any:19\00", ptr %905, align 1
  %906 = call ptr @make_candy_text(ptr %905)
  store ptr %906, ptr @"Core:iterator:any:19", align 8
  %907 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:any:9\00", ptr %907, align 1
  %908 = call ptr @make_candy_text(ptr %907)
  store ptr %908, ptr @"Core:iterator:any:9", align 8
  %909 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:11\00", ptr %909, align 1
  %910 = call ptr @make_candy_text(ptr %909)
  store ptr %910, ptr @"Core:iterator:chunked:11", align 8
  %911 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:21\00", ptr %911, align 1
  %912 = call ptr @make_candy_text(ptr %911)
  store ptr %912, ptr @"Core:iterator:chunked:21", align 8
  %913 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:23\00", ptr %913, align 1
  %914 = call ptr @make_candy_text(ptr %913)
  store ptr %914, ptr @"Core:iterator:chunked:23", align 8
  %915 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:27\00", ptr %915, align 1
  %916 = call ptr @make_candy_text(ptr %915)
  store ptr %916, ptr @"Core:iterator:chunked:27", align 8
  %917 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:chunked:32\00", ptr %917, align 1
  %918 = call ptr @make_candy_text(ptr %917)
  store ptr %918, ptr @"Core:iterator:chunked:32", align 8
  %919 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:11\00", ptr %919, align 1
  %920 = call ptr @make_candy_text(ptr %919)
  store ptr %920, ptr @"Core:iterator:ensure:11", align 8
  %921 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:15\00", ptr %921, align 1
  %922 = call ptr @make_candy_text(ptr %921)
  store ptr %922, ptr @"Core:iterator:ensure:15", align 8
  %923 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:ensure:19:2\00", ptr %923, align 1
  %924 = call ptr @make_candy_text(ptr %923)
  store ptr %924, ptr @"Core:iterator:ensure:19:2", align 8
  %925 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:ensure:20\00", ptr %925, align 1
  %926 = call ptr @make_candy_text(ptr %925)
  store ptr %926, ptr @"Core:iterator:ensure:20", align 8
  %927 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:ensure:9\00", ptr %927, align 1
  %928 = call ptr @make_candy_text(ptr %927)
  store ptr %928, ptr @"Core:iterator:ensure:9", align 8
  %929 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:14\00", ptr %929, align 1
  %930 = call ptr @make_candy_text(ptr %929)
  store ptr %930, ptr @"Core:iterator:foldLeft:14", align 8
  %931 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:16\00", ptr %931, align 1
  %932 = call ptr @make_candy_text(ptr %931)
  store ptr %932, ptr @"Core:iterator:foldLeft:16", align 8
  %933 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:23:1\00", ptr %933, align 1
  %934 = call ptr @make_candy_text(ptr %933)
  store ptr %934, ptr @"Core:iterator:foldLeft:23:1", align 8
  %935 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:23:4\00", ptr %935, align 1
  %936 = call ptr @make_candy_text(ptr %935)
  store ptr %936, ptr @"Core:iterator:foldLeft:23:4", align 8
  %937 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:foldLeft:23:5\00", ptr %937, align 1
  %938 = call ptr @make_candy_text(ptr %937)
  store ptr %938, ptr @"Core:iterator:foldLeft:23:5", align 8
  %939 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:foldLeft:23:5:10\00", ptr %939, align 1
  %940 = call ptr @make_candy_text(ptr %939)
  store ptr %940, ptr @"Core:iterator:foldLeft:23:5:10", align 8
  %941 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:foldLeft:23:5:8\00", ptr %941, align 1
  %942 = call ptr @make_candy_text(ptr %941)
  store ptr %942, ptr @"Core:iterator:foldLeft:23:5:8", align 8
  %943 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:foldLeft:23:5:item\00", ptr %943, align 1
  %944 = call ptr @make_candy_text(ptr %943)
  store ptr %944, ptr @"Core:iterator:foldLeft:23:5:item", align 8
  %945 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:foldLeft:23:5:rest\00", ptr %945, align 1
  %946 = call ptr @make_candy_text(ptr %945)
  store ptr %946, ptr @"Core:iterator:foldLeft:23:5:rest", align 8
  %947 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:foldLeft:23:iterator\00", ptr %947, align 1
  %948 = call ptr @make_candy_text(ptr %947)
  store ptr %948, ptr @"Core:iterator:foldLeft:23:iterator", align 8
  %949 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:foldLeft:23:value\00", ptr %949, align 1
  %950 = call ptr @make_candy_text(ptr %949)
  store ptr %950, ptr @"Core:iterator:foldLeft:23:value", align 8
  %951 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:foldLeft:24\00", ptr %951, align 1
  %952 = call ptr @make_candy_text(ptr %951)
  store ptr %952, ptr @"Core:iterator:foldLeft:24", align 8
  %953 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:foldLeft:3\00", ptr %953, align 1
  %954 = call ptr @make_candy_text(ptr %953)
  store ptr %954, ptr @"Core:iterator:foldLeft:3", align 8
  %955 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:11\00", ptr %955, align 1
  %956 = call ptr @make_candy_text(ptr %955)
  store ptr %956, ptr @"Core:iterator:fromList:11", align 8
  %957 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:22\00", ptr %957, align 1
  %958 = call ptr @make_candy_text(ptr %957)
  store ptr %958, ptr @"Core:iterator:fromList:22", align 8
  %959 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:fromList:23:10\00", ptr %959, align 1
  %960 = call ptr @make_candy_text(ptr %959)
  store ptr %960, ptr @"Core:iterator:fromList:23:10", align 8
  %961 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:fromList:24\00", ptr %961, align 1
  %962 = call ptr @make_candy_text(ptr %961)
  store ptr %962, ptr @"Core:iterator:fromList:24", align 8
  %963 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:11\00", ptr %963, align 1
  %964 = call ptr @make_candy_text(ptr %963)
  store ptr %964, ptr @"Core:iterator:generate:11", align 8
  %965 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:21\00", ptr %965, align 1
  %966 = call ptr @make_candy_text(ptr %965)
  store ptr %966, ptr @"Core:iterator:generate:21", align 8
  %967 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:23\00", ptr %967, align 1
  %968 = call ptr @make_candy_text(ptr %967)
  store ptr %968, ptr @"Core:iterator:generate:23", align 8
  %969 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:33\00", ptr %969, align 1
  %970 = call ptr @make_candy_text(ptr %969)
  store ptr %970, ptr @"Core:iterator:generate:33", align 8
  %971 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:35\00", ptr %971, align 1
  %972 = call ptr @make_candy_text(ptr %971)
  store ptr %972, ptr @"Core:iterator:generate:35", align 8
  %973 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:45\00", ptr %973, align 1
  %974 = call ptr @make_candy_text(ptr %973)
  store ptr %974, ptr @"Core:iterator:generate:45", align 8
  %975 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:47\00", ptr %975, align 1
  %976 = call ptr @make_candy_text(ptr %975)
  store ptr %976, ptr @"Core:iterator:generate:47", align 8
  %977 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:generate:50:6:16\00", ptr %977, align 1
  %978 = call ptr @make_candy_text(ptr %977)
  store ptr %978, ptr @"Core:iterator:generate:50:6:16", align 8
  %979 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:generate:50:6:4\00", ptr %979, align 1
  %980 = call ptr @make_candy_text(ptr %979)
  store ptr %980, ptr @"Core:iterator:generate:50:6:4", align 8
  %981 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:generate:50:7\00", ptr %981, align 1
  %982 = call ptr @make_candy_text(ptr %981)
  store ptr %982, ptr @"Core:iterator:generate:50:7", align 8
  %983 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:generate:51\00", ptr %983, align 1
  %984 = call ptr @make_candy_text(ptr %983)
  store ptr %984, ptr @"Core:iterator:generate:51", align 8
  %985 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:generateWithState:11\00", ptr %985, align 1
  %986 = call ptr @make_candy_text(ptr %985)
  store ptr %986, ptr @"Core:iterator:generateWithState:11", align 8
  %987 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterator:generateWithState:14:1:2\00", ptr %987, align 1
  %988 = call ptr @make_candy_text(ptr %987)
  store ptr %988, ptr @"Core:iterator:generateWithState:14:1:2", align 8
  %989 = alloca i8, i64 39, align 1
  store [39 x i8] c"Core:iterator:generateWithState:14:1:3\00", ptr %989, align 1
  %990 = call ptr @make_candy_text(ptr %989)
  store ptr %990, ptr @"Core:iterator:generateWithState:14:1:3", align 8
  %991 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:19\00", ptr %991, align 1
  %992 = call ptr @make_candy_text(ptr %991)
  store ptr %992, ptr @"Core:iterator:generateWithState:14:1:3:19", align 8
  %993 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:20\00", ptr %993, align 1
  %994 = call ptr @make_candy_text(ptr %993)
  store ptr %994, ptr @"Core:iterator:generateWithState:14:1:3:20", align 8
  %995 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:iterator:generateWithState:14:1:3:22:0\00", ptr %995, align 1
  %996 = call ptr @make_candy_text(ptr %995)
  store ptr %996, ptr @"Core:iterator:generateWithState:14:1:3:22:0", align 8
  %997 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:23\00", ptr %997, align 1
  %998 = call ptr @make_candy_text(ptr %997)
  store ptr %998, ptr @"Core:iterator:generateWithState:14:1:3:23", align 8
  %999 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:25\00", ptr %999, align 1
  %1000 = call ptr @make_candy_text(ptr %999)
  store ptr %1000, ptr @"Core:iterator:generateWithState:14:1:3:25", align 8
  %1001 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:26\00", ptr %1001, align 1
  %1002 = call ptr @make_candy_text(ptr %1001)
  store ptr %1002, ptr @"Core:iterator:generateWithState:14:1:3:26", align 8
  %1003 = alloca i8, i64 42, align 1
  store [42 x i8] c"Core:iterator:generateWithState:14:1:3:27\00", ptr %1003, align 1
  %1004 = call ptr @make_candy_text(ptr %1003)
  store ptr %1004, ptr @"Core:iterator:generateWithState:14:1:3:27", align 8
  %1005 = alloca i8, i64 41, align 1
  store [41 x i8] c"Core:iterator:generateWithState:14:1:3:6\00", ptr %1005, align 1
  %1006 = call ptr @make_candy_text(ptr %1005)
  store ptr %1006, ptr @"Core:iterator:generateWithState:14:1:3:6", align 8
  %1007 = alloca i8, i64 44, align 1
  store [44 x i8] c"Core:iterator:generateWithState:14:1:3:item\00", ptr %1007, align 1
  %1008 = call ptr @make_candy_text(ptr %1007)
  store ptr %1008, ptr @"Core:iterator:generateWithState:14:1:3:item", align 8
  %1009 = alloca i8, i64 45, align 1
  store [45 x i8] c"Core:iterator:generateWithState:14:1:3:state\00", ptr %1009, align 1
  %1010 = call ptr @make_candy_text(ptr %1009)
  store ptr %1010, ptr @"Core:iterator:generateWithState:14:1:3:state", align 8
  %1011 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:generateWithState:15\00", ptr %1011, align 1
  %1012 = call ptr @make_candy_text(ptr %1011)
  store ptr %1012, ptr @"Core:iterator:generateWithState:15", align 8
  %1013 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:generateWithState:9\00", ptr %1013, align 1
  %1014 = call ptr @make_candy_text(ptr %1013)
  store ptr %1014, ptr @"Core:iterator:generateWithState:9", align 8
  %1015 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:isEmpty:3\00", ptr %1015, align 1
  %1016 = call ptr @make_candy_text(ptr %1015)
  store ptr %1016, ptr @"Core:iterator:isEmpty:3", align 8
  %1017 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:isEmpty:7\00", ptr %1017, align 1
  %1018 = call ptr @make_candy_text(ptr %1017)
  store ptr %1018, ptr @"Core:iterator:isEmpty:7", align 8
  %1019 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:joinToText:12:11\00", ptr %1019, align 1
  %1020 = call ptr @make_candy_text(ptr %1019)
  store ptr %1020, ptr @"Core:iterator:joinToText:12:11", align 8
  %1021 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:joinToText:12:22\00", ptr %1021, align 1
  %1022 = call ptr @make_candy_text(ptr %1021)
  store ptr %1022, ptr @"Core:iterator:joinToText:12:22", align 8
  %1023 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:joinToText:13\00", ptr %1023, align 1
  %1024 = call ptr @make_candy_text(ptr %1023)
  store ptr %1024, ptr @"Core:iterator:joinToText:13", align 8
  %1025 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:joinToText:3\00", ptr %1025, align 1
  %1026 = call ptr @make_candy_text(ptr %1025)
  store ptr %1026, ptr @"Core:iterator:joinToText:3", align 8
  %1027 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:3\00", ptr %1027, align 1
  %1028 = call ptr @make_candy_text(ptr %1027)
  store ptr %1028, ptr @"Core:iterator:length:3", align 8
  %1029 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:6\00", ptr %1029, align 1
  %1030 = call ptr @make_candy_text(ptr %1029)
  store ptr %1030, ptr @"Core:iterator:length:6", align 8
  %1031 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:length:8\00", ptr %1031, align 1
  %1032 = call ptr @make_candy_text(ptr %1031)
  store ptr %1032, ptr @"Core:iterator:length:8", align 8
  %1033 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:14\00", ptr %1033, align 1
  %1034 = call ptr @make_candy_text(ptr %1033)
  store ptr %1034, ptr @"Core:iterator:map:14", align 8
  %1035 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:16\00", ptr %1035, align 1
  %1036 = call ptr @make_candy_text(ptr %1035)
  store ptr %1036, ptr @"Core:iterator:map:16", align 8
  %1037 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:map:19:2\00", ptr %1037, align 1
  %1038 = call ptr @make_candy_text(ptr %1037)
  store ptr %1038, ptr @"Core:iterator:map:19:2", align 8
  %1039 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:map:19:3\00", ptr %1039, align 1
  %1040 = call ptr @make_candy_text(ptr %1039)
  store ptr %1040, ptr @"Core:iterator:map:19:3", align 8
  %1041 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:map:19:3:5\00", ptr %1041, align 1
  %1042 = call ptr @make_candy_text(ptr %1041)
  store ptr %1042, ptr @"Core:iterator:map:19:3:5", align 8
  %1043 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:map:19:3:item\00", ptr %1043, align 1
  %1044 = call ptr @make_candy_text(ptr %1043)
  store ptr %1044, ptr @"Core:iterator:map:19:3:item", align 8
  %1045 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:map:19:3:rest\00", ptr %1045, align 1
  %1046 = call ptr @make_candy_text(ptr %1045)
  store ptr %1046, ptr @"Core:iterator:map:19:3:rest", align 8
  %1047 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:map:20\00", ptr %1047, align 1
  %1048 = call ptr @make_candy_text(ptr %1047)
  store ptr %1048, ptr @"Core:iterator:map:20", align 8
  %1049 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:map:3\00", ptr %1049, align 1
  %1050 = call ptr @make_candy_text(ptr %1049)
  store ptr %1050, ptr @"Core:iterator:map:3", align 8
  %1051 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:next:17\00", ptr %1051, align 1
  %1052 = call ptr @make_candy_text(ptr %1051)
  store ptr %1052, ptr @"Core:iterator:next:17", align 8
  %1053 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:next:3\00", ptr %1053, align 1
  %1054 = call ptr @make_candy_text(ptr %1053)
  store ptr %1054, ptr @"Core:iterator:next:3", align 8
  %1055 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:next:6\00", ptr %1055, align 1
  %1056 = call ptr @make_candy_text(ptr %1055)
  store ptr %1056, ptr @"Core:iterator:next:6", align 8
  %1057 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:next:nextFunction\00", ptr %1057, align 1
  %1058 = call ptr @make_candy_text(ptr %1057)
  store ptr %1058, ptr @"Core:iterator:next:nextFunction", align 8
  %1059 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:11\00", ptr %1059, align 1
  %1060 = call ptr @make_candy_text(ptr %1059)
  store ptr %1060, ptr @"Core:iterator:reduceLeft:11", align 8
  %1061 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:15\00", ptr %1061, align 1
  %1062 = call ptr @make_candy_text(ptr %1061)
  store ptr %1062, ptr @"Core:iterator:reduceLeft:15", align 8
  %1063 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:17\00", ptr %1063, align 1
  %1064 = call ptr @make_candy_text(ptr %1063)
  store ptr %1064, ptr @"Core:iterator:reduceLeft:17", align 8
  %1065 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:reduceLeft:18\00", ptr %1065, align 1
  %1066 = call ptr @make_candy_text(ptr %1065)
  store ptr %1066, ptr @"Core:iterator:reduceLeft:18", align 8
  %1067 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:reduceLeft:18:14\00", ptr %1067, align 1
  %1068 = call ptr @make_candy_text(ptr %1067)
  store ptr %1068, ptr @"Core:iterator:reduceLeft:18:14", align 8
  %1069 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:reduceLeft:18:item\00", ptr %1069, align 1
  %1070 = call ptr @make_candy_text(ptr %1069)
  store ptr %1070, ptr @"Core:iterator:reduceLeft:18:item", align 8
  %1071 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:reduceLeft:18:rest\00", ptr %1071, align 1
  %1072 = call ptr @make_candy_text(ptr %1071)
  store ptr %1072, ptr @"Core:iterator:reduceLeft:18:rest", align 8
  %1073 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:reduceLeft:9\00", ptr %1073, align 1
  %1074 = call ptr @make_candy_text(ptr %1073)
  store ptr %1074, ptr @"Core:iterator:reduceLeft:9", align 8
  %1075 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:16\00", ptr %1075, align 1
  %1076 = call ptr @make_candy_text(ptr %1075)
  store ptr %1076, ptr @"Core:iterator:skip:16", align 8
  %1077 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:26\00", ptr %1077, align 1
  %1078 = call ptr @make_candy_text(ptr %1077)
  store ptr %1078, ptr @"Core:iterator:skip:26", align 8
  %1079 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:skip:28\00", ptr %1079, align 1
  %1080 = call ptr @make_candy_text(ptr %1079)
  store ptr %1080, ptr @"Core:iterator:skip:28", align 8
  %1081 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:skip:3\00", ptr %1081, align 1
  %1082 = call ptr @make_candy_text(ptr %1081)
  store ptr %1082, ptr @"Core:iterator:skip:3", align 8
  %1083 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:30:6:1\00", ptr %1083, align 1
  %1084 = call ptr @make_candy_text(ptr %1083)
  store ptr %1084, ptr @"Core:iterator:skip:30:6:1", align 8
  %1085 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:30:6:7:2\00", ptr %1085, align 1
  %1086 = call ptr @make_candy_text(ptr %1085)
  store ptr %1086, ptr @"Core:iterator:skip:30:6:7:2", align 8
  %1087 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:30:6:8:2\00", ptr %1087, align 1
  %1088 = call ptr @make_candy_text(ptr %1087)
  store ptr %1088, ptr @"Core:iterator:skip:30:6:8:2", align 8
  %1089 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:skip:30:6:8:3\00", ptr %1089, align 1
  %1090 = call ptr @make_candy_text(ptr %1089)
  store ptr %1090, ptr @"Core:iterator:skip:30:6:8:3", align 8
  %1091 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:skip:30:6:8:3:15\00", ptr %1091, align 1
  %1092 = call ptr @make_candy_text(ptr %1091)
  store ptr %1092, ptr @"Core:iterator:skip:30:6:8:3:15", align 8
  %1093 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:skip:30:6:8:3:17\00", ptr %1093, align 1
  %1094 = call ptr @make_candy_text(ptr %1093)
  store ptr %1094, ptr @"Core:iterator:skip:30:6:8:3:17", align 8
  %1095 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:skip:30:6:8:3:rest\00", ptr %1095, align 1
  %1096 = call ptr @make_candy_text(ptr %1095)
  store ptr %1096, ptr @"Core:iterator:skip:30:6:8:3:rest", align 8
  %1097 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:30:6:9\00", ptr %1097, align 1
  %1098 = call ptr @make_candy_text(ptr %1097)
  store ptr %1098, ptr @"Core:iterator:skip:30:6:9", align 8
  %1099 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:skip:30:6:iterator\00", ptr %1099, align 1
  %1100 = call ptr @make_candy_text(ptr %1099)
  store ptr %1100, ptr @"Core:iterator:skip:30:6:iterator", align 8
  %1101 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:skip:30:6:n\00", ptr %1101, align 1
  %1102 = call ptr @make_candy_text(ptr %1101)
  store ptr %1102, ptr @"Core:iterator:skip:30:6:n", align 8
  %1103 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:skip:30:7\00", ptr %1103, align 1
  %1104 = call ptr @make_candy_text(ptr %1103)
  store ptr %1104, ptr @"Core:iterator:skip:30:7", align 8
  %1105 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:sum:19\00", ptr %1105, align 1
  %1106 = call ptr @make_candy_text(ptr %1105)
  store ptr %1106, ptr @"Core:iterator:sum:19", align 8
  %1107 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:3\00", ptr %1107, align 1
  %1108 = call ptr @make_candy_text(ptr %1107)
  store ptr %1108, ptr @"Core:iterator:sum:3", align 8
  %1109 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:sum:5:17\00", ptr %1109, align 1
  %1110 = call ptr @make_candy_text(ptr %1109)
  store ptr %1110, ptr @"Core:iterator:sum:5:17", align 8
  %1111 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:6\00", ptr %1111, align 1
  %1112 = call ptr @make_candy_text(ptr %1111)
  store ptr %1112, ptr @"Core:iterator:sum:6", align 8
  %1113 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:sum:8:10\00", ptr %1113, align 1
  %1114 = call ptr @make_candy_text(ptr %1113)
  store ptr %1114, ptr @"Core:iterator:sum:8:10", align 8
  %1115 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:sum:9\00", ptr %1115, align 1
  %1116 = call ptr @make_candy_text(ptr %1115)
  store ptr %1116, ptr @"Core:iterator:sum:9", align 8
  %1117 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:11\00", ptr %1117, align 1
  %1118 = call ptr @make_candy_text(ptr %1117)
  store ptr %1118, ptr @"Core:iterator:take:11", align 8
  %1119 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:21\00", ptr %1119, align 1
  %1120 = call ptr @make_candy_text(ptr %1119)
  store ptr %1120, ptr @"Core:iterator:take:21", align 8
  %1121 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:23\00", ptr %1121, align 1
  %1122 = call ptr @make_candy_text(ptr %1121)
  store ptr %1122, ptr @"Core:iterator:take:23", align 8
  %1123 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:27\00", ptr %1123, align 1
  %1124 = call ptr @make_candy_text(ptr %1123)
  store ptr %1124, ptr @"Core:iterator:take:27", align 8
  %1125 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:29\00", ptr %1125, align 1
  %1126 = call ptr @make_candy_text(ptr %1125)
  store ptr %1126, ptr @"Core:iterator:take:29", align 8
  %1127 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:take:31:1\00", ptr %1127, align 1
  %1128 = call ptr @make_candy_text(ptr %1127)
  store ptr %1128, ptr @"Core:iterator:take:31:1", align 8
  %1129 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:take:31:12\00", ptr %1129, align 1
  %1130 = call ptr @make_candy_text(ptr %1129)
  store ptr %1130, ptr @"Core:iterator:take:31:12", align 8
  %1131 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:take:31:index\00", ptr %1131, align 1
  %1132 = call ptr @make_candy_text(ptr %1131)
  store ptr %1132, ptr @"Core:iterator:take:31:index", align 8
  %1133 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:take:31:item\00", ptr %1133, align 1
  %1134 = call ptr @make_candy_text(ptr %1133)
  store ptr %1134, ptr @"Core:iterator:take:31:item", align 8
  %1135 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:32\00", ptr %1135, align 1
  %1136 = call ptr @make_candy_text(ptr %1135)
  store ptr %1136, ptr @"Core:iterator:take:32", align 8
  %1137 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:iterator:take:34:7\00", ptr %1137, align 1
  %1138 = call ptr @make_candy_text(ptr %1137)
  store ptr %1138, ptr @"Core:iterator:take:34:7", align 8
  %1139 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:take:35\00", ptr %1139, align 1
  %1140 = call ptr @make_candy_text(ptr %1139)
  store ptr %1140, ptr @"Core:iterator:take:35", align 8
  %1141 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:takeWhile:3\00", ptr %1141, align 1
  %1142 = call ptr @make_candy_text(ptr %1141)
  store ptr %1142, ptr @"Core:iterator:takeWhile:3", align 8
  %1143 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:takeWhile:7:2\00", ptr %1143, align 1
  %1144 = call ptr @make_candy_text(ptr %1143)
  store ptr %1144, ptr @"Core:iterator:takeWhile:7:2", align 8
  %1145 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:takeWhile:7:3\00", ptr %1145, align 1
  %1146 = call ptr @make_candy_text(ptr %1145)
  store ptr %1146, ptr @"Core:iterator:takeWhile:7:3", align 8
  %1147 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:takeWhile:7:3:4\00", ptr %1147, align 1
  %1148 = call ptr @make_candy_text(ptr %1147)
  store ptr %1148, ptr @"Core:iterator:takeWhile:7:3:4", align 8
  %1149 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:iterator:takeWhile:7:3:7\00", ptr %1149, align 1
  %1150 = call ptr @make_candy_text(ptr %1149)
  store ptr %1150, ptr @"Core:iterator:takeWhile:7:3:7", align 8
  %1151 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:takeWhile:7:3:item\00", ptr %1151, align 1
  %1152 = call ptr @make_candy_text(ptr %1151)
  store ptr %1152, ptr @"Core:iterator:takeWhile:7:3:item", align 8
  %1153 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:takeWhile:7:3:rest\00", ptr %1153, align 1
  %1154 = call ptr @make_candy_text(ptr %1153)
  store ptr %1154, ptr @"Core:iterator:takeWhile:7:3:rest", align 8
  %1155 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:takeWhile:8\00", ptr %1155, align 1
  %1156 = call ptr @make_candy_text(ptr %1155)
  store ptr %1156, ptr @"Core:iterator:takeWhile:8", align 8
  %1157 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:toList:3\00", ptr %1157, align 1
  %1158 = call ptr @make_candy_text(ptr %1157)
  store ptr %1158, ptr @"Core:iterator:toList:3", align 8
  %1159 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:toList:6:10\00", ptr %1159, align 1
  %1160 = call ptr @make_candy_text(ptr %1159)
  store ptr %1160, ptr @"Core:iterator:toList:6:10", align 8
  %1161 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:toList:7\00", ptr %1161, align 1
  %1162 = call ptr @make_candy_text(ptr %1161)
  store ptr %1162, ptr @"Core:iterator:toList:7", align 8
  %1163 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:14\00", ptr %1163, align 1
  %1164 = call ptr @make_candy_text(ptr %1163)
  store ptr %1164, ptr @"Core:iterator:where:14", align 8
  %1165 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:16\00", ptr %1165, align 1
  %1166 = call ptr @make_candy_text(ptr %1165)
  store ptr %1166, ptr @"Core:iterator:where:16", align 8
  %1167 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:where:19:2:2\00", ptr %1167, align 1
  %1168 = call ptr @make_candy_text(ptr %1167)
  store ptr %1168, ptr @"Core:iterator:where:19:2:2", align 8
  %1169 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:where:19:2:3\00", ptr %1169, align 1
  %1170 = call ptr @make_candy_text(ptr %1169)
  store ptr %1170, ptr @"Core:iterator:where:19:2:3", align 8
  %1171 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:where:19:2:3:4\00", ptr %1171, align 1
  %1172 = call ptr @make_candy_text(ptr %1171)
  store ptr %1172, ptr @"Core:iterator:where:19:2:3:4", align 8
  %1173 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:19:2:3:6:2\00", ptr %1173, align 1
  %1174 = call ptr @make_candy_text(ptr %1173)
  store ptr %1174, ptr @"Core:iterator:where:19:2:3:6:2", align 8
  %1175 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:19:2:3:6:4\00", ptr %1175, align 1
  %1176 = call ptr @make_candy_text(ptr %1175)
  store ptr %1176, ptr @"Core:iterator:where:19:2:3:6:4", align 8
  %1177 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:where:19:2:3:6:5\00", ptr %1177, align 1
  %1178 = call ptr @make_candy_text(ptr %1177)
  store ptr %1178, ptr @"Core:iterator:where:19:2:3:6:5", align 8
  %1179 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:where:19:2:3:6:5:item\00", ptr %1179, align 1
  %1180 = call ptr @make_candy_text(ptr %1179)
  store ptr %1180, ptr @"Core:iterator:where:19:2:3:6:5:item", align 8
  %1181 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:where:19:2:3:6:5:rest\00", ptr %1181, align 1
  %1182 = call ptr @make_candy_text(ptr %1181)
  store ptr %1182, ptr @"Core:iterator:where:19:2:3:6:5:rest", align 8
  %1183 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:where:19:2:3:7\00", ptr %1183, align 1
  %1184 = call ptr @make_candy_text(ptr %1183)
  store ptr %1184, ptr @"Core:iterator:where:19:2:3:7", align 8
  %1185 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:where:19:2:3:item\00", ptr %1185, align 1
  %1186 = call ptr @make_candy_text(ptr %1185)
  store ptr %1186, ptr @"Core:iterator:where:19:2:3:item", align 8
  %1187 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:where:19:2:3:rest\00", ptr %1187, align 1
  %1188 = call ptr @make_candy_text(ptr %1187)
  store ptr %1188, ptr @"Core:iterator:where:19:2:3:rest", align 8
  %1189 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:where:19:3\00", ptr %1189, align 1
  %1190 = call ptr @make_candy_text(ptr %1189)
  store ptr %1190, ptr @"Core:iterator:where:19:3", align 8
  %1191 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:iterator:where:20\00", ptr %1191, align 1
  %1192 = call ptr @make_candy_text(ptr %1191)
  store ptr %1192, ptr @"Core:iterator:where:20", align 8
  %1193 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:iterator:where:3\00", ptr %1193, align 1
  %1194 = call ptr @make_candy_text(ptr %1193)
  store ptr %1194, ptr @"Core:iterator:where:3", align 8
  %1195 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:16\00", ptr %1195, align 1
  %1196 = call ptr @make_candy_text(ptr %1195)
  store ptr %1196, ptr @"Core:iterator:windowed:16", align 8
  %1197 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:26\00", ptr %1197, align 1
  %1198 = call ptr @make_candy_text(ptr %1197)
  store ptr %1198, ptr @"Core:iterator:windowed:26", align 8
  %1199 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:28\00", ptr %1199, align 1
  %1200 = call ptr @make_candy_text(ptr %1199)
  store ptr %1200, ptr @"Core:iterator:windowed:28", align 8
  %1201 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:windowed:3\00", ptr %1201, align 1
  %1202 = call ptr @make_candy_text(ptr %1201)
  store ptr %1202, ptr @"Core:iterator:windowed:3", align 8
  %1203 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:40\00", ptr %1203, align 1
  %1204 = call ptr @make_candy_text(ptr %1203)
  store ptr %1204, ptr @"Core:iterator:windowed:40", align 8
  %1205 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:50\00", ptr %1205, align 1
  %1206 = call ptr @make_candy_text(ptr %1205)
  store ptr %1206, ptr @"Core:iterator:windowed:50", align 8
  %1207 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:52\00", ptr %1207, align 1
  %1208 = call ptr @make_candy_text(ptr %1207)
  store ptr %1208, ptr @"Core:iterator:windowed:52", align 8
  %1209 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:62\00", ptr %1209, align 1
  %1210 = call ptr @make_candy_text(ptr %1209)
  store ptr %1210, ptr @"Core:iterator:windowed:62", align 8
  %1211 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:64\00", ptr %1211, align 1
  %1212 = call ptr @make_candy_text(ptr %1211)
  store ptr %1212, ptr @"Core:iterator:windowed:64", align 8
  %1213 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:67:16\00", ptr %1213, align 1
  %1214 = call ptr @make_candy_text(ptr %1213)
  store ptr %1214, ptr @"Core:iterator:windowed:67:16", align 8
  %1215 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:67:22\00", ptr %1215, align 1
  %1216 = call ptr @make_candy_text(ptr %1215)
  store ptr %1216, ptr @"Core:iterator:windowed:67:22", align 8
  %1217 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:windowed:67:26:7\00", ptr %1217, align 1
  %1218 = call ptr @make_candy_text(ptr %1217)
  store ptr %1218, ptr @"Core:iterator:windowed:67:26:7", align 8
  %1219 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:windowed:67:28\00", ptr %1219, align 1
  %1220 = call ptr @make_candy_text(ptr %1219)
  store ptr %1220, ptr @"Core:iterator:windowed:67:28", align 8
  %1221 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:windowed:67:3\00", ptr %1221, align 1
  %1222 = call ptr @make_candy_text(ptr %1221)
  store ptr %1222, ptr @"Core:iterator:windowed:67:3", align 8
  %1223 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:windowed:67:5\00", ptr %1223, align 1
  %1224 = call ptr @make_candy_text(ptr %1223)
  store ptr %1224, ptr @"Core:iterator:windowed:67:5", align 8
  %1225 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:windowed:68\00", ptr %1225, align 1
  %1226 = call ptr @make_candy_text(ptr %1225)
  store ptr %1226, ptr @"Core:iterator:windowed:68", align 8
  %1227 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:1\00", ptr %1227, align 1
  %1228 = call ptr @make_candy_text(ptr %1227)
  store ptr %1228, ptr @"Core:iterator:withIndex:11:1", align 8
  %1229 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:4\00", ptr %1229, align 1
  %1230 = call ptr @make_candy_text(ptr %1229)
  store ptr %1230, ptr @"Core:iterator:withIndex:11:4", align 8
  %1231 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:withIndex:11:5\00", ptr %1231, align 1
  %1232 = call ptr @make_candy_text(ptr %1231)
  store ptr %1232, ptr @"Core:iterator:withIndex:11:5", align 8
  %1233 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:withIndex:11:5:22\00", ptr %1233, align 1
  %1234 = call ptr @make_candy_text(ptr %1233)
  store ptr %1234, ptr @"Core:iterator:withIndex:11:5:22", align 8
  %1235 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:withIndex:11:5:item\00", ptr %1235, align 1
  %1236 = call ptr @make_candy_text(ptr %1235)
  store ptr %1236, ptr @"Core:iterator:withIndex:11:5:item", align 8
  %1237 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:withIndex:11:5:rest\00", ptr %1237, align 1
  %1238 = call ptr @make_candy_text(ptr %1237)
  store ptr %1238, ptr @"Core:iterator:withIndex:11:5:rest", align 8
  %1239 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:iterator:withIndex:11:index\00", ptr %1239, align 1
  %1240 = call ptr @make_candy_text(ptr %1239)
  store ptr %1240, ptr @"Core:iterator:withIndex:11:index", align 8
  %1241 = alloca i8, i64 36, align 1
  store [36 x i8] c"Core:iterator:withIndex:11:iterator\00", ptr %1241, align 1
  %1242 = call ptr @make_candy_text(ptr %1241)
  store ptr %1242, ptr @"Core:iterator:withIndex:11:iterator", align 8
  %1243 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:iterator:withIndex:12\00", ptr %1243, align 1
  %1244 = call ptr @make_candy_text(ptr %1243)
  store ptr %1244, ptr @"Core:iterator:withIndex:12", align 8
  %1245 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:withIndex:3\00", ptr %1245, align 1
  %1246 = call ptr @make_candy_text(ptr %1245)
  store ptr %1246, ptr @"Core:iterator:withIndex:3", align 8
  %1247 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:wrapSafe:11\00", ptr %1247, align 1
  %1248 = call ptr @make_candy_text(ptr %1247)
  store ptr %1248, ptr @"Core:iterator:wrapSafe:11", align 8
  %1249 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:wrapSafe:12:9\00", ptr %1249, align 1
  %1250 = call ptr @make_candy_text(ptr %1249)
  store ptr %1250, ptr @"Core:iterator:wrapSafe:12:9", align 8
  %1251 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:iterator:wrapSafe:16:1\00", ptr %1251, align 1
  %1252 = call ptr @make_candy_text(ptr %1251)
  store ptr %1252, ptr @"Core:iterator:wrapSafe:16:1", align 8
  %1253 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:16:13\00", ptr %1253, align 1
  %1254 = call ptr @make_candy_text(ptr %1253)
  store ptr %1254, ptr @"Core:iterator:wrapSafe:16:13", align 8
  %1255 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:wrapSafe:16:1:10\00", ptr %1255, align 1
  %1256 = call ptr @make_candy_text(ptr %1255)
  store ptr %1256, ptr @"Core:iterator:wrapSafe:16:1:10", align 8
  %1257 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:16:1:function\00", ptr %1257, align 1
  %1258 = call ptr @make_candy_text(ptr %1257)
  store ptr %1258, ptr @"Core:iterator:wrapSafe:16:1:function", align 8
  %1259 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:16:22\00", ptr %1259, align 1
  %1260 = call ptr @make_candy_text(ptr %1259)
  store ptr %1260, ptr @"Core:iterator:wrapSafe:16:22", align 8
  %1261 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:iterator:wrapSafe:16:24\00", ptr %1261, align 1
  %1262 = call ptr @make_candy_text(ptr %1261)
  store ptr %1262, ptr @"Core:iterator:wrapSafe:16:24", align 8
  %1263 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:iterator:wrapSafe:16:26:10\00", ptr %1263, align 1
  %1264 = call ptr @make_candy_text(ptr %1263)
  store ptr %1264, ptr @"Core:iterator:wrapSafe:16:26:10", align 8
  %1265 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:iterator:wrapSafe:16:26:10:19\00", ptr %1265, align 1
  %1266 = call ptr @make_candy_text(ptr %1265)
  store ptr %1266, ptr @"Core:iterator:wrapSafe:16:26:10:19", align 8
  %1267 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:iterator:wrapSafe:16:26:10:7\00", ptr %1267, align 1
  %1268 = call ptr @make_candy_text(ptr %1267)
  store ptr %1268, ptr @"Core:iterator:wrapSafe:16:26:10:7", align 8
  %1269 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:16:26:10:item\00", ptr %1269, align 1
  %1270 = call ptr @make_candy_text(ptr %1269)
  store ptr %1270, ptr @"Core:iterator:wrapSafe:16:26:10:item", align 8
  %1271 = alloca i8, i64 37, align 1
  store [37 x i8] c"Core:iterator:wrapSafe:16:26:10:rest\00", ptr %1271, align 1
  %1272 = call ptr @make_candy_text(ptr %1271)
  store ptr %1272, ptr @"Core:iterator:wrapSafe:16:26:10:rest", align 8
  %1273 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:iterator:wrapSafe:16:26:9\00", ptr %1273, align 1
  %1274 = call ptr @make_candy_text(ptr %1273)
  store ptr %1274, ptr @"Core:iterator:wrapSafe:16:26:9", align 8
  %1275 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:iterator:wrapSafe:17\00", ptr %1275, align 1
  %1276 = call ptr @make_candy_text(ptr %1275)
  store ptr %1276, ptr @"Core:iterator:wrapSafe:17", align 8
  %1277 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:iterator:wrapSafe:9\00", ptr %1277, align 1
  %1278 = call ptr @make_candy_text(ptr %1277)
  store ptr %1278, ptr @"Core:iterator:wrapSafe:9", align 8
  %1279 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:list:append:11\00", ptr %1279, align 1
  %1280 = call ptr @make_candy_text(ptr %1279)
  store ptr %1280, ptr @"Core:list:append:11", align 8
  %1281 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:4\00", ptr %1281, align 1
  %1282 = call ptr @make_candy_text(ptr %1281)
  store ptr %1282, ptr @"Core:list:append:4", align 8
  %1283 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:list:append:9\00", ptr %1283, align 1
  %1284 = call ptr @make_candy_text(ptr %1283)
  store ptr %1284, ptr @"Core:list:append:9", align 8
  %1285 = alloca i8, i64 17, align 1
  store [17 x i8] c"Core:result:is:1\00", ptr %1285, align 1
  %1286 = call ptr @make_candy_text(ptr %1285)
  store ptr %1286, ptr @"Core:result:is:1", align 8
  %1287 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:result:is:1:_\00", ptr %1287, align 1
  %1288 = call ptr @make_candy_text(ptr %1287)
  store ptr %1288, ptr @"Core:result:is:1:_", align 8
  %1289 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:14\00", ptr %1289, align 1
  %1290 = call ptr @make_candy_text(ptr %1289)
  store ptr %1290, ptr @"Core:result:mapOrElse:14", align 8
  %1291 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:16\00", ptr %1291, align 1
  %1292 = call ptr @make_candy_text(ptr %1291)
  store ptr %1292, ptr @"Core:result:mapOrElse:16", align 8
  %1293 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:2\00", ptr %1293, align 1
  %1294 = call ptr @make_candy_text(ptr %1293)
  store ptr %1294, ptr @"Core:result:mapOrElse:2", align 8
  %1295 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:26\00", ptr %1295, align 1
  %1296 = call ptr @make_candy_text(ptr %1295)
  store ptr %1296, ptr @"Core:result:mapOrElse:26", align 8
  %1297 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:28\00", ptr %1297, align 1
  %1298 = call ptr @make_candy_text(ptr %1297)
  store ptr %1298, ptr @"Core:result:mapOrElse:28", align 8
  %1299 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:result:mapOrElse:30\00", ptr %1299, align 1
  %1300 = call ptr @make_candy_text(ptr %1299)
  store ptr %1300, ptr @"Core:result:mapOrElse:30", align 8
  %1301 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:2\00", ptr %1301, align 1
  %1302 = call ptr @make_candy_text(ptr %1301)
  store ptr %1302, ptr @"Core:result:mapOrElse:30:2", align 8
  %1303 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:mapOrElse:30:5\00", ptr %1303, align 1
  %1304 = call ptr @make_candy_text(ptr %1303)
  store ptr %1304, ptr @"Core:result:mapOrElse:30:5", align 8
  %1305 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:result:mapOrElse:30:value\00", ptr %1305, align 1
  %1306 = call ptr @make_candy_text(ptr %1305)
  store ptr %1306, ptr @"Core:result:mapOrElse:30:value", align 8
  %1307 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:result:mapOrElse:30:value#1\00", ptr %1307, align 1
  %1308 = call ptr @make_candy_text(ptr %1307)
  store ptr %1308, ptr @"Core:result:mapOrElse:30:value#1", align 8
  %1309 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:result:mapOrElse:4\00", ptr %1309, align 1
  %1310 = call ptr @make_candy_text(ptr %1309)
  store ptr %1310, ptr @"Core:result:mapOrElse:4", align 8
  %1311 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:2\00", ptr %1311, align 1
  %1312 = call ptr @make_candy_text(ptr %1311)
  store ptr %1312, ptr @"Core:result:unwrapOr:2", align 8
  %1313 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:4\00", ptr %1313, align 1
  %1314 = call ptr @make_candy_text(ptr %1313)
  store ptr %1314, ptr @"Core:result:unwrapOr:4", align 8
  %1315 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:result:unwrapOr:8\00", ptr %1315, align 1
  %1316 = call ptr @make_candy_text(ptr %1315)
  store ptr %1316, ptr @"Core:result:unwrapOr:8", align 8
  %1317 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:14\00", ptr %1317, align 1
  %1318 = call ptr @make_candy_text(ptr %1317)
  store ptr %1318, ptr @"Core:result:unwrapOrElse:14", align 8
  %1319 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:16\00", ptr %1319, align 1
  %1320 = call ptr @make_candy_text(ptr %1319)
  store ptr %1320, ptr @"Core:result:unwrapOrElse:16", align 8
  %1321 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:2\00", ptr %1321, align 1
  %1322 = call ptr @make_candy_text(ptr %1321)
  store ptr %1322, ptr @"Core:result:unwrapOrElse:2", align 8
  %1323 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:result:unwrapOrElse:20:9\00", ptr %1323, align 1
  %1324 = call ptr @make_candy_text(ptr %1323)
  store ptr %1324, ptr @"Core:result:unwrapOrElse:20:9", align 8
  %1325 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:result:unwrapOrElse:21\00", ptr %1325, align 1
  %1326 = call ptr @make_candy_text(ptr %1325)
  store ptr %1326, ptr @"Core:result:unwrapOrElse:21", align 8
  %1327 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:result:unwrapOrElse:4\00", ptr %1327, align 1
  %1328 = call ptr @make_candy_text(ptr %1327)
  store ptr %1328, ptr @"Core:result:unwrapOrElse:4", align 8
  %1329 = call ptr @make_candy_function(ptr @candy_builtin_list_insert, ptr null, i64 0)
  store ptr %1329, ptr @fun_candy_builtin_list_insert, align 8
  %1330 = call ptr @make_candy_function(ptr @candy_builtin_list_length, ptr null, i64 0)
  store ptr %1330, ptr @fun_candy_builtin_list_length, align 8
  %1331 = alloca i8, i64 6, align 1
  store [6 x i8] c"Empty\00", ptr %1331, align 1
  %1332 = call ptr @make_candy_tag(ptr %1331, ptr null)
  store ptr %1332, ptr @tag_Empty, align 8
  %1333 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %1333, align 1
  %1334 = call ptr @make_candy_tag(ptr %1333, ptr null)
  store ptr %1334, ptr @tag_Error, align 8
  %1335 = alloca i8, i64 6, align 1
  store [6 x i8] c"Index\00", ptr %1335, align 1
  %1336 = call ptr @make_candy_tag(ptr %1335, ptr null)
  store ptr %1336, ptr @tag_Index, align 8
  %1337 = alloca i8, i64 5, align 1
  store [5 x i8] c"Item\00", ptr %1337, align 1
  %1338 = call ptr @make_candy_tag(ptr %1337, ptr null)
  store ptr %1338, ptr @tag_Item, align 8
  %1339 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %1339, align 1
  %1340 = call ptr @make_candy_tag(ptr %1339, ptr null)
  store ptr %1340, ptr @tag_Iterator, align 8
  %1341 = alloca i8, i64 5, align 1
  store [5 x i8] c"List\00", ptr %1341, align 1
  %1342 = call ptr @make_candy_tag(ptr %1341, ptr null)
  store ptr %1342, ptr @tag_List, align 8
  %1343 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %1343, align 1
  %1344 = call ptr @make_candy_tag(ptr %1343, ptr null)
  store ptr %1344, ptr @tag_More, align 8
  %1345 = alloca i8, i64 2, align 1
  store [2 x i8] c"N\00", ptr %1345, align 1
  %1346 = call ptr @make_candy_tag(ptr %1345, ptr null)
  store ptr %1346, ptr @tag_N, align 8
  %1347 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %1347, align 1
  %1348 = call ptr @make_candy_tag(ptr %1347, ptr null)
  store ptr %1348, ptr @tag_Ok, align 8
  %1349 = alloca i8, i64 5, align 1
  store [5 x i8] c"Rest\00", ptr %1349, align 1
  %1350 = call ptr @make_candy_tag(ptr %1349, ptr null)
  store ptr %1350, ptr @tag_Rest, align 8
  %1351 = alloca i8, i64 6, align 1
  store [6 x i8] c"State\00", ptr %1351, align 1
  %1352 = call ptr @make_candy_tag(ptr %1351, ptr null)
  store ptr %1352, ptr @tag_State, align 8
  %1353 = alloca i8, i64 6, align 1
  store [6 x i8] c"Value\00", ptr %1353, align 1
  %1354 = call ptr @make_candy_tag(ptr %1353, ptr null)
  store ptr %1354, ptr @tag_Value, align 8
  %1355 = alloca i8, i64 1, align 1
  store [1 x i8] zeroinitializer, ptr %1355, align 1
  %1356 = call ptr @make_candy_text(ptr %1355)
  store ptr %1356, ptr @text_, align 8
  %1357 = alloca i8, i64 37, align 1
  store [37 x i8] c"Can't `reduceLeft` an empty iterator\00", ptr %1357, align 1
  %1358 = call ptr @make_candy_text(ptr %1357)
  store ptr %1358, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  %1359 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Empty, got \00", ptr %1359, align 1
  %1360 = call ptr @make_candy_text(ptr %1359)
  store ptr %1360, ptr @"text_Expected Empty, got ", align 8
  %1361 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Error, got \00", ptr %1361, align 1
  %1362 = call ptr @make_candy_text(ptr %1361)
  store ptr %1362, ptr @"text_Expected Error, got ", align 8
  %1363 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected Iterator, got \00", ptr %1363, align 1
  %1364 = call ptr @make_candy_text(ptr %1363)
  store ptr %1364, ptr @"text_Expected Iterator, got ", align 8
  %1365 = alloca i8, i64 20, align 1
  store [20 x i8] c"Expected More, got \00", ptr %1365, align 1
  %1366 = call ptr @make_candy_text(ptr %1365)
  store ptr %1366, ptr @"text_Expected More, got ", align 8
  %1367 = alloca i8, i64 18, align 1
  store [18 x i8] c"Expected Ok, got \00", ptr %1367, align 1
  %1368 = call ptr @make_candy_text(ptr %1367)
  store ptr %1368, ptr @"text_Expected Ok, got ", align 8
  %1369 = alloca i8, i64 32, align 1
  store [32 x i8] c"Iterator items need to be ints.\00", ptr %1369, align 1
  %1370 = call ptr @make_candy_text(ptr %1369)
  store ptr %1370, ptr @"text_Iterator items need to be ints.", align 8
  %1371 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Index`: `\00", ptr %1371, align 1
  %1372 = call ptr @make_candy_text(ptr %1371)
  store ptr %1372, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %1373 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Item`: `\00", ptr %1373, align 1
  %1374 = call ptr @make_candy_text(ptr %1373)
  store ptr %1374, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %1375 = alloca i8, i64 41, align 1
  store [41 x i8] c"Struct doesn't contain key `Iterator`: `\00", ptr %1375, align 1
  %1376 = call ptr @make_candy_text(ptr %1375)
  store ptr %1376, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %1377 = alloca i8, i64 34, align 1
  store [34 x i8] c"Struct doesn't contain key `N`: `\00", ptr %1377, align 1
  %1378 = call ptr @make_candy_text(ptr %1377)
  store ptr %1378, ptr @"text_Struct doesn't contain key `N`: `", align 8
  %1379 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `Rest`: `\00", ptr %1379, align 1
  %1380 = call ptr @make_candy_text(ptr %1379)
  store ptr %1380, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %1381 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `State`: `\00", ptr %1381, align 1
  %1382 = call ptr @make_candy_text(ptr %1381)
  store ptr %1382, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %1383 = alloca i8, i64 38, align 1
  store [38 x i8] c"Struct doesn't contain key `Value`: `\00", ptr %1383, align 1
  %1384 = call ptr @make_candy_text(ptr %1383)
  store ptr %1384, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  %1385 = alloca i8, i64 95, align 1
  store [95 x i8] c"The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `\00", ptr %1385, align 1
  %1386 = call ptr @make_candy_text(ptr %1385)
  store ptr %1386, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %1387 = alloca i8, i64 26, align 1
  store [26 x i8] c"The guard needs to panic.\00", ptr %1387, align 1
  %1388 = call ptr @make_candy_text(ptr %1387)
  store ptr %1388, ptr @"text_The guard needs to panic.", align 8
  %1389 = alloca i8, i64 2, align 1
  store [2 x i8] c"`\00", ptr %1389, align 1
  %1390 = call ptr @make_candy_text(ptr %1389)
  store ptr %1390, ptr @"text_`", align 8
  %1391 = alloca i8, i64 36, align 1
  store [36 x i8] c"`a | typeIs Text` was not satisfied\00", ptr %1391, align 1
  %1392 = call ptr @make_candy_text(ptr %1391)
  store ptr %1392, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %1393 = alloca i8, i64 25, align 1
  store [25 x i8] c"`all` needs an iterator.\00", ptr %1393, align 1
  %1394 = call ptr @make_candy_text(ptr %1393)
  store ptr %1394, ptr @"text_`all` needs an iterator.", align 8
  %1395 = alloca i8, i64 25, align 1
  store [25 x i8] c"`any` needs an iterator.\00", ptr %1395, align 1
  %1396 = call ptr @make_candy_text(ptr %1395)
  store ptr %1396, ptr @"text_`any` needs an iterator.", align 8
  %1397 = alloca i8, i64 36, align 1
  store [36 x i8] c"`b | typeIs Text` was not satisfied\00", ptr %1397, align 1
  %1398 = call ptr @make_candy_text(ptr %1397)
  store ptr %1398, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %1399 = alloca i8, i64 48, align 1
  store [48 x i8] c"`bool.is allowPartialWindows` was not satisfied\00", ptr %1399, align 1
  %1400 = call ptr @make_candy_text(ptr %1399)
  store ptr %1400, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  %1401 = alloca i8, i64 39, align 1
  store [39 x i8] c"`bool.is itemResult` was not satisfied\00", ptr %1401, align 1
  %1402 = call ptr @make_candy_text(ptr %1401)
  store ptr %1402, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %1403 = alloca i8, i64 29, align 1
  store [29 x i8] c"`chunked` needs an iterator.\00", ptr %1403, align 1
  %1404 = call ptr @make_candy_text(ptr %1403)
  store ptr %1404, ptr @"text_`chunked` needs an iterator.", align 8
  %1405 = alloca i8, i64 28, align 1
  store [28 x i8] c"`ensure` needs an iterator.\00", ptr %1405, align 1
  %1406 = call ptr @make_candy_text(ptr %1405)
  store ptr %1406, ptr @"text_`ensure` needs an iterator.", align 8
  %1407 = alloca i8, i64 30, align 1
  store [30 x i8] c"`foldLeft` needs an iterator.\00", ptr %1407, align 1
  %1408 = call ptr @make_candy_text(ptr %1407)
  store ptr %1408, ptr @"text_`foldLeft` needs an iterator.", align 8
  %1409 = alloca i8, i64 47, align 1
  store [47 x i8] c"`function.is0 defaultGetter` was not satisfied\00", ptr %1409, align 1
  %1410 = call ptr @make_candy_text(ptr %1409)
  store ptr %1410, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %1411 = alloca i8, i64 50, align 1
  store [50 x i8] c"`function.is0 notIteratorGuard` was not satisfied\00", ptr %1411, align 1
  %1412 = call ptr @make_candy_text(ptr %1411)
  store ptr %1412, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  %1413 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 errorMapper` was not satisfied\00", ptr %1413, align 1
  %1414 = call ptr @make_candy_text(ptr %1413)
  store ptr %1414, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %1415 = alloca i8, i64 39, align 1
  store [39 x i8] c"`function.is1 guard` was not satisfied\00", ptr %1415, align 1
  %1416 = call ptr @make_candy_text(ptr %1415)
  store ptr %1416, ptr @"text_`function.is1 guard` was not satisfied", align 8
  %1417 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 mapper` was not satisfied\00", ptr %1417, align 1
  %1418 = call ptr @make_candy_text(ptr %1417)
  store ptr %1418, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %1419 = alloca i8, i64 42, align 1
  store [42 x i8] c"`function.is1 okMapper` was not satisfied\00", ptr %1419, align 1
  %1420 = call ptr @make_candy_text(ptr %1419)
  store ptr %1420, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %1421 = alloca i8, i64 40, align 1
  store [40 x i8] c"`function.is1 tester` was not satisfied\00", ptr %1421, align 1
  %1422 = call ptr @make_candy_text(ptr %1421)
  store ptr %1422, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %1423 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is1 valueGetter` was not satisfied\00", ptr %1423, align 1
  %1424 = call ptr @make_candy_text(ptr %1423)
  store ptr %1424, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  %1425 = alloca i8, i64 41, align 1
  store [41 x i8] c"`function.is2 combine` was not satisfied\00", ptr %1425, align 1
  %1426 = call ptr @make_candy_text(ptr %1425)
  store ptr %1426, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %1427 = alloca i8, i64 79, align 1
  store [77 x i8] c"`index | intCompareTo (list | (.listLength) | equals Less` was not satisfied\00", ptr %1427, align 1
  %1428 = call ptr @make_candy_text(ptr %1427)
  store ptr %1428, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %1429 = alloca i8, i64 72, align 1
  store [70 x i8] c"`index | isLessThanOrEqualTo (list | (.listLength)` was not satisfied\00", ptr %1429, align 1
  %1430 = call ptr @make_candy_text(ptr %1429)
  store ptr %1430, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %1431 = alloca i8, i64 42, align 1
  store [42 x i8] c"`index | isNonNegative` was not satisfied\00", ptr %1431, align 1
  %1432 = call ptr @make_candy_text(ptr %1431)
  store ptr %1432, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %1433 = alloca i8, i64 39, align 1
  store [39 x i8] c"`index | typeIs Int` was not satisfied\00", ptr %1433, align 1
  %1434 = call ptr @make_candy_text(ptr %1433)
  store ptr %1434, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %1435 = alloca i8, i64 45, align 1
  store [45 x i8] c"`int.fitsInRustU32 length` was not satisfied\00", ptr %1435, align 1
  %1436 = call ptr @make_candy_text(ptr %1435)
  store ptr %1436, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  %1437 = alloca i8, i64 34, align 1
  store [34 x i8] c"`int.is length` was not satisfied\00", ptr %1437, align 1
  %1438 = call ptr @make_candy_text(ptr %1437)
  store ptr %1438, ptr @"text_`int.is length` was not satisfied", align 8
  %1439 = alloca i8, i64 29, align 1
  store [29 x i8] c"`int.is n` was not satisfied\00", ptr %1439, align 1
  %1440 = call ptr @make_candy_text(ptr %1439)
  store ptr %1440, ptr @"text_`int.is n` was not satisfied", align 8
  %1441 = alloca i8, i64 32, align 1
  store [32 x i8] c"`int.is size` was not satisfied\00", ptr %1441, align 1
  %1442 = call ptr @make_candy_text(ptr %1441)
  store ptr %1442, ptr @"text_`int.is size` was not satisfied", align 8
  %1443 = alloca i8, i64 32, align 1
  store [32 x i8] c"`int.is step` was not satisfied\00", ptr %1443, align 1
  %1444 = call ptr @make_candy_text(ptr %1443)
  store ptr %1444, ptr @"text_`int.is step` was not satisfied", align 8
  %1445 = alloca i8, i64 45, align 1
  store [45 x i8] c"`int.isNonNegative length` was not satisfied\00", ptr %1445, align 1
  %1446 = call ptr @make_candy_text(ptr %1445)
  store ptr %1446, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  %1447 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isNonNegative n` was not satisfied\00", ptr %1447, align 1
  %1448 = call ptr @make_candy_text(ptr %1447)
  store ptr %1448, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %1449 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isPositive size` was not satisfied\00", ptr %1449, align 1
  %1450 = call ptr @make_candy_text(ptr %1449)
  store ptr %1450, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %1451 = alloca i8, i64 40, align 1
  store [40 x i8] c"`int.isPositive step` was not satisfied\00", ptr %1451, align 1
  %1452 = call ptr @make_candy_text(ptr %1451)
  store ptr %1452, ptr @"text_`int.isPositive step` was not satisfied", align 8
  %1453 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is list` was not satisfied\00", ptr %1453, align 1
  %1454 = call ptr @make_candy_text(ptr %1453)
  store ptr %1454, ptr @"text_`is list` was not satisfied", align 8
  %1455 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is result` was not satisfied\00", ptr %1455, align 1
  %1456 = call ptr @make_candy_text(ptr %1455)
  store ptr %1456, ptr @"text_`is result` was not satisfied", align 8
  %1457 = alloca i8, i64 29, align 1
  store [29 x i8] c"`isEmpty` needs an iterator.\00", ptr %1457, align 1
  %1458 = call ptr @make_candy_text(ptr %1457)
  store ptr %1458, ptr @"text_`isEmpty` needs an iterator.", align 8
  %1459 = alloca i8, i64 32, align 1
  store [32 x i8] c"`joinToText` needs an iterator.\00", ptr %1459, align 1
  %1460 = call ptr @make_candy_text(ptr %1459)
  store ptr %1460, ptr @"text_`joinToText` needs an iterator.", align 8
  %1461 = alloca i8, i64 28, align 1
  store [28 x i8] c"`length` needs an iterator.\00", ptr %1461, align 1
  %1462 = call ptr @make_candy_text(ptr %1461)
  store ptr %1462, ptr @"text_`length` needs an iterator.", align 8
  %1463 = alloca i8, i64 39, align 1
  store [39 x i8] c"`list | typeIs List` was not satisfied\00", ptr %1463, align 1
  %1464 = call ptr @make_candy_text(ptr %1463)
  store ptr %1464, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %1465 = alloca i8, i64 30, align 1
  store [30 x i8] c"`list.is l` was not satisfied\00", ptr %1465, align 1
  %1466 = call ptr @make_candy_text(ptr %1465)
  store ptr %1466, ptr @"text_`list.is l` was not satisfied", align 8
  %1467 = alloca i8, i64 25, align 1
  store [25 x i8] c"`map` needs an iterator.\00", ptr %1467, align 1
  %1468 = call ptr @make_candy_text(ptr %1467)
  store ptr %1468, ptr @"text_`map` needs an iterator.", align 8
  %1469 = alloca i8, i64 26, align 1
  store [26 x i8] c"`next` needs an iterator.\00", ptr %1469, align 1
  %1470 = call ptr @make_candy_text(ptr %1469)
  store ptr %1470, ptr @"text_`next` needs an iterator.", align 8
  %1471 = alloca i8, i64 32, align 1
  store [32 x i8] c"`reduceLeft` needs an iterator.\00", ptr %1471, align 1
  %1472 = call ptr @make_candy_text(ptr %1471)
  store ptr %1472, ptr @"text_`reduceLeft` needs an iterator.", align 8
  %1473 = alloca i8, i64 26, align 1
  store [26 x i8] c"`skip` needs an iterator.\00", ptr %1473, align 1
  %1474 = call ptr @make_candy_text(ptr %1473)
  store ptr %1474, ptr @"text_`skip` needs an iterator.", align 8
  %1475 = alloca i8, i64 25, align 1
  store [25 x i8] c"`sum` needs an iterator.\00", ptr %1475, align 1
  %1476 = call ptr @make_candy_text(ptr %1475)
  store ptr %1476, ptr @"text_`sum` needs an iterator.", align 8
  %1477 = alloca i8, i64 31, align 1
  store [31 x i8] c"`takeWhile` needs an iterator.\00", ptr %1477, align 1
  %1478 = call ptr @make_candy_text(ptr %1477)
  store ptr %1478, ptr @"text_`takeWhile` needs an iterator.", align 8
  %1479 = alloca i8, i64 26, align 1
  store [26 x i8] c"`take` needs an iterator.\00", ptr %1479, align 1
  %1480 = call ptr @make_candy_text(ptr %1479)
  store ptr %1480, ptr @"text_`take` needs an iterator.", align 8
  %1481 = alloca i8, i64 33, align 1
  store [33 x i8] c"`text.is item` was not satisfied\00", ptr %1481, align 1
  %1482 = call ptr @make_candy_text(ptr %1481)
  store ptr %1482, ptr @"text_`text.is item` was not satisfied", align 8
  %1483 = alloca i8, i64 28, align 1
  store [28 x i8] c"`toList` needs an iterator.\00", ptr %1483, align 1
  %1484 = call ptr @make_candy_text(ptr %1483)
  store ptr %1484, ptr @"text_`toList` needs an iterator.", align 8
  %1485 = alloca i8, i64 27, align 1
  store [27 x i8] c"`where` needs an iterator.\00", ptr %1485, align 1
  %1486 = call ptr @make_candy_text(ptr %1485)
  store ptr %1486, ptr @"text_`where` needs an iterator.", align 8
  %1487 = alloca i8, i64 30, align 1
  store [30 x i8] c"`windowed` needs an iterator.\00", ptr %1487, align 1
  %1488 = call ptr @make_candy_text(ptr %1487)
  store ptr %1488, ptr @"text_`windowed` needs an iterator.", align 8
  %1489 = alloca i8, i64 31, align 1
  store [31 x i8] c"`withIndex` needs an iterator.\00", ptr %1489, align 1
  %1490 = call ptr @make_candy_text(ptr %1489)
  store ptr %1490, ptr @"text_`withIndex` needs an iterator.", align 8
  %1491 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1492 = call ptr @make_candy_function(ptr @Core_result_is, ptr %1491, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1492, ptr @fun_Core_result_is, align 8
  %1493 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1494 = call ptr @make_candy_function(ptr @Core_result_mapOrElse, ptr %1493, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1494, ptr @fun_Core_result_mapOrElse, align 8
  %1495 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1496 = call ptr @make_candy_function(ptr @"Core_iterator_range_38, Core_result_unwrapOrElse_19", ptr %1495, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1496, ptr @"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19", align 8
  %1497 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1498 = call ptr @make_candy_function(ptr @Core_result_unwrapOr, ptr %1497, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1498, ptr @fun_Core_result_unwrapOr, align 8
  %1499 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1500 = call ptr @make_candy_function(ptr @Builtins__listGet, ptr %1499, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1500, ptr @fun_Builtins__listGet, align 8
  %1501 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1502 = call ptr @make_candy_function(ptr @Builtins__listInsert, ptr %1501, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1502, ptr @fun_Builtins__listInsert, align 8
  %1503 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1504 = call ptr @make_candy_function(ptr @Core_list_append, ptr %1503, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1504, ptr @fun_Core_list_append, align 8
  %1505 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1506 = call ptr @make_candy_function(ptr @"Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", ptr %1505, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1506, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %1507 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1508 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe, ptr %1507, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1508, ptr @fun_Core_iterator_wrapSafe, align 8
  %1509 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1510 = call ptr @make_candy_function(ptr @Core_iterator_next, ptr %1509, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1510, ptr @fun_Core_iterator_next, align 8
  %1511 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1512 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState, ptr %1511, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1512, ptr @fun_Core_iterator_generateWithState, align 8
  %1513 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1514 = call ptr @make_candy_function(ptr @Core_iterator_generate, ptr %1513, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1514, ptr @fun_Core_iterator_generate, align 8
  %1515 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1516 = call ptr @make_candy_function(ptr @Core_iterator_map, ptr %1515, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1516, ptr @fun_Core_iterator_map, align 8
  %1517 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1518 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11, ptr %1517, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1518, ptr @fun_Core_iterator_withIndex_11, align 8
  %1519 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1520 = call ptr @make_candy_function(ptr @Core_iterator_ensure, ptr %1519, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1520, ptr @fun_Core_iterator_ensure, align 8
  %1521 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1522 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft, ptr %1521, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1522, ptr @fun_Core_iterator_foldLeft, align 8
  %1523 = load ptr, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  %1524 = alloca i8, i64 6, align 1
  store [6 x i8] c"Error\00", ptr %1524, align 1
  %1525 = call ptr @make_candy_tag(ptr %1524, ptr %1523)
  store ptr %1525, ptr @tag_Error.459, align 8
  %1526 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1527 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-0_matched, ptr %1526, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1527, ptr @fun_Core_iterator_reduceLeft_18_case-0_matched, align 8
  %1528 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1529 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft, ptr %1528, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1529, ptr @fun_Core_iterator_reduceLeft, align 8
  %1530 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1531 = call ptr @make_candy_function(ptr @Core_iterator_sum_8, ptr %1530, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1531, ptr @fun_Core_iterator_sum_8, align 8
  %1532 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1533 = call ptr @make_candy_function(ptr @Core_iterator_sum, ptr %1532, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1533, ptr @fun_Core_iterator_sum, align 8
  %1534 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1535 = call ptr @make_candy_function(ptr @Core_iterator_length_5, ptr %1534, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1535, ptr @fun_Core_iterator_length_5, align 8
  %1536 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1537 = call ptr @make_candy_function(ptr @Core_iterator_all, ptr %1536, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1537, ptr @fun_Core_iterator_all, align 8
  %1538 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1539 = call ptr @make_candy_function(ptr @Core_iterator_any, ptr %1538, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1539, ptr @fun_Core_iterator_any, align 8
  %1540 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1541 = call ptr @make_candy_function(ptr @Core_iterator_joinToText, ptr %1540, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1541, ptr @fun_Core_iterator_joinToText, align 8
  %1542 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1543 = call ptr @make_candy_function(ptr @Core_iterator_where, ptr %1542, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1543, ptr @fun_Core_iterator_where, align 8
  %1544 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1545 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile, ptr %1544, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1545, ptr @fun_Core_iterator_takeWhile, align 8
  %1546 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1547 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_2, ptr %1546, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1547, ptr @fun_Core_iterator_withIndex_2, align 8
  %1548 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1549 = call ptr @make_candy_function(ptr @Core_iterator_take_34, ptr %1548, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1549, ptr @fun_Core_iterator_take_34, align 8
  %1550 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1551 = call ptr @make_candy_function(ptr @Core_iterator_take, ptr %1550, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1551, ptr @fun_Core_iterator_take, align 8
  %1552 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1553 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6, ptr %1552, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1553, ptr @fun_Core_iterator_skip_30_6, align 8
  %1554 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1555 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.630, ptr %1554, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1555, ptr @fun_Core_controlFlow_recursive_18.631, align 8
  %1556 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1557 = call ptr @make_candy_function(ptr @Core_iterator_skip, ptr %1556, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1557, ptr @fun_Core_iterator_skip, align 8
  %1558 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1559 = call ptr @make_candy_function(ptr @Core_iterator_fromList, ptr %1558, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1559, ptr @fun_Core_iterator_fromList, align 8
  %1560 = alloca ptr, i64 1, align 8
  %1561 = getelementptr ptr, ptr %1560, i64 0
  store ptr null, ptr %1561, align 8
  %1562 = call ptr @make_candy_list(ptr %1560)
  store ptr %1562, ptr @231, align 8
  %1563 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1564 = call ptr @make_candy_function(ptr @Core_iterator_toList_6, ptr %1563, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1564, ptr @fun_Core_iterator_toList_6, align 8
  %1565 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1566 = call ptr @make_candy_function(ptr @Core_iterator_toList_2, ptr %1565, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1566, ptr @fun_Core_iterator_toList_2, align 8
  %1567 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1568 = call ptr @make_candy_function(ptr @Core_iterator_windowed, ptr %1567, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1568, ptr @fun_Core_iterator_windowed, align 8
  %1569 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1570 = call ptr @make_candy_function(ptr @Core_iterator_chunked, ptr %1569, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1570, ptr @fun_Core_iterator_chunked, align 8
  %1571 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1572 = call ptr @make_candy_function(ptr @"Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", ptr %1571, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1572, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %1573 = alloca ptr, i64 4, align 8
  %1574 = load ptr, ptr @num_1, align 8
  %1575 = getelementptr ptr, ptr %1573, i64 0
  store ptr %1574, ptr %1575, align 8
  %1576 = load ptr, ptr @num_2, align 8
  %1577 = getelementptr ptr, ptr %1573, i64 1
  store ptr %1576, ptr %1577, align 8
  %1578 = load ptr, ptr @num_3, align 8
  %1579 = getelementptr ptr, ptr %1573, i64 2
  store ptr %1578, ptr %1579, align 8
  %1580 = getelementptr ptr, ptr %1573, i64 3
  store ptr null, ptr %1580, align 8
  %1581 = call ptr @make_candy_list(ptr %1573)
  store ptr %1581, ptr @232, align 8
  %1582 = load ptr, ptr @232, align 8
  %1583 = call ptr @Core_iterator_fromList(ptr %1582)
  %1584 = call ptr @make_candy_int(i64 6)
  store ptr %1584, ptr @num_6, align 8
  %1585 = call ptr @make_candy_int(i64 7)
  store ptr %1585, ptr @num_7, align 8
  %1586 = call ptr @make_candy_int(i64 8)
  store ptr %1586, ptr @num_8, align 8
  %1587 = call ptr @make_candy_int(i64 9)
  store ptr %1587, ptr @num_9, align 8
  %1588 = alloca ptr, i64 11, align 8
  %1589 = load ptr, ptr @num_1, align 8
  %1590 = getelementptr ptr, ptr %1588, i64 0
  store ptr %1589, ptr %1590, align 8
  %1591 = load ptr, ptr @num_2, align 8
  %1592 = getelementptr ptr, ptr %1588, i64 1
  store ptr %1591, ptr %1592, align 8
  %1593 = load ptr, ptr @num_3, align 8
  %1594 = getelementptr ptr, ptr %1588, i64 2
  store ptr %1593, ptr %1594, align 8
  %1595 = load ptr, ptr @num_4, align 8
  %1596 = getelementptr ptr, ptr %1588, i64 3
  store ptr %1595, ptr %1596, align 8
  %1597 = load ptr, ptr @num_5, align 8
  %1598 = getelementptr ptr, ptr %1588, i64 4
  store ptr %1597, ptr %1598, align 8
  %1599 = load ptr, ptr @num_6, align 8
  %1600 = getelementptr ptr, ptr %1588, i64 5
  store ptr %1599, ptr %1600, align 8
  %1601 = load ptr, ptr @num_7, align 8
  %1602 = getelementptr ptr, ptr %1588, i64 6
  store ptr %1601, ptr %1602, align 8
  %1603 = load ptr, ptr @num_8, align 8
  %1604 = getelementptr ptr, ptr %1588, i64 7
  store ptr %1603, ptr %1604, align 8
  %1605 = load ptr, ptr @num_9, align 8
  %1606 = getelementptr ptr, ptr %1588, i64 8
  store ptr %1605, ptr %1606, align 8
  %1607 = load ptr, ptr @num_10, align 8
  %1608 = getelementptr ptr, ptr %1588, i64 9
  store ptr %1607, ptr %1608, align 8
  %1609 = getelementptr ptr, ptr %1588, i64 10
  store ptr null, ptr %1609, align 8
  %1610 = call ptr @make_candy_list(ptr %1588)
  store ptr %1610, ptr @233, align 8
  %1611 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:123\00", ptr %1611, align 1
  %1612 = call ptr @make_candy_text(ptr %1611)
  store ptr %1612, ptr @"Core:iterator:123", align 8
  %1613 = load ptr, ptr @233, align 8
  %1614 = call ptr @Core_iterator_fromList(ptr %1613)
  %1615 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:127\00", ptr %1615, align 1
  %1616 = call ptr @make_candy_text(ptr %1615)
  store ptr %1616, ptr @"Core:iterator:127", align 8
  %1617 = call ptr @Core_iterator_next(ptr %1583)
  %1618 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:128\00", ptr %1618, align 1
  %1619 = call ptr @make_candy_text(ptr %1618)
  store ptr %1619, ptr @"Core:iterator:128", align 8
  %1620 = call ptr @candy_builtin_type_of(ptr %1617)
  %1621 = load ptr, ptr @tag_Tag, align 8
  %1622 = call ptr @candy_builtin_equals(ptr %1621, ptr %1620)
  %1623 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1624 = getelementptr inbounds { ptr }, ptr %1623, i32 0, i32 0
  store ptr %1617, ptr %1624, align 8
  %1625 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then, ptr %1623, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1625, ptr @fun_Core_iterator_128_equals_then, align 8
  %1626 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1627 = getelementptr inbounds { ptr }, ptr %1626, i32 0, i32 0
  store ptr %1620, ptr %1627, align 8
  %1628 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.654, ptr %1626, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1628, ptr @fun_Core_iterator_128_equals_else.655, align 8
  %1629 = load ptr, ptr @fun_Core_iterator_128_equals_then, align 8
  %1630 = load ptr, ptr @fun_Core_iterator_128_equals_else.655, align 8
  %1631 = call ptr @candy_builtin_if_else(ptr %1622, ptr %1629, ptr %1630)
  %1632 = load ptr, ptr @num_0, align 8
  %1633 = call ptr @candy_builtin_list_get(ptr %1631, ptr %1632)
  %1634 = load ptr, ptr @tag_Match, align 8
  %1635 = call ptr @candy_builtin_equals(ptr %1633, ptr %1634)
  %1636 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1637 = getelementptr inbounds { ptr }, ptr %1636, i32 0, i32 0
  store ptr %1631, ptr %1637, align 8
  %1638 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.656, ptr %1636, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1638, ptr @fun_Core_iterator_128_isMatch_else.657, align 8
  %1639 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1640 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.657, align 8
  %1641 = call ptr @candy_builtin_if_else(ptr %1635, ptr %1639, ptr %1640)
  %1642 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterator:item\00", ptr %1642, align 1
  %1643 = call ptr @make_candy_text(ptr %1642)
  store ptr %1643, ptr @"Core:iterator:item", align 8
  %1644 = load ptr, ptr @num_1, align 8
  %1645 = call ptr @candy_builtin_list_get(ptr %1631, ptr %1644)
  %1646 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:iterator:rest\00", ptr %1646, align 1
  %1647 = call ptr @make_candy_text(ptr %1646)
  store ptr %1647, ptr @"Core:iterator:rest", align 8
  %1648 = load ptr, ptr @num_2, align 8
  %1649 = call ptr @candy_builtin_list_get(ptr %1631, ptr %1648)
  %1650 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:133\00", ptr %1650, align 1
  %1651 = call ptr @make_candy_text(ptr %1650)
  store ptr %1651, ptr @"Core:iterator:133", align 8
  %1652 = load ptr, ptr @num_1, align 8
  %1653 = call ptr @Core_check_checkEquals(ptr %1645, ptr %1652)
  %1654 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:136\00", ptr %1654, align 1
  %1655 = call ptr @make_candy_text(ptr %1654)
  store ptr %1655, ptr @"Core:iterator:136", align 8
  %1656 = call ptr @Core_iterator_next(ptr %1649)
  %1657 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:137\00", ptr %1657, align 1
  %1658 = call ptr @make_candy_text(ptr %1657)
  store ptr %1658, ptr @"Core:iterator:137", align 8
  %1659 = call ptr @candy_builtin_type_of(ptr %1656)
  %1660 = load ptr, ptr @tag_Tag, align 8
  %1661 = call ptr @candy_builtin_equals(ptr %1660, ptr %1659)
  %1662 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1663 = getelementptr inbounds { ptr }, ptr %1662, i32 0, i32 0
  store ptr %1656, ptr %1663, align 8
  %1664 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then, ptr %1662, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1664, ptr @fun_Core_iterator_137_equals_then, align 8
  %1665 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1666 = getelementptr inbounds { ptr }, ptr %1665, i32 0, i32 0
  store ptr %1659, ptr %1666, align 8
  %1667 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.676, ptr %1665, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1667, ptr @fun_Core_iterator_137_equals_else.677, align 8
  %1668 = load ptr, ptr @fun_Core_iterator_137_equals_then, align 8
  %1669 = load ptr, ptr @fun_Core_iterator_137_equals_else.677, align 8
  %1670 = call ptr @candy_builtin_if_else(ptr %1661, ptr %1668, ptr %1669)
  %1671 = load ptr, ptr @num_0, align 8
  %1672 = call ptr @candy_builtin_list_get(ptr %1670, ptr %1671)
  %1673 = load ptr, ptr @tag_Match, align 8
  %1674 = call ptr @candy_builtin_equals(ptr %1672, ptr %1673)
  %1675 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %1676 = getelementptr inbounds { ptr }, ptr %1675, i32 0, i32 0
  store ptr %1670, ptr %1676, align 8
  %1677 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.678, ptr %1675, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %1677, ptr @fun_Core_iterator_137_isMatch_else.679, align 8
  %1678 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %1679 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.679, align 8
  %1680 = call ptr @candy_builtin_if_else(ptr %1674, ptr %1678, ptr %1679)
  %1681 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:item#1\00", ptr %1681, align 1
  %1682 = call ptr @make_candy_text(ptr %1681)
  store ptr %1682, ptr @"Core:iterator:item#1", align 8
  %1683 = load ptr, ptr @num_1, align 8
  %1684 = call ptr @candy_builtin_list_get(ptr %1670, ptr %1683)
  %1685 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:rest#1\00", ptr %1685, align 1
  %1686 = call ptr @make_candy_text(ptr %1685)
  store ptr %1686, ptr @"Core:iterator:rest#1", align 8
  %1687 = load ptr, ptr @num_2, align 8
  %1688 = call ptr @candy_builtin_list_get(ptr %1670, ptr %1687)
  %1689 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:142\00", ptr %1689, align 1
  %1690 = call ptr @make_candy_text(ptr %1689)
  store ptr %1690, ptr @"Core:iterator:142", align 8
  %1691 = load ptr, ptr @num_2, align 8
  %1692 = call ptr @Core_check_checkEquals(ptr %1684, ptr %1691)
  %1693 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:147\00", ptr %1693, align 1
  %1694 = call ptr @make_candy_text(ptr %1693)
  store ptr %1694, ptr @"Core:iterator:147", align 8
  %1695 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1696 = call ptr @make_candy_function(ptr @Core_iterator_isEmpty_2, ptr %1695, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1696, ptr @fun_Core_iterator_isEmpty_2, align 8
  %1697 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %1698 = call ptr @Core_iterator_wrapSafe(ptr %1583, ptr %1697)
  %1699 = call ptr @Core_iterator_next(ptr %1698)
  %1700 = load ptr, ptr @tag_Empty, align 8
  %1701 = call ptr @candy_builtin_equals(ptr %1699, ptr %1700)
  %1702 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:149\00", ptr %1702, align 1
  %1703 = call ptr @make_candy_text(ptr %1702)
  store ptr %1703, ptr @"Core:iterator:149", align 8
  %1704 = load ptr, ptr @tag_False, align 8
  %1705 = call ptr @Core_check_checkEquals(ptr %1701, ptr %1704)
  %1706 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:154\00", ptr %1706, align 1
  %1707 = call ptr @make_candy_text(ptr %1706)
  store ptr %1707, ptr @"Core:iterator:154", align 8
  %1708 = load ptr, ptr @231, align 8
  %1709 = call ptr @Core_iterator_fromList(ptr %1708)
  %1710 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:155\00", ptr %1710, align 1
  %1711 = call ptr @make_candy_text(ptr %1710)
  store ptr %1711, ptr @"Core:iterator:155", align 8
  %1712 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1713 = call ptr @make_candy_function(ptr @Core_iterator_isEmpty_2.680, ptr %1712, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1713, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %1714 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %1715 = call ptr @Core_iterator_wrapSafe(ptr %1709, ptr %1714)
  %1716 = call ptr @Core_iterator_next(ptr %1715)
  %1717 = load ptr, ptr @tag_Empty, align 8
  %1718 = call ptr @candy_builtin_equals(ptr %1716, ptr %1717)
  %1719 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:157\00", ptr %1719, align 1
  %1720 = call ptr @make_candy_text(ptr %1719)
  store ptr %1720, ptr @"Core:iterator:157", align 8
  %1721 = load ptr, ptr @tag_True, align 8
  %1722 = call ptr @Core_check_checkEquals(ptr %1718, ptr %1721)
  %1723 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:161:10\00", ptr %1723, align 1
  %1724 = call ptr @make_candy_text(ptr %1723)
  store ptr %1724, ptr @"Core:iterator:161:10", align 8
  %1725 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1726 = call ptr @make_candy_function(ptr @Core_iterator_161, ptr %1725, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1726, ptr @fun_Core_iterator_161, align 8
  %1727 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:162\00", ptr %1727, align 1
  %1728 = call ptr @make_candy_text(ptr %1727)
  store ptr %1728, ptr @"Core:iterator:162", align 8
  %1729 = load ptr, ptr @fun_Core_iterator_161, align 8
  %1730 = call ptr @Core_iterator_map(ptr %1583, ptr %1729)
  %1731 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:164\00", ptr %1731, align 1
  %1732 = call ptr @make_candy_text(ptr %1731)
  store ptr %1732, ptr @"Core:iterator:164", align 8
  %1733 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1734 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.682, ptr %1733, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1734, ptr @fun_Core_iterator_toList_2.683, align 8
  %1735 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %1736 = call ptr @Core_iterator_wrapSafe(ptr %1730, ptr %1735)
  %1737 = load ptr, ptr @231, align 8
  %1738 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1739 = call ptr @Core_iterator_foldLeft(ptr %1736, ptr %1737, ptr %1738)
  %1740 = alloca ptr, i64 4, align 8
  %1741 = load ptr, ptr @num_2, align 8
  %1742 = getelementptr ptr, ptr %1740, i64 0
  store ptr %1741, ptr %1742, align 8
  %1743 = load ptr, ptr @num_4, align 8
  %1744 = getelementptr ptr, ptr %1740, i64 1
  store ptr %1743, ptr %1744, align 8
  %1745 = load ptr, ptr @num_6, align 8
  %1746 = getelementptr ptr, ptr %1740, i64 2
  store ptr %1745, ptr %1746, align 8
  %1747 = getelementptr ptr, ptr %1740, i64 3
  store ptr null, ptr %1747, align 8
  %1748 = call ptr @make_candy_list(ptr %1740)
  store ptr %1748, ptr @250, align 8
  %1749 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:169\00", ptr %1749, align 1
  %1750 = call ptr @make_candy_text(ptr %1749)
  store ptr %1750, ptr @"Core:iterator:169", align 8
  %1751 = load ptr, ptr @250, align 8
  %1752 = call ptr @Core_check_checkEquals(ptr %1739, ptr %1751)
  %1753 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:173\00", ptr %1753, align 1
  %1754 = call ptr @make_candy_text(ptr %1753)
  store ptr %1754, ptr @"Core:iterator:173", align 8
  %1755 = call ptr @Core_iterator_sum(ptr %1583)
  %1756 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:175\00", ptr %1756, align 1
  %1757 = call ptr @make_candy_text(ptr %1756)
  store ptr %1757, ptr @"Core:iterator:175", align 8
  %1758 = load ptr, ptr @num_6, align 8
  %1759 = call ptr @Core_check_checkEquals(ptr %1755, ptr %1758)
  %1760 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:179\00", ptr %1760, align 1
  %1761 = call ptr @make_candy_text(ptr %1760)
  store ptr %1761, ptr @"Core:iterator:179", align 8
  %1762 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1763 = call ptr @make_candy_function(ptr @Core_iterator_length_2, ptr %1762, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1763, ptr @fun_Core_iterator_length_2, align 8
  %1764 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %1765 = call ptr @Core_iterator_wrapSafe(ptr %1583, ptr %1764)
  %1766 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %1767 = call ptr @Core_iterator_map(ptr %1765, ptr %1766)
  %1768 = call ptr @Core_iterator_sum(ptr %1767)
  %1769 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:181\00", ptr %1769, align 1
  %1770 = call ptr @make_candy_text(ptr %1769)
  store ptr %1770, ptr @"Core:iterator:181", align 8
  %1771 = load ptr, ptr @num_3, align 8
  %1772 = call ptr @Core_check_checkEquals(ptr %1768, ptr %1771)
  %1773 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:185:9\00", ptr %1773, align 1
  %1774 = call ptr @make_candy_text(ptr %1773)
  store ptr %1774, ptr @"Core:iterator:185:9", align 8
  %1775 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1776 = call ptr @make_candy_function(ptr @Core_iterator_185, ptr %1775, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1776, ptr @fun_Core_iterator_185, align 8
  %1777 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:186\00", ptr %1777, align 1
  %1778 = call ptr @make_candy_text(ptr %1777)
  store ptr %1778, ptr @"Core:iterator:186", align 8
  %1779 = load ptr, ptr @fun_Core_iterator_185, align 8
  %1780 = call ptr @Core_iterator_all(ptr %1583, ptr %1779)
  %1781 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:188\00", ptr %1781, align 1
  %1782 = call ptr @make_candy_text(ptr %1781)
  store ptr %1782, ptr @"Core:iterator:188", align 8
  %1783 = load ptr, ptr @tag_True, align 8
  %1784 = call ptr @Core_check_checkEquals(ptr %1780, ptr %1783)
  %1785 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1786 = call ptr @make_candy_function(ptr @Core_iterator_192, ptr %1785, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1786, ptr @fun_Core_iterator_192, align 8
  %1787 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:193\00", ptr %1787, align 1
  %1788 = call ptr @make_candy_text(ptr %1787)
  store ptr %1788, ptr @"Core:iterator:193", align 8
  %1789 = load ptr, ptr @fun_Core_iterator_192, align 8
  %1790 = call ptr @Core_iterator_any(ptr %1583, ptr %1789)
  %1791 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:195\00", ptr %1791, align 1
  %1792 = call ptr @make_candy_text(ptr %1791)
  store ptr %1792, ptr @"Core:iterator:195", align 8
  %1793 = load ptr, ptr @tag_True, align 8
  %1794 = call ptr @Core_check_checkEquals(ptr %1790, ptr %1793)
  %1795 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:200\00", ptr %1795, align 1
  %1796 = call ptr @make_candy_text(ptr %1795)
  store ptr %1796, ptr @"Core:iterator:200", align 8
  %1797 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %1798 = call ptr @Core_iterator_map(ptr %1583, ptr %1797)
  %1799 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:202\00", ptr %1799, align 1
  %1800 = call ptr @make_candy_text(ptr %1799)
  store ptr %1800, ptr @"Core:iterator:202", align 8
  %1801 = call ptr @Core_iterator_joinToText(ptr %1798)
  %1802 = alloca i8, i64 4, align 1
  store [4 x i8] c"123\00", ptr %1802, align 1
  %1803 = call ptr @make_candy_text(ptr %1802)
  store ptr %1803, ptr @text_123, align 8
  %1804 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:210\00", ptr %1804, align 1
  %1805 = call ptr @make_candy_text(ptr %1804)
  store ptr %1805, ptr @"Core:iterator:210", align 8
  %1806 = load ptr, ptr @text_123, align 8
  %1807 = call ptr @Core_check_checkEquals(ptr %1801, ptr %1806)
  %1808 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:iterator:214:9\00", ptr %1808, align 1
  %1809 = call ptr @make_candy_text(ptr %1808)
  store ptr %1809, ptr @"Core:iterator:214:9", align 8
  %1810 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1811 = call ptr @make_candy_function(ptr @Core_iterator_214, ptr %1810, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1811, ptr @fun_Core_iterator_214, align 8
  %1812 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:215\00", ptr %1812, align 1
  %1813 = call ptr @make_candy_text(ptr %1812)
  store ptr %1813, ptr @"Core:iterator:215", align 8
  %1814 = load ptr, ptr @fun_Core_iterator_214, align 8
  %1815 = call ptr @Core_iterator_where(ptr %1614, ptr %1814)
  %1816 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:217\00", ptr %1816, align 1
  %1817 = call ptr @make_candy_text(ptr %1816)
  store ptr %1817, ptr @"Core:iterator:217", align 8
  %1818 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1819 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.684, ptr %1818, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1819, ptr @fun_Core_iterator_toList_2.685, align 8
  %1820 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %1821 = call ptr @Core_iterator_wrapSafe(ptr %1815, ptr %1820)
  %1822 = load ptr, ptr @231, align 8
  %1823 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1824 = call ptr @Core_iterator_foldLeft(ptr %1821, ptr %1822, ptr %1823)
  %1825 = alloca ptr, i64 6, align 8
  %1826 = load ptr, ptr @num_1, align 8
  %1827 = getelementptr ptr, ptr %1825, i64 0
  store ptr %1826, ptr %1827, align 8
  %1828 = load ptr, ptr @num_3, align 8
  %1829 = getelementptr ptr, ptr %1825, i64 1
  store ptr %1828, ptr %1829, align 8
  %1830 = load ptr, ptr @num_5, align 8
  %1831 = getelementptr ptr, ptr %1825, i64 2
  store ptr %1830, ptr %1831, align 8
  %1832 = load ptr, ptr @num_7, align 8
  %1833 = getelementptr ptr, ptr %1825, i64 3
  store ptr %1832, ptr %1833, align 8
  %1834 = load ptr, ptr @num_9, align 8
  %1835 = getelementptr ptr, ptr %1825, i64 4
  store ptr %1834, ptr %1835, align 8
  %1836 = getelementptr ptr, ptr %1825, i64 5
  store ptr null, ptr %1836, align 8
  %1837 = call ptr @make_candy_list(ptr %1825)
  store ptr %1837, ptr @251, align 8
  %1838 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:224\00", ptr %1838, align 1
  %1839 = call ptr @make_candy_text(ptr %1838)
  store ptr %1839, ptr @"Core:iterator:224", align 8
  %1840 = load ptr, ptr @251, align 8
  %1841 = call ptr @Core_check_checkEquals(ptr %1824, ptr %1840)
  %1842 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:iterator:228:10\00", ptr %1842, align 1
  %1843 = call ptr @make_candy_text(ptr %1842)
  store ptr %1843, ptr @"Core:iterator:228:10", align 8
  %1844 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1845 = call ptr @make_candy_function(ptr @Core_iterator_228, ptr %1844, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1845, ptr @fun_Core_iterator_228, align 8
  %1846 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:229\00", ptr %1846, align 1
  %1847 = call ptr @make_candy_text(ptr %1846)
  store ptr %1847, ptr @"Core:iterator:229", align 8
  %1848 = load ptr, ptr @fun_Core_iterator_228, align 8
  %1849 = call ptr @Core_iterator_takeWhile(ptr %1614, ptr %1848)
  %1850 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:231\00", ptr %1850, align 1
  %1851 = call ptr @make_candy_text(ptr %1850)
  store ptr %1851, ptr @"Core:iterator:231", align 8
  %1852 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1853 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.686, ptr %1852, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1853, ptr @fun_Core_iterator_toList_2.687, align 8
  %1854 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %1855 = call ptr @Core_iterator_wrapSafe(ptr %1849, ptr %1854)
  %1856 = load ptr, ptr @231, align 8
  %1857 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1858 = call ptr @Core_iterator_foldLeft(ptr %1855, ptr %1856, ptr %1857)
  %1859 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:236\00", ptr %1859, align 1
  %1860 = call ptr @make_candy_text(ptr %1859)
  store ptr %1860, ptr @"Core:iterator:236", align 8
  %1861 = load ptr, ptr @232, align 8
  %1862 = call ptr @Core_check_checkEquals(ptr %1858, ptr %1861)
  %1863 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:241\00", ptr %1863, align 1
  %1864 = call ptr @make_candy_text(ptr %1863)
  store ptr %1864, ptr @"Core:iterator:241", align 8
  %1865 = load ptr, ptr @num_4, align 8
  %1866 = call ptr @Core_iterator_take(ptr %1614, ptr %1865)
  %1867 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:243\00", ptr %1867, align 1
  %1868 = call ptr @make_candy_text(ptr %1867)
  store ptr %1868, ptr @"Core:iterator:243", align 8
  %1869 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1870 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.688, ptr %1869, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1870, ptr @fun_Core_iterator_toList_2.689, align 8
  %1871 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %1872 = call ptr @Core_iterator_wrapSafe(ptr %1866, ptr %1871)
  %1873 = load ptr, ptr @231, align 8
  %1874 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1875 = call ptr @Core_iterator_foldLeft(ptr %1872, ptr %1873, ptr %1874)
  %1876 = alloca ptr, i64 5, align 8
  %1877 = load ptr, ptr @num_1, align 8
  %1878 = getelementptr ptr, ptr %1876, i64 0
  store ptr %1877, ptr %1878, align 8
  %1879 = load ptr, ptr @num_2, align 8
  %1880 = getelementptr ptr, ptr %1876, i64 1
  store ptr %1879, ptr %1880, align 8
  %1881 = load ptr, ptr @num_3, align 8
  %1882 = getelementptr ptr, ptr %1876, i64 2
  store ptr %1881, ptr %1882, align 8
  %1883 = load ptr, ptr @num_4, align 8
  %1884 = getelementptr ptr, ptr %1876, i64 3
  store ptr %1883, ptr %1884, align 8
  %1885 = getelementptr ptr, ptr %1876, i64 4
  store ptr null, ptr %1885, align 8
  %1886 = call ptr @make_candy_list(ptr %1876)
  store ptr %1886, ptr @252, align 8
  %1887 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:249\00", ptr %1887, align 1
  %1888 = call ptr @make_candy_text(ptr %1887)
  store ptr %1888, ptr @"Core:iterator:249", align 8
  %1889 = load ptr, ptr @252, align 8
  %1890 = call ptr @Core_check_checkEquals(ptr %1875, ptr %1889)
  %1891 = call ptr @make_candy_int(i64 12)
  store ptr %1891, ptr @num_12, align 8
  %1892 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:254\00", ptr %1892, align 1
  %1893 = call ptr @make_candy_text(ptr %1892)
  store ptr %1893, ptr @"Core:iterator:254", align 8
  %1894 = load ptr, ptr @num_12, align 8
  %1895 = call ptr @Core_iterator_take(ptr %1614, ptr %1894)
  %1896 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:256\00", ptr %1896, align 1
  %1897 = call ptr @make_candy_text(ptr %1896)
  store ptr %1897, ptr @"Core:iterator:256", align 8
  %1898 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1899 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.690, ptr %1898, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1899, ptr @fun_Core_iterator_toList_2.691, align 8
  %1900 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %1901 = call ptr @Core_iterator_wrapSafe(ptr %1895, ptr %1900)
  %1902 = load ptr, ptr @231, align 8
  %1903 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1904 = call ptr @Core_iterator_foldLeft(ptr %1901, ptr %1902, ptr %1903)
  %1905 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:268\00", ptr %1905, align 1
  %1906 = call ptr @make_candy_text(ptr %1905)
  store ptr %1906, ptr @"Core:iterator:268", align 8
  %1907 = load ptr, ptr @233, align 8
  %1908 = call ptr @Core_check_checkEquals(ptr %1904, ptr %1907)
  %1909 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:273\00", ptr %1909, align 1
  %1910 = call ptr @make_candy_text(ptr %1909)
  store ptr %1910, ptr @"Core:iterator:273", align 8
  %1911 = load ptr, ptr @num_4, align 8
  %1912 = call ptr @Core_iterator_skip(ptr %1614, ptr %1911)
  %1913 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:275\00", ptr %1913, align 1
  %1914 = call ptr @make_candy_text(ptr %1913)
  store ptr %1914, ptr @"Core:iterator:275", align 8
  %1915 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1916 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.692, ptr %1915, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1916, ptr @fun_Core_iterator_toList_2.693, align 8
  %1917 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %1918 = call ptr @Core_iterator_wrapSafe(ptr %1912, ptr %1917)
  %1919 = load ptr, ptr @231, align 8
  %1920 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1921 = call ptr @Core_iterator_foldLeft(ptr %1918, ptr %1919, ptr %1920)
  %1922 = alloca ptr, i64 7, align 8
  %1923 = load ptr, ptr @num_5, align 8
  %1924 = getelementptr ptr, ptr %1922, i64 0
  store ptr %1923, ptr %1924, align 8
  %1925 = load ptr, ptr @num_6, align 8
  %1926 = getelementptr ptr, ptr %1922, i64 1
  store ptr %1925, ptr %1926, align 8
  %1927 = load ptr, ptr @num_7, align 8
  %1928 = getelementptr ptr, ptr %1922, i64 2
  store ptr %1927, ptr %1928, align 8
  %1929 = load ptr, ptr @num_8, align 8
  %1930 = getelementptr ptr, ptr %1922, i64 3
  store ptr %1929, ptr %1930, align 8
  %1931 = load ptr, ptr @num_9, align 8
  %1932 = getelementptr ptr, ptr %1922, i64 4
  store ptr %1931, ptr %1932, align 8
  %1933 = load ptr, ptr @num_10, align 8
  %1934 = getelementptr ptr, ptr %1922, i64 5
  store ptr %1933, ptr %1934, align 8
  %1935 = getelementptr ptr, ptr %1922, i64 6
  store ptr null, ptr %1935, align 8
  %1936 = call ptr @make_candy_list(ptr %1922)
  store ptr %1936, ptr @253, align 8
  %1937 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:283\00", ptr %1937, align 1
  %1938 = call ptr @make_candy_text(ptr %1937)
  store ptr %1938, ptr @"Core:iterator:283", align 8
  %1939 = load ptr, ptr @253, align 8
  %1940 = call ptr @Core_check_checkEquals(ptr %1921, ptr %1939)
  %1941 = call ptr @make_candy_int(i64 40)
  store ptr %1941, ptr @num_40, align 8
  %1942 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:288\00", ptr %1942, align 1
  %1943 = call ptr @make_candy_text(ptr %1942)
  store ptr %1943, ptr @"Core:iterator:288", align 8
  %1944 = load ptr, ptr @num_40, align 8
  %1945 = call ptr @Core_iterator_skip(ptr %1614, ptr %1944)
  %1946 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:290\00", ptr %1946, align 1
  %1947 = call ptr @make_candy_text(ptr %1946)
  store ptr %1947, ptr @"Core:iterator:290", align 8
  %1948 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1949 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.694, ptr %1948, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1949, ptr @fun_Core_iterator_toList_2.695, align 8
  %1950 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %1951 = call ptr @Core_iterator_wrapSafe(ptr %1945, ptr %1950)
  %1952 = load ptr, ptr @231, align 8
  %1953 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1954 = call ptr @Core_iterator_foldLeft(ptr %1951, ptr %1952, ptr %1953)
  %1955 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:292\00", ptr %1955, align 1
  %1956 = call ptr @make_candy_text(ptr %1955)
  store ptr %1956, ptr @"Core:iterator:292", align 8
  %1957 = load ptr, ptr @231, align 8
  %1958 = call ptr @Core_check_checkEquals(ptr %1954, ptr %1957)
  %1959 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:299\00", ptr %1959, align 1
  %1960 = call ptr @make_candy_text(ptr %1959)
  store ptr %1960, ptr @"Core:iterator:299", align 8
  %1961 = load ptr, ptr @num_4, align 8
  %1962 = load ptr, ptr @num_3, align 8
  %1963 = load ptr, ptr @tag_False, align 8
  %1964 = call ptr @Core_iterator_windowed(ptr %1614, ptr %1961, ptr %1962, ptr %1963)
  %1965 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:301\00", ptr %1965, align 1
  %1966 = call ptr @make_candy_text(ptr %1965)
  store ptr %1966, ptr @"Core:iterator:301", align 8
  %1967 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %1968 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.696, ptr %1967, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %1968, ptr @fun_Core_iterator_toList_2.697, align 8
  %1969 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %1970 = call ptr @Core_iterator_wrapSafe(ptr %1964, ptr %1969)
  %1971 = load ptr, ptr @231, align 8
  %1972 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %1973 = call ptr @Core_iterator_foldLeft(ptr %1970, ptr %1971, ptr %1972)
  %1974 = alloca ptr, i64 5, align 8
  %1975 = load ptr, ptr @num_4, align 8
  %1976 = getelementptr ptr, ptr %1974, i64 0
  store ptr %1975, ptr %1976, align 8
  %1977 = load ptr, ptr @num_5, align 8
  %1978 = getelementptr ptr, ptr %1974, i64 1
  store ptr %1977, ptr %1978, align 8
  %1979 = load ptr, ptr @num_6, align 8
  %1980 = getelementptr ptr, ptr %1974, i64 2
  store ptr %1979, ptr %1980, align 8
  %1981 = load ptr, ptr @num_7, align 8
  %1982 = getelementptr ptr, ptr %1974, i64 3
  store ptr %1981, ptr %1982, align 8
  %1983 = getelementptr ptr, ptr %1974, i64 4
  store ptr null, ptr %1983, align 8
  %1984 = call ptr @make_candy_list(ptr %1974)
  store ptr %1984, ptr @254, align 8
  %1985 = alloca ptr, i64 5, align 8
  %1986 = load ptr, ptr @num_7, align 8
  %1987 = getelementptr ptr, ptr %1985, i64 0
  store ptr %1986, ptr %1987, align 8
  %1988 = load ptr, ptr @num_8, align 8
  %1989 = getelementptr ptr, ptr %1985, i64 1
  store ptr %1988, ptr %1989, align 8
  %1990 = load ptr, ptr @num_9, align 8
  %1991 = getelementptr ptr, ptr %1985, i64 2
  store ptr %1990, ptr %1991, align 8
  %1992 = load ptr, ptr @num_10, align 8
  %1993 = getelementptr ptr, ptr %1985, i64 3
  store ptr %1992, ptr %1993, align 8
  %1994 = getelementptr ptr, ptr %1985, i64 4
  store ptr null, ptr %1994, align 8
  %1995 = call ptr @make_candy_list(ptr %1985)
  store ptr %1995, ptr @255, align 8
  %1996 = alloca ptr, i64 4, align 8
  %1997 = load ptr, ptr @252, align 8
  %1998 = getelementptr ptr, ptr %1996, i64 0
  store ptr %1997, ptr %1998, align 8
  %1999 = load ptr, ptr @254, align 8
  %2000 = getelementptr ptr, ptr %1996, i64 1
  store ptr %1999, ptr %2000, align 8
  %2001 = load ptr, ptr @255, align 8
  %2002 = getelementptr ptr, ptr %1996, i64 2
  store ptr %2001, ptr %2002, align 8
  %2003 = getelementptr ptr, ptr %1996, i64 3
  store ptr null, ptr %2003, align 8
  %2004 = call ptr @make_candy_list(ptr %1996)
  store ptr %2004, ptr @256, align 8
  %2005 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:318\00", ptr %2005, align 1
  %2006 = call ptr @make_candy_text(ptr %2005)
  store ptr %2006, ptr @"Core:iterator:318", align 8
  %2007 = load ptr, ptr @256, align 8
  %2008 = call ptr @Core_check_checkEquals(ptr %1973, ptr %2007)
  %2009 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:323\00", ptr %2009, align 1
  %2010 = call ptr @make_candy_text(ptr %2009)
  store ptr %2010, ptr @"Core:iterator:323", align 8
  %2011 = load ptr, ptr @num_3, align 8
  %2012 = call ptr @Core_iterator_chunked(ptr %1614, ptr %2011)
  %2013 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:325\00", ptr %2013, align 1
  %2014 = call ptr @make_candy_text(ptr %2013)
  store ptr %2014, ptr @"Core:iterator:325", align 8
  %2015 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2016 = call ptr @make_candy_function(ptr @Core_iterator_toList_2.698, ptr %2015, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2016, ptr @fun_Core_iterator_toList_2.699, align 8
  %2017 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %2018 = call ptr @Core_iterator_wrapSafe(ptr %2012, ptr %2017)
  %2019 = load ptr, ptr @231, align 8
  %2020 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2021 = call ptr @Core_iterator_foldLeft(ptr %2018, ptr %2019, ptr %2020)
  %2022 = alloca ptr, i64 4, align 8
  %2023 = load ptr, ptr @num_4, align 8
  %2024 = getelementptr ptr, ptr %2022, i64 0
  store ptr %2023, ptr %2024, align 8
  %2025 = load ptr, ptr @num_5, align 8
  %2026 = getelementptr ptr, ptr %2022, i64 1
  store ptr %2025, ptr %2026, align 8
  %2027 = load ptr, ptr @num_6, align 8
  %2028 = getelementptr ptr, ptr %2022, i64 2
  store ptr %2027, ptr %2028, align 8
  %2029 = getelementptr ptr, ptr %2022, i64 3
  store ptr null, ptr %2029, align 8
  %2030 = call ptr @make_candy_list(ptr %2022)
  store ptr %2030, ptr @257, align 8
  %2031 = alloca ptr, i64 4, align 8
  %2032 = load ptr, ptr @num_7, align 8
  %2033 = getelementptr ptr, ptr %2031, i64 0
  store ptr %2032, ptr %2033, align 8
  %2034 = load ptr, ptr @num_8, align 8
  %2035 = getelementptr ptr, ptr %2031, i64 1
  store ptr %2034, ptr %2035, align 8
  %2036 = load ptr, ptr @num_9, align 8
  %2037 = getelementptr ptr, ptr %2031, i64 2
  store ptr %2036, ptr %2037, align 8
  %2038 = getelementptr ptr, ptr %2031, i64 3
  store ptr null, ptr %2038, align 8
  %2039 = call ptr @make_candy_list(ptr %2031)
  store ptr %2039, ptr @258, align 8
  %2040 = alloca ptr, i64 2, align 8
  %2041 = load ptr, ptr @num_10, align 8
  %2042 = getelementptr ptr, ptr %2040, i64 0
  store ptr %2041, ptr %2042, align 8
  %2043 = getelementptr ptr, ptr %2040, i64 1
  store ptr null, ptr %2043, align 8
  %2044 = call ptr @make_candy_list(ptr %2040)
  store ptr %2044, ptr @259, align 8
  %2045 = alloca ptr, i64 5, align 8
  %2046 = load ptr, ptr @232, align 8
  %2047 = getelementptr ptr, ptr %2045, i64 0
  store ptr %2046, ptr %2047, align 8
  %2048 = load ptr, ptr @257, align 8
  %2049 = getelementptr ptr, ptr %2045, i64 1
  store ptr %2048, ptr %2049, align 8
  %2050 = load ptr, ptr @258, align 8
  %2051 = getelementptr ptr, ptr %2045, i64 2
  store ptr %2050, ptr %2051, align 8
  %2052 = load ptr, ptr @259, align 8
  %2053 = getelementptr ptr, ptr %2045, i64 3
  store ptr %2052, ptr %2053, align 8
  %2054 = getelementptr ptr, ptr %2045, i64 4
  store ptr null, ptr %2054, align 8
  %2055 = call ptr @make_candy_list(ptr %2045)
  store ptr %2055, ptr @260, align 8
  %2056 = alloca i8, i64 18, align 1
  store [18 x i8] c"Core:iterator:341\00", ptr %2056, align 1
  %2057 = call ptr @make_candy_text(ptr %2056)
  store ptr %2057, ptr @"Core:iterator:341", align 8
  %2058 = load ptr, ptr @260, align 8
  %2059 = call ptr @Core_check_checkEquals(ptr %2021, ptr %2058)
  %2060 = load ptr, ptr @num_0, align 8
  %2061 = load ptr, ptr @num_0, align 8
  %2062 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %2060, ptr %2061)
  %2063 = load ptr, ptr @232, align 8
  %2064 = call ptr @Core_iterator_fromList(ptr %2063)
  %2065 = load ptr, ptr @233, align 8
  %2066 = call ptr @Core_iterator_fromList(ptr %2065)
  %2067 = call ptr @Core_iterator_next(ptr %2064)
  %2068 = call ptr @candy_builtin_type_of(ptr %2067)
  %2069 = load ptr, ptr @tag_Tag, align 8
  %2070 = call ptr @candy_builtin_equals(ptr %2069, ptr %2068)
  %2071 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2072 = getelementptr inbounds { ptr }, ptr %2071, i32 0, i32 0
  store ptr %2067, ptr %2072, align 8
  %2073 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.700, ptr %2071, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2073, ptr @fun_Core_iterator_128_equals_then.701, align 8
  %2074 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2075 = getelementptr inbounds { ptr }, ptr %2074, i32 0, i32 0
  store ptr %2068, ptr %2075, align 8
  %2076 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.730, ptr %2074, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2076, ptr @fun_Core_iterator_128_equals_else.731, align 8
  %2077 = load ptr, ptr @fun_Core_iterator_128_equals_then.701, align 8
  %2078 = load ptr, ptr @fun_Core_iterator_128_equals_else.731, align 8
  %2079 = call ptr @candy_builtin_if_else(ptr %2070, ptr %2077, ptr %2078)
  %2080 = load ptr, ptr @num_0, align 8
  %2081 = call ptr @candy_builtin_list_get(ptr %2079, ptr %2080)
  %2082 = load ptr, ptr @tag_Match, align 8
  %2083 = call ptr @candy_builtin_equals(ptr %2081, ptr %2082)
  %2084 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2085 = getelementptr inbounds { ptr }, ptr %2084, i32 0, i32 0
  store ptr %2079, ptr %2085, align 8
  %2086 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.732, ptr %2084, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2086, ptr @fun_Core_iterator_128_isMatch_else.733, align 8
  %2087 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2088 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.733, align 8
  %2089 = call ptr @candy_builtin_if_else(ptr %2083, ptr %2087, ptr %2088)
  %2090 = load ptr, ptr @num_1, align 8
  %2091 = call ptr @candy_builtin_list_get(ptr %2079, ptr %2090)
  %2092 = load ptr, ptr @num_2, align 8
  %2093 = call ptr @candy_builtin_list_get(ptr %2079, ptr %2092)
  %2094 = load ptr, ptr @num_1, align 8
  %2095 = call ptr @Core_check_checkEquals(ptr %2091, ptr %2094)
  %2096 = call ptr @Core_iterator_next(ptr %2093)
  %2097 = call ptr @candy_builtin_type_of(ptr %2096)
  %2098 = load ptr, ptr @tag_Tag, align 8
  %2099 = call ptr @candy_builtin_equals(ptr %2098, ptr %2097)
  %2100 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2101 = getelementptr inbounds { ptr }, ptr %2100, i32 0, i32 0
  store ptr %2096, ptr %2101, align 8
  %2102 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.734, ptr %2100, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2102, ptr @fun_Core_iterator_137_equals_then.735, align 8
  %2103 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2104 = getelementptr inbounds { ptr }, ptr %2103, i32 0, i32 0
  store ptr %2097, ptr %2104, align 8
  %2105 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.764, ptr %2103, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2105, ptr @fun_Core_iterator_137_equals_else.765, align 8
  %2106 = load ptr, ptr @fun_Core_iterator_137_equals_then.735, align 8
  %2107 = load ptr, ptr @fun_Core_iterator_137_equals_else.765, align 8
  %2108 = call ptr @candy_builtin_if_else(ptr %2099, ptr %2106, ptr %2107)
  %2109 = load ptr, ptr @num_0, align 8
  %2110 = call ptr @candy_builtin_list_get(ptr %2108, ptr %2109)
  %2111 = load ptr, ptr @tag_Match, align 8
  %2112 = call ptr @candy_builtin_equals(ptr %2110, ptr %2111)
  %2113 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2114 = getelementptr inbounds { ptr }, ptr %2113, i32 0, i32 0
  store ptr %2108, ptr %2114, align 8
  %2115 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.766, ptr %2113, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2115, ptr @fun_Core_iterator_137_isMatch_else.767, align 8
  %2116 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2117 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.767, align 8
  %2118 = call ptr @candy_builtin_if_else(ptr %2112, ptr %2116, ptr %2117)
  %2119 = load ptr, ptr @num_1, align 8
  %2120 = call ptr @candy_builtin_list_get(ptr %2108, ptr %2119)
  %2121 = load ptr, ptr @num_2, align 8
  %2122 = call ptr @candy_builtin_list_get(ptr %2108, ptr %2121)
  %2123 = load ptr, ptr @num_2, align 8
  %2124 = call ptr @Core_check_checkEquals(ptr %2120, ptr %2123)
  %2125 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %2126 = call ptr @Core_iterator_wrapSafe(ptr %2064, ptr %2125)
  %2127 = call ptr @Core_iterator_next(ptr %2126)
  %2128 = load ptr, ptr @tag_Empty, align 8
  %2129 = call ptr @candy_builtin_equals(ptr %2127, ptr %2128)
  %2130 = load ptr, ptr @tag_False, align 8
  %2131 = call ptr @Core_check_checkEquals(ptr %2129, ptr %2130)
  %2132 = load ptr, ptr @231, align 8
  %2133 = call ptr @Core_iterator_fromList(ptr %2132)
  %2134 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %2135 = call ptr @Core_iterator_wrapSafe(ptr %2133, ptr %2134)
  %2136 = call ptr @Core_iterator_next(ptr %2135)
  %2137 = load ptr, ptr @tag_Empty, align 8
  %2138 = call ptr @candy_builtin_equals(ptr %2136, ptr %2137)
  %2139 = load ptr, ptr @tag_True, align 8
  %2140 = call ptr @Core_check_checkEquals(ptr %2138, ptr %2139)
  %2141 = load ptr, ptr @fun_Core_iterator_161, align 8
  %2142 = call ptr @Core_iterator_map(ptr %2064, ptr %2141)
  %2143 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %2144 = call ptr @Core_iterator_wrapSafe(ptr %2142, ptr %2143)
  %2145 = load ptr, ptr @231, align 8
  %2146 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2147 = call ptr @Core_iterator_foldLeft(ptr %2144, ptr %2145, ptr %2146)
  %2148 = load ptr, ptr @250, align 8
  %2149 = call ptr @Core_check_checkEquals(ptr %2147, ptr %2148)
  %2150 = call ptr @Core_iterator_sum(ptr %2064)
  %2151 = load ptr, ptr @num_6, align 8
  %2152 = call ptr @Core_check_checkEquals(ptr %2150, ptr %2151)
  %2153 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %2154 = call ptr @Core_iterator_wrapSafe(ptr %2064, ptr %2153)
  %2155 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %2156 = call ptr @Core_iterator_map(ptr %2154, ptr %2155)
  %2157 = call ptr @Core_iterator_sum(ptr %2156)
  %2158 = load ptr, ptr @num_3, align 8
  %2159 = call ptr @Core_check_checkEquals(ptr %2157, ptr %2158)
  %2160 = load ptr, ptr @fun_Core_iterator_185, align 8
  %2161 = call ptr @Core_iterator_all(ptr %2064, ptr %2160)
  %2162 = load ptr, ptr @tag_True, align 8
  %2163 = call ptr @Core_check_checkEquals(ptr %2161, ptr %2162)
  %2164 = load ptr, ptr @fun_Core_iterator_192, align 8
  %2165 = call ptr @Core_iterator_any(ptr %2064, ptr %2164)
  %2166 = load ptr, ptr @tag_True, align 8
  %2167 = call ptr @Core_check_checkEquals(ptr %2165, ptr %2166)
  %2168 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %2169 = call ptr @Core_iterator_map(ptr %2064, ptr %2168)
  %2170 = call ptr @Core_iterator_joinToText(ptr %2169)
  %2171 = load ptr, ptr @text_123, align 8
  %2172 = call ptr @Core_check_checkEquals(ptr %2170, ptr %2171)
  %2173 = load ptr, ptr @fun_Core_iterator_214, align 8
  %2174 = call ptr @Core_iterator_where(ptr %2066, ptr %2173)
  %2175 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %2176 = call ptr @Core_iterator_wrapSafe(ptr %2174, ptr %2175)
  %2177 = load ptr, ptr @231, align 8
  %2178 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2179 = call ptr @Core_iterator_foldLeft(ptr %2176, ptr %2177, ptr %2178)
  %2180 = load ptr, ptr @251, align 8
  %2181 = call ptr @Core_check_checkEquals(ptr %2179, ptr %2180)
  %2182 = load ptr, ptr @fun_Core_iterator_228, align 8
  %2183 = call ptr @Core_iterator_takeWhile(ptr %2066, ptr %2182)
  %2184 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %2185 = call ptr @Core_iterator_wrapSafe(ptr %2183, ptr %2184)
  %2186 = load ptr, ptr @231, align 8
  %2187 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2188 = call ptr @Core_iterator_foldLeft(ptr %2185, ptr %2186, ptr %2187)
  %2189 = load ptr, ptr @232, align 8
  %2190 = call ptr @Core_check_checkEquals(ptr %2188, ptr %2189)
  %2191 = load ptr, ptr @num_4, align 8
  %2192 = call ptr @Core_iterator_take(ptr %2066, ptr %2191)
  %2193 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %2194 = call ptr @Core_iterator_wrapSafe(ptr %2192, ptr %2193)
  %2195 = load ptr, ptr @231, align 8
  %2196 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2197 = call ptr @Core_iterator_foldLeft(ptr %2194, ptr %2195, ptr %2196)
  %2198 = load ptr, ptr @252, align 8
  %2199 = call ptr @Core_check_checkEquals(ptr %2197, ptr %2198)
  %2200 = load ptr, ptr @num_12, align 8
  %2201 = call ptr @Core_iterator_take(ptr %2066, ptr %2200)
  %2202 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %2203 = call ptr @Core_iterator_wrapSafe(ptr %2201, ptr %2202)
  %2204 = load ptr, ptr @231, align 8
  %2205 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2206 = call ptr @Core_iterator_foldLeft(ptr %2203, ptr %2204, ptr %2205)
  %2207 = load ptr, ptr @233, align 8
  %2208 = call ptr @Core_check_checkEquals(ptr %2206, ptr %2207)
  %2209 = load ptr, ptr @num_4, align 8
  %2210 = call ptr @Core_iterator_skip(ptr %2066, ptr %2209)
  %2211 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %2212 = call ptr @Core_iterator_wrapSafe(ptr %2210, ptr %2211)
  %2213 = load ptr, ptr @231, align 8
  %2214 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2215 = call ptr @Core_iterator_foldLeft(ptr %2212, ptr %2213, ptr %2214)
  %2216 = load ptr, ptr @253, align 8
  %2217 = call ptr @Core_check_checkEquals(ptr %2215, ptr %2216)
  %2218 = load ptr, ptr @num_40, align 8
  %2219 = call ptr @Core_iterator_skip(ptr %2066, ptr %2218)
  %2220 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %2221 = call ptr @Core_iterator_wrapSafe(ptr %2219, ptr %2220)
  %2222 = load ptr, ptr @231, align 8
  %2223 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2224 = call ptr @Core_iterator_foldLeft(ptr %2221, ptr %2222, ptr %2223)
  %2225 = load ptr, ptr @231, align 8
  %2226 = call ptr @Core_check_checkEquals(ptr %2224, ptr %2225)
  %2227 = load ptr, ptr @num_4, align 8
  %2228 = load ptr, ptr @num_3, align 8
  %2229 = load ptr, ptr @tag_False, align 8
  %2230 = call ptr @Core_iterator_windowed(ptr %2066, ptr %2227, ptr %2228, ptr %2229)
  %2231 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %2232 = call ptr @Core_iterator_wrapSafe(ptr %2230, ptr %2231)
  %2233 = load ptr, ptr @231, align 8
  %2234 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2235 = call ptr @Core_iterator_foldLeft(ptr %2232, ptr %2233, ptr %2234)
  %2236 = load ptr, ptr @256, align 8
  %2237 = call ptr @Core_check_checkEquals(ptr %2235, ptr %2236)
  %2238 = load ptr, ptr @num_3, align 8
  %2239 = call ptr @Core_iterator_chunked(ptr %2066, ptr %2238)
  %2240 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %2241 = call ptr @Core_iterator_wrapSafe(ptr %2239, ptr %2240)
  %2242 = load ptr, ptr @231, align 8
  %2243 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2244 = call ptr @Core_iterator_foldLeft(ptr %2241, ptr %2242, ptr %2243)
  %2245 = load ptr, ptr @260, align 8
  %2246 = call ptr @Core_check_checkEquals(ptr %2244, ptr %2245)
  %2247 = load ptr, ptr @num_0, align 8
  %2248 = load ptr, ptr @num_0, align 8
  %2249 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %2247, ptr %2248)
  %2250 = load ptr, ptr @232, align 8
  %2251 = call ptr @Core_iterator_fromList(ptr %2250)
  %2252 = load ptr, ptr @233, align 8
  %2253 = call ptr @Core_iterator_fromList(ptr %2252)
  %2254 = call ptr @Core_iterator_next(ptr %2251)
  %2255 = call ptr @candy_builtin_type_of(ptr %2254)
  %2256 = load ptr, ptr @tag_Tag, align 8
  %2257 = call ptr @candy_builtin_equals(ptr %2256, ptr %2255)
  %2258 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2259 = getelementptr inbounds { ptr }, ptr %2258, i32 0, i32 0
  store ptr %2254, ptr %2259, align 8
  %2260 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.768, ptr %2258, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2260, ptr @fun_Core_iterator_128_equals_then.769, align 8
  %2261 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2262 = getelementptr inbounds { ptr }, ptr %2261, i32 0, i32 0
  store ptr %2255, ptr %2262, align 8
  %2263 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.798, ptr %2261, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2263, ptr @fun_Core_iterator_128_equals_else.799, align 8
  %2264 = load ptr, ptr @fun_Core_iterator_128_equals_then.769, align 8
  %2265 = load ptr, ptr @fun_Core_iterator_128_equals_else.799, align 8
  %2266 = call ptr @candy_builtin_if_else(ptr %2257, ptr %2264, ptr %2265)
  %2267 = load ptr, ptr @num_0, align 8
  %2268 = call ptr @candy_builtin_list_get(ptr %2266, ptr %2267)
  %2269 = load ptr, ptr @tag_Match, align 8
  %2270 = call ptr @candy_builtin_equals(ptr %2268, ptr %2269)
  %2271 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2272 = getelementptr inbounds { ptr }, ptr %2271, i32 0, i32 0
  store ptr %2266, ptr %2272, align 8
  %2273 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.800, ptr %2271, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2273, ptr @fun_Core_iterator_128_isMatch_else.801, align 8
  %2274 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2275 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.801, align 8
  %2276 = call ptr @candy_builtin_if_else(ptr %2270, ptr %2274, ptr %2275)
  %2277 = load ptr, ptr @num_1, align 8
  %2278 = call ptr @candy_builtin_list_get(ptr %2266, ptr %2277)
  %2279 = load ptr, ptr @num_2, align 8
  %2280 = call ptr @candy_builtin_list_get(ptr %2266, ptr %2279)
  %2281 = load ptr, ptr @num_1, align 8
  %2282 = call ptr @Core_check_checkEquals(ptr %2278, ptr %2281)
  %2283 = call ptr @Core_iterator_next(ptr %2280)
  %2284 = call ptr @candy_builtin_type_of(ptr %2283)
  %2285 = load ptr, ptr @tag_Tag, align 8
  %2286 = call ptr @candy_builtin_equals(ptr %2285, ptr %2284)
  %2287 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2288 = getelementptr inbounds { ptr }, ptr %2287, i32 0, i32 0
  store ptr %2283, ptr %2288, align 8
  %2289 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.802, ptr %2287, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2289, ptr @fun_Core_iterator_137_equals_then.803, align 8
  %2290 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2291 = getelementptr inbounds { ptr }, ptr %2290, i32 0, i32 0
  store ptr %2284, ptr %2291, align 8
  %2292 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.832, ptr %2290, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2292, ptr @fun_Core_iterator_137_equals_else.833, align 8
  %2293 = load ptr, ptr @fun_Core_iterator_137_equals_then.803, align 8
  %2294 = load ptr, ptr @fun_Core_iterator_137_equals_else.833, align 8
  %2295 = call ptr @candy_builtin_if_else(ptr %2286, ptr %2293, ptr %2294)
  %2296 = load ptr, ptr @num_0, align 8
  %2297 = call ptr @candy_builtin_list_get(ptr %2295, ptr %2296)
  %2298 = load ptr, ptr @tag_Match, align 8
  %2299 = call ptr @candy_builtin_equals(ptr %2297, ptr %2298)
  %2300 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2301 = getelementptr inbounds { ptr }, ptr %2300, i32 0, i32 0
  store ptr %2295, ptr %2301, align 8
  %2302 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.834, ptr %2300, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2302, ptr @fun_Core_iterator_137_isMatch_else.835, align 8
  %2303 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2304 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.835, align 8
  %2305 = call ptr @candy_builtin_if_else(ptr %2299, ptr %2303, ptr %2304)
  %2306 = load ptr, ptr @num_1, align 8
  %2307 = call ptr @candy_builtin_list_get(ptr %2295, ptr %2306)
  %2308 = load ptr, ptr @num_2, align 8
  %2309 = call ptr @candy_builtin_list_get(ptr %2295, ptr %2308)
  %2310 = load ptr, ptr @num_2, align 8
  %2311 = call ptr @Core_check_checkEquals(ptr %2307, ptr %2310)
  %2312 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %2313 = call ptr @Core_iterator_wrapSafe(ptr %2251, ptr %2312)
  %2314 = call ptr @Core_iterator_next(ptr %2313)
  %2315 = load ptr, ptr @tag_Empty, align 8
  %2316 = call ptr @candy_builtin_equals(ptr %2314, ptr %2315)
  %2317 = load ptr, ptr @tag_False, align 8
  %2318 = call ptr @Core_check_checkEquals(ptr %2316, ptr %2317)
  %2319 = load ptr, ptr @231, align 8
  %2320 = call ptr @Core_iterator_fromList(ptr %2319)
  %2321 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %2322 = call ptr @Core_iterator_wrapSafe(ptr %2320, ptr %2321)
  %2323 = call ptr @Core_iterator_next(ptr %2322)
  %2324 = load ptr, ptr @tag_Empty, align 8
  %2325 = call ptr @candy_builtin_equals(ptr %2323, ptr %2324)
  %2326 = load ptr, ptr @tag_True, align 8
  %2327 = call ptr @Core_check_checkEquals(ptr %2325, ptr %2326)
  %2328 = load ptr, ptr @fun_Core_iterator_161, align 8
  %2329 = call ptr @Core_iterator_map(ptr %2251, ptr %2328)
  %2330 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %2331 = call ptr @Core_iterator_wrapSafe(ptr %2329, ptr %2330)
  %2332 = load ptr, ptr @231, align 8
  %2333 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2334 = call ptr @Core_iterator_foldLeft(ptr %2331, ptr %2332, ptr %2333)
  %2335 = load ptr, ptr @250, align 8
  %2336 = call ptr @Core_check_checkEquals(ptr %2334, ptr %2335)
  %2337 = call ptr @Core_iterator_sum(ptr %2251)
  %2338 = load ptr, ptr @num_6, align 8
  %2339 = call ptr @Core_check_checkEquals(ptr %2337, ptr %2338)
  %2340 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %2341 = call ptr @Core_iterator_wrapSafe(ptr %2251, ptr %2340)
  %2342 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %2343 = call ptr @Core_iterator_map(ptr %2341, ptr %2342)
  %2344 = call ptr @Core_iterator_sum(ptr %2343)
  %2345 = load ptr, ptr @num_3, align 8
  %2346 = call ptr @Core_check_checkEquals(ptr %2344, ptr %2345)
  %2347 = load ptr, ptr @fun_Core_iterator_185, align 8
  %2348 = call ptr @Core_iterator_all(ptr %2251, ptr %2347)
  %2349 = load ptr, ptr @tag_True, align 8
  %2350 = call ptr @Core_check_checkEquals(ptr %2348, ptr %2349)
  %2351 = load ptr, ptr @fun_Core_iterator_192, align 8
  %2352 = call ptr @Core_iterator_any(ptr %2251, ptr %2351)
  %2353 = load ptr, ptr @tag_True, align 8
  %2354 = call ptr @Core_check_checkEquals(ptr %2352, ptr %2353)
  %2355 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %2356 = call ptr @Core_iterator_map(ptr %2251, ptr %2355)
  %2357 = call ptr @Core_iterator_joinToText(ptr %2356)
  %2358 = load ptr, ptr @text_123, align 8
  %2359 = call ptr @Core_check_checkEquals(ptr %2357, ptr %2358)
  %2360 = load ptr, ptr @fun_Core_iterator_214, align 8
  %2361 = call ptr @Core_iterator_where(ptr %2253, ptr %2360)
  %2362 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %2363 = call ptr @Core_iterator_wrapSafe(ptr %2361, ptr %2362)
  %2364 = load ptr, ptr @231, align 8
  %2365 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2366 = call ptr @Core_iterator_foldLeft(ptr %2363, ptr %2364, ptr %2365)
  %2367 = load ptr, ptr @251, align 8
  %2368 = call ptr @Core_check_checkEquals(ptr %2366, ptr %2367)
  %2369 = load ptr, ptr @fun_Core_iterator_228, align 8
  %2370 = call ptr @Core_iterator_takeWhile(ptr %2253, ptr %2369)
  %2371 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %2372 = call ptr @Core_iterator_wrapSafe(ptr %2370, ptr %2371)
  %2373 = load ptr, ptr @231, align 8
  %2374 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2375 = call ptr @Core_iterator_foldLeft(ptr %2372, ptr %2373, ptr %2374)
  %2376 = load ptr, ptr @232, align 8
  %2377 = call ptr @Core_check_checkEquals(ptr %2375, ptr %2376)
  %2378 = load ptr, ptr @num_4, align 8
  %2379 = call ptr @Core_iterator_take(ptr %2253, ptr %2378)
  %2380 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %2381 = call ptr @Core_iterator_wrapSafe(ptr %2379, ptr %2380)
  %2382 = load ptr, ptr @231, align 8
  %2383 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2384 = call ptr @Core_iterator_foldLeft(ptr %2381, ptr %2382, ptr %2383)
  %2385 = load ptr, ptr @252, align 8
  %2386 = call ptr @Core_check_checkEquals(ptr %2384, ptr %2385)
  %2387 = load ptr, ptr @num_12, align 8
  %2388 = call ptr @Core_iterator_take(ptr %2253, ptr %2387)
  %2389 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %2390 = call ptr @Core_iterator_wrapSafe(ptr %2388, ptr %2389)
  %2391 = load ptr, ptr @231, align 8
  %2392 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2393 = call ptr @Core_iterator_foldLeft(ptr %2390, ptr %2391, ptr %2392)
  %2394 = load ptr, ptr @233, align 8
  %2395 = call ptr @Core_check_checkEquals(ptr %2393, ptr %2394)
  %2396 = load ptr, ptr @num_4, align 8
  %2397 = call ptr @Core_iterator_skip(ptr %2253, ptr %2396)
  %2398 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %2399 = call ptr @Core_iterator_wrapSafe(ptr %2397, ptr %2398)
  %2400 = load ptr, ptr @231, align 8
  %2401 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2402 = call ptr @Core_iterator_foldLeft(ptr %2399, ptr %2400, ptr %2401)
  %2403 = load ptr, ptr @253, align 8
  %2404 = call ptr @Core_check_checkEquals(ptr %2402, ptr %2403)
  %2405 = load ptr, ptr @num_40, align 8
  %2406 = call ptr @Core_iterator_skip(ptr %2253, ptr %2405)
  %2407 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %2408 = call ptr @Core_iterator_wrapSafe(ptr %2406, ptr %2407)
  %2409 = load ptr, ptr @231, align 8
  %2410 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2411 = call ptr @Core_iterator_foldLeft(ptr %2408, ptr %2409, ptr %2410)
  %2412 = load ptr, ptr @231, align 8
  %2413 = call ptr @Core_check_checkEquals(ptr %2411, ptr %2412)
  %2414 = load ptr, ptr @num_4, align 8
  %2415 = load ptr, ptr @num_3, align 8
  %2416 = load ptr, ptr @tag_False, align 8
  %2417 = call ptr @Core_iterator_windowed(ptr %2253, ptr %2414, ptr %2415, ptr %2416)
  %2418 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %2419 = call ptr @Core_iterator_wrapSafe(ptr %2417, ptr %2418)
  %2420 = load ptr, ptr @231, align 8
  %2421 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2422 = call ptr @Core_iterator_foldLeft(ptr %2419, ptr %2420, ptr %2421)
  %2423 = load ptr, ptr @256, align 8
  %2424 = call ptr @Core_check_checkEquals(ptr %2422, ptr %2423)
  %2425 = load ptr, ptr @num_3, align 8
  %2426 = call ptr @Core_iterator_chunked(ptr %2253, ptr %2425)
  %2427 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %2428 = call ptr @Core_iterator_wrapSafe(ptr %2426, ptr %2427)
  %2429 = load ptr, ptr @231, align 8
  %2430 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2431 = call ptr @Core_iterator_foldLeft(ptr %2428, ptr %2429, ptr %2430)
  %2432 = load ptr, ptr @260, align 8
  %2433 = call ptr @Core_check_checkEquals(ptr %2431, ptr %2432)
  %2434 = load ptr, ptr @num_0, align 8
  %2435 = load ptr, ptr @num_0, align 8
  %2436 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %2434, ptr %2435)
  %2437 = load ptr, ptr @232, align 8
  %2438 = call ptr @Core_iterator_fromList(ptr %2437)
  %2439 = load ptr, ptr @233, align 8
  %2440 = call ptr @Core_iterator_fromList(ptr %2439)
  %2441 = call ptr @Core_iterator_next(ptr %2438)
  %2442 = call ptr @candy_builtin_type_of(ptr %2441)
  %2443 = load ptr, ptr @tag_Tag, align 8
  %2444 = call ptr @candy_builtin_equals(ptr %2443, ptr %2442)
  %2445 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2446 = getelementptr inbounds { ptr }, ptr %2445, i32 0, i32 0
  store ptr %2441, ptr %2446, align 8
  %2447 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.836, ptr %2445, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2447, ptr @fun_Core_iterator_128_equals_then.837, align 8
  %2448 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2449 = getelementptr inbounds { ptr }, ptr %2448, i32 0, i32 0
  store ptr %2442, ptr %2449, align 8
  %2450 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.866, ptr %2448, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2450, ptr @fun_Core_iterator_128_equals_else.867, align 8
  %2451 = load ptr, ptr @fun_Core_iterator_128_equals_then.837, align 8
  %2452 = load ptr, ptr @fun_Core_iterator_128_equals_else.867, align 8
  %2453 = call ptr @candy_builtin_if_else(ptr %2444, ptr %2451, ptr %2452)
  %2454 = load ptr, ptr @num_0, align 8
  %2455 = call ptr @candy_builtin_list_get(ptr %2453, ptr %2454)
  %2456 = load ptr, ptr @tag_Match, align 8
  %2457 = call ptr @candy_builtin_equals(ptr %2455, ptr %2456)
  %2458 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2459 = getelementptr inbounds { ptr }, ptr %2458, i32 0, i32 0
  store ptr %2453, ptr %2459, align 8
  %2460 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.868, ptr %2458, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2460, ptr @fun_Core_iterator_128_isMatch_else.869, align 8
  %2461 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2462 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.869, align 8
  %2463 = call ptr @candy_builtin_if_else(ptr %2457, ptr %2461, ptr %2462)
  %2464 = load ptr, ptr @num_1, align 8
  %2465 = call ptr @candy_builtin_list_get(ptr %2453, ptr %2464)
  %2466 = load ptr, ptr @num_2, align 8
  %2467 = call ptr @candy_builtin_list_get(ptr %2453, ptr %2466)
  %2468 = load ptr, ptr @num_1, align 8
  %2469 = call ptr @Core_check_checkEquals(ptr %2465, ptr %2468)
  %2470 = call ptr @Core_iterator_next(ptr %2467)
  %2471 = call ptr @candy_builtin_type_of(ptr %2470)
  %2472 = load ptr, ptr @tag_Tag, align 8
  %2473 = call ptr @candy_builtin_equals(ptr %2472, ptr %2471)
  %2474 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2475 = getelementptr inbounds { ptr }, ptr %2474, i32 0, i32 0
  store ptr %2470, ptr %2475, align 8
  %2476 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.870, ptr %2474, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2476, ptr @fun_Core_iterator_137_equals_then.871, align 8
  %2477 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2478 = getelementptr inbounds { ptr }, ptr %2477, i32 0, i32 0
  store ptr %2471, ptr %2478, align 8
  %2479 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.900, ptr %2477, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2479, ptr @fun_Core_iterator_137_equals_else.901, align 8
  %2480 = load ptr, ptr @fun_Core_iterator_137_equals_then.871, align 8
  %2481 = load ptr, ptr @fun_Core_iterator_137_equals_else.901, align 8
  %2482 = call ptr @candy_builtin_if_else(ptr %2473, ptr %2480, ptr %2481)
  %2483 = load ptr, ptr @num_0, align 8
  %2484 = call ptr @candy_builtin_list_get(ptr %2482, ptr %2483)
  %2485 = load ptr, ptr @tag_Match, align 8
  %2486 = call ptr @candy_builtin_equals(ptr %2484, ptr %2485)
  %2487 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2488 = getelementptr inbounds { ptr }, ptr %2487, i32 0, i32 0
  store ptr %2482, ptr %2488, align 8
  %2489 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.902, ptr %2487, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2489, ptr @fun_Core_iterator_137_isMatch_else.903, align 8
  %2490 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2491 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.903, align 8
  %2492 = call ptr @candy_builtin_if_else(ptr %2486, ptr %2490, ptr %2491)
  %2493 = load ptr, ptr @num_1, align 8
  %2494 = call ptr @candy_builtin_list_get(ptr %2482, ptr %2493)
  %2495 = load ptr, ptr @num_2, align 8
  %2496 = call ptr @candy_builtin_list_get(ptr %2482, ptr %2495)
  %2497 = load ptr, ptr @num_2, align 8
  %2498 = call ptr @Core_check_checkEquals(ptr %2494, ptr %2497)
  %2499 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %2500 = call ptr @Core_iterator_wrapSafe(ptr %2438, ptr %2499)
  %2501 = call ptr @Core_iterator_next(ptr %2500)
  %2502 = load ptr, ptr @tag_Empty, align 8
  %2503 = call ptr @candy_builtin_equals(ptr %2501, ptr %2502)
  %2504 = load ptr, ptr @tag_False, align 8
  %2505 = call ptr @Core_check_checkEquals(ptr %2503, ptr %2504)
  %2506 = load ptr, ptr @231, align 8
  %2507 = call ptr @Core_iterator_fromList(ptr %2506)
  %2508 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %2509 = call ptr @Core_iterator_wrapSafe(ptr %2507, ptr %2508)
  %2510 = call ptr @Core_iterator_next(ptr %2509)
  %2511 = load ptr, ptr @tag_Empty, align 8
  %2512 = call ptr @candy_builtin_equals(ptr %2510, ptr %2511)
  %2513 = load ptr, ptr @tag_True, align 8
  %2514 = call ptr @Core_check_checkEquals(ptr %2512, ptr %2513)
  %2515 = load ptr, ptr @fun_Core_iterator_161, align 8
  %2516 = call ptr @Core_iterator_map(ptr %2438, ptr %2515)
  %2517 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %2518 = call ptr @Core_iterator_wrapSafe(ptr %2516, ptr %2517)
  %2519 = load ptr, ptr @231, align 8
  %2520 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2521 = call ptr @Core_iterator_foldLeft(ptr %2518, ptr %2519, ptr %2520)
  %2522 = load ptr, ptr @250, align 8
  %2523 = call ptr @Core_check_checkEquals(ptr %2521, ptr %2522)
  %2524 = call ptr @Core_iterator_sum(ptr %2438)
  %2525 = load ptr, ptr @num_6, align 8
  %2526 = call ptr @Core_check_checkEquals(ptr %2524, ptr %2525)
  %2527 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %2528 = call ptr @Core_iterator_wrapSafe(ptr %2438, ptr %2527)
  %2529 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %2530 = call ptr @Core_iterator_map(ptr %2528, ptr %2529)
  %2531 = call ptr @Core_iterator_sum(ptr %2530)
  %2532 = load ptr, ptr @num_3, align 8
  %2533 = call ptr @Core_check_checkEquals(ptr %2531, ptr %2532)
  %2534 = load ptr, ptr @fun_Core_iterator_185, align 8
  %2535 = call ptr @Core_iterator_all(ptr %2438, ptr %2534)
  %2536 = load ptr, ptr @tag_True, align 8
  %2537 = call ptr @Core_check_checkEquals(ptr %2535, ptr %2536)
  %2538 = load ptr, ptr @fun_Core_iterator_192, align 8
  %2539 = call ptr @Core_iterator_any(ptr %2438, ptr %2538)
  %2540 = load ptr, ptr @tag_True, align 8
  %2541 = call ptr @Core_check_checkEquals(ptr %2539, ptr %2540)
  %2542 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %2543 = call ptr @Core_iterator_map(ptr %2438, ptr %2542)
  %2544 = call ptr @Core_iterator_joinToText(ptr %2543)
  %2545 = load ptr, ptr @text_123, align 8
  %2546 = call ptr @Core_check_checkEquals(ptr %2544, ptr %2545)
  %2547 = load ptr, ptr @fun_Core_iterator_214, align 8
  %2548 = call ptr @Core_iterator_where(ptr %2440, ptr %2547)
  %2549 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %2550 = call ptr @Core_iterator_wrapSafe(ptr %2548, ptr %2549)
  %2551 = load ptr, ptr @231, align 8
  %2552 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2553 = call ptr @Core_iterator_foldLeft(ptr %2550, ptr %2551, ptr %2552)
  %2554 = load ptr, ptr @251, align 8
  %2555 = call ptr @Core_check_checkEquals(ptr %2553, ptr %2554)
  %2556 = load ptr, ptr @fun_Core_iterator_228, align 8
  %2557 = call ptr @Core_iterator_takeWhile(ptr %2440, ptr %2556)
  %2558 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %2559 = call ptr @Core_iterator_wrapSafe(ptr %2557, ptr %2558)
  %2560 = load ptr, ptr @231, align 8
  %2561 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2562 = call ptr @Core_iterator_foldLeft(ptr %2559, ptr %2560, ptr %2561)
  %2563 = load ptr, ptr @232, align 8
  %2564 = call ptr @Core_check_checkEquals(ptr %2562, ptr %2563)
  %2565 = load ptr, ptr @num_4, align 8
  %2566 = call ptr @Core_iterator_take(ptr %2440, ptr %2565)
  %2567 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %2568 = call ptr @Core_iterator_wrapSafe(ptr %2566, ptr %2567)
  %2569 = load ptr, ptr @231, align 8
  %2570 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2571 = call ptr @Core_iterator_foldLeft(ptr %2568, ptr %2569, ptr %2570)
  %2572 = load ptr, ptr @252, align 8
  %2573 = call ptr @Core_check_checkEquals(ptr %2571, ptr %2572)
  %2574 = load ptr, ptr @num_12, align 8
  %2575 = call ptr @Core_iterator_take(ptr %2440, ptr %2574)
  %2576 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %2577 = call ptr @Core_iterator_wrapSafe(ptr %2575, ptr %2576)
  %2578 = load ptr, ptr @231, align 8
  %2579 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2580 = call ptr @Core_iterator_foldLeft(ptr %2577, ptr %2578, ptr %2579)
  %2581 = load ptr, ptr @233, align 8
  %2582 = call ptr @Core_check_checkEquals(ptr %2580, ptr %2581)
  %2583 = load ptr, ptr @num_4, align 8
  %2584 = call ptr @Core_iterator_skip(ptr %2440, ptr %2583)
  %2585 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %2586 = call ptr @Core_iterator_wrapSafe(ptr %2584, ptr %2585)
  %2587 = load ptr, ptr @231, align 8
  %2588 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2589 = call ptr @Core_iterator_foldLeft(ptr %2586, ptr %2587, ptr %2588)
  %2590 = load ptr, ptr @253, align 8
  %2591 = call ptr @Core_check_checkEquals(ptr %2589, ptr %2590)
  %2592 = load ptr, ptr @num_40, align 8
  %2593 = call ptr @Core_iterator_skip(ptr %2440, ptr %2592)
  %2594 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %2595 = call ptr @Core_iterator_wrapSafe(ptr %2593, ptr %2594)
  %2596 = load ptr, ptr @231, align 8
  %2597 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2598 = call ptr @Core_iterator_foldLeft(ptr %2595, ptr %2596, ptr %2597)
  %2599 = load ptr, ptr @231, align 8
  %2600 = call ptr @Core_check_checkEquals(ptr %2598, ptr %2599)
  %2601 = load ptr, ptr @num_4, align 8
  %2602 = load ptr, ptr @num_3, align 8
  %2603 = load ptr, ptr @tag_False, align 8
  %2604 = call ptr @Core_iterator_windowed(ptr %2440, ptr %2601, ptr %2602, ptr %2603)
  %2605 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %2606 = call ptr @Core_iterator_wrapSafe(ptr %2604, ptr %2605)
  %2607 = load ptr, ptr @231, align 8
  %2608 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2609 = call ptr @Core_iterator_foldLeft(ptr %2606, ptr %2607, ptr %2608)
  %2610 = load ptr, ptr @256, align 8
  %2611 = call ptr @Core_check_checkEquals(ptr %2609, ptr %2610)
  %2612 = load ptr, ptr @num_3, align 8
  %2613 = call ptr @Core_iterator_chunked(ptr %2440, ptr %2612)
  %2614 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %2615 = call ptr @Core_iterator_wrapSafe(ptr %2613, ptr %2614)
  %2616 = load ptr, ptr @231, align 8
  %2617 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2618 = call ptr @Core_iterator_foldLeft(ptr %2615, ptr %2616, ptr %2617)
  %2619 = load ptr, ptr @260, align 8
  %2620 = call ptr @Core_check_checkEquals(ptr %2618, ptr %2619)
  %2621 = load ptr, ptr @num_0, align 8
  %2622 = load ptr, ptr @num_0, align 8
  %2623 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %2621, ptr %2622)
  %2624 = load ptr, ptr @232, align 8
  %2625 = call ptr @Core_iterator_fromList(ptr %2624)
  %2626 = load ptr, ptr @233, align 8
  %2627 = call ptr @Core_iterator_fromList(ptr %2626)
  %2628 = call ptr @Core_iterator_next(ptr %2625)
  %2629 = call ptr @candy_builtin_type_of(ptr %2628)
  %2630 = load ptr, ptr @tag_Tag, align 8
  %2631 = call ptr @candy_builtin_equals(ptr %2630, ptr %2629)
  %2632 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2633 = getelementptr inbounds { ptr }, ptr %2632, i32 0, i32 0
  store ptr %2628, ptr %2633, align 8
  %2634 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.904, ptr %2632, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2634, ptr @fun_Core_iterator_128_equals_then.905, align 8
  %2635 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2636 = getelementptr inbounds { ptr }, ptr %2635, i32 0, i32 0
  store ptr %2629, ptr %2636, align 8
  %2637 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.934, ptr %2635, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2637, ptr @fun_Core_iterator_128_equals_else.935, align 8
  %2638 = load ptr, ptr @fun_Core_iterator_128_equals_then.905, align 8
  %2639 = load ptr, ptr @fun_Core_iterator_128_equals_else.935, align 8
  %2640 = call ptr @candy_builtin_if_else(ptr %2631, ptr %2638, ptr %2639)
  %2641 = load ptr, ptr @num_0, align 8
  %2642 = call ptr @candy_builtin_list_get(ptr %2640, ptr %2641)
  %2643 = load ptr, ptr @tag_Match, align 8
  %2644 = call ptr @candy_builtin_equals(ptr %2642, ptr %2643)
  %2645 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2646 = getelementptr inbounds { ptr }, ptr %2645, i32 0, i32 0
  store ptr %2640, ptr %2646, align 8
  %2647 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.936, ptr %2645, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2647, ptr @fun_Core_iterator_128_isMatch_else.937, align 8
  %2648 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2649 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.937, align 8
  %2650 = call ptr @candy_builtin_if_else(ptr %2644, ptr %2648, ptr %2649)
  %2651 = load ptr, ptr @num_1, align 8
  %2652 = call ptr @candy_builtin_list_get(ptr %2640, ptr %2651)
  %2653 = load ptr, ptr @num_2, align 8
  %2654 = call ptr @candy_builtin_list_get(ptr %2640, ptr %2653)
  %2655 = load ptr, ptr @num_1, align 8
  %2656 = call ptr @Core_check_checkEquals(ptr %2652, ptr %2655)
  %2657 = call ptr @Core_iterator_next(ptr %2654)
  %2658 = call ptr @candy_builtin_type_of(ptr %2657)
  %2659 = load ptr, ptr @tag_Tag, align 8
  %2660 = call ptr @candy_builtin_equals(ptr %2659, ptr %2658)
  %2661 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2662 = getelementptr inbounds { ptr }, ptr %2661, i32 0, i32 0
  store ptr %2657, ptr %2662, align 8
  %2663 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.938, ptr %2661, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2663, ptr @fun_Core_iterator_137_equals_then.939, align 8
  %2664 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2665 = getelementptr inbounds { ptr }, ptr %2664, i32 0, i32 0
  store ptr %2658, ptr %2665, align 8
  %2666 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.968, ptr %2664, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2666, ptr @fun_Core_iterator_137_equals_else.969, align 8
  %2667 = load ptr, ptr @fun_Core_iterator_137_equals_then.939, align 8
  %2668 = load ptr, ptr @fun_Core_iterator_137_equals_else.969, align 8
  %2669 = call ptr @candy_builtin_if_else(ptr %2660, ptr %2667, ptr %2668)
  %2670 = load ptr, ptr @num_0, align 8
  %2671 = call ptr @candy_builtin_list_get(ptr %2669, ptr %2670)
  %2672 = load ptr, ptr @tag_Match, align 8
  %2673 = call ptr @candy_builtin_equals(ptr %2671, ptr %2672)
  %2674 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2675 = getelementptr inbounds { ptr }, ptr %2674, i32 0, i32 0
  store ptr %2669, ptr %2675, align 8
  %2676 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.970, ptr %2674, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2676, ptr @fun_Core_iterator_137_isMatch_else.971, align 8
  %2677 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2678 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.971, align 8
  %2679 = call ptr @candy_builtin_if_else(ptr %2673, ptr %2677, ptr %2678)
  %2680 = load ptr, ptr @num_1, align 8
  %2681 = call ptr @candy_builtin_list_get(ptr %2669, ptr %2680)
  %2682 = load ptr, ptr @num_2, align 8
  %2683 = call ptr @candy_builtin_list_get(ptr %2669, ptr %2682)
  %2684 = load ptr, ptr @num_2, align 8
  %2685 = call ptr @Core_check_checkEquals(ptr %2681, ptr %2684)
  %2686 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %2687 = call ptr @Core_iterator_wrapSafe(ptr %2625, ptr %2686)
  %2688 = call ptr @Core_iterator_next(ptr %2687)
  %2689 = load ptr, ptr @tag_Empty, align 8
  %2690 = call ptr @candy_builtin_equals(ptr %2688, ptr %2689)
  %2691 = load ptr, ptr @tag_False, align 8
  %2692 = call ptr @Core_check_checkEquals(ptr %2690, ptr %2691)
  %2693 = load ptr, ptr @231, align 8
  %2694 = call ptr @Core_iterator_fromList(ptr %2693)
  %2695 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %2696 = call ptr @Core_iterator_wrapSafe(ptr %2694, ptr %2695)
  %2697 = call ptr @Core_iterator_next(ptr %2696)
  %2698 = load ptr, ptr @tag_Empty, align 8
  %2699 = call ptr @candy_builtin_equals(ptr %2697, ptr %2698)
  %2700 = load ptr, ptr @tag_True, align 8
  %2701 = call ptr @Core_check_checkEquals(ptr %2699, ptr %2700)
  %2702 = load ptr, ptr @fun_Core_iterator_161, align 8
  %2703 = call ptr @Core_iterator_map(ptr %2625, ptr %2702)
  %2704 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %2705 = call ptr @Core_iterator_wrapSafe(ptr %2703, ptr %2704)
  %2706 = load ptr, ptr @231, align 8
  %2707 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2708 = call ptr @Core_iterator_foldLeft(ptr %2705, ptr %2706, ptr %2707)
  %2709 = load ptr, ptr @250, align 8
  %2710 = call ptr @Core_check_checkEquals(ptr %2708, ptr %2709)
  %2711 = call ptr @Core_iterator_sum(ptr %2625)
  %2712 = load ptr, ptr @num_6, align 8
  %2713 = call ptr @Core_check_checkEquals(ptr %2711, ptr %2712)
  %2714 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %2715 = call ptr @Core_iterator_wrapSafe(ptr %2625, ptr %2714)
  %2716 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %2717 = call ptr @Core_iterator_map(ptr %2715, ptr %2716)
  %2718 = call ptr @Core_iterator_sum(ptr %2717)
  %2719 = load ptr, ptr @num_3, align 8
  %2720 = call ptr @Core_check_checkEquals(ptr %2718, ptr %2719)
  %2721 = load ptr, ptr @fun_Core_iterator_185, align 8
  %2722 = call ptr @Core_iterator_all(ptr %2625, ptr %2721)
  %2723 = load ptr, ptr @tag_True, align 8
  %2724 = call ptr @Core_check_checkEquals(ptr %2722, ptr %2723)
  %2725 = load ptr, ptr @fun_Core_iterator_192, align 8
  %2726 = call ptr @Core_iterator_any(ptr %2625, ptr %2725)
  %2727 = load ptr, ptr @tag_True, align 8
  %2728 = call ptr @Core_check_checkEquals(ptr %2726, ptr %2727)
  %2729 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %2730 = call ptr @Core_iterator_map(ptr %2625, ptr %2729)
  %2731 = call ptr @Core_iterator_joinToText(ptr %2730)
  %2732 = load ptr, ptr @text_123, align 8
  %2733 = call ptr @Core_check_checkEquals(ptr %2731, ptr %2732)
  %2734 = load ptr, ptr @fun_Core_iterator_214, align 8
  %2735 = call ptr @Core_iterator_where(ptr %2627, ptr %2734)
  %2736 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %2737 = call ptr @Core_iterator_wrapSafe(ptr %2735, ptr %2736)
  %2738 = load ptr, ptr @231, align 8
  %2739 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2740 = call ptr @Core_iterator_foldLeft(ptr %2737, ptr %2738, ptr %2739)
  %2741 = load ptr, ptr @251, align 8
  %2742 = call ptr @Core_check_checkEquals(ptr %2740, ptr %2741)
  %2743 = load ptr, ptr @fun_Core_iterator_228, align 8
  %2744 = call ptr @Core_iterator_takeWhile(ptr %2627, ptr %2743)
  %2745 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %2746 = call ptr @Core_iterator_wrapSafe(ptr %2744, ptr %2745)
  %2747 = load ptr, ptr @231, align 8
  %2748 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2749 = call ptr @Core_iterator_foldLeft(ptr %2746, ptr %2747, ptr %2748)
  %2750 = load ptr, ptr @232, align 8
  %2751 = call ptr @Core_check_checkEquals(ptr %2749, ptr %2750)
  %2752 = load ptr, ptr @num_4, align 8
  %2753 = call ptr @Core_iterator_take(ptr %2627, ptr %2752)
  %2754 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %2755 = call ptr @Core_iterator_wrapSafe(ptr %2753, ptr %2754)
  %2756 = load ptr, ptr @231, align 8
  %2757 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2758 = call ptr @Core_iterator_foldLeft(ptr %2755, ptr %2756, ptr %2757)
  %2759 = load ptr, ptr @252, align 8
  %2760 = call ptr @Core_check_checkEquals(ptr %2758, ptr %2759)
  %2761 = load ptr, ptr @num_12, align 8
  %2762 = call ptr @Core_iterator_take(ptr %2627, ptr %2761)
  %2763 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %2764 = call ptr @Core_iterator_wrapSafe(ptr %2762, ptr %2763)
  %2765 = load ptr, ptr @231, align 8
  %2766 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2767 = call ptr @Core_iterator_foldLeft(ptr %2764, ptr %2765, ptr %2766)
  %2768 = load ptr, ptr @233, align 8
  %2769 = call ptr @Core_check_checkEquals(ptr %2767, ptr %2768)
  %2770 = load ptr, ptr @num_4, align 8
  %2771 = call ptr @Core_iterator_skip(ptr %2627, ptr %2770)
  %2772 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %2773 = call ptr @Core_iterator_wrapSafe(ptr %2771, ptr %2772)
  %2774 = load ptr, ptr @231, align 8
  %2775 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2776 = call ptr @Core_iterator_foldLeft(ptr %2773, ptr %2774, ptr %2775)
  %2777 = load ptr, ptr @253, align 8
  %2778 = call ptr @Core_check_checkEquals(ptr %2776, ptr %2777)
  %2779 = load ptr, ptr @num_40, align 8
  %2780 = call ptr @Core_iterator_skip(ptr %2627, ptr %2779)
  %2781 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %2782 = call ptr @Core_iterator_wrapSafe(ptr %2780, ptr %2781)
  %2783 = load ptr, ptr @231, align 8
  %2784 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2785 = call ptr @Core_iterator_foldLeft(ptr %2782, ptr %2783, ptr %2784)
  %2786 = load ptr, ptr @231, align 8
  %2787 = call ptr @Core_check_checkEquals(ptr %2785, ptr %2786)
  %2788 = load ptr, ptr @num_4, align 8
  %2789 = load ptr, ptr @num_3, align 8
  %2790 = load ptr, ptr @tag_False, align 8
  %2791 = call ptr @Core_iterator_windowed(ptr %2627, ptr %2788, ptr %2789, ptr %2790)
  %2792 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %2793 = call ptr @Core_iterator_wrapSafe(ptr %2791, ptr %2792)
  %2794 = load ptr, ptr @231, align 8
  %2795 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2796 = call ptr @Core_iterator_foldLeft(ptr %2793, ptr %2794, ptr %2795)
  %2797 = load ptr, ptr @256, align 8
  %2798 = call ptr @Core_check_checkEquals(ptr %2796, ptr %2797)
  %2799 = load ptr, ptr @num_3, align 8
  %2800 = call ptr @Core_iterator_chunked(ptr %2627, ptr %2799)
  %2801 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %2802 = call ptr @Core_iterator_wrapSafe(ptr %2800, ptr %2801)
  %2803 = load ptr, ptr @231, align 8
  %2804 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2805 = call ptr @Core_iterator_foldLeft(ptr %2802, ptr %2803, ptr %2804)
  %2806 = load ptr, ptr @260, align 8
  %2807 = call ptr @Core_check_checkEquals(ptr %2805, ptr %2806)
  %2808 = alloca i8, i64 21, align 1
  store [21 x i8] c"Chrono:duration:is:1\00", ptr %2808, align 1
  %2809 = call ptr @make_candy_text(ptr %2808)
  store ptr %2809, ptr @"Chrono:duration:is:1", align 8
  %2810 = alloca i8, i64 9, align 1
  store [9 x i8] c"Duration\00", ptr %2810, align 1
  %2811 = call ptr @make_candy_tag(ptr %2810, ptr null)
  store ptr %2811, ptr @tag_Duration, align 8
  %2812 = alloca i8, i64 24, align 1
  store [24 x i8] c"Expected Duration, got \00", ptr %2812, align 1
  %2813 = call ptr @make_candy_text(ptr %2812)
  store ptr %2813, ptr @"text_Expected Duration, got ", align 8
  %2814 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:is:1:seconds\00", ptr %2814, align 1
  %2815 = call ptr @make_candy_text(ptr %2814)
  store ptr %2815, ptr @"Chrono:duration:is:1:seconds", align 8
  %2816 = alloca i8, i64 23, align 1
  store [23 x i8] c"Chrono:duration:is:1:9\00", ptr %2816, align 1
  %2817 = call ptr @make_candy_text(ptr %2816)
  store ptr %2817, ptr @"Chrono:duration:is:1:9", align 8
  %2818 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2819 = call ptr @make_candy_function(ptr @Chrono_duration_is, ptr %2818, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2819, ptr @fun_Chrono_duration_is, align 8
  %2820 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:subtract:2\00", ptr %2820, align 1
  %2821 = call ptr @make_candy_text(ptr %2820)
  store ptr %2821, ptr @"Chrono:duration:subtract:2", align 8
  %2822 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:subtract:4\00", ptr %2822, align 1
  %2823 = call ptr @make_candy_text(ptr %2822)
  store ptr %2823, ptr @"Chrono:duration:subtract:4", align 8
  %2824 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:subtract:7\00", ptr %2824, align 1
  %2825 = call ptr @make_candy_text(ptr %2824)
  store ptr %2825, ptr @"Chrono:duration:subtract:7", align 8
  %2826 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:subtract:9\00", ptr %2826, align 1
  %2827 = call ptr @make_candy_text(ptr %2826)
  store ptr %2827, ptr @"Chrono:duration:subtract:9", align 8
  %2828 = alloca i8, i64 28, align 1
  store [28 x i8] c"Chrono:duration:subtract:28\00", ptr %2828, align 1
  %2829 = call ptr @make_candy_text(ptr %2828)
  store ptr %2829, ptr @"Chrono:duration:subtract:28", align 8
  %2830 = alloca i8, i64 28, align 1
  store [28 x i8] c"Chrono:duration:subtract:38\00", ptr %2830, align 1
  %2831 = call ptr @make_candy_text(ptr %2830)
  store ptr %2831, ptr @"Chrono:duration:subtract:38", align 8
  %2832 = alloca i8, i64 28, align 1
  store [28 x i8] c"Chrono:duration:subtract:39\00", ptr %2832, align 1
  %2833 = call ptr @make_candy_text(ptr %2832)
  store ptr %2833, ptr @"Chrono:duration:subtract:39", align 8
  %2834 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2835 = call ptr @make_candy_function(ptr @Chrono_duration_subtract, ptr %2834, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2835, ptr @fun_Chrono_duration_subtract, align 8
  %2836 = alloca i8, i64 20, align 1
  store [20 x i8] c"Chrono:instant:is:1\00", ptr %2836, align 1
  %2837 = call ptr @make_candy_text(ptr %2836)
  store ptr %2837, ptr @"Chrono:instant:is:1", align 8
  %2838 = alloca i8, i64 8, align 1
  store [8 x i8] c"Instant\00", ptr %2838, align 1
  %2839 = call ptr @make_candy_tag(ptr %2838, ptr null)
  store ptr %2839, ptr @tag_Instant, align 8
  %2840 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected Instant, got \00", ptr %2840, align 1
  %2841 = call ptr @make_candy_text(ptr %2840)
  store ptr %2841, ptr @"text_Expected Instant, got ", align 8
  %2842 = alloca i8, i64 24, align 1
  store [24 x i8] c"Chrono:instant:is:1:dur\00", ptr %2842, align 1
  %2843 = call ptr @make_candy_text(ptr %2842)
  store ptr %2843, ptr @"Chrono:instant:is:1:dur", align 8
  %2844 = alloca i8, i64 22, align 1
  store [22 x i8] c"Chrono:instant:is:1:9\00", ptr %2844, align 1
  %2845 = call ptr @make_candy_text(ptr %2844)
  store ptr %2845, ptr @"Chrono:instant:is:1:9", align 8
  %2846 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2847 = call ptr @make_candy_function(ptr @Chrono_instant_is, ptr %2846, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2847, ptr @fun_Chrono_instant_is, align 8
  %2848 = alloca i8, i64 34, align 1
  store [34 x i8] c"Chrono:instant:fromUnixDuration:9\00", ptr %2848, align 1
  %2849 = call ptr @make_candy_text(ptr %2848)
  store ptr %2849, ptr @"Chrono:instant:fromUnixDuration:9", align 8
  %2850 = alloca i8, i64 36, align 1
  store [36 x i8] c"`duration.is dur` was not satisfied\00", ptr %2850, align 1
  %2851 = call ptr @make_candy_text(ptr %2850)
  store ptr %2851, ptr @"text_`duration.is dur` was not satisfied", align 8
  %2852 = alloca i8, i64 35, align 1
  store [35 x i8] c"Chrono:instant:fromUnixDuration:11\00", ptr %2852, align 1
  %2853 = call ptr @make_candy_text(ptr %2852)
  store ptr %2853, ptr @"Chrono:instant:fromUnixDuration:11", align 8
  %2854 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is instant` was not satisfied\00", ptr %2854, align 1
  %2855 = call ptr @make_candy_text(ptr %2854)
  store ptr %2855, ptr @"text_`is instant` was not satisfied", align 8
  %2856 = alloca i8, i64 36, align 1
  store [36 x i8] c"Chrono:instant:toUnixTimeDuration:2\00", ptr %2856, align 1
  %2857 = call ptr @make_candy_text(ptr %2856)
  store ptr %2857, ptr @"Chrono:instant:toUnixTimeDuration:2", align 8
  %2858 = alloca i8, i64 36, align 1
  store [36 x i8] c"Chrono:instant:toUnixTimeDuration:4\00", ptr %2858, align 1
  %2859 = call ptr @make_candy_text(ptr %2858)
  store ptr %2859, ptr @"Chrono:instant:toUnixTimeDuration:4", align 8
  %2860 = alloca i8, i64 37, align 1
  store [37 x i8] c"Chrono:instant:toUnixTimeDuration:14\00", ptr %2860, align 1
  %2861 = call ptr @make_candy_text(ptr %2860)
  store ptr %2861, ptr @"Chrono:instant:toUnixTimeDuration:14", align 8
  %2862 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2863 = call ptr @make_candy_function(ptr @Chrono_instant_toUnixTimeDuration, ptr %2862, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2863, ptr @fun_Chrono_instant_toUnixTimeDuration, align 8
  %2864 = load ptr, ptr @num_0, align 8
  %2865 = load ptr, ptr @num_0, align 8
  %2866 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %2864, ptr %2865)
  %2867 = load ptr, ptr @232, align 8
  %2868 = call ptr @Core_iterator_fromList(ptr %2867)
  %2869 = load ptr, ptr @233, align 8
  %2870 = call ptr @Core_iterator_fromList(ptr %2869)
  %2871 = call ptr @Core_iterator_next(ptr %2868)
  %2872 = call ptr @candy_builtin_type_of(ptr %2871)
  %2873 = load ptr, ptr @tag_Tag, align 8
  %2874 = call ptr @candy_builtin_equals(ptr %2873, ptr %2872)
  %2875 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2876 = getelementptr inbounds { ptr }, ptr %2875, i32 0, i32 0
  store ptr %2871, ptr %2876, align 8
  %2877 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.989, ptr %2875, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2877, ptr @fun_Core_iterator_128_equals_then.990, align 8
  %2878 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2879 = getelementptr inbounds { ptr }, ptr %2878, i32 0, i32 0
  store ptr %2872, ptr %2879, align 8
  %2880 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1019, ptr %2878, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2880, ptr @fun_Core_iterator_128_equals_else.1020, align 8
  %2881 = load ptr, ptr @fun_Core_iterator_128_equals_then.990, align 8
  %2882 = load ptr, ptr @fun_Core_iterator_128_equals_else.1020, align 8
  %2883 = call ptr @candy_builtin_if_else(ptr %2874, ptr %2881, ptr %2882)
  %2884 = load ptr, ptr @num_0, align 8
  %2885 = call ptr @candy_builtin_list_get(ptr %2883, ptr %2884)
  %2886 = load ptr, ptr @tag_Match, align 8
  %2887 = call ptr @candy_builtin_equals(ptr %2885, ptr %2886)
  %2888 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2889 = getelementptr inbounds { ptr }, ptr %2888, i32 0, i32 0
  store ptr %2883, ptr %2889, align 8
  %2890 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1021, ptr %2888, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2890, ptr @fun_Core_iterator_128_isMatch_else.1022, align 8
  %2891 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2892 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1022, align 8
  %2893 = call ptr @candy_builtin_if_else(ptr %2887, ptr %2891, ptr %2892)
  %2894 = load ptr, ptr @num_1, align 8
  %2895 = call ptr @candy_builtin_list_get(ptr %2883, ptr %2894)
  %2896 = load ptr, ptr @num_2, align 8
  %2897 = call ptr @candy_builtin_list_get(ptr %2883, ptr %2896)
  %2898 = load ptr, ptr @num_1, align 8
  %2899 = call ptr @Core_check_checkEquals(ptr %2895, ptr %2898)
  %2900 = call ptr @Core_iterator_next(ptr %2897)
  %2901 = call ptr @candy_builtin_type_of(ptr %2900)
  %2902 = load ptr, ptr @tag_Tag, align 8
  %2903 = call ptr @candy_builtin_equals(ptr %2902, ptr %2901)
  %2904 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2905 = getelementptr inbounds { ptr }, ptr %2904, i32 0, i32 0
  store ptr %2900, ptr %2905, align 8
  %2906 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1023, ptr %2904, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2906, ptr @fun_Core_iterator_137_equals_then.1024, align 8
  %2907 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2908 = getelementptr inbounds { ptr }, ptr %2907, i32 0, i32 0
  store ptr %2901, ptr %2908, align 8
  %2909 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1053, ptr %2907, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2909, ptr @fun_Core_iterator_137_equals_else.1054, align 8
  %2910 = load ptr, ptr @fun_Core_iterator_137_equals_then.1024, align 8
  %2911 = load ptr, ptr @fun_Core_iterator_137_equals_else.1054, align 8
  %2912 = call ptr @candy_builtin_if_else(ptr %2903, ptr %2910, ptr %2911)
  %2913 = load ptr, ptr @num_0, align 8
  %2914 = call ptr @candy_builtin_list_get(ptr %2912, ptr %2913)
  %2915 = load ptr, ptr @tag_Match, align 8
  %2916 = call ptr @candy_builtin_equals(ptr %2914, ptr %2915)
  %2917 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2918 = getelementptr inbounds { ptr }, ptr %2917, i32 0, i32 0
  store ptr %2912, ptr %2918, align 8
  %2919 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1055, ptr %2917, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %2919, ptr @fun_Core_iterator_137_isMatch_else.1056, align 8
  %2920 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %2921 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1056, align 8
  %2922 = call ptr @candy_builtin_if_else(ptr %2916, ptr %2920, ptr %2921)
  %2923 = load ptr, ptr @num_1, align 8
  %2924 = call ptr @candy_builtin_list_get(ptr %2912, ptr %2923)
  %2925 = load ptr, ptr @num_2, align 8
  %2926 = call ptr @candy_builtin_list_get(ptr %2912, ptr %2925)
  %2927 = load ptr, ptr @num_2, align 8
  %2928 = call ptr @Core_check_checkEquals(ptr %2924, ptr %2927)
  %2929 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %2930 = call ptr @Core_iterator_wrapSafe(ptr %2868, ptr %2929)
  %2931 = call ptr @Core_iterator_next(ptr %2930)
  %2932 = load ptr, ptr @tag_Empty, align 8
  %2933 = call ptr @candy_builtin_equals(ptr %2931, ptr %2932)
  %2934 = load ptr, ptr @tag_False, align 8
  %2935 = call ptr @Core_check_checkEquals(ptr %2933, ptr %2934)
  %2936 = load ptr, ptr @231, align 8
  %2937 = call ptr @Core_iterator_fromList(ptr %2936)
  %2938 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %2939 = call ptr @Core_iterator_wrapSafe(ptr %2937, ptr %2938)
  %2940 = call ptr @Core_iterator_next(ptr %2939)
  %2941 = load ptr, ptr @tag_Empty, align 8
  %2942 = call ptr @candy_builtin_equals(ptr %2940, ptr %2941)
  %2943 = load ptr, ptr @tag_True, align 8
  %2944 = call ptr @Core_check_checkEquals(ptr %2942, ptr %2943)
  %2945 = load ptr, ptr @fun_Core_iterator_161, align 8
  %2946 = call ptr @Core_iterator_map(ptr %2868, ptr %2945)
  %2947 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %2948 = call ptr @Core_iterator_wrapSafe(ptr %2946, ptr %2947)
  %2949 = load ptr, ptr @231, align 8
  %2950 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2951 = call ptr @Core_iterator_foldLeft(ptr %2948, ptr %2949, ptr %2950)
  %2952 = load ptr, ptr @250, align 8
  %2953 = call ptr @Core_check_checkEquals(ptr %2951, ptr %2952)
  %2954 = call ptr @Core_iterator_sum(ptr %2868)
  %2955 = load ptr, ptr @num_6, align 8
  %2956 = call ptr @Core_check_checkEquals(ptr %2954, ptr %2955)
  %2957 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %2958 = call ptr @Core_iterator_wrapSafe(ptr %2868, ptr %2957)
  %2959 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %2960 = call ptr @Core_iterator_map(ptr %2958, ptr %2959)
  %2961 = call ptr @Core_iterator_sum(ptr %2960)
  %2962 = load ptr, ptr @num_3, align 8
  %2963 = call ptr @Core_check_checkEquals(ptr %2961, ptr %2962)
  %2964 = load ptr, ptr @fun_Core_iterator_185, align 8
  %2965 = call ptr @Core_iterator_all(ptr %2868, ptr %2964)
  %2966 = load ptr, ptr @tag_True, align 8
  %2967 = call ptr @Core_check_checkEquals(ptr %2965, ptr %2966)
  %2968 = load ptr, ptr @fun_Core_iterator_192, align 8
  %2969 = call ptr @Core_iterator_any(ptr %2868, ptr %2968)
  %2970 = load ptr, ptr @tag_True, align 8
  %2971 = call ptr @Core_check_checkEquals(ptr %2969, ptr %2970)
  %2972 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %2973 = call ptr @Core_iterator_map(ptr %2868, ptr %2972)
  %2974 = call ptr @Core_iterator_joinToText(ptr %2973)
  %2975 = load ptr, ptr @text_123, align 8
  %2976 = call ptr @Core_check_checkEquals(ptr %2974, ptr %2975)
  %2977 = load ptr, ptr @fun_Core_iterator_214, align 8
  %2978 = call ptr @Core_iterator_where(ptr %2870, ptr %2977)
  %2979 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %2980 = call ptr @Core_iterator_wrapSafe(ptr %2978, ptr %2979)
  %2981 = load ptr, ptr @231, align 8
  %2982 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2983 = call ptr @Core_iterator_foldLeft(ptr %2980, ptr %2981, ptr %2982)
  %2984 = load ptr, ptr @251, align 8
  %2985 = call ptr @Core_check_checkEquals(ptr %2983, ptr %2984)
  %2986 = load ptr, ptr @fun_Core_iterator_228, align 8
  %2987 = call ptr @Core_iterator_takeWhile(ptr %2870, ptr %2986)
  %2988 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %2989 = call ptr @Core_iterator_wrapSafe(ptr %2987, ptr %2988)
  %2990 = load ptr, ptr @231, align 8
  %2991 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %2992 = call ptr @Core_iterator_foldLeft(ptr %2989, ptr %2990, ptr %2991)
  %2993 = load ptr, ptr @232, align 8
  %2994 = call ptr @Core_check_checkEquals(ptr %2992, ptr %2993)
  %2995 = load ptr, ptr @num_4, align 8
  %2996 = call ptr @Core_iterator_take(ptr %2870, ptr %2995)
  %2997 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %2998 = call ptr @Core_iterator_wrapSafe(ptr %2996, ptr %2997)
  %2999 = load ptr, ptr @231, align 8
  %3000 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3001 = call ptr @Core_iterator_foldLeft(ptr %2998, ptr %2999, ptr %3000)
  %3002 = load ptr, ptr @252, align 8
  %3003 = call ptr @Core_check_checkEquals(ptr %3001, ptr %3002)
  %3004 = load ptr, ptr @num_12, align 8
  %3005 = call ptr @Core_iterator_take(ptr %2870, ptr %3004)
  %3006 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %3007 = call ptr @Core_iterator_wrapSafe(ptr %3005, ptr %3006)
  %3008 = load ptr, ptr @231, align 8
  %3009 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3010 = call ptr @Core_iterator_foldLeft(ptr %3007, ptr %3008, ptr %3009)
  %3011 = load ptr, ptr @233, align 8
  %3012 = call ptr @Core_check_checkEquals(ptr %3010, ptr %3011)
  %3013 = load ptr, ptr @num_4, align 8
  %3014 = call ptr @Core_iterator_skip(ptr %2870, ptr %3013)
  %3015 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %3016 = call ptr @Core_iterator_wrapSafe(ptr %3014, ptr %3015)
  %3017 = load ptr, ptr @231, align 8
  %3018 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3019 = call ptr @Core_iterator_foldLeft(ptr %3016, ptr %3017, ptr %3018)
  %3020 = load ptr, ptr @253, align 8
  %3021 = call ptr @Core_check_checkEquals(ptr %3019, ptr %3020)
  %3022 = load ptr, ptr @num_40, align 8
  %3023 = call ptr @Core_iterator_skip(ptr %2870, ptr %3022)
  %3024 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %3025 = call ptr @Core_iterator_wrapSafe(ptr %3023, ptr %3024)
  %3026 = load ptr, ptr @231, align 8
  %3027 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3028 = call ptr @Core_iterator_foldLeft(ptr %3025, ptr %3026, ptr %3027)
  %3029 = load ptr, ptr @231, align 8
  %3030 = call ptr @Core_check_checkEquals(ptr %3028, ptr %3029)
  %3031 = load ptr, ptr @num_4, align 8
  %3032 = load ptr, ptr @num_3, align 8
  %3033 = load ptr, ptr @tag_False, align 8
  %3034 = call ptr @Core_iterator_windowed(ptr %2870, ptr %3031, ptr %3032, ptr %3033)
  %3035 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %3036 = call ptr @Core_iterator_wrapSafe(ptr %3034, ptr %3035)
  %3037 = load ptr, ptr @231, align 8
  %3038 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3039 = call ptr @Core_iterator_foldLeft(ptr %3036, ptr %3037, ptr %3038)
  %3040 = load ptr, ptr @256, align 8
  %3041 = call ptr @Core_check_checkEquals(ptr %3039, ptr %3040)
  %3042 = load ptr, ptr @num_3, align 8
  %3043 = call ptr @Core_iterator_chunked(ptr %2870, ptr %3042)
  %3044 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %3045 = call ptr @Core_iterator_wrapSafe(ptr %3043, ptr %3044)
  %3046 = load ptr, ptr @231, align 8
  %3047 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3048 = call ptr @Core_iterator_foldLeft(ptr %3045, ptr %3046, ptr %3047)
  %3049 = load ptr, ptr @260, align 8
  %3050 = call ptr @Core_check_checkEquals(ptr %3048, ptr %3049)
  %3051 = load ptr, ptr @num_0, align 8
  %3052 = load ptr, ptr @num_0, align 8
  %3053 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %3051, ptr %3052)
  %3054 = load ptr, ptr @232, align 8
  %3055 = call ptr @Core_iterator_fromList(ptr %3054)
  %3056 = load ptr, ptr @233, align 8
  %3057 = call ptr @Core_iterator_fromList(ptr %3056)
  %3058 = call ptr @Core_iterator_next(ptr %3055)
  %3059 = call ptr @candy_builtin_type_of(ptr %3058)
  %3060 = load ptr, ptr @tag_Tag, align 8
  %3061 = call ptr @candy_builtin_equals(ptr %3060, ptr %3059)
  %3062 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3063 = getelementptr inbounds { ptr }, ptr %3062, i32 0, i32 0
  store ptr %3058, ptr %3063, align 8
  %3064 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1057, ptr %3062, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3064, ptr @fun_Core_iterator_128_equals_then.1058, align 8
  %3065 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3066 = getelementptr inbounds { ptr }, ptr %3065, i32 0, i32 0
  store ptr %3059, ptr %3066, align 8
  %3067 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1087, ptr %3065, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3067, ptr @fun_Core_iterator_128_equals_else.1088, align 8
  %3068 = load ptr, ptr @fun_Core_iterator_128_equals_then.1058, align 8
  %3069 = load ptr, ptr @fun_Core_iterator_128_equals_else.1088, align 8
  %3070 = call ptr @candy_builtin_if_else(ptr %3061, ptr %3068, ptr %3069)
  %3071 = load ptr, ptr @num_0, align 8
  %3072 = call ptr @candy_builtin_list_get(ptr %3070, ptr %3071)
  %3073 = load ptr, ptr @tag_Match, align 8
  %3074 = call ptr @candy_builtin_equals(ptr %3072, ptr %3073)
  %3075 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3076 = getelementptr inbounds { ptr }, ptr %3075, i32 0, i32 0
  store ptr %3070, ptr %3076, align 8
  %3077 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1089, ptr %3075, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3077, ptr @fun_Core_iterator_128_isMatch_else.1090, align 8
  %3078 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %3079 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1090, align 8
  %3080 = call ptr @candy_builtin_if_else(ptr %3074, ptr %3078, ptr %3079)
  %3081 = load ptr, ptr @num_1, align 8
  %3082 = call ptr @candy_builtin_list_get(ptr %3070, ptr %3081)
  %3083 = load ptr, ptr @num_2, align 8
  %3084 = call ptr @candy_builtin_list_get(ptr %3070, ptr %3083)
  %3085 = load ptr, ptr @num_1, align 8
  %3086 = call ptr @Core_check_checkEquals(ptr %3082, ptr %3085)
  %3087 = call ptr @Core_iterator_next(ptr %3084)
  %3088 = call ptr @candy_builtin_type_of(ptr %3087)
  %3089 = load ptr, ptr @tag_Tag, align 8
  %3090 = call ptr @candy_builtin_equals(ptr %3089, ptr %3088)
  %3091 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3092 = getelementptr inbounds { ptr }, ptr %3091, i32 0, i32 0
  store ptr %3087, ptr %3092, align 8
  %3093 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1091, ptr %3091, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3093, ptr @fun_Core_iterator_137_equals_then.1092, align 8
  %3094 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3095 = getelementptr inbounds { ptr }, ptr %3094, i32 0, i32 0
  store ptr %3088, ptr %3095, align 8
  %3096 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1121, ptr %3094, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3096, ptr @fun_Core_iterator_137_equals_else.1122, align 8
  %3097 = load ptr, ptr @fun_Core_iterator_137_equals_then.1092, align 8
  %3098 = load ptr, ptr @fun_Core_iterator_137_equals_else.1122, align 8
  %3099 = call ptr @candy_builtin_if_else(ptr %3090, ptr %3097, ptr %3098)
  %3100 = load ptr, ptr @num_0, align 8
  %3101 = call ptr @candy_builtin_list_get(ptr %3099, ptr %3100)
  %3102 = load ptr, ptr @tag_Match, align 8
  %3103 = call ptr @candy_builtin_equals(ptr %3101, ptr %3102)
  %3104 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3105 = getelementptr inbounds { ptr }, ptr %3104, i32 0, i32 0
  store ptr %3099, ptr %3105, align 8
  %3106 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1123, ptr %3104, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3106, ptr @fun_Core_iterator_137_isMatch_else.1124, align 8
  %3107 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %3108 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1124, align 8
  %3109 = call ptr @candy_builtin_if_else(ptr %3103, ptr %3107, ptr %3108)
  %3110 = load ptr, ptr @num_1, align 8
  %3111 = call ptr @candy_builtin_list_get(ptr %3099, ptr %3110)
  %3112 = load ptr, ptr @num_2, align 8
  %3113 = call ptr @candy_builtin_list_get(ptr %3099, ptr %3112)
  %3114 = load ptr, ptr @num_2, align 8
  %3115 = call ptr @Core_check_checkEquals(ptr %3111, ptr %3114)
  %3116 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %3117 = call ptr @Core_iterator_wrapSafe(ptr %3055, ptr %3116)
  %3118 = call ptr @Core_iterator_next(ptr %3117)
  %3119 = load ptr, ptr @tag_Empty, align 8
  %3120 = call ptr @candy_builtin_equals(ptr %3118, ptr %3119)
  %3121 = load ptr, ptr @tag_False, align 8
  %3122 = call ptr @Core_check_checkEquals(ptr %3120, ptr %3121)
  %3123 = load ptr, ptr @231, align 8
  %3124 = call ptr @Core_iterator_fromList(ptr %3123)
  %3125 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %3126 = call ptr @Core_iterator_wrapSafe(ptr %3124, ptr %3125)
  %3127 = call ptr @Core_iterator_next(ptr %3126)
  %3128 = load ptr, ptr @tag_Empty, align 8
  %3129 = call ptr @candy_builtin_equals(ptr %3127, ptr %3128)
  %3130 = load ptr, ptr @tag_True, align 8
  %3131 = call ptr @Core_check_checkEquals(ptr %3129, ptr %3130)
  %3132 = load ptr, ptr @fun_Core_iterator_161, align 8
  %3133 = call ptr @Core_iterator_map(ptr %3055, ptr %3132)
  %3134 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %3135 = call ptr @Core_iterator_wrapSafe(ptr %3133, ptr %3134)
  %3136 = load ptr, ptr @231, align 8
  %3137 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3138 = call ptr @Core_iterator_foldLeft(ptr %3135, ptr %3136, ptr %3137)
  %3139 = load ptr, ptr @250, align 8
  %3140 = call ptr @Core_check_checkEquals(ptr %3138, ptr %3139)
  %3141 = call ptr @Core_iterator_sum(ptr %3055)
  %3142 = load ptr, ptr @num_6, align 8
  %3143 = call ptr @Core_check_checkEquals(ptr %3141, ptr %3142)
  %3144 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %3145 = call ptr @Core_iterator_wrapSafe(ptr %3055, ptr %3144)
  %3146 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %3147 = call ptr @Core_iterator_map(ptr %3145, ptr %3146)
  %3148 = call ptr @Core_iterator_sum(ptr %3147)
  %3149 = load ptr, ptr @num_3, align 8
  %3150 = call ptr @Core_check_checkEquals(ptr %3148, ptr %3149)
  %3151 = load ptr, ptr @fun_Core_iterator_185, align 8
  %3152 = call ptr @Core_iterator_all(ptr %3055, ptr %3151)
  %3153 = load ptr, ptr @tag_True, align 8
  %3154 = call ptr @Core_check_checkEquals(ptr %3152, ptr %3153)
  %3155 = load ptr, ptr @fun_Core_iterator_192, align 8
  %3156 = call ptr @Core_iterator_any(ptr %3055, ptr %3155)
  %3157 = load ptr, ptr @tag_True, align 8
  %3158 = call ptr @Core_check_checkEquals(ptr %3156, ptr %3157)
  %3159 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %3160 = call ptr @Core_iterator_map(ptr %3055, ptr %3159)
  %3161 = call ptr @Core_iterator_joinToText(ptr %3160)
  %3162 = load ptr, ptr @text_123, align 8
  %3163 = call ptr @Core_check_checkEquals(ptr %3161, ptr %3162)
  %3164 = load ptr, ptr @fun_Core_iterator_214, align 8
  %3165 = call ptr @Core_iterator_where(ptr %3057, ptr %3164)
  %3166 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %3167 = call ptr @Core_iterator_wrapSafe(ptr %3165, ptr %3166)
  %3168 = load ptr, ptr @231, align 8
  %3169 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3170 = call ptr @Core_iterator_foldLeft(ptr %3167, ptr %3168, ptr %3169)
  %3171 = load ptr, ptr @251, align 8
  %3172 = call ptr @Core_check_checkEquals(ptr %3170, ptr %3171)
  %3173 = load ptr, ptr @fun_Core_iterator_228, align 8
  %3174 = call ptr @Core_iterator_takeWhile(ptr %3057, ptr %3173)
  %3175 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %3176 = call ptr @Core_iterator_wrapSafe(ptr %3174, ptr %3175)
  %3177 = load ptr, ptr @231, align 8
  %3178 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3179 = call ptr @Core_iterator_foldLeft(ptr %3176, ptr %3177, ptr %3178)
  %3180 = load ptr, ptr @232, align 8
  %3181 = call ptr @Core_check_checkEquals(ptr %3179, ptr %3180)
  %3182 = load ptr, ptr @num_4, align 8
  %3183 = call ptr @Core_iterator_take(ptr %3057, ptr %3182)
  %3184 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %3185 = call ptr @Core_iterator_wrapSafe(ptr %3183, ptr %3184)
  %3186 = load ptr, ptr @231, align 8
  %3187 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3188 = call ptr @Core_iterator_foldLeft(ptr %3185, ptr %3186, ptr %3187)
  %3189 = load ptr, ptr @252, align 8
  %3190 = call ptr @Core_check_checkEquals(ptr %3188, ptr %3189)
  %3191 = load ptr, ptr @num_12, align 8
  %3192 = call ptr @Core_iterator_take(ptr %3057, ptr %3191)
  %3193 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %3194 = call ptr @Core_iterator_wrapSafe(ptr %3192, ptr %3193)
  %3195 = load ptr, ptr @231, align 8
  %3196 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3197 = call ptr @Core_iterator_foldLeft(ptr %3194, ptr %3195, ptr %3196)
  %3198 = load ptr, ptr @233, align 8
  %3199 = call ptr @Core_check_checkEquals(ptr %3197, ptr %3198)
  %3200 = load ptr, ptr @num_4, align 8
  %3201 = call ptr @Core_iterator_skip(ptr %3057, ptr %3200)
  %3202 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %3203 = call ptr @Core_iterator_wrapSafe(ptr %3201, ptr %3202)
  %3204 = load ptr, ptr @231, align 8
  %3205 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3206 = call ptr @Core_iterator_foldLeft(ptr %3203, ptr %3204, ptr %3205)
  %3207 = load ptr, ptr @253, align 8
  %3208 = call ptr @Core_check_checkEquals(ptr %3206, ptr %3207)
  %3209 = load ptr, ptr @num_40, align 8
  %3210 = call ptr @Core_iterator_skip(ptr %3057, ptr %3209)
  %3211 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %3212 = call ptr @Core_iterator_wrapSafe(ptr %3210, ptr %3211)
  %3213 = load ptr, ptr @231, align 8
  %3214 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3215 = call ptr @Core_iterator_foldLeft(ptr %3212, ptr %3213, ptr %3214)
  %3216 = load ptr, ptr @231, align 8
  %3217 = call ptr @Core_check_checkEquals(ptr %3215, ptr %3216)
  %3218 = load ptr, ptr @num_4, align 8
  %3219 = load ptr, ptr @num_3, align 8
  %3220 = load ptr, ptr @tag_False, align 8
  %3221 = call ptr @Core_iterator_windowed(ptr %3057, ptr %3218, ptr %3219, ptr %3220)
  %3222 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %3223 = call ptr @Core_iterator_wrapSafe(ptr %3221, ptr %3222)
  %3224 = load ptr, ptr @231, align 8
  %3225 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3226 = call ptr @Core_iterator_foldLeft(ptr %3223, ptr %3224, ptr %3225)
  %3227 = load ptr, ptr @256, align 8
  %3228 = call ptr @Core_check_checkEquals(ptr %3226, ptr %3227)
  %3229 = load ptr, ptr @num_3, align 8
  %3230 = call ptr @Core_iterator_chunked(ptr %3057, ptr %3229)
  %3231 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %3232 = call ptr @Core_iterator_wrapSafe(ptr %3230, ptr %3231)
  %3233 = load ptr, ptr @231, align 8
  %3234 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3235 = call ptr @Core_iterator_foldLeft(ptr %3232, ptr %3233, ptr %3234)
  %3236 = load ptr, ptr @260, align 8
  %3237 = call ptr @Core_check_checkEquals(ptr %3235, ptr %3236)
  %3238 = call ptr @make_candy_int(i64 1000000000)
  store ptr %3238, ptr @num_1000000000, align 8
  %3239 = alloca i8, i64 30, align 1
  store [30 x i8] c"Chrono:duration:isNumber:18:9\00", ptr %3239, align 1
  %3240 = call ptr @make_candy_text(ptr %3239)
  store ptr %3240, ptr @"Chrono:duration:isNumber:18:9", align 8
  %3241 = alloca i8, i64 28, align 1
  store [28 x i8] c"Chrono:duration:isNumber:19\00", ptr %3241, align 1
  %3242 = call ptr @make_candy_text(ptr %3241)
  store ptr %3242, ptr @"Chrono:duration:isNumber:19", align 8
  %3243 = alloca i8, i64 31, align 1
  store [31 x i8] c"`isNumber n` was not satisfied\00", ptr %3243, align 1
  %3244 = call ptr @make_candy_text(ptr %3243)
  store ptr %3244, ptr @"text_`isNumber n` was not satisfied", align 8
  %3245 = alloca i8, i64 39, align 1
  store [39 x i8] c"Chrono:duration:numberAsFixedDecimal:4\00", ptr %3245, align 1
  %3246 = call ptr @make_candy_text(ptr %3245)
  store ptr %3246, ptr @"Chrono:duration:numberAsFixedDecimal:4", align 8
  %3247 = alloca i8, i64 40, align 1
  store [40 x i8] c"Chrono:duration:numberAsFixedDecimal:15\00", ptr %3247, align 1
  %3248 = call ptr @make_candy_text(ptr %3247)
  store ptr %3248, ptr @"Chrono:duration:numberAsFixedDecimal:15", align 8
  %3249 = alloca i8, i64 42, align 1
  store [42 x i8] c"Chrono:duration:numberAsFixedDecimal:17:9\00", ptr %3249, align 1
  %3250 = call ptr @make_candy_text(ptr %3249)
  store ptr %3250, ptr @"Chrono:duration:numberAsFixedDecimal:17:9", align 8
  %3251 = alloca i8, i64 40, align 1
  store [40 x i8] c"Chrono:duration:numberAsFixedDecimal:18\00", ptr %3251, align 1
  %3252 = call ptr @make_candy_text(ptr %3251)
  store ptr %3252, ptr @"Chrono:duration:numberAsFixedDecimal:18", align 8
  %3253 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3254 = call ptr @make_candy_function(ptr @Chrono_duration_numberAsFixedDecimal, ptr %3253, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3254, ptr @fun_Chrono_duration_numberAsFixedDecimal, align 8
  %3255 = alloca i8, i64 41, align 1
  store [41 x i8] c"`isNumber nanoseconds` was not satisfied\00", ptr %3255, align 1
  %3256 = call ptr @make_candy_text(ptr %3255)
  store ptr %3256, ptr @"text_`isNumber nanoseconds` was not satisfied", align 8
  %3257 = alloca i8, i64 34, align 1
  store [34 x i8] c"Chrono:duration:fromNanoseconds:4\00", ptr %3257, align 1
  %3258 = call ptr @make_candy_text(ptr %3257)
  store ptr %3258, ptr @"Chrono:duration:fromNanoseconds:4", align 8
  %3259 = alloca i8, i64 34, align 1
  store [34 x i8] c"Chrono:duration:fromNanoseconds:8\00", ptr %3259, align 1
  %3260 = call ptr @make_candy_text(ptr %3259)
  store ptr %3260, ptr @"Chrono:duration:fromNanoseconds:8", align 8
  %3261 = alloca i8, i64 35, align 1
  store [35 x i8] c"Chrono:duration:fromNanoseconds:34\00", ptr %3261, align 1
  %3262 = call ptr @make_candy_text(ptr %3261)
  store ptr %3262, ptr @"Chrono:duration:fromNanoseconds:34", align 8
  %3263 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3264 = call ptr @make_candy_function(ptr @Chrono_duration_fromNanoseconds, ptr %3263, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3264, ptr @fun_Chrono_duration_fromNanoseconds, align 8
  %3265 = alloca i8, i64 18, align 1
  store [18 x i8] c"Chrono:clock:is:1\00", ptr %3265, align 1
  %3266 = call ptr @make_candy_text(ptr %3265)
  store ptr %3266, ptr @"Chrono:clock:is:1", align 8
  %3267 = alloca i8, i64 6, align 1
  store [6 x i8] c"Clock\00", ptr %3267, align 1
  %3268 = call ptr @make_candy_tag(ptr %3267, ptr null)
  store ptr %3268, ptr @tag_Clock, align 8
  %3269 = alloca i8, i64 21, align 1
  store [21 x i8] c"Expected Clock, got \00", ptr %3269, align 1
  %3270 = call ptr @make_candy_text(ptr %3269)
  store ptr %3270, ptr @"text_Expected Clock, got ", align 8
  %3271 = alloca i8, i64 20, align 1
  store [20 x i8] c"Chrono:clock:is:1:f\00", ptr %3271, align 1
  %3272 = call ptr @make_candy_text(ptr %3271)
  store ptr %3272, ptr @"Chrono:clock:is:1:f", align 8
  %3273 = alloca i8, i64 20, align 1
  store [20 x i8] c"Chrono:clock:is:1:9\00", ptr %3273, align 1
  %3274 = call ptr @make_candy_text(ptr %3273)
  store ptr %3274, ptr @"Chrono:clock:is:1:9", align 8
  %3275 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3276 = call ptr @make_candy_function(ptr @Chrono_clock_is, ptr %3275, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3276, ptr @fun_Chrono_clock_is, align 8
  %3277 = alloca i8, i64 31, align 1
  store [31 x i8] c"Chrono:clock:fromSystemClock:9\00", ptr %3277, align 1
  %3278 = call ptr @make_candy_text(ptr %3277)
  store ptr %3278, ptr @"Chrono:clock:fromSystemClock:9", align 8
  %3279 = alloca i8, i64 45, align 1
  store [45 x i8] c"`function.is0 systemClock` was not satisfied\00", ptr %3279, align 1
  %3280 = call ptr @make_candy_text(ptr %3279)
  store ptr %3280, ptr @"text_`function.is0 systemClock` was not satisfied", align 8
  %3281 = alloca i8, i64 32, align 1
  store [32 x i8] c"Chrono:clock:fromSystemClock:11\00", ptr %3281, align 1
  %3282 = call ptr @make_candy_text(ptr %3281)
  store ptr %3282, ptr @"Chrono:clock:fromSystemClock:11", align 8
  %3283 = alloca i8, i64 34, align 1
  store [34 x i8] c"Chrono:clock:fromSystemClock:13:9\00", ptr %3283, align 1
  %3284 = call ptr @make_candy_text(ptr %3283)
  store ptr %3284, ptr @"Chrono:clock:fromSystemClock:13:9", align 8
  %3285 = alloca i8, i64 35, align 1
  store [35 x i8] c"Chrono:clock:fromSystemClock:13:18\00", ptr %3285, align 1
  %3286 = call ptr @make_candy_text(ptr %3285)
  store ptr %3286, ptr @"Chrono:clock:fromSystemClock:13:18", align 8
  %3287 = alloca i8, i64 35, align 1
  store [35 x i8] c"Chrono:clock:fromSystemClock:13:27\00", ptr %3287, align 1
  %3288 = call ptr @make_candy_text(ptr %3287)
  store ptr %3288, ptr @"Chrono:clock:fromSystemClock:13:27", align 8
  %3289 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3290 = call ptr @make_candy_function(ptr @Chrono_clock_fromSystemClock, ptr %3289, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3290, ptr @fun_Chrono_clock_fromSystemClock, align 8
  %3291 = alloca i8, i64 19, align 1
  store [19 x i8] c"Chrono:clock:now:2\00", ptr %3291, align 1
  %3292 = call ptr @make_candy_text(ptr %3291)
  store ptr %3292, ptr @"Chrono:clock:now:2", align 8
  %3293 = alloca i8, i64 29, align 1
  store [29 x i8] c"`is clock` was not satisfied\00", ptr %3293, align 1
  %3294 = call ptr @make_candy_text(ptr %3293)
  store ptr %3294, ptr @"text_`is clock` was not satisfied", align 8
  %3295 = alloca i8, i64 19, align 1
  store [19 x i8] c"Chrono:clock:now:4\00", ptr %3295, align 1
  %3296 = call ptr @make_candy_text(ptr %3295)
  store ptr %3296, ptr @"Chrono:clock:now:4", align 8
  %3297 = alloca i8, i64 20, align 1
  store [20 x i8] c"Chrono:clock:now:14\00", ptr %3297, align 1
  %3298 = call ptr @make_candy_text(ptr %3297)
  store ptr %3298, ptr @"Chrono:clock:now:14", align 8
  %3299 = alloca i8, i64 20, align 1
  store [20 x i8] c"Chrono:clock:now:23\00", ptr %3299, align 1
  %3300 = call ptr @make_candy_text(ptr %3299)
  store ptr %3300, ptr @"Chrono:clock:now:23", align 8
  %3301 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3302 = call ptr @make_candy_function(ptr @Chrono_clock_now, ptr %3301, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3302, ptr @fun_Chrono_clock_now, align 8
  %3303 = load ptr, ptr @num_0, align 8
  %3304 = load ptr, ptr @num_0, align 8
  %3305 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %3303, ptr %3304)
  %3306 = load ptr, ptr @232, align 8
  %3307 = call ptr @Core_iterator_fromList(ptr %3306)
  %3308 = load ptr, ptr @233, align 8
  %3309 = call ptr @Core_iterator_fromList(ptr %3308)
  %3310 = call ptr @Core_iterator_next(ptr %3307)
  %3311 = call ptr @candy_builtin_type_of(ptr %3310)
  %3312 = load ptr, ptr @tag_Tag, align 8
  %3313 = call ptr @candy_builtin_equals(ptr %3312, ptr %3311)
  %3314 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3315 = getelementptr inbounds { ptr }, ptr %3314, i32 0, i32 0
  store ptr %3310, ptr %3315, align 8
  %3316 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1138, ptr %3314, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3316, ptr @fun_Core_iterator_128_equals_then.1139, align 8
  %3317 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3318 = getelementptr inbounds { ptr }, ptr %3317, i32 0, i32 0
  store ptr %3311, ptr %3318, align 8
  %3319 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1168, ptr %3317, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3319, ptr @fun_Core_iterator_128_equals_else.1169, align 8
  %3320 = load ptr, ptr @fun_Core_iterator_128_equals_then.1139, align 8
  %3321 = load ptr, ptr @fun_Core_iterator_128_equals_else.1169, align 8
  %3322 = call ptr @candy_builtin_if_else(ptr %3313, ptr %3320, ptr %3321)
  %3323 = load ptr, ptr @num_0, align 8
  %3324 = call ptr @candy_builtin_list_get(ptr %3322, ptr %3323)
  %3325 = load ptr, ptr @tag_Match, align 8
  %3326 = call ptr @candy_builtin_equals(ptr %3324, ptr %3325)
  %3327 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3328 = getelementptr inbounds { ptr }, ptr %3327, i32 0, i32 0
  store ptr %3322, ptr %3328, align 8
  %3329 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1170, ptr %3327, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3329, ptr @fun_Core_iterator_128_isMatch_else.1171, align 8
  %3330 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %3331 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1171, align 8
  %3332 = call ptr @candy_builtin_if_else(ptr %3326, ptr %3330, ptr %3331)
  %3333 = load ptr, ptr @num_1, align 8
  %3334 = call ptr @candy_builtin_list_get(ptr %3322, ptr %3333)
  %3335 = load ptr, ptr @num_2, align 8
  %3336 = call ptr @candy_builtin_list_get(ptr %3322, ptr %3335)
  %3337 = load ptr, ptr @num_1, align 8
  %3338 = call ptr @Core_check_checkEquals(ptr %3334, ptr %3337)
  %3339 = call ptr @Core_iterator_next(ptr %3336)
  %3340 = call ptr @candy_builtin_type_of(ptr %3339)
  %3341 = load ptr, ptr @tag_Tag, align 8
  %3342 = call ptr @candy_builtin_equals(ptr %3341, ptr %3340)
  %3343 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3344 = getelementptr inbounds { ptr }, ptr %3343, i32 0, i32 0
  store ptr %3339, ptr %3344, align 8
  %3345 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1172, ptr %3343, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3345, ptr @fun_Core_iterator_137_equals_then.1173, align 8
  %3346 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3347 = getelementptr inbounds { ptr }, ptr %3346, i32 0, i32 0
  store ptr %3340, ptr %3347, align 8
  %3348 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1202, ptr %3346, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3348, ptr @fun_Core_iterator_137_equals_else.1203, align 8
  %3349 = load ptr, ptr @fun_Core_iterator_137_equals_then.1173, align 8
  %3350 = load ptr, ptr @fun_Core_iterator_137_equals_else.1203, align 8
  %3351 = call ptr @candy_builtin_if_else(ptr %3342, ptr %3349, ptr %3350)
  %3352 = load ptr, ptr @num_0, align 8
  %3353 = call ptr @candy_builtin_list_get(ptr %3351, ptr %3352)
  %3354 = load ptr, ptr @tag_Match, align 8
  %3355 = call ptr @candy_builtin_equals(ptr %3353, ptr %3354)
  %3356 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3357 = getelementptr inbounds { ptr }, ptr %3356, i32 0, i32 0
  store ptr %3351, ptr %3357, align 8
  %3358 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1204, ptr %3356, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3358, ptr @fun_Core_iterator_137_isMatch_else.1205, align 8
  %3359 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %3360 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1205, align 8
  %3361 = call ptr @candy_builtin_if_else(ptr %3355, ptr %3359, ptr %3360)
  %3362 = load ptr, ptr @num_1, align 8
  %3363 = call ptr @candy_builtin_list_get(ptr %3351, ptr %3362)
  %3364 = load ptr, ptr @num_2, align 8
  %3365 = call ptr @candy_builtin_list_get(ptr %3351, ptr %3364)
  %3366 = load ptr, ptr @num_2, align 8
  %3367 = call ptr @Core_check_checkEquals(ptr %3363, ptr %3366)
  %3368 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %3369 = call ptr @Core_iterator_wrapSafe(ptr %3307, ptr %3368)
  %3370 = call ptr @Core_iterator_next(ptr %3369)
  %3371 = load ptr, ptr @tag_Empty, align 8
  %3372 = call ptr @candy_builtin_equals(ptr %3370, ptr %3371)
  %3373 = load ptr, ptr @tag_False, align 8
  %3374 = call ptr @Core_check_checkEquals(ptr %3372, ptr %3373)
  %3375 = load ptr, ptr @231, align 8
  %3376 = call ptr @Core_iterator_fromList(ptr %3375)
  %3377 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %3378 = call ptr @Core_iterator_wrapSafe(ptr %3376, ptr %3377)
  %3379 = call ptr @Core_iterator_next(ptr %3378)
  %3380 = load ptr, ptr @tag_Empty, align 8
  %3381 = call ptr @candy_builtin_equals(ptr %3379, ptr %3380)
  %3382 = load ptr, ptr @tag_True, align 8
  %3383 = call ptr @Core_check_checkEquals(ptr %3381, ptr %3382)
  %3384 = load ptr, ptr @fun_Core_iterator_161, align 8
  %3385 = call ptr @Core_iterator_map(ptr %3307, ptr %3384)
  %3386 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %3387 = call ptr @Core_iterator_wrapSafe(ptr %3385, ptr %3386)
  %3388 = load ptr, ptr @231, align 8
  %3389 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3390 = call ptr @Core_iterator_foldLeft(ptr %3387, ptr %3388, ptr %3389)
  %3391 = load ptr, ptr @250, align 8
  %3392 = call ptr @Core_check_checkEquals(ptr %3390, ptr %3391)
  %3393 = call ptr @Core_iterator_sum(ptr %3307)
  %3394 = load ptr, ptr @num_6, align 8
  %3395 = call ptr @Core_check_checkEquals(ptr %3393, ptr %3394)
  %3396 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %3397 = call ptr @Core_iterator_wrapSafe(ptr %3307, ptr %3396)
  %3398 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %3399 = call ptr @Core_iterator_map(ptr %3397, ptr %3398)
  %3400 = call ptr @Core_iterator_sum(ptr %3399)
  %3401 = load ptr, ptr @num_3, align 8
  %3402 = call ptr @Core_check_checkEquals(ptr %3400, ptr %3401)
  %3403 = load ptr, ptr @fun_Core_iterator_185, align 8
  %3404 = call ptr @Core_iterator_all(ptr %3307, ptr %3403)
  %3405 = load ptr, ptr @tag_True, align 8
  %3406 = call ptr @Core_check_checkEquals(ptr %3404, ptr %3405)
  %3407 = load ptr, ptr @fun_Core_iterator_192, align 8
  %3408 = call ptr @Core_iterator_any(ptr %3307, ptr %3407)
  %3409 = load ptr, ptr @tag_True, align 8
  %3410 = call ptr @Core_check_checkEquals(ptr %3408, ptr %3409)
  %3411 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %3412 = call ptr @Core_iterator_map(ptr %3307, ptr %3411)
  %3413 = call ptr @Core_iterator_joinToText(ptr %3412)
  %3414 = load ptr, ptr @text_123, align 8
  %3415 = call ptr @Core_check_checkEquals(ptr %3413, ptr %3414)
  %3416 = load ptr, ptr @fun_Core_iterator_214, align 8
  %3417 = call ptr @Core_iterator_where(ptr %3309, ptr %3416)
  %3418 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %3419 = call ptr @Core_iterator_wrapSafe(ptr %3417, ptr %3418)
  %3420 = load ptr, ptr @231, align 8
  %3421 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3422 = call ptr @Core_iterator_foldLeft(ptr %3419, ptr %3420, ptr %3421)
  %3423 = load ptr, ptr @251, align 8
  %3424 = call ptr @Core_check_checkEquals(ptr %3422, ptr %3423)
  %3425 = load ptr, ptr @fun_Core_iterator_228, align 8
  %3426 = call ptr @Core_iterator_takeWhile(ptr %3309, ptr %3425)
  %3427 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %3428 = call ptr @Core_iterator_wrapSafe(ptr %3426, ptr %3427)
  %3429 = load ptr, ptr @231, align 8
  %3430 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3431 = call ptr @Core_iterator_foldLeft(ptr %3428, ptr %3429, ptr %3430)
  %3432 = load ptr, ptr @232, align 8
  %3433 = call ptr @Core_check_checkEquals(ptr %3431, ptr %3432)
  %3434 = load ptr, ptr @num_4, align 8
  %3435 = call ptr @Core_iterator_take(ptr %3309, ptr %3434)
  %3436 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %3437 = call ptr @Core_iterator_wrapSafe(ptr %3435, ptr %3436)
  %3438 = load ptr, ptr @231, align 8
  %3439 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3440 = call ptr @Core_iterator_foldLeft(ptr %3437, ptr %3438, ptr %3439)
  %3441 = load ptr, ptr @252, align 8
  %3442 = call ptr @Core_check_checkEquals(ptr %3440, ptr %3441)
  %3443 = load ptr, ptr @num_12, align 8
  %3444 = call ptr @Core_iterator_take(ptr %3309, ptr %3443)
  %3445 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %3446 = call ptr @Core_iterator_wrapSafe(ptr %3444, ptr %3445)
  %3447 = load ptr, ptr @231, align 8
  %3448 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3449 = call ptr @Core_iterator_foldLeft(ptr %3446, ptr %3447, ptr %3448)
  %3450 = load ptr, ptr @233, align 8
  %3451 = call ptr @Core_check_checkEquals(ptr %3449, ptr %3450)
  %3452 = load ptr, ptr @num_4, align 8
  %3453 = call ptr @Core_iterator_skip(ptr %3309, ptr %3452)
  %3454 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %3455 = call ptr @Core_iterator_wrapSafe(ptr %3453, ptr %3454)
  %3456 = load ptr, ptr @231, align 8
  %3457 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3458 = call ptr @Core_iterator_foldLeft(ptr %3455, ptr %3456, ptr %3457)
  %3459 = load ptr, ptr @253, align 8
  %3460 = call ptr @Core_check_checkEquals(ptr %3458, ptr %3459)
  %3461 = load ptr, ptr @num_40, align 8
  %3462 = call ptr @Core_iterator_skip(ptr %3309, ptr %3461)
  %3463 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %3464 = call ptr @Core_iterator_wrapSafe(ptr %3462, ptr %3463)
  %3465 = load ptr, ptr @231, align 8
  %3466 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3467 = call ptr @Core_iterator_foldLeft(ptr %3464, ptr %3465, ptr %3466)
  %3468 = load ptr, ptr @231, align 8
  %3469 = call ptr @Core_check_checkEquals(ptr %3467, ptr %3468)
  %3470 = load ptr, ptr @num_4, align 8
  %3471 = load ptr, ptr @num_3, align 8
  %3472 = load ptr, ptr @tag_False, align 8
  %3473 = call ptr @Core_iterator_windowed(ptr %3309, ptr %3470, ptr %3471, ptr %3472)
  %3474 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %3475 = call ptr @Core_iterator_wrapSafe(ptr %3473, ptr %3474)
  %3476 = load ptr, ptr @231, align 8
  %3477 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3478 = call ptr @Core_iterator_foldLeft(ptr %3475, ptr %3476, ptr %3477)
  %3479 = load ptr, ptr @256, align 8
  %3480 = call ptr @Core_check_checkEquals(ptr %3478, ptr %3479)
  %3481 = load ptr, ptr @num_3, align 8
  %3482 = call ptr @Core_iterator_chunked(ptr %3309, ptr %3481)
  %3483 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %3484 = call ptr @Core_iterator_wrapSafe(ptr %3482, ptr %3483)
  %3485 = load ptr, ptr @231, align 8
  %3486 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3487 = call ptr @Core_iterator_foldLeft(ptr %3484, ptr %3485, ptr %3486)
  %3488 = load ptr, ptr @260, align 8
  %3489 = call ptr @Core_check_checkEquals(ptr %3487, ptr %3488)
  %3490 = call ptr @make_candy_int(i64 60)
  store ptr %3490, ptr @num_60, align 8
  %3491 = call ptr @make_candy_int(i64 3600)
  store ptr %3491, ptr @num_3600, align 8
  %3492 = call ptr @make_candy_int(i64 86400)
  store ptr %3492, ptr @num_86400, align 8
  %3493 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:11\00", ptr %3493, align 1
  %3494 = call ptr @make_candy_text(ptr %3493)
  store ptr %3494, ptr @"Builtins::intRemainder:11", align 8
  %3495 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:17\00", ptr %3495, align 1
  %3496 = call ptr @make_candy_text(ptr %3495)
  store ptr %3496, ptr @"Builtins::intRemainder:17", align 8
  %3497 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:25\00", ptr %3497, align 1
  %3498 = call ptr @make_candy_text(ptr %3497)
  store ptr %3498, ptr @"Builtins::intRemainder:25", align 8
  %3499 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::intRemainder:32\00", ptr %3499, align 1
  %3500 = call ptr @make_candy_text(ptr %3499)
  store ptr %3500, ptr @"Builtins::intRemainder:32", align 8
  %3501 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::intRemainder:5\00", ptr %3501, align 1
  %3502 = call ptr @make_candy_text(ptr %3501)
  store ptr %3502, ptr @"Builtins::intRemainder:5", align 8
  %3503 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:11\00", ptr %3503, align 1
  %3504 = call ptr @make_candy_text(ptr %3503)
  store ptr %3504, ptr @"Builtins::textGetRange:11", align 8
  %3505 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:14\00", ptr %3505, align 1
  %3506 = call ptr @make_candy_text(ptr %3505)
  store ptr %3506, ptr @"Builtins::textGetRange:14", align 8
  %3507 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:16\00", ptr %3507, align 1
  %3508 = call ptr @make_candy_text(ptr %3507)
  store ptr %3508, ptr @"Builtins::textGetRange:16", align 8
  %3509 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:24\00", ptr %3509, align 1
  %3510 = call ptr @make_candy_text(ptr %3509)
  store ptr %3510, ptr @"Builtins::textGetRange:24", align 8
  %3511 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:25\00", ptr %3511, align 1
  %3512 = call ptr @make_candy_text(ptr %3511)
  store ptr %3512, ptr @"Builtins::textGetRange:25", align 8
  %3513 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:27\00", ptr %3513, align 1
  %3514 = call ptr @make_candy_text(ptr %3513)
  store ptr %3514, ptr @"Builtins::textGetRange:27", align 8
  %3515 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:33\00", ptr %3515, align 1
  %3516 = call ptr @make_candy_text(ptr %3515)
  store ptr %3516, ptr @"Builtins::textGetRange:33", align 8
  %3517 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:36\00", ptr %3517, align 1
  %3518 = call ptr @make_candy_text(ptr %3517)
  store ptr %3518, ptr @"Builtins::textGetRange:36", align 8
  %3519 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:38\00", ptr %3519, align 1
  %3520 = call ptr @make_candy_text(ptr %3519)
  store ptr %3520, ptr @"Builtins::textGetRange:38", align 8
  %3521 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:46\00", ptr %3521, align 1
  %3522 = call ptr @make_candy_text(ptr %3521)
  store ptr %3522, ptr @"Builtins::textGetRange:46", align 8
  %3523 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:47\00", ptr %3523, align 1
  %3524 = call ptr @make_candy_text(ptr %3523)
  store ptr %3524, ptr @"Builtins::textGetRange:47", align 8
  %3525 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:49\00", ptr %3525, align 1
  %3526 = call ptr @make_candy_text(ptr %3525)
  store ptr %3526, ptr @"Builtins::textGetRange:49", align 8
  %3527 = alloca i8, i64 25, align 1
  store [25 x i8] c"Builtins::textGetRange:5\00", ptr %3527, align 1
  %3528 = call ptr @make_candy_text(ptr %3527)
  store ptr %3528, ptr @"Builtins::textGetRange:5", align 8
  %3529 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:53\00", ptr %3529, align 1
  %3530 = call ptr @make_candy_text(ptr %3529)
  store ptr %3530, ptr @"Builtins::textGetRange:53", align 8
  %3531 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:55\00", ptr %3531, align 1
  %3532 = call ptr @make_candy_text(ptr %3531)
  store ptr %3532, ptr @"Builtins::textGetRange:55", align 8
  %3533 = alloca i8, i64 26, align 1
  store [26 x i8] c"Builtins::textGetRange:63\00", ptr %3533, align 1
  %3534 = call ptr @make_candy_text(ptr %3533)
  store ptr %3534, ptr @"Builtins::textGetRange:63", align 8
  %3535 = alloca i8, i64 24, align 1
  store [24 x i8] c"Builtins::textLength:11\00", ptr %3535, align 1
  %3536 = call ptr @make_candy_text(ptr %3535)
  store ptr %3536, ptr @"Builtins::textLength:11", align 8
  %3537 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::textLength:5\00", ptr %3537, align 1
  %3538 = call ptr @make_candy_text(ptr %3537)
  store ptr %3538, ptr @"Builtins::textLength:5", align 8
  %3539 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:11\00", ptr %3539, align 1
  %3540 = call ptr @make_candy_text(ptr %3539)
  store ptr %3540, ptr @"Builtins::textStartsWith:11", align 8
  %3541 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textStartsWith:18\00", ptr %3541, align 1
  %3542 = call ptr @make_candy_text(ptr %3541)
  store ptr %3542, ptr @"Builtins::textStartsWith:18", align 8
  %3543 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textStartsWith:5\00", ptr %3543, align 1
  %3544 = call ptr @make_candy_text(ptr %3543)
  store ptr %3544, ptr @"Builtins::textStartsWith:5", align 8
  %3545 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:18\00", ptr %3545, align 1
  %3546 = call ptr @make_candy_text(ptr %3545)
  store ptr %3546, ptr @"Core:fixedDecimal:floorToInt:18", align 8
  %3547 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:2\00", ptr %3547, align 1
  %3548 = call ptr @make_candy_text(ptr %3547)
  store ptr %3548, ptr @"Core:fixedDecimal:floorToInt:2", align 8
  %3549 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:20\00", ptr %3549, align 1
  %3550 = call ptr @make_candy_text(ptr %3549)
  store ptr %3550, ptr @"Core:fixedDecimal:floorToInt:20", align 8
  %3551 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:floorToInt:21\00", ptr %3551, align 1
  %3552 = call ptr @make_candy_text(ptr %3551)
  store ptr %3552, ptr @"Core:fixedDecimal:floorToInt:21", align 8
  %3553 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:4\00", ptr %3553, align 1
  %3554 = call ptr @make_candy_text(ptr %3553)
  store ptr %3554, ptr @"Core:fixedDecimal:floorToInt:4", align 8
  %3555 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:floorToInt:7\00", ptr %3555, align 1
  %3556 = call ptr @make_candy_text(ptr %3555)
  store ptr %3556, ptr @"Core:fixedDecimal:floorToInt:7", align 8
  %3557 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removePrefix:14\00", ptr %3557, align 1
  %3558 = call ptr @make_candy_text(ptr %3557)
  store ptr %3558, ptr @"Core:text:removePrefix:14", align 8
  %3559 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:4\00", ptr %3559, align 1
  %3560 = call ptr @make_candy_text(ptr %3559)
  store ptr %3560, ptr @"Core:text:removePrefix:15:4", align 8
  %3561 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:7\00", ptr %3561, align 1
  %3562 = call ptr @make_candy_text(ptr %3561)
  store ptr %3562, ptr @"Core:text:removePrefix:15:7", align 8
  %3563 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:text:removePrefix:15:8\00", ptr %3563, align 1
  %3564 = call ptr @make_candy_text(ptr %3563)
  store ptr %3564, ptr @"Core:text:removePrefix:15:8", align 8
  %3565 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:removePrefix:17\00", ptr %3565, align 1
  %3566 = call ptr @make_candy_text(ptr %3565)
  store ptr %3566, ptr @"Core:text:removePrefix:17", align 8
  %3567 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:removePrefix:4\00", ptr %3567, align 1
  %3568 = call ptr @make_candy_text(ptr %3567)
  store ptr %3568, ptr @"Core:text:removePrefix:4", align 8
  %3569 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:removePrefix:9\00", ptr %3569, align 1
  %3570 = call ptr @make_candy_text(ptr %3569)
  store ptr %3570, ptr @"Core:text:removePrefix:9", align 8
  %3571 = call ptr @make_candy_function(ptr @candy_builtin_int_remainder, ptr null, i64 0)
  store ptr %3571, ptr @fun_candy_builtin_int_remainder, align 8
  %3572 = call ptr @make_candy_function(ptr @candy_builtin_text_get_range, ptr null, i64 0)
  store ptr %3572, ptr @fun_candy_builtin_text_get_range, align 8
  %3573 = call ptr @make_candy_function(ptr @candy_builtin_text_length, ptr null, i64 0)
  store ptr %3573, ptr @fun_candy_builtin_text_length, align 8
  %3574 = call ptr @make_candy_function(ptr @candy_builtin_text_starts_with, ptr null, i64 0)
  store ptr %3574, ptr @fun_candy_builtin_text_starts_with, align 8
  %3575 = alloca i8, i64 2, align 1
  store [2 x i8] c"1\00", ptr %3575, align 1
  %3576 = call ptr @make_candy_text(ptr %3575)
  store ptr %3576, ptr @text_1, align 8
  %3577 = alloca i8, i64 79, align 1
  store [77 x i8] c"`endExclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %3577, align 1
  %3578 = call ptr @make_candy_text(ptr %3577)
  store ptr %3578, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %3579 = alloca i8, i64 49, align 1
  store [49 x i8] c"`endExclusive | isNonNegative` was not satisfied\00", ptr %3579, align 1
  %3580 = call ptr @make_candy_text(ptr %3579)
  store ptr %3580, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %3581 = alloca i8, i64 46, align 1
  store [46 x i8] c"`endExclusive | typeIs Int` was not satisfied\00", ptr %3581, align 1
  %3582 = call ptr @make_candy_text(ptr %3581)
  store ptr %3582, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %3583 = alloca i8, i64 30, align 1
  store [30 x i8] c"`is prefix` was not satisfied\00", ptr %3583, align 1
  %3584 = call ptr @make_candy_text(ptr %3583)
  store ptr %3584, ptr @"text_`is prefix` was not satisfied", align 8
  %3585 = alloca i8, i64 28, align 1
  store [28 x i8] c"`is text` was not satisfied\00", ptr %3585, align 1
  %3586 = call ptr @make_candy_text(ptr %3585)
  store ptr %3586, ptr @"text_`is text` was not satisfied", align 8
  %3587 = alloca i8, i64 41, align 1
  store [41 x i8] c"`prefix | typeIs Text` was not satisfied\00", ptr %3587, align 1
  %3588 = call ptr @make_candy_text(ptr %3587)
  store ptr %3588, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %3589 = alloca i8, i64 81, align 1
  store [79 x i8] c"`startInclusive | isLessThanOrEqualTo (text | (.textLength)` was not satisfied\00", ptr %3589, align 1
  %3590 = call ptr @make_candy_text(ptr %3589)
  store ptr %3590, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %3591 = alloca i8, i64 70, align 1
  store [70 x i8] c"`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied\00", ptr %3591, align 1
  %3592 = call ptr @make_candy_text(ptr %3591)
  store ptr %3592, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %3593 = alloca i8, i64 51, align 1
  store [51 x i8] c"`startInclusive | isNonNegative` was not satisfied\00", ptr %3593, align 1
  %3594 = call ptr @make_candy_text(ptr %3593)
  store ptr %3594, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %3595 = alloca i8, i64 48, align 1
  store [48 x i8] c"`startInclusive | typeIs Int` was not satisfied\00", ptr %3595, align 1
  %3596 = call ptr @make_candy_text(ptr %3595)
  store ptr %3596, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %3597 = alloca i8, i64 39, align 1
  store [39 x i8] c"`text | typeIs Text` was not satisfied\00", ptr %3597, align 1
  %3598 = call ptr @make_candy_text(ptr %3597)
  store ptr %3598, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %3599 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3600 = call ptr @make_candy_function(ptr @Builtins__intRemainder, ptr %3599, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3600, ptr @fun_Builtins__intRemainder, align 8
  %3601 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3602 = call ptr @make_candy_function(ptr @Builtins__textGetRange, ptr %3601, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3602, ptr @fun_Builtins__textGetRange, align 8
  %3603 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3604 = call ptr @make_candy_function(ptr @Core_text_removePrefix, ptr %3603, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3604, ptr @fun_Core_text_removePrefix, align 8
  %3605 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3606 = call ptr @make_candy_function(ptr @Core_fixedDecimal_floorToInt, ptr %3605, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3606, ptr @fun_Core_fixedDecimal_floorToInt, align 8
  %3607 = load ptr, ptr @num_0, align 8
  %3608 = load ptr, ptr @num_0, align 8
  %3609 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %3607, ptr %3608)
  %3610 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:multiply:2\00", ptr %3610, align 1
  %3611 = call ptr @make_candy_text(ptr %3610)
  store ptr %3611, ptr @"Core:fixedDecimal:multiply:2", align 8
  %3612 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is factorA` was not satisfied\00", ptr %3612, align 1
  %3613 = call ptr @make_candy_text(ptr %3612)
  store ptr %3613, ptr @"text_`is factorA` was not satisfied", align 8
  %3614 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:multiply:4\00", ptr %3614, align 1
  %3615 = call ptr @make_candy_text(ptr %3614)
  store ptr %3615, ptr @"Core:fixedDecimal:multiply:4", align 8
  %3616 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:multiply:7\00", ptr %3616, align 1
  %3617 = call ptr @make_candy_text(ptr %3616)
  store ptr %3617, ptr @"Core:fixedDecimal:multiply:7", align 8
  %3618 = alloca i8, i64 31, align 1
  store [31 x i8] c"`is factorB` was not satisfied\00", ptr %3618, align 1
  %3619 = call ptr @make_candy_text(ptr %3618)
  store ptr %3619, ptr @"text_`is factorB` was not satisfied", align 8
  %3620 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:fixedDecimal:multiply:9\00", ptr %3620, align 1
  %3621 = call ptr @make_candy_text(ptr %3620)
  store ptr %3621, ptr @"Core:fixedDecimal:multiply:9", align 8
  %3622 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:13\00", ptr %3622, align 1
  %3623 = call ptr @make_candy_text(ptr %3622)
  store ptr %3623, ptr @"Core:fixedDecimal:multiply:13", align 8
  %3624 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:24\00", ptr %3624, align 1
  %3625 = call ptr @make_candy_text(ptr %3624)
  store ptr %3625, ptr @"Core:fixedDecimal:multiply:24", align 8
  %3626 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:25\00", ptr %3626, align 1
  %3627 = call ptr @make_candy_text(ptr %3626)
  store ptr %3627, ptr @"Core:fixedDecimal:multiply:25", align 8
  %3628 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:28\00", ptr %3628, align 1
  %3629 = call ptr @make_candy_text(ptr %3628)
  store ptr %3629, ptr @"Core:fixedDecimal:multiply:28", align 8
  %3630 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:39\00", ptr %3630, align 1
  %3631 = call ptr @make_candy_text(ptr %3630)
  store ptr %3631, ptr @"Core:fixedDecimal:multiply:39", align 8
  %3632 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:40\00", ptr %3632, align 1
  %3633 = call ptr @make_candy_text(ptr %3632)
  store ptr %3633, ptr @"Core:fixedDecimal:multiply:40", align 8
  %3634 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:multiply:41\00", ptr %3634, align 1
  %3635 = call ptr @make_candy_text(ptr %3634)
  store ptr %3635, ptr @"Core:fixedDecimal:multiply:41", align 8
  %3636 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3637 = call ptr @make_candy_function(ptr @Core_fixedDecimal_multiply, ptr %3636, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3637, ptr @fun_Core_fixedDecimal_multiply, align 8
  %3638 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:2\00", ptr %3638, align 1
  %3639 = call ptr @make_candy_text(ptr %3638)
  store ptr %3639, ptr @"Core:fixedDecimal:isNegative:2", align 8
  %3640 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:4\00", ptr %3640, align 1
  %3641 = call ptr @make_candy_text(ptr %3640)
  store ptr %3641, ptr @"Core:fixedDecimal:isNegative:4", align 8
  %3642 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:isNegative:7\00", ptr %3642, align 1
  %3643 = call ptr @make_candy_text(ptr %3642)
  store ptr %3643, ptr @"Core:fixedDecimal:isNegative:7", align 8
  %3644 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:fixedDecimal:isNegative:17\00", ptr %3644, align 1
  %3645 = call ptr @make_candy_text(ptr %3644)
  store ptr %3645, ptr @"Core:fixedDecimal:isNegative:17", align 8
  %3646 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:2\00", ptr %3646, align 1
  %3647 = call ptr @make_candy_text(ptr %3646)
  store ptr %3647, ptr @"Core:fixedDecimal:toText:2", align 8
  %3648 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:4\00", ptr %3648, align 1
  %3649 = call ptr @make_candy_text(ptr %3648)
  store ptr %3649, ptr @"Core:fixedDecimal:toText:4", align 8
  %3650 = alloca i8, i64 27, align 1
  store [27 x i8] c"Core:fixedDecimal:toText:7\00", ptr %3650, align 1
  %3651 = call ptr @make_candy_text(ptr %3650)
  store ptr %3651, ptr @"Core:fixedDecimal:toText:7", align 8
  %3652 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:2\00", ptr %3652, align 1
  %3653 = call ptr @make_candy_text(ptr %3652)
  store ptr %3653, ptr @"Core:fixedDecimal:toText:10:2", align 8
  %3654 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:4\00", ptr %3654, align 1
  %3655 = call ptr @make_candy_text(ptr %3654)
  store ptr %3655, ptr @"Core:fixedDecimal:toText:10:4", align 8
  %3656 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:10:8\00", ptr %3656, align 1
  %3657 = call ptr @make_candy_text(ptr %3656)
  store ptr %3657, ptr @"Core:fixedDecimal:toText:10:8", align 8
  %3658 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:18\00", ptr %3658, align 1
  %3659 = call ptr @make_candy_text(ptr %3658)
  store ptr %3659, ptr @"Core:fixedDecimal:toText:10:18", align 8
  %3660 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:30\00", ptr %3660, align 1
  %3661 = call ptr @make_candy_text(ptr %3660)
  store ptr %3661, ptr @"Core:fixedDecimal:toText:10:30", align 8
  %3662 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:31:10\00", ptr %3662, align 1
  %3663 = call ptr @make_candy_text(ptr %3662)
  store ptr %3663, ptr @"Core:fixedDecimal:toText:10:31:10", align 8
  %3664 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:31:28\00", ptr %3664, align 1
  %3665 = call ptr @make_candy_text(ptr %3664)
  store ptr %3665, ptr @"Core:fixedDecimal:toText:10:31:28", align 8
  %3666 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:32:10\00", ptr %3666, align 1
  %3667 = call ptr @make_candy_text(ptr %3666)
  store ptr %3667, ptr @"Core:fixedDecimal:toText:10:32:10", align 8
  %3668 = alloca i8, i64 3, align 1
  store [3 x i8] c"-1\00", ptr %3668, align 1
  %3669 = call ptr @make_candy_text(ptr %3668)
  store ptr %3669, ptr @text_-1, align 8
  %3670 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:fixedDecimal:toText:10:32:28\00", ptr %3670, align 1
  %3671 = call ptr @make_candy_text(ptr %3670)
  store ptr %3671, ptr @"Core:fixedDecimal:toText:10:32:28", align 8
  %3672 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:fixedDecimal:toText:10:33\00", ptr %3672, align 1
  %3673 = call ptr @make_candy_text(ptr %3672)
  store ptr %3673, ptr @"Core:fixedDecimal:toText:10:33", align 8
  %3674 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:11\00", ptr %3674, align 1
  %3675 = call ptr @make_candy_text(ptr %3674)
  store ptr %3675, ptr @"Core:fixedDecimal:toText:11", align 8
  %3676 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:20\00", ptr %3676, align 1
  %3677 = call ptr @make_candy_text(ptr %3676)
  store ptr %3677, ptr @"Core:fixedDecimal:toText:20", align 8
  %3678 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:21\00", ptr %3678, align 1
  %3679 = call ptr @make_candy_text(ptr %3678)
  store ptr %3679, ptr @"Core:fixedDecimal:toText:21", align 8
  %3680 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:23:0\00", ptr %3680, align 1
  %3681 = call ptr @make_candy_text(ptr %3680)
  store ptr %3681, ptr @"Core:fixedDecimal:toText:23:0", align 8
  %3682 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:24\00", ptr %3682, align 1
  %3683 = call ptr @make_candy_text(ptr %3682)
  store ptr %3683, ptr @"Core:fixedDecimal:toText:24", align 8
  %3684 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:27\00", ptr %3684, align 1
  %3685 = call ptr @make_candy_text(ptr %3684)
  store ptr %3685, ptr @"Core:fixedDecimal:toText:27", align 8
  %3686 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:28\00", ptr %3686, align 1
  %3687 = call ptr @make_candy_text(ptr %3686)
  store ptr %3687, ptr @"Core:fixedDecimal:toText:28", align 8
  %3688 = alloca i8, i64 30, align 1
  store [30 x i8] c"Core:fixedDecimal:toText:30:0\00", ptr %3688, align 1
  %3689 = call ptr @make_candy_text(ptr %3688)
  store ptr %3689, ptr @"Core:fixedDecimal:toText:30:0", align 8
  %3690 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:31\00", ptr %3690, align 1
  %3691 = call ptr @make_candy_text(ptr %3690)
  store ptr %3691, ptr @"Core:fixedDecimal:toText:31", align 8
  %3692 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:32\00", ptr %3692, align 1
  %3693 = call ptr @make_candy_text(ptr %3692)
  store ptr %3693, ptr @"Core:fixedDecimal:toText:32", align 8
  %3694 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:fixedDecimal:toText:33\00", ptr %3694, align 1
  %3695 = call ptr @make_candy_text(ptr %3694)
  store ptr %3695, ptr @"Core:fixedDecimal:toText:33", align 8
  %3696 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3697 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText, ptr %3696, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3697, ptr @fun_Core_fixedDecimal_toText, align 8
  %3698 = load ptr, ptr @232, align 8
  %3699 = call ptr @Core_iterator_fromList(ptr %3698)
  %3700 = load ptr, ptr @233, align 8
  %3701 = call ptr @Core_iterator_fromList(ptr %3700)
  %3702 = call ptr @Core_iterator_next(ptr %3699)
  %3703 = call ptr @candy_builtin_type_of(ptr %3702)
  %3704 = load ptr, ptr @tag_Tag, align 8
  %3705 = call ptr @candy_builtin_equals(ptr %3704, ptr %3703)
  %3706 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3707 = getelementptr inbounds { ptr }, ptr %3706, i32 0, i32 0
  store ptr %3702, ptr %3707, align 8
  %3708 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1210, ptr %3706, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3708, ptr @fun_Core_iterator_128_equals_then.1211, align 8
  %3709 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3710 = getelementptr inbounds { ptr }, ptr %3709, i32 0, i32 0
  store ptr %3703, ptr %3710, align 8
  %3711 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1240, ptr %3709, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3711, ptr @fun_Core_iterator_128_equals_else.1241, align 8
  %3712 = load ptr, ptr @fun_Core_iterator_128_equals_then.1211, align 8
  %3713 = load ptr, ptr @fun_Core_iterator_128_equals_else.1241, align 8
  %3714 = call ptr @candy_builtin_if_else(ptr %3705, ptr %3712, ptr %3713)
  %3715 = load ptr, ptr @num_0, align 8
  %3716 = call ptr @candy_builtin_list_get(ptr %3714, ptr %3715)
  %3717 = load ptr, ptr @tag_Match, align 8
  %3718 = call ptr @candy_builtin_equals(ptr %3716, ptr %3717)
  %3719 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3720 = getelementptr inbounds { ptr }, ptr %3719, i32 0, i32 0
  store ptr %3714, ptr %3720, align 8
  %3721 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1242, ptr %3719, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3721, ptr @fun_Core_iterator_128_isMatch_else.1243, align 8
  %3722 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %3723 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1243, align 8
  %3724 = call ptr @candy_builtin_if_else(ptr %3718, ptr %3722, ptr %3723)
  %3725 = load ptr, ptr @num_1, align 8
  %3726 = call ptr @candy_builtin_list_get(ptr %3714, ptr %3725)
  %3727 = load ptr, ptr @num_2, align 8
  %3728 = call ptr @candy_builtin_list_get(ptr %3714, ptr %3727)
  %3729 = load ptr, ptr @num_1, align 8
  %3730 = call ptr @Core_check_checkEquals(ptr %3726, ptr %3729)
  %3731 = call ptr @Core_iterator_next(ptr %3728)
  %3732 = call ptr @candy_builtin_type_of(ptr %3731)
  %3733 = load ptr, ptr @tag_Tag, align 8
  %3734 = call ptr @candy_builtin_equals(ptr %3733, ptr %3732)
  %3735 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3736 = getelementptr inbounds { ptr }, ptr %3735, i32 0, i32 0
  store ptr %3731, ptr %3736, align 8
  %3737 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1244, ptr %3735, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3737, ptr @fun_Core_iterator_137_equals_then.1245, align 8
  %3738 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3739 = getelementptr inbounds { ptr }, ptr %3738, i32 0, i32 0
  store ptr %3732, ptr %3739, align 8
  %3740 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1274, ptr %3738, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3740, ptr @fun_Core_iterator_137_equals_else.1275, align 8
  %3741 = load ptr, ptr @fun_Core_iterator_137_equals_then.1245, align 8
  %3742 = load ptr, ptr @fun_Core_iterator_137_equals_else.1275, align 8
  %3743 = call ptr @candy_builtin_if_else(ptr %3734, ptr %3741, ptr %3742)
  %3744 = load ptr, ptr @num_0, align 8
  %3745 = call ptr @candy_builtin_list_get(ptr %3743, ptr %3744)
  %3746 = load ptr, ptr @tag_Match, align 8
  %3747 = call ptr @candy_builtin_equals(ptr %3745, ptr %3746)
  %3748 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3749 = getelementptr inbounds { ptr }, ptr %3748, i32 0, i32 0
  store ptr %3743, ptr %3749, align 8
  %3750 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1276, ptr %3748, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %3750, ptr @fun_Core_iterator_137_isMatch_else.1277, align 8
  %3751 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %3752 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1277, align 8
  %3753 = call ptr @candy_builtin_if_else(ptr %3747, ptr %3751, ptr %3752)
  %3754 = load ptr, ptr @num_1, align 8
  %3755 = call ptr @candy_builtin_list_get(ptr %3743, ptr %3754)
  %3756 = load ptr, ptr @num_2, align 8
  %3757 = call ptr @candy_builtin_list_get(ptr %3743, ptr %3756)
  %3758 = load ptr, ptr @num_2, align 8
  %3759 = call ptr @Core_check_checkEquals(ptr %3755, ptr %3758)
  %3760 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %3761 = call ptr @Core_iterator_wrapSafe(ptr %3699, ptr %3760)
  %3762 = call ptr @Core_iterator_next(ptr %3761)
  %3763 = load ptr, ptr @tag_Empty, align 8
  %3764 = call ptr @candy_builtin_equals(ptr %3762, ptr %3763)
  %3765 = load ptr, ptr @tag_False, align 8
  %3766 = call ptr @Core_check_checkEquals(ptr %3764, ptr %3765)
  %3767 = load ptr, ptr @231, align 8
  %3768 = call ptr @Core_iterator_fromList(ptr %3767)
  %3769 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %3770 = call ptr @Core_iterator_wrapSafe(ptr %3768, ptr %3769)
  %3771 = call ptr @Core_iterator_next(ptr %3770)
  %3772 = load ptr, ptr @tag_Empty, align 8
  %3773 = call ptr @candy_builtin_equals(ptr %3771, ptr %3772)
  %3774 = load ptr, ptr @tag_True, align 8
  %3775 = call ptr @Core_check_checkEquals(ptr %3773, ptr %3774)
  %3776 = load ptr, ptr @fun_Core_iterator_161, align 8
  %3777 = call ptr @Core_iterator_map(ptr %3699, ptr %3776)
  %3778 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %3779 = call ptr @Core_iterator_wrapSafe(ptr %3777, ptr %3778)
  %3780 = load ptr, ptr @231, align 8
  %3781 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3782 = call ptr @Core_iterator_foldLeft(ptr %3779, ptr %3780, ptr %3781)
  %3783 = load ptr, ptr @250, align 8
  %3784 = call ptr @Core_check_checkEquals(ptr %3782, ptr %3783)
  %3785 = call ptr @Core_iterator_sum(ptr %3699)
  %3786 = load ptr, ptr @num_6, align 8
  %3787 = call ptr @Core_check_checkEquals(ptr %3785, ptr %3786)
  %3788 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %3789 = call ptr @Core_iterator_wrapSafe(ptr %3699, ptr %3788)
  %3790 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %3791 = call ptr @Core_iterator_map(ptr %3789, ptr %3790)
  %3792 = call ptr @Core_iterator_sum(ptr %3791)
  %3793 = load ptr, ptr @num_3, align 8
  %3794 = call ptr @Core_check_checkEquals(ptr %3792, ptr %3793)
  %3795 = load ptr, ptr @fun_Core_iterator_185, align 8
  %3796 = call ptr @Core_iterator_all(ptr %3699, ptr %3795)
  %3797 = load ptr, ptr @tag_True, align 8
  %3798 = call ptr @Core_check_checkEquals(ptr %3796, ptr %3797)
  %3799 = load ptr, ptr @fun_Core_iterator_192, align 8
  %3800 = call ptr @Core_iterator_any(ptr %3699, ptr %3799)
  %3801 = load ptr, ptr @tag_True, align 8
  %3802 = call ptr @Core_check_checkEquals(ptr %3800, ptr %3801)
  %3803 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %3804 = call ptr @Core_iterator_map(ptr %3699, ptr %3803)
  %3805 = call ptr @Core_iterator_joinToText(ptr %3804)
  %3806 = load ptr, ptr @text_123, align 8
  %3807 = call ptr @Core_check_checkEquals(ptr %3805, ptr %3806)
  %3808 = load ptr, ptr @fun_Core_iterator_214, align 8
  %3809 = call ptr @Core_iterator_where(ptr %3701, ptr %3808)
  %3810 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %3811 = call ptr @Core_iterator_wrapSafe(ptr %3809, ptr %3810)
  %3812 = load ptr, ptr @231, align 8
  %3813 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3814 = call ptr @Core_iterator_foldLeft(ptr %3811, ptr %3812, ptr %3813)
  %3815 = load ptr, ptr @251, align 8
  %3816 = call ptr @Core_check_checkEquals(ptr %3814, ptr %3815)
  %3817 = load ptr, ptr @fun_Core_iterator_228, align 8
  %3818 = call ptr @Core_iterator_takeWhile(ptr %3701, ptr %3817)
  %3819 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %3820 = call ptr @Core_iterator_wrapSafe(ptr %3818, ptr %3819)
  %3821 = load ptr, ptr @231, align 8
  %3822 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3823 = call ptr @Core_iterator_foldLeft(ptr %3820, ptr %3821, ptr %3822)
  %3824 = load ptr, ptr @232, align 8
  %3825 = call ptr @Core_check_checkEquals(ptr %3823, ptr %3824)
  %3826 = load ptr, ptr @num_4, align 8
  %3827 = call ptr @Core_iterator_take(ptr %3701, ptr %3826)
  %3828 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %3829 = call ptr @Core_iterator_wrapSafe(ptr %3827, ptr %3828)
  %3830 = load ptr, ptr @231, align 8
  %3831 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3832 = call ptr @Core_iterator_foldLeft(ptr %3829, ptr %3830, ptr %3831)
  %3833 = load ptr, ptr @252, align 8
  %3834 = call ptr @Core_check_checkEquals(ptr %3832, ptr %3833)
  %3835 = load ptr, ptr @num_12, align 8
  %3836 = call ptr @Core_iterator_take(ptr %3701, ptr %3835)
  %3837 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %3838 = call ptr @Core_iterator_wrapSafe(ptr %3836, ptr %3837)
  %3839 = load ptr, ptr @231, align 8
  %3840 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3841 = call ptr @Core_iterator_foldLeft(ptr %3838, ptr %3839, ptr %3840)
  %3842 = load ptr, ptr @233, align 8
  %3843 = call ptr @Core_check_checkEquals(ptr %3841, ptr %3842)
  %3844 = load ptr, ptr @num_4, align 8
  %3845 = call ptr @Core_iterator_skip(ptr %3701, ptr %3844)
  %3846 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %3847 = call ptr @Core_iterator_wrapSafe(ptr %3845, ptr %3846)
  %3848 = load ptr, ptr @231, align 8
  %3849 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3850 = call ptr @Core_iterator_foldLeft(ptr %3847, ptr %3848, ptr %3849)
  %3851 = load ptr, ptr @253, align 8
  %3852 = call ptr @Core_check_checkEquals(ptr %3850, ptr %3851)
  %3853 = load ptr, ptr @num_40, align 8
  %3854 = call ptr @Core_iterator_skip(ptr %3701, ptr %3853)
  %3855 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %3856 = call ptr @Core_iterator_wrapSafe(ptr %3854, ptr %3855)
  %3857 = load ptr, ptr @231, align 8
  %3858 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3859 = call ptr @Core_iterator_foldLeft(ptr %3856, ptr %3857, ptr %3858)
  %3860 = load ptr, ptr @231, align 8
  %3861 = call ptr @Core_check_checkEquals(ptr %3859, ptr %3860)
  %3862 = load ptr, ptr @num_4, align 8
  %3863 = load ptr, ptr @num_3, align 8
  %3864 = load ptr, ptr @tag_False, align 8
  %3865 = call ptr @Core_iterator_windowed(ptr %3701, ptr %3862, ptr %3863, ptr %3864)
  %3866 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %3867 = call ptr @Core_iterator_wrapSafe(ptr %3865, ptr %3866)
  %3868 = load ptr, ptr @231, align 8
  %3869 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3870 = call ptr @Core_iterator_foldLeft(ptr %3867, ptr %3868, ptr %3869)
  %3871 = load ptr, ptr @256, align 8
  %3872 = call ptr @Core_check_checkEquals(ptr %3870, ptr %3871)
  %3873 = load ptr, ptr @num_3, align 8
  %3874 = call ptr @Core_iterator_chunked(ptr %3701, ptr %3873)
  %3875 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %3876 = call ptr @Core_iterator_wrapSafe(ptr %3874, ptr %3875)
  %3877 = load ptr, ptr @231, align 8
  %3878 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %3879 = call ptr @Core_iterator_foldLeft(ptr %3876, ptr %3877, ptr %3878)
  %3880 = load ptr, ptr @260, align 8
  %3881 = call ptr @Core_check_checkEquals(ptr %3879, ptr %3880)
  %3882 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:list:firstIndexOf:8\00", ptr %3882, align 1
  %3883 = call ptr @make_candy_text(ptr %3882)
  store ptr %3883, ptr @"Core:list:firstIndexOf:8", align 8
  %3884 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:list:firstIndexWhere:14\00", ptr %3884, align 1
  %3885 = call ptr @make_candy_text(ptr %3884)
  store ptr %3885, ptr @"Core:list:firstIndexWhere:14", align 8
  %3886 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:list:firstIndexWhere:16\00", ptr %3886, align 1
  %3887 = call ptr @make_candy_text(ptr %3886)
  store ptr %3887, ptr @"Core:list:firstIndexWhere:16", align 8
  %3888 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:list:firstIndexWhere:23:1\00", ptr %3888, align 1
  %3889 = call ptr @make_candy_text(ptr %3888)
  store ptr %3889, ptr @"Core:list:firstIndexWhere:23:1", align 8
  %3890 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:list:firstIndexWhere:23:10:16\00", ptr %3890, align 1
  %3891 = call ptr @make_candy_text(ptr %3890)
  store ptr %3891, ptr @"Core:list:firstIndexWhere:23:10:16", align 8
  %3892 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:list:firstIndexWhere:23:10:18\00", ptr %3892, align 1
  %3893 = call ptr @make_candy_text(ptr %3892)
  store ptr %3893, ptr @"Core:list:firstIndexWhere:23:10:18", align 8
  %3894 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:list:firstIndexWhere:23:10:22:14\00", ptr %3894, align 1
  %3895 = call ptr @make_candy_text(ptr %3894)
  store ptr %3895, ptr @"Core:list:firstIndexWhere:23:10:22:14", align 8
  %3896 = alloca i8, i64 38, align 1
  store [38 x i8] c"Core:list:firstIndexWhere:23:10:22:16\00", ptr %3896, align 1
  %3897 = call ptr @make_candy_text(ptr %3896)
  store ptr %3897, ptr @"Core:list:firstIndexWhere:23:10:22:16", align 8
  %3898 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:list:firstIndexWhere:23:10:23\00", ptr %3898, align 1
  %3899 = call ptr @make_candy_text(ptr %3898)
  store ptr %3899, ptr @"Core:list:firstIndexWhere:23:10:23", align 8
  %3900 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:list:firstIndexWhere:23:10:4\00", ptr %3900, align 1
  %3901 = call ptr @make_candy_text(ptr %3900)
  store ptr %3901, ptr @"Core:list:firstIndexWhere:23:10:4", align 8
  %3902 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:list:firstIndexWhere:23:10:5\00", ptr %3902, align 1
  %3903 = call ptr @make_candy_text(ptr %3902)
  store ptr %3903, ptr @"Core:list:firstIndexWhere:23:10:5", align 8
  %3904 = alloca i8, i64 32, align 1
  store [32 x i8] c"Core:list:firstIndexWhere:23:11\00", ptr %3904, align 1
  %3905 = call ptr @make_candy_text(ptr %3904)
  store ptr %3905, ptr @"Core:list:firstIndexWhere:23:11", align 8
  %3906 = alloca i8, i64 31, align 1
  store [31 x i8] c"Core:list:firstIndexWhere:23:7\00", ptr %3906, align 1
  %3907 = call ptr @make_candy_text(ptr %3906)
  store ptr %3907, ptr @"Core:list:firstIndexWhere:23:7", align 8
  %3908 = alloca i8, i64 35, align 1
  store [35 x i8] c"Core:list:firstIndexWhere:23:index\00", ptr %3908, align 1
  %3909 = call ptr @make_candy_text(ptr %3908)
  store ptr %3909, ptr @"Core:list:firstIndexWhere:23:index", align 8
  %3910 = alloca i8, i64 34, align 1
  store [34 x i8] c"Core:list:firstIndexWhere:23:list\00", ptr %3910, align 1
  %3911 = call ptr @make_candy_text(ptr %3910)
  store ptr %3911, ptr @"Core:list:firstIndexWhere:23:list", align 8
  %3912 = alloca i8, i64 29, align 1
  store [29 x i8] c"Core:list:firstIndexWhere:24\00", ptr %3912, align 1
  %3913 = call ptr @make_candy_text(ptr %3912)
  store ptr %3913, ptr @"Core:list:firstIndexWhere:24", align 8
  %3914 = alloca i8, i64 28, align 1
  store [28 x i8] c"Core:list:firstIndexWhere:4\00", ptr %3914, align 1
  %3915 = call ptr @make_candy_text(ptr %3914)
  store ptr %3915, ptr @"Core:list:firstIndexWhere:4", align 8
  %3916 = alloca i8, i64 9, align 1
  store [9 x i8] c"NotFound\00", ptr %3916, align 1
  %3917 = call ptr @make_candy_tag(ptr %3916, ptr null)
  store ptr %3917, ptr @tag_NotFound, align 8
  %3918 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected a List, got `\00", ptr %3918, align 1
  %3919 = call ptr @make_candy_text(ptr %3918)
  store ptr %3919, ptr @"text_Expected a List, got `", align 8
  %3920 = alloca i8, i64 37, align 1
  store [37 x i8] c"Struct doesn't contain key `List`: `\00", ptr %3920, align 1
  %3921 = call ptr @make_candy_text(ptr %3920)
  store ptr %3921, ptr @"text_Struct doesn't contain key `List`: `", align 8
  %3922 = alloca i8, i64 44, align 1
  store [44 x i8] c"`bool.is predicateResult` was not satisfied\00", ptr %3922, align 1
  %3923 = call ptr @make_candy_text(ptr %3922)
  store ptr %3923, ptr @"text_`bool.is predicateResult` was not satisfied", align 8
  %3924 = alloca i8, i64 43, align 1
  store [43 x i8] c"`function.is1 predicate` was not satisfied\00", ptr %3924, align 1
  %3925 = call ptr @make_candy_text(ptr %3924)
  store ptr %3925, ptr @"text_`function.is1 predicate` was not satisfied", align 8
  %3926 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3927 = call ptr @make_candy_function(ptr @"Core_list_firstIndexWhere_23_9, Core_list_firstWhere_21_case-1_matched, Core_list_lastIndexWhere_44_16, Core_list_lastWhere_21_case-1_matched", ptr %3926, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3927, ptr @"fun_Core_list_firstIndexWhere_23_9, Core_list_firstWhere_21_case-1_matched, Core_list_lastIndexWhere_44_16, Core_list_lastWhere_21_case-1_matched", align 8
  %3928 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3929 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere, ptr %3928, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3929, ptr @fun_Core_list_firstIndexWhere, align 8
  %3930 = alloca i8, i64 28, align 1
  store [28 x i8] c"Builtins::textCharacters:11\00", ptr %3930, align 1
  %3931 = call ptr @make_candy_text(ptr %3930)
  store ptr %3931, ptr @"Builtins::textCharacters:11", align 8
  %3932 = alloca i8, i64 27, align 1
  store [27 x i8] c"Builtins::textCharacters:5\00", ptr %3932, align 1
  %3933 = call ptr @make_candy_text(ptr %3932)
  store ptr %3933, ptr @"Builtins::textCharacters:5", align 8
  %3934 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:firstIndexOf:12\00", ptr %3934, align 1
  %3935 = call ptr @make_candy_text(ptr %3934)
  store ptr %3935, ptr @"Core:text:firstIndexOf:12", align 8
  %3936 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:firstIndexOf:17\00", ptr %3936, align 1
  %3937 = call ptr @make_candy_text(ptr %3936)
  store ptr %3937, ptr @"Core:text:firstIndexOf:17", align 8
  %3938 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:firstIndexOf:20\00", ptr %3938, align 1
  %3939 = call ptr @make_candy_text(ptr %3938)
  store ptr %3939, ptr @"Core:text:firstIndexOf:20", align 8
  %3940 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:firstIndexOf:4\00", ptr %3940, align 1
  %3941 = call ptr @make_candy_text(ptr %3940)
  store ptr %3941, ptr @"Core:text:firstIndexOf:4", align 8
  %3942 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:firstIndexOf:9\00", ptr %3942, align 1
  %3943 = call ptr @make_candy_text(ptr %3942)
  store ptr %3943, ptr @"Core:text:firstIndexOf:9", align 8
  %3944 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:padEnd:16\00", ptr %3944, align 1
  %3945 = call ptr @make_candy_text(ptr %3944)
  store ptr %3945, ptr @"Core:text:padEnd:16", align 8
  %3946 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:padEnd:21\00", ptr %3946, align 1
  %3947 = call ptr @make_candy_text(ptr %3946)
  store ptr %3947, ptr @"Core:text:padEnd:21", align 8
  %3948 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:padEnd:24\00", ptr %3948, align 1
  %3949 = call ptr @make_candy_text(ptr %3948)
  store ptr %3949, ptr @"Core:text:padEnd:24", align 8
  %3950 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:padEnd:29\00", ptr %3950, align 1
  %3951 = call ptr @make_candy_text(ptr %3950)
  store ptr %3951, ptr @"Core:text:padEnd:29", align 8
  %3952 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:padEnd:32\00", ptr %3952, align 1
  %3953 = call ptr @make_candy_text(ptr %3952)
  store ptr %3953, ptr @"Core:text:padEnd:32", align 8
  %3954 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:text:padEnd:4\00", ptr %3954, align 1
  %3955 = call ptr @make_candy_text(ptr %3954)
  store ptr %3955, ptr @"Core:text:padEnd:4", align 8
  %3956 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:padEnd:45\00", ptr %3956, align 1
  %3957 = call ptr @make_candy_text(ptr %3956)
  store ptr %3957, ptr @"Core:text:padEnd:45", align 8
  %3958 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:text:padEnd:47:14\00", ptr %3958, align 1
  %3959 = call ptr @make_candy_text(ptr %3958)
  store ptr %3959, ptr @"Core:text:padEnd:47:14", align 8
  %3960 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:text:padEnd:47:15\00", ptr %3960, align 1
  %3961 = call ptr @make_candy_text(ptr %3960)
  store ptr %3961, ptr @"Core:text:padEnd:47:15", align 8
  %3962 = alloca i8, i64 23, align 1
  store [23 x i8] c"Core:text:padEnd:47:16\00", ptr %3962, align 1
  %3963 = call ptr @make_candy_text(ptr %3962)
  store ptr %3963, ptr @"Core:text:padEnd:47:16", align 8
  %3964 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:padEnd:48\00", ptr %3964, align 1
  %3965 = call ptr @make_candy_text(ptr %3964)
  store ptr %3965, ptr @"Core:text:padEnd:48", align 8
  %3966 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:text:padStart:16\00", ptr %3966, align 1
  %3967 = call ptr @make_candy_text(ptr %3966)
  store ptr %3967, ptr @"Core:text:padStart:16", align 8
  %3968 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:text:padStart:21\00", ptr %3968, align 1
  %3969 = call ptr @make_candy_text(ptr %3968)
  store ptr %3969, ptr @"Core:text:padStart:21", align 8
  %3970 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:text:padStart:24\00", ptr %3970, align 1
  %3971 = call ptr @make_candy_text(ptr %3970)
  store ptr %3971, ptr @"Core:text:padStart:24", align 8
  %3972 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:text:padStart:29\00", ptr %3972, align 1
  %3973 = call ptr @make_candy_text(ptr %3972)
  store ptr %3973, ptr @"Core:text:padStart:29", align 8
  %3974 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:text:padStart:32\00", ptr %3974, align 1
  %3975 = call ptr @make_candy_text(ptr %3974)
  store ptr %3975, ptr @"Core:text:padStart:32", align 8
  %3976 = alloca i8, i64 21, align 1
  store [21 x i8] c"Core:text:padStart:4\00", ptr %3976, align 1
  %3977 = call ptr @make_candy_text(ptr %3976)
  store ptr %3977, ptr @"Core:text:padStart:4", align 8
  %3978 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:text:padStart:45\00", ptr %3978, align 1
  %3979 = call ptr @make_candy_text(ptr %3978)
  store ptr %3979, ptr @"Core:text:padStart:45", align 8
  %3980 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:padStart:47:12\00", ptr %3980, align 1
  %3981 = call ptr @make_candy_text(ptr %3980)
  store ptr %3981, ptr @"Core:text:padStart:47:12", align 8
  %3982 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:padStart:47:13\00", ptr %3982, align 1
  %3983 = call ptr @make_candy_text(ptr %3982)
  store ptr %3983, ptr @"Core:text:padStart:47:13", align 8
  %3984 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:padStart:47:16\00", ptr %3984, align 1
  %3985 = call ptr @make_candy_text(ptr %3984)
  store ptr %3985, ptr @"Core:text:padStart:47:16", align 8
  %3986 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:text:padStart:48\00", ptr %3986, align 1
  %3987 = call ptr @make_candy_text(ptr %3986)
  store ptr %3987, ptr @"Core:text:padStart:48", align 8
  %3988 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:repeat:16\00", ptr %3988, align 1
  %3989 = call ptr @make_candy_text(ptr %3988)
  store ptr %3989, ptr @"Core:text:repeat:16", align 8
  %3990 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:repeat:27\00", ptr %3990, align 1
  %3991 = call ptr @make_candy_text(ptr %3990)
  store ptr %3991, ptr @"Core:text:repeat:27", align 8
  %3992 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:repeat:29\00", ptr %3992, align 1
  %3993 = call ptr @make_candy_text(ptr %3992)
  store ptr %3993, ptr @"Core:text:repeat:29", align 8
  %3994 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:text:repeat:34:1\00", ptr %3994, align 1
  %3995 = call ptr @make_candy_text(ptr %3994)
  store ptr %3995, ptr @"Core:text:repeat:34:1", align 8
  %3996 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:repeat:34:8:14\00", ptr %3996, align 1
  %3997 = call ptr @make_candy_text(ptr %3996)
  store ptr %3997, ptr @"Core:text:repeat:34:8:14", align 8
  %3998 = alloca i8, i64 25, align 1
  store [25 x i8] c"Core:text:repeat:34:8:17\00", ptr %3998, align 1
  %3999 = call ptr @make_candy_text(ptr %3998)
  store ptr %3999, ptr @"Core:text:repeat:34:8:17", align 8
  %4000 = alloca i8, i64 24, align 1
  store [24 x i8] c"Core:text:repeat:34:8:3\00", ptr %4000, align 1
  %4001 = call ptr @make_candy_text(ptr %4000)
  store ptr %4001, ptr @"Core:text:repeat:34:8:3", align 8
  %4002 = alloca i8, i64 22, align 1
  store [22 x i8] c"Core:text:repeat:34:9\00", ptr %4002, align 1
  %4003 = call ptr @make_candy_text(ptr %4002)
  store ptr %4003, ptr @"Core:text:repeat:34:9", align 8
  %4004 = alloca i8, i64 33, align 1
  store [33 x i8] c"Core:text:repeat:34:repeatedText\00", ptr %4004, align 1
  %4005 = call ptr @make_candy_text(ptr %4004)
  store ptr %4005, ptr @"Core:text:repeat:34:repeatedText", align 8
  %4006 = alloca i8, i64 26, align 1
  store [26 x i8] c"Core:text:repeat:34:times\00", ptr %4006, align 1
  %4007 = call ptr @make_candy_text(ptr %4006)
  store ptr %4007, ptr @"Core:text:repeat:34:times", align 8
  %4008 = alloca i8, i64 20, align 1
  store [20 x i8] c"Core:text:repeat:35\00", ptr %4008, align 1
  %4009 = call ptr @make_candy_text(ptr %4008)
  store ptr %4009, ptr @"Core:text:repeat:35", align 8
  %4010 = alloca i8, i64 19, align 1
  store [19 x i8] c"Core:text:repeat:4\00", ptr %4010, align 1
  %4011 = call ptr @make_candy_text(ptr %4010)
  store ptr %4011, ptr @"Core:text:repeat:4", align 8
  %4012 = call ptr @make_candy_function(ptr @candy_builtin_text_characters, ptr null, i64 0)
  store ptr %4012, ptr @fun_candy_builtin_text_characters, align 8
  %4013 = alloca i8, i64 2, align 1
  store [2 x i8] c"0\00", ptr %4013, align 1
  %4014 = call ptr @make_candy_text(ptr %4013)
  store ptr %4014, ptr @text_0, align 8
  %4015 = alloca i8, i64 23, align 1
  store [23 x i8] c"Expected 2 items, got \00", ptr %4015, align 1
  %4016 = call ptr @make_candy_text(ptr %4015)
  store ptr %4016, ptr @"text_Expected 2 items, got ", align 8
  %4017 = alloca i8, i64 50, align 1
  store [50 x i8] c"`character | length | equals 1` was not satisfied\00", ptr %4017, align 1
  %4018 = call ptr @make_candy_text(ptr %4017)
  store ptr %4018, ptr @"text_`character | length | equals 1` was not satisfied", align 8
  %4019 = alloca i8, i64 31, align 1
  store [31 x i8] c"`int.is len` was not satisfied\00", ptr %4019, align 1
  %4020 = call ptr @make_candy_text(ptr %4019)
  store ptr %4020, ptr @"text_`int.is len` was not satisfied", align 8
  %4021 = alloca i8, i64 33, align 1
  store [33 x i8] c"`int.is times` was not satisfied\00", ptr %4021, align 1
  %4022 = call ptr @make_candy_text(ptr %4021)
  store ptr %4022, ptr @"text_`int.is times` was not satisfied", align 8
  %4023 = alloca i8, i64 33, align 1
  store [33 x i8] c"`is character` was not satisfied\00", ptr %4023, align 1
  %4024 = call ptr @make_candy_text(ptr %4023)
  store ptr %4024, ptr @"text_`is character` was not satisfied", align 8
  %4025 = alloca i8, i64 57, align 1
  store [57 x i8] c"`times | int.isGreaterThanOrEqualTo 1` was not satisfied\00", ptr %4025, align 1
  %4026 = call ptr @make_candy_text(ptr %4025)
  store ptr %4026, ptr @"text_`times | int.isGreaterThanOrEqualTo 1` was not satisfied", align 8
  %4027 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4028 = call ptr @make_candy_function(ptr @Core_text_firstIndexOf, ptr %4027, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4028, ptr @fun_Core_text_firstIndexOf, align 8
  %4029 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4030 = call ptr @make_candy_function(ptr @Core_text_repeat, ptr %4029, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4030, ptr @fun_Core_text_repeat, align 8
  %4031 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4032 = call ptr @make_candy_function(ptr @Core_text_padStart, ptr %4031, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4032, ptr @fun_Core_text_padStart, align 8
  %4033 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4034 = call ptr @make_candy_function(ptr @Core_text_padEnd, ptr %4033, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4034, ptr @fun_Core_text_padEnd, align 8
  %4035 = load ptr, ptr @num_0, align 8
  %4036 = load ptr, ptr @num_0, align 8
  %4037 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %4035, ptr %4036)
  %4038 = load ptr, ptr @232, align 8
  %4039 = call ptr @Core_iterator_fromList(ptr %4038)
  %4040 = load ptr, ptr @233, align 8
  %4041 = call ptr @Core_iterator_fromList(ptr %4040)
  %4042 = call ptr @Core_iterator_next(ptr %4039)
  %4043 = call ptr @candy_builtin_type_of(ptr %4042)
  %4044 = load ptr, ptr @tag_Tag, align 8
  %4045 = call ptr @candy_builtin_equals(ptr %4044, ptr %4043)
  %4046 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4047 = getelementptr inbounds { ptr }, ptr %4046, i32 0, i32 0
  store ptr %4042, ptr %4047, align 8
  %4048 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1300, ptr %4046, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4048, ptr @fun_Core_iterator_128_equals_then.1301, align 8
  %4049 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4050 = getelementptr inbounds { ptr }, ptr %4049, i32 0, i32 0
  store ptr %4043, ptr %4050, align 8
  %4051 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1330, ptr %4049, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4051, ptr @fun_Core_iterator_128_equals_else.1331, align 8
  %4052 = load ptr, ptr @fun_Core_iterator_128_equals_then.1301, align 8
  %4053 = load ptr, ptr @fun_Core_iterator_128_equals_else.1331, align 8
  %4054 = call ptr @candy_builtin_if_else(ptr %4045, ptr %4052, ptr %4053)
  %4055 = load ptr, ptr @num_0, align 8
  %4056 = call ptr @candy_builtin_list_get(ptr %4054, ptr %4055)
  %4057 = load ptr, ptr @tag_Match, align 8
  %4058 = call ptr @candy_builtin_equals(ptr %4056, ptr %4057)
  %4059 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4060 = getelementptr inbounds { ptr }, ptr %4059, i32 0, i32 0
  store ptr %4054, ptr %4060, align 8
  %4061 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1332, ptr %4059, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4061, ptr @fun_Core_iterator_128_isMatch_else.1333, align 8
  %4062 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %4063 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1333, align 8
  %4064 = call ptr @candy_builtin_if_else(ptr %4058, ptr %4062, ptr %4063)
  %4065 = load ptr, ptr @num_1, align 8
  %4066 = call ptr @candy_builtin_list_get(ptr %4054, ptr %4065)
  %4067 = load ptr, ptr @num_2, align 8
  %4068 = call ptr @candy_builtin_list_get(ptr %4054, ptr %4067)
  %4069 = load ptr, ptr @num_1, align 8
  %4070 = call ptr @Core_check_checkEquals(ptr %4066, ptr %4069)
  %4071 = call ptr @Core_iterator_next(ptr %4068)
  %4072 = call ptr @candy_builtin_type_of(ptr %4071)
  %4073 = load ptr, ptr @tag_Tag, align 8
  %4074 = call ptr @candy_builtin_equals(ptr %4073, ptr %4072)
  %4075 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4076 = getelementptr inbounds { ptr }, ptr %4075, i32 0, i32 0
  store ptr %4071, ptr %4076, align 8
  %4077 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1334, ptr %4075, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4077, ptr @fun_Core_iterator_137_equals_then.1335, align 8
  %4078 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4079 = getelementptr inbounds { ptr }, ptr %4078, i32 0, i32 0
  store ptr %4072, ptr %4079, align 8
  %4080 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1364, ptr %4078, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4080, ptr @fun_Core_iterator_137_equals_else.1365, align 8
  %4081 = load ptr, ptr @fun_Core_iterator_137_equals_then.1335, align 8
  %4082 = load ptr, ptr @fun_Core_iterator_137_equals_else.1365, align 8
  %4083 = call ptr @candy_builtin_if_else(ptr %4074, ptr %4081, ptr %4082)
  %4084 = load ptr, ptr @num_0, align 8
  %4085 = call ptr @candy_builtin_list_get(ptr %4083, ptr %4084)
  %4086 = load ptr, ptr @tag_Match, align 8
  %4087 = call ptr @candy_builtin_equals(ptr %4085, ptr %4086)
  %4088 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4089 = getelementptr inbounds { ptr }, ptr %4088, i32 0, i32 0
  store ptr %4083, ptr %4089, align 8
  %4090 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1366, ptr %4088, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4090, ptr @fun_Core_iterator_137_isMatch_else.1367, align 8
  %4091 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %4092 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1367, align 8
  %4093 = call ptr @candy_builtin_if_else(ptr %4087, ptr %4091, ptr %4092)
  %4094 = load ptr, ptr @num_1, align 8
  %4095 = call ptr @candy_builtin_list_get(ptr %4083, ptr %4094)
  %4096 = load ptr, ptr @num_2, align 8
  %4097 = call ptr @candy_builtin_list_get(ptr %4083, ptr %4096)
  %4098 = load ptr, ptr @num_2, align 8
  %4099 = call ptr @Core_check_checkEquals(ptr %4095, ptr %4098)
  %4100 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %4101 = call ptr @Core_iterator_wrapSafe(ptr %4039, ptr %4100)
  %4102 = call ptr @Core_iterator_next(ptr %4101)
  %4103 = load ptr, ptr @tag_Empty, align 8
  %4104 = call ptr @candy_builtin_equals(ptr %4102, ptr %4103)
  %4105 = load ptr, ptr @tag_False, align 8
  %4106 = call ptr @Core_check_checkEquals(ptr %4104, ptr %4105)
  %4107 = load ptr, ptr @231, align 8
  %4108 = call ptr @Core_iterator_fromList(ptr %4107)
  %4109 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %4110 = call ptr @Core_iterator_wrapSafe(ptr %4108, ptr %4109)
  %4111 = call ptr @Core_iterator_next(ptr %4110)
  %4112 = load ptr, ptr @tag_Empty, align 8
  %4113 = call ptr @candy_builtin_equals(ptr %4111, ptr %4112)
  %4114 = load ptr, ptr @tag_True, align 8
  %4115 = call ptr @Core_check_checkEquals(ptr %4113, ptr %4114)
  %4116 = load ptr, ptr @fun_Core_iterator_161, align 8
  %4117 = call ptr @Core_iterator_map(ptr %4039, ptr %4116)
  %4118 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %4119 = call ptr @Core_iterator_wrapSafe(ptr %4117, ptr %4118)
  %4120 = load ptr, ptr @231, align 8
  %4121 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4122 = call ptr @Core_iterator_foldLeft(ptr %4119, ptr %4120, ptr %4121)
  %4123 = load ptr, ptr @250, align 8
  %4124 = call ptr @Core_check_checkEquals(ptr %4122, ptr %4123)
  %4125 = call ptr @Core_iterator_sum(ptr %4039)
  %4126 = load ptr, ptr @num_6, align 8
  %4127 = call ptr @Core_check_checkEquals(ptr %4125, ptr %4126)
  %4128 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %4129 = call ptr @Core_iterator_wrapSafe(ptr %4039, ptr %4128)
  %4130 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %4131 = call ptr @Core_iterator_map(ptr %4129, ptr %4130)
  %4132 = call ptr @Core_iterator_sum(ptr %4131)
  %4133 = load ptr, ptr @num_3, align 8
  %4134 = call ptr @Core_check_checkEquals(ptr %4132, ptr %4133)
  %4135 = load ptr, ptr @fun_Core_iterator_185, align 8
  %4136 = call ptr @Core_iterator_all(ptr %4039, ptr %4135)
  %4137 = load ptr, ptr @tag_True, align 8
  %4138 = call ptr @Core_check_checkEquals(ptr %4136, ptr %4137)
  %4139 = load ptr, ptr @fun_Core_iterator_192, align 8
  %4140 = call ptr @Core_iterator_any(ptr %4039, ptr %4139)
  %4141 = load ptr, ptr @tag_True, align 8
  %4142 = call ptr @Core_check_checkEquals(ptr %4140, ptr %4141)
  %4143 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %4144 = call ptr @Core_iterator_map(ptr %4039, ptr %4143)
  %4145 = call ptr @Core_iterator_joinToText(ptr %4144)
  %4146 = load ptr, ptr @text_123, align 8
  %4147 = call ptr @Core_check_checkEquals(ptr %4145, ptr %4146)
  %4148 = load ptr, ptr @fun_Core_iterator_214, align 8
  %4149 = call ptr @Core_iterator_where(ptr %4041, ptr %4148)
  %4150 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %4151 = call ptr @Core_iterator_wrapSafe(ptr %4149, ptr %4150)
  %4152 = load ptr, ptr @231, align 8
  %4153 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4154 = call ptr @Core_iterator_foldLeft(ptr %4151, ptr %4152, ptr %4153)
  %4155 = load ptr, ptr @251, align 8
  %4156 = call ptr @Core_check_checkEquals(ptr %4154, ptr %4155)
  %4157 = load ptr, ptr @fun_Core_iterator_228, align 8
  %4158 = call ptr @Core_iterator_takeWhile(ptr %4041, ptr %4157)
  %4159 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %4160 = call ptr @Core_iterator_wrapSafe(ptr %4158, ptr %4159)
  %4161 = load ptr, ptr @231, align 8
  %4162 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4163 = call ptr @Core_iterator_foldLeft(ptr %4160, ptr %4161, ptr %4162)
  %4164 = load ptr, ptr @232, align 8
  %4165 = call ptr @Core_check_checkEquals(ptr %4163, ptr %4164)
  %4166 = load ptr, ptr @num_4, align 8
  %4167 = call ptr @Core_iterator_take(ptr %4041, ptr %4166)
  %4168 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %4169 = call ptr @Core_iterator_wrapSafe(ptr %4167, ptr %4168)
  %4170 = load ptr, ptr @231, align 8
  %4171 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4172 = call ptr @Core_iterator_foldLeft(ptr %4169, ptr %4170, ptr %4171)
  %4173 = load ptr, ptr @252, align 8
  %4174 = call ptr @Core_check_checkEquals(ptr %4172, ptr %4173)
  %4175 = load ptr, ptr @num_12, align 8
  %4176 = call ptr @Core_iterator_take(ptr %4041, ptr %4175)
  %4177 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %4178 = call ptr @Core_iterator_wrapSafe(ptr %4176, ptr %4177)
  %4179 = load ptr, ptr @231, align 8
  %4180 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4181 = call ptr @Core_iterator_foldLeft(ptr %4178, ptr %4179, ptr %4180)
  %4182 = load ptr, ptr @233, align 8
  %4183 = call ptr @Core_check_checkEquals(ptr %4181, ptr %4182)
  %4184 = load ptr, ptr @num_4, align 8
  %4185 = call ptr @Core_iterator_skip(ptr %4041, ptr %4184)
  %4186 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %4187 = call ptr @Core_iterator_wrapSafe(ptr %4185, ptr %4186)
  %4188 = load ptr, ptr @231, align 8
  %4189 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4190 = call ptr @Core_iterator_foldLeft(ptr %4187, ptr %4188, ptr %4189)
  %4191 = load ptr, ptr @253, align 8
  %4192 = call ptr @Core_check_checkEquals(ptr %4190, ptr %4191)
  %4193 = load ptr, ptr @num_40, align 8
  %4194 = call ptr @Core_iterator_skip(ptr %4041, ptr %4193)
  %4195 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %4196 = call ptr @Core_iterator_wrapSafe(ptr %4194, ptr %4195)
  %4197 = load ptr, ptr @231, align 8
  %4198 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4199 = call ptr @Core_iterator_foldLeft(ptr %4196, ptr %4197, ptr %4198)
  %4200 = load ptr, ptr @231, align 8
  %4201 = call ptr @Core_check_checkEquals(ptr %4199, ptr %4200)
  %4202 = load ptr, ptr @num_4, align 8
  %4203 = load ptr, ptr @num_3, align 8
  %4204 = load ptr, ptr @tag_False, align 8
  %4205 = call ptr @Core_iterator_windowed(ptr %4041, ptr %4202, ptr %4203, ptr %4204)
  %4206 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %4207 = call ptr @Core_iterator_wrapSafe(ptr %4205, ptr %4206)
  %4208 = load ptr, ptr @231, align 8
  %4209 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4210 = call ptr @Core_iterator_foldLeft(ptr %4207, ptr %4208, ptr %4209)
  %4211 = load ptr, ptr @256, align 8
  %4212 = call ptr @Core_check_checkEquals(ptr %4210, ptr %4211)
  %4213 = load ptr, ptr @num_3, align 8
  %4214 = call ptr @Core_iterator_chunked(ptr %4041, ptr %4213)
  %4215 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %4216 = call ptr @Core_iterator_wrapSafe(ptr %4214, ptr %4215)
  %4217 = load ptr, ptr @231, align 8
  %4218 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4219 = call ptr @Core_iterator_foldLeft(ptr %4216, ptr %4217, ptr %4218)
  %4220 = load ptr, ptr @260, align 8
  %4221 = call ptr @Core_check_checkEquals(ptr %4219, ptr %4220)
  %4222 = alloca i8, i64 37, align 1
  store [37 x i8] c"`isNumber seconds` was not satisfied\00", ptr %4222, align 1
  %4223 = call ptr @make_candy_text(ptr %4222)
  store ptr %4223, ptr @"text_`isNumber seconds` was not satisfied", align 8
  %4224 = alloca i8, i64 30, align 1
  store [30 x i8] c"Chrono:duration:fromSeconds:4\00", ptr %4224, align 1
  %4225 = call ptr @make_candy_text(ptr %4224)
  store ptr %4225, ptr @"Chrono:duration:fromSeconds:4", align 8
  %4226 = alloca i8, i64 30, align 1
  store [30 x i8] c"Chrono:duration:fromSeconds:8\00", ptr %4226, align 1
  %4227 = call ptr @make_candy_text(ptr %4226)
  store ptr %4227, ptr @"Chrono:duration:fromSeconds:8", align 8
  %4228 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4229 = call ptr @make_candy_function(ptr @Chrono_duration_fromSeconds, ptr %4228, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4229, ptr @fun_Chrono_duration_fromSeconds, align 8
  %4230 = alloca i8, i64 37, align 1
  store [37 x i8] c"`isNumber minutes` was not satisfied\00", ptr %4230, align 1
  %4231 = call ptr @make_candy_text(ptr %4230)
  store ptr %4231, ptr @"text_`isNumber minutes` was not satisfied", align 8
  %4232 = alloca i8, i64 30, align 1
  store [30 x i8] c"Chrono:duration:fromMinutes:4\00", ptr %4232, align 1
  %4233 = call ptr @make_candy_text(ptr %4232)
  store ptr %4233, ptr @"Chrono:duration:fromMinutes:4", align 8
  %4234 = alloca i8, i64 30, align 1
  store [30 x i8] c"Chrono:duration:fromMinutes:8\00", ptr %4234, align 1
  %4235 = call ptr @make_candy_text(ptr %4234)
  store ptr %4235, ptr @"Chrono:duration:fromMinutes:8", align 8
  %4236 = alloca i8, i64 31, align 1
  store [31 x i8] c"Chrono:duration:fromMinutes:34\00", ptr %4236, align 1
  %4237 = call ptr @make_candy_text(ptr %4236)
  store ptr %4237, ptr @"Chrono:duration:fromMinutes:34", align 8
  %4238 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4239 = call ptr @make_candy_function(ptr @Chrono_duration_fromMinutes, ptr %4238, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4239, ptr @fun_Chrono_duration_fromMinutes, align 8
  %4240 = alloca i8, i64 35, align 1
  store [35 x i8] c"`isNumber hours` was not satisfied\00", ptr %4240, align 1
  %4241 = call ptr @make_candy_text(ptr %4240)
  store ptr %4241, ptr @"text_`isNumber hours` was not satisfied", align 8
  %4242 = alloca i8, i64 28, align 1
  store [28 x i8] c"Chrono:duration:fromHours:4\00", ptr %4242, align 1
  %4243 = call ptr @make_candy_text(ptr %4242)
  store ptr %4243, ptr @"Chrono:duration:fromHours:4", align 8
  %4244 = alloca i8, i64 28, align 1
  store [28 x i8] c"Chrono:duration:fromHours:8\00", ptr %4244, align 1
  %4245 = call ptr @make_candy_text(ptr %4244)
  store ptr %4245, ptr @"Chrono:duration:fromHours:8", align 8
  %4246 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:fromHours:34\00", ptr %4246, align 1
  %4247 = call ptr @make_candy_text(ptr %4246)
  store ptr %4247, ptr @"Chrono:duration:fromHours:34", align 8
  %4248 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4249 = call ptr @make_candy_function(ptr @Chrono_duration_fromHours, ptr %4248, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4249, ptr @fun_Chrono_duration_fromHours, align 8
  %4250 = alloca i8, i64 34, align 1
  store [34 x i8] c"`isNumber days` was not satisfied\00", ptr %4250, align 1
  %4251 = call ptr @make_candy_text(ptr %4250)
  store ptr %4251, ptr @"text_`isNumber days` was not satisfied", align 8
  %4252 = alloca i8, i64 33, align 1
  store [33 x i8] c"Chrono:duration:fromNormalDays:4\00", ptr %4252, align 1
  %4253 = call ptr @make_candy_text(ptr %4252)
  store ptr %4253, ptr @"Chrono:duration:fromNormalDays:4", align 8
  %4254 = alloca i8, i64 33, align 1
  store [33 x i8] c"Chrono:duration:fromNormalDays:8\00", ptr %4254, align 1
  %4255 = call ptr @make_candy_text(ptr %4254)
  store ptr %4255, ptr @"Chrono:duration:fromNormalDays:8", align 8
  %4256 = alloca i8, i64 34, align 1
  store [34 x i8] c"Chrono:duration:fromNormalDays:34\00", ptr %4256, align 1
  %4257 = call ptr @make_candy_text(ptr %4256)
  store ptr %4257, ptr @"Chrono:duration:fromNormalDays:34", align 8
  %4258 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4259 = call ptr @make_candy_function(ptr @Chrono_duration_fromNormalDays, ptr %4258, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4259, ptr @fun_Chrono_duration_fromNormalDays, align 8
  %4260 = alloca i8, i64 32, align 1
  store [32 x i8] c"`is duration` was not satisfied\00", ptr %4260, align 1
  %4261 = call ptr @make_candy_text(ptr %4260)
  store ptr %4261, ptr @"text_`is duration` was not satisfied", align 8
  %4262 = alloca i8, i64 31, align 1
  store [31 x i8] c"Chrono:duration:totalSeconds:2\00", ptr %4262, align 1
  %4263 = call ptr @make_candy_text(ptr %4262)
  store ptr %4263, ptr @"Chrono:duration:totalSeconds:2", align 8
  %4264 = alloca i8, i64 31, align 1
  store [31 x i8] c"Chrono:duration:totalSeconds:4\00", ptr %4264, align 1
  %4265 = call ptr @make_candy_text(ptr %4264)
  store ptr %4265, ptr @"Chrono:duration:totalSeconds:4", align 8
  %4266 = alloca i8, i64 32, align 1
  store [32 x i8] c"Chrono:duration:totalSeconds:14\00", ptr %4266, align 1
  %4267 = call ptr @make_candy_text(ptr %4266)
  store ptr %4267, ptr @"Chrono:duration:totalSeconds:14", align 8
  %4268 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4269 = call ptr @make_candy_function(ptr @Chrono_duration_totalSeconds, ptr %4268, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4269, ptr @fun_Chrono_duration_totalSeconds, align 8
  %4270 = alloca i8, i64 31, align 1
  store [31 x i8] c"Chrono:duration:totalMinutes:2\00", ptr %4270, align 1
  %4271 = call ptr @make_candy_text(ptr %4270)
  store ptr %4271, ptr @"Chrono:duration:totalMinutes:2", align 8
  %4272 = alloca i8, i64 31, align 1
  store [31 x i8] c"Chrono:duration:totalMinutes:4\00", ptr %4272, align 1
  %4273 = call ptr @make_candy_text(ptr %4272)
  store ptr %4273, ptr @"Chrono:duration:totalMinutes:4", align 8
  %4274 = alloca i8, i64 32, align 1
  store [32 x i8] c"Chrono:duration:totalMinutes:14\00", ptr %4274, align 1
  %4275 = call ptr @make_candy_text(ptr %4274)
  store ptr %4275, ptr @"Chrono:duration:totalMinutes:14", align 8
  %4276 = alloca i8, i64 32, align 1
  store [32 x i8] c"Chrono:duration:totalMinutes:40\00", ptr %4276, align 1
  %4277 = call ptr @make_candy_text(ptr %4276)
  store ptr %4277, ptr @"Chrono:duration:totalMinutes:40", align 8
  %4278 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4279 = call ptr @make_candy_function(ptr @Chrono_duration_totalMinutes, ptr %4278, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4279, ptr @fun_Chrono_duration_totalMinutes, align 8
  %4280 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:totalHours:2\00", ptr %4280, align 1
  %4281 = call ptr @make_candy_text(ptr %4280)
  store ptr %4281, ptr @"Chrono:duration:totalHours:2", align 8
  %4282 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:totalHours:4\00", ptr %4282, align 1
  %4283 = call ptr @make_candy_text(ptr %4282)
  store ptr %4283, ptr @"Chrono:duration:totalHours:4", align 8
  %4284 = alloca i8, i64 30, align 1
  store [30 x i8] c"Chrono:duration:totalHours:14\00", ptr %4284, align 1
  %4285 = call ptr @make_candy_text(ptr %4284)
  store ptr %4285, ptr @"Chrono:duration:totalHours:14", align 8
  %4286 = alloca i8, i64 30, align 1
  store [30 x i8] c"Chrono:duration:totalHours:40\00", ptr %4286, align 1
  %4287 = call ptr @make_candy_text(ptr %4286)
  store ptr %4287, ptr @"Chrono:duration:totalHours:40", align 8
  %4288 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4289 = call ptr @make_candy_function(ptr @Chrono_duration_totalHours, ptr %4288, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4289, ptr @fun_Chrono_duration_totalHours, align 8
  %4290 = alloca i8, i64 34, align 1
  store [34 x i8] c"Chrono:duration:totalNormalDays:2\00", ptr %4290, align 1
  %4291 = call ptr @make_candy_text(ptr %4290)
  store ptr %4291, ptr @"Chrono:duration:totalNormalDays:2", align 8
  %4292 = alloca i8, i64 34, align 1
  store [34 x i8] c"Chrono:duration:totalNormalDays:4\00", ptr %4292, align 1
  %4293 = call ptr @make_candy_text(ptr %4292)
  store ptr %4293, ptr @"Chrono:duration:totalNormalDays:4", align 8
  %4294 = alloca i8, i64 35, align 1
  store [35 x i8] c"Chrono:duration:totalNormalDays:14\00", ptr %4294, align 1
  %4295 = call ptr @make_candy_text(ptr %4294)
  store ptr %4295, ptr @"Chrono:duration:totalNormalDays:14", align 8
  %4296 = alloca i8, i64 35, align 1
  store [35 x i8] c"Chrono:duration:totalNormalDays:40\00", ptr %4296, align 1
  %4297 = call ptr @make_candy_text(ptr %4296)
  store ptr %4297, ptr @"Chrono:duration:totalNormalDays:40", align 8
  %4298 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4299 = call ptr @make_candy_function(ptr @Chrono_duration_totalNormalDays, ptr %4298, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4299, ptr @fun_Chrono_duration_totalNormalDays, align 8
  %4300 = alloca i8, i64 40, align 1
  store [40 x i8] c"Chrono:duration:subNormalDayComponent:2\00", ptr %4300, align 1
  %4301 = call ptr @make_candy_text(ptr %4300)
  store ptr %4301, ptr @"Chrono:duration:subNormalDayComponent:2", align 8
  %4302 = alloca i8, i64 40, align 1
  store [40 x i8] c"Chrono:duration:subNormalDayComponent:4\00", ptr %4302, align 1
  %4303 = call ptr @make_candy_text(ptr %4302)
  store ptr %4303, ptr @"Chrono:duration:subNormalDayComponent:4", align 8
  %4304 = alloca i8, i64 41, align 1
  store [41 x i8] c"Chrono:duration:subNormalDayComponent:10\00", ptr %4304, align 1
  %4305 = call ptr @make_candy_text(ptr %4304)
  store ptr %4305, ptr @"Chrono:duration:subNormalDayComponent:10", align 8
  %4306 = alloca i8, i64 41, align 1
  store [41 x i8] c"Chrono:duration:subNormalDayComponent:19\00", ptr %4306, align 1
  %4307 = call ptr @make_candy_text(ptr %4306)
  store ptr %4307, ptr @"Chrono:duration:subNormalDayComponent:19", align 8
  %4308 = alloca i8, i64 41, align 1
  store [41 x i8] c"Chrono:duration:subNormalDayComponent:20\00", ptr %4308, align 1
  %4309 = call ptr @make_candy_text(ptr %4308)
  store ptr %4309, ptr @"Chrono:duration:subNormalDayComponent:20", align 8
  %4310 = alloca i8, i64 41, align 1
  store [41 x i8] c"Chrono:duration:subNormalDayComponent:21\00", ptr %4310, align 1
  %4311 = call ptr @make_candy_text(ptr %4310)
  store ptr %4311, ptr @"Chrono:duration:subNormalDayComponent:21", align 8
  %4312 = alloca i8, i64 35, align 1
  store [35 x i8] c"Chrono:duration:subHourComponent:2\00", ptr %4312, align 1
  %4313 = call ptr @make_candy_text(ptr %4312)
  store ptr %4313, ptr @"Chrono:duration:subHourComponent:2", align 8
  %4314 = alloca i8, i64 35, align 1
  store [35 x i8] c"Chrono:duration:subHourComponent:4\00", ptr %4314, align 1
  %4315 = call ptr @make_candy_text(ptr %4314)
  store ptr %4315, ptr @"Chrono:duration:subHourComponent:4", align 8
  %4316 = alloca i8, i64 36, align 1
  store [36 x i8] c"Chrono:duration:subHourComponent:10\00", ptr %4316, align 1
  %4317 = call ptr @make_candy_text(ptr %4316)
  store ptr %4317, ptr @"Chrono:duration:subHourComponent:10", align 8
  %4318 = alloca i8, i64 36, align 1
  store [36 x i8] c"Chrono:duration:subHourComponent:19\00", ptr %4318, align 1
  %4319 = call ptr @make_candy_text(ptr %4318)
  store ptr %4319, ptr @"Chrono:duration:subHourComponent:19", align 8
  %4320 = alloca i8, i64 36, align 1
  store [36 x i8] c"Chrono:duration:subHourComponent:20\00", ptr %4320, align 1
  %4321 = call ptr @make_candy_text(ptr %4320)
  store ptr %4321, ptr @"Chrono:duration:subHourComponent:20", align 8
  %4322 = alloca i8, i64 36, align 1
  store [36 x i8] c"Chrono:duration:subHourComponent:21\00", ptr %4322, align 1
  %4323 = call ptr @make_candy_text(ptr %4322)
  store ptr %4323, ptr @"Chrono:duration:subHourComponent:21", align 8
  %4324 = alloca i8, i64 37, align 1
  store [37 x i8] c"Chrono:duration:subMinuteComponent:2\00", ptr %4324, align 1
  %4325 = call ptr @make_candy_text(ptr %4324)
  store ptr %4325, ptr @"Chrono:duration:subMinuteComponent:2", align 8
  %4326 = alloca i8, i64 37, align 1
  store [37 x i8] c"Chrono:duration:subMinuteComponent:4\00", ptr %4326, align 1
  %4327 = call ptr @make_candy_text(ptr %4326)
  store ptr %4327, ptr @"Chrono:duration:subMinuteComponent:4", align 8
  %4328 = alloca i8, i64 38, align 1
  store [38 x i8] c"Chrono:duration:subMinuteComponent:10\00", ptr %4328, align 1
  %4329 = call ptr @make_candy_text(ptr %4328)
  store ptr %4329, ptr @"Chrono:duration:subMinuteComponent:10", align 8
  %4330 = alloca i8, i64 38, align 1
  store [38 x i8] c"Chrono:duration:subMinuteComponent:19\00", ptr %4330, align 1
  %4331 = call ptr @make_candy_text(ptr %4330)
  store ptr %4331, ptr @"Chrono:duration:subMinuteComponent:19", align 8
  %4332 = alloca i8, i64 38, align 1
  store [38 x i8] c"Chrono:duration:subMinuteComponent:20\00", ptr %4332, align 1
  %4333 = call ptr @make_candy_text(ptr %4332)
  store ptr %4333, ptr @"Chrono:duration:subMinuteComponent:20", align 8
  %4334 = alloca i8, i64 38, align 1
  store [38 x i8] c"Chrono:duration:subMinuteComponent:21\00", ptr %4334, align 1
  %4335 = call ptr @make_candy_text(ptr %4334)
  store ptr %4335, ptr @"Chrono:duration:subMinuteComponent:21", align 8
  %4336 = alloca i8, i64 37, align 1
  store [37 x i8] c"Chrono:duration:subSecondComponent:2\00", ptr %4336, align 1
  %4337 = call ptr @make_candy_text(ptr %4336)
  store ptr %4337, ptr @"Chrono:duration:subSecondComponent:2", align 8
  %4338 = alloca i8, i64 37, align 1
  store [37 x i8] c"Chrono:duration:subSecondComponent:4\00", ptr %4338, align 1
  %4339 = call ptr @make_candy_text(ptr %4338)
  store ptr %4339, ptr @"Chrono:duration:subSecondComponent:4", align 8
  %4340 = alloca i8, i64 38, align 1
  store [38 x i8] c"Chrono:duration:subSecondComponent:10\00", ptr %4340, align 1
  %4341 = call ptr @make_candy_text(ptr %4340)
  store ptr %4341, ptr @"Chrono:duration:subSecondComponent:10", align 8
  %4342 = alloca i8, i64 38, align 1
  store [38 x i8] c"Chrono:duration:subSecondComponent:19\00", ptr %4342, align 1
  %4343 = call ptr @make_candy_text(ptr %4342)
  store ptr %4343, ptr @"Chrono:duration:subSecondComponent:19", align 8
  %4344 = alloca i8, i64 38, align 1
  store [38 x i8] c"Chrono:duration:subSecondComponent:20\00", ptr %4344, align 1
  %4345 = call ptr @make_candy_text(ptr %4344)
  store ptr %4345, ptr @"Chrono:duration:subSecondComponent:20", align 8
  %4346 = alloca i8, i64 38, align 1
  store [38 x i8] c"Chrono:duration:subSecondComponent:21\00", ptr %4346, align 1
  %4347 = call ptr @make_candy_text(ptr %4346)
  store ptr %4347, ptr @"Chrono:duration:subSecondComponent:21", align 8
  %4348 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:normalDays:2\00", ptr %4348, align 1
  %4349 = call ptr @make_candy_text(ptr %4348)
  store ptr %4349, ptr @"Chrono:duration:normalDays:2", align 8
  %4350 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:normalDays:4\00", ptr %4350, align 1
  %4351 = call ptr @make_candy_text(ptr %4350)
  store ptr %4351, ptr @"Chrono:duration:normalDays:4", align 8
  %4352 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:normalDays:7\00", ptr %4352, align 1
  %4353 = call ptr @make_candy_text(ptr %4352)
  store ptr %4353, ptr @"Chrono:duration:normalDays:7", align 8
  %4354 = alloca i8, i64 30, align 1
  store [30 x i8] c"Chrono:duration:normalDays:16\00", ptr %4354, align 1
  %4355 = call ptr @make_candy_text(ptr %4354)
  store ptr %4355, ptr @"Chrono:duration:normalDays:16", align 8
  %4356 = alloca i8, i64 24, align 1
  store [24 x i8] c"Chrono:duration:hours:2\00", ptr %4356, align 1
  %4357 = call ptr @make_candy_text(ptr %4356)
  store ptr %4357, ptr @"Chrono:duration:hours:2", align 8
  %4358 = alloca i8, i64 24, align 1
  store [24 x i8] c"Chrono:duration:hours:4\00", ptr %4358, align 1
  %4359 = call ptr @make_candy_text(ptr %4358)
  store ptr %4359, ptr @"Chrono:duration:hours:4", align 8
  %4360 = alloca i8, i64 24, align 1
  store [24 x i8] c"Chrono:duration:hours:7\00", ptr %4360, align 1
  %4361 = call ptr @make_candy_text(ptr %4360)
  store ptr %4361, ptr @"Chrono:duration:hours:7", align 8
  %4362 = alloca i8, i64 24, align 1
  store [24 x i8] c"Chrono:duration:hours:9\00", ptr %4362, align 1
  %4363 = call ptr @make_candy_text(ptr %4362)
  store ptr %4363, ptr @"Chrono:duration:hours:9", align 8
  %4364 = alloca i8, i64 25, align 1
  store [25 x i8] c"Chrono:duration:hours:18\00", ptr %4364, align 1
  %4365 = call ptr @make_candy_text(ptr %4364)
  store ptr %4365, ptr @"Chrono:duration:hours:18", align 8
  %4366 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4367 = call ptr @make_candy_function(ptr @Chrono_duration_hours, ptr %4366, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4367, ptr @fun_Chrono_duration_hours, align 8
  %4368 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:minutes:2\00", ptr %4368, align 1
  %4369 = call ptr @make_candy_text(ptr %4368)
  store ptr %4369, ptr @"Chrono:duration:minutes:2", align 8
  %4370 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:minutes:4\00", ptr %4370, align 1
  %4371 = call ptr @make_candy_text(ptr %4370)
  store ptr %4371, ptr @"Chrono:duration:minutes:4", align 8
  %4372 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:minutes:7\00", ptr %4372, align 1
  %4373 = call ptr @make_candy_text(ptr %4372)
  store ptr %4373, ptr @"Chrono:duration:minutes:7", align 8
  %4374 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:minutes:9\00", ptr %4374, align 1
  %4375 = call ptr @make_candy_text(ptr %4374)
  store ptr %4375, ptr @"Chrono:duration:minutes:9", align 8
  %4376 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:minutes:18\00", ptr %4376, align 1
  %4377 = call ptr @make_candy_text(ptr %4376)
  store ptr %4377, ptr @"Chrono:duration:minutes:18", align 8
  %4378 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4379 = call ptr @make_candy_function(ptr @Chrono_duration_minutes, ptr %4378, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4379, ptr @fun_Chrono_duration_minutes, align 8
  %4380 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:seconds:2\00", ptr %4380, align 1
  %4381 = call ptr @make_candy_text(ptr %4380)
  store ptr %4381, ptr @"Chrono:duration:seconds:2", align 8
  %4382 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:seconds:4\00", ptr %4382, align 1
  %4383 = call ptr @make_candy_text(ptr %4382)
  store ptr %4383, ptr @"Chrono:duration:seconds:4", align 8
  %4384 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:seconds:7\00", ptr %4384, align 1
  %4385 = call ptr @make_candy_text(ptr %4384)
  store ptr %4385, ptr @"Chrono:duration:seconds:7", align 8
  %4386 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:seconds:9\00", ptr %4386, align 1
  %4387 = call ptr @make_candy_text(ptr %4386)
  store ptr %4387, ptr @"Chrono:duration:seconds:9", align 8
  %4388 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:seconds:18\00", ptr %4388, align 1
  %4389 = call ptr @make_candy_text(ptr %4388)
  store ptr %4389, ptr @"Chrono:duration:seconds:18", align 8
  %4390 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4391 = call ptr @make_candy_function(ptr @Chrono_duration_seconds, ptr %4390, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4391, ptr @fun_Chrono_duration_seconds, align 8
  %4392 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:isNegative:2\00", ptr %4392, align 1
  %4393 = call ptr @make_candy_text(ptr %4392)
  store ptr %4393, ptr @"Chrono:duration:isNegative:2", align 8
  %4394 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:isNegative:4\00", ptr %4394, align 1
  %4395 = call ptr @make_candy_text(ptr %4394)
  store ptr %4395, ptr @"Chrono:duration:isNegative:4", align 8
  %4396 = alloca i8, i64 30, align 1
  store [30 x i8] c"Chrono:duration:isNegative:14\00", ptr %4396, align 1
  %4397 = call ptr @make_candy_text(ptr %4396)
  store ptr %4397, ptr @"Chrono:duration:isNegative:14", align 8
  %4398 = alloca i8, i64 30, align 1
  store [30 x i8] c"Chrono:duration:isNegative:23\00", ptr %4398, align 1
  %4399 = call ptr @make_candy_text(ptr %4398)
  store ptr %4399, ptr @"Chrono:duration:isNegative:23", align 8
  %4400 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4401 = call ptr @make_candy_function(ptr @Chrono_duration_isNegative, ptr %4400, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4401, ptr @fun_Chrono_duration_isNegative, align 8
  %4402 = alloca i8, i64 25, align 1
  store [25 x i8] c"Chrono:duration:toText:2\00", ptr %4402, align 1
  %4403 = call ptr @make_candy_text(ptr %4402)
  store ptr %4403, ptr @"Chrono:duration:toText:2", align 8
  %4404 = alloca i8, i64 25, align 1
  store [25 x i8] c"Chrono:duration:toText:4\00", ptr %4404, align 1
  %4405 = call ptr @make_candy_text(ptr %4404)
  store ptr %4405, ptr @"Chrono:duration:toText:4", align 8
  %4406 = alloca i8, i64 25, align 1
  store [25 x i8] c"Chrono:duration:toText:8\00", ptr %4406, align 1
  %4407 = call ptr @make_candy_text(ptr %4406)
  store ptr %4407, ptr @"Chrono:duration:toText:8", align 8
  %4408 = alloca i8, i64 2, align 1
  store [2 x i8] c"-\00", ptr %4408, align 1
  %4409 = call ptr @make_candy_text(ptr %4408)
  store ptr %4409, ptr @text_-, align 8
  %4410 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4411 = call ptr @make_candy_function(ptr @Chrono_duration_toText_9, ptr %4410, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4411, ptr @fun_Chrono_duration_toText_9, align 8
  %4412 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4413 = call ptr @make_candy_function(ptr @Chrono_duration_toText_10, ptr %4412, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4413, ptr @fun_Chrono_duration_toText_10, align 8
  %4414 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:toText:11\00", ptr %4414, align 1
  %4415 = call ptr @make_candy_text(ptr %4414)
  store ptr %4415, ptr @"Chrono:duration:toText:11", align 8
  %4416 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:toText:15\00", ptr %4416, align 1
  %4417 = call ptr @make_candy_text(ptr %4416)
  store ptr %4417, ptr @"Chrono:duration:toText:15", align 8
  %4418 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:toText:19\00", ptr %4418, align 1
  %4419 = call ptr @make_candy_text(ptr %4418)
  store ptr %4419, ptr @"Chrono:duration:toText:19", align 8
  %4420 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:toText:38\00", ptr %4420, align 1
  %4421 = call ptr @make_candy_text(ptr %4420)
  store ptr %4421, ptr @"Chrono:duration:toText:38", align 8
  %4422 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:toText:42\00", ptr %4422, align 1
  %4423 = call ptr @make_candy_text(ptr %4422)
  store ptr %4423, ptr @"Chrono:duration:toText:42", align 8
  %4424 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:toText:61\00", ptr %4424, align 1
  %4425 = call ptr @make_candy_text(ptr %4424)
  store ptr %4425, ptr @"Chrono:duration:toText:61", align 8
  %4426 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:toText:65\00", ptr %4426, align 1
  %4427 = call ptr @make_candy_text(ptr %4426)
  store ptr %4427, ptr @"Chrono:duration:toText:65", align 8
  %4428 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:toText:84\00", ptr %4428, align 1
  %4429 = call ptr @make_candy_text(ptr %4428)
  store ptr %4429, ptr @"Chrono:duration:toText:84", align 8
  %4430 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:toText:88\00", ptr %4430, align 1
  %4431 = call ptr @make_candy_text(ptr %4430)
  store ptr %4431, ptr @"Chrono:duration:toText:88", align 8
  %4432 = alloca i8, i64 26, align 1
  store [26 x i8] c"Chrono:duration:toText:97\00", ptr %4432, align 1
  %4433 = call ptr @make_candy_text(ptr %4432)
  store ptr %4433, ptr @"Chrono:duration:toText:97", align 8
  %4434 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:106\00", ptr %4434, align 1
  %4435 = call ptr @make_candy_text(ptr %4434)
  store ptr %4435, ptr @"Chrono:duration:toText:106", align 8
  %4436 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:134\00", ptr %4436, align 1
  %4437 = call ptr @make_candy_text(ptr %4436)
  store ptr %4437, ptr @"Chrono:duration:toText:134", align 8
  %4438 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:135\00", ptr %4438, align 1
  %4439 = call ptr @make_candy_text(ptr %4438)
  store ptr %4439, ptr @"Chrono:duration:toText:135", align 8
  %4440 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:152\00", ptr %4440, align 1
  %4441 = call ptr @make_candy_text(ptr %4440)
  store ptr %4441, ptr @"Chrono:duration:toText:152", align 8
  %4442 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:161\00", ptr %4442, align 1
  %4443 = call ptr @make_candy_text(ptr %4442)
  store ptr %4443, ptr @"Chrono:duration:toText:161", align 8
  %4444 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:162\00", ptr %4444, align 1
  %4445 = call ptr @make_candy_text(ptr %4444)
  store ptr %4445, ptr @"Chrono:duration:toText:162", align 8
  %4446 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:toText:164:0\00", ptr %4446, align 1
  %4447 = call ptr @make_candy_text(ptr %4446)
  store ptr %4447, ptr @"Chrono:duration:toText:164:0", align 8
  %4448 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:165\00", ptr %4448, align 1
  %4449 = call ptr @make_candy_text(ptr %4448)
  store ptr %4449, ptr @"Chrono:duration:toText:165", align 8
  %4450 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:167\00", ptr %4450, align 1
  %4451 = call ptr @make_candy_text(ptr %4450)
  store ptr %4451, ptr @"Chrono:duration:toText:167", align 8
  %4452 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:168\00", ptr %4452, align 1
  %4453 = call ptr @make_candy_text(ptr %4452)
  store ptr %4453, ptr @"Chrono:duration:toText:168", align 8
  %4454 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:toText:170:0\00", ptr %4454, align 1
  %4455 = call ptr @make_candy_text(ptr %4454)
  store ptr %4455, ptr @"Chrono:duration:toText:170:0", align 8
  %4456 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:171\00", ptr %4456, align 1
  %4457 = call ptr @make_candy_text(ptr %4456)
  store ptr %4457, ptr @"Chrono:duration:toText:171", align 8
  %4458 = alloca i8, i64 2, align 1
  store [2 x i8] c":\00", ptr %4458, align 1
  %4459 = call ptr @make_candy_text(ptr %4458)
  store ptr %4459, ptr @"text_:", align 8
  %4460 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:174\00", ptr %4460, align 1
  %4461 = call ptr @make_candy_text(ptr %4460)
  store ptr %4461, ptr @"Chrono:duration:toText:174", align 8
  %4462 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:175\00", ptr %4462, align 1
  %4463 = call ptr @make_candy_text(ptr %4462)
  store ptr %4463, ptr @"Chrono:duration:toText:175", align 8
  %4464 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:toText:177:0\00", ptr %4464, align 1
  %4465 = call ptr @make_candy_text(ptr %4464)
  store ptr %4465, ptr @"Chrono:duration:toText:177:0", align 8
  %4466 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:178\00", ptr %4466, align 1
  %4467 = call ptr @make_candy_text(ptr %4466)
  store ptr %4467, ptr @"Chrono:duration:toText:178", align 8
  %4468 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:181\00", ptr %4468, align 1
  %4469 = call ptr @make_candy_text(ptr %4468)
  store ptr %4469, ptr @"Chrono:duration:toText:181", align 8
  %4470 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:182\00", ptr %4470, align 1
  %4471 = call ptr @make_candy_text(ptr %4470)
  store ptr %4471, ptr @"Chrono:duration:toText:182", align 8
  %4472 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:toText:184:0\00", ptr %4472, align 1
  %4473 = call ptr @make_candy_text(ptr %4472)
  store ptr %4473, ptr @"Chrono:duration:toText:184:0", align 8
  %4474 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:185\00", ptr %4474, align 1
  %4475 = call ptr @make_candy_text(ptr %4474)
  store ptr %4475, ptr @"Chrono:duration:toText:185", align 8
  %4476 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:188\00", ptr %4476, align 1
  %4477 = call ptr @make_candy_text(ptr %4476)
  store ptr %4477, ptr @"Chrono:duration:toText:188", align 8
  %4478 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:189\00", ptr %4478, align 1
  %4479 = call ptr @make_candy_text(ptr %4478)
  store ptr %4479, ptr @"Chrono:duration:toText:189", align 8
  %4480 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:toText:191:0\00", ptr %4480, align 1
  %4481 = call ptr @make_candy_text(ptr %4480)
  store ptr %4481, ptr @"Chrono:duration:toText:191:0", align 8
  %4482 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:192\00", ptr %4482, align 1
  %4483 = call ptr @make_candy_text(ptr %4482)
  store ptr %4483, ptr @"Chrono:duration:toText:192", align 8
  %4484 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:195\00", ptr %4484, align 1
  %4485 = call ptr @make_candy_text(ptr %4484)
  store ptr %4485, ptr @"Chrono:duration:toText:195", align 8
  %4486 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:196\00", ptr %4486, align 1
  %4487 = call ptr @make_candy_text(ptr %4486)
  store ptr %4487, ptr @"Chrono:duration:toText:196", align 8
  %4488 = alloca i8, i64 29, align 1
  store [29 x i8] c"Chrono:duration:toText:198:0\00", ptr %4488, align 1
  %4489 = call ptr @make_candy_text(ptr %4488)
  store ptr %4489, ptr @"Chrono:duration:toText:198:0", align 8
  %4490 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:199\00", ptr %4490, align 1
  %4491 = call ptr @make_candy_text(ptr %4490)
  store ptr %4491, ptr @"Chrono:duration:toText:199", align 8
  %4492 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:200\00", ptr %4492, align 1
  %4493 = call ptr @make_candy_text(ptr %4492)
  store ptr %4493, ptr @"Chrono:duration:toText:200", align 8
  %4494 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:201\00", ptr %4494, align 1
  %4495 = call ptr @make_candy_text(ptr %4494)
  store ptr %4495, ptr @"Chrono:duration:toText:201", align 8
  %4496 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:202\00", ptr %4496, align 1
  %4497 = call ptr @make_candy_text(ptr %4496)
  store ptr %4497, ptr @"Chrono:duration:toText:202", align 8
  %4498 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:203\00", ptr %4498, align 1
  %4499 = call ptr @make_candy_text(ptr %4498)
  store ptr %4499, ptr @"Chrono:duration:toText:203", align 8
  %4500 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:204\00", ptr %4500, align 1
  %4501 = call ptr @make_candy_text(ptr %4500)
  store ptr %4501, ptr @"Chrono:duration:toText:204", align 8
  %4502 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:205\00", ptr %4502, align 1
  %4503 = call ptr @make_candy_text(ptr %4502)
  store ptr %4503, ptr @"Chrono:duration:toText:205", align 8
  %4504 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:206\00", ptr %4504, align 1
  %4505 = call ptr @make_candy_text(ptr %4504)
  store ptr %4505, ptr @"Chrono:duration:toText:206", align 8
  %4506 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:207\00", ptr %4506, align 1
  %4507 = call ptr @make_candy_text(ptr %4506)
  store ptr %4507, ptr @"Chrono:duration:toText:207", align 8
  %4508 = alloca i8, i64 27, align 1
  store [27 x i8] c"Chrono:duration:toText:208\00", ptr %4508, align 1
  %4509 = call ptr @make_candy_text(ptr %4508)
  store ptr %4509, ptr @"Chrono:duration:toText:208", align 8
  %4510 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4511 = call ptr @make_candy_function(ptr @Chrono_duration_toText, ptr %4510, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4511, ptr @fun_Chrono_duration_toText, align 8
  %4512 = load ptr, ptr @num_0, align 8
  %4513 = load ptr, ptr @num_0, align 8
  %4514 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %4512, ptr %4513)
  %4515 = load ptr, ptr @232, align 8
  %4516 = call ptr @Core_iterator_fromList(ptr %4515)
  %4517 = load ptr, ptr @233, align 8
  %4518 = call ptr @Core_iterator_fromList(ptr %4517)
  %4519 = call ptr @Core_iterator_next(ptr %4516)
  %4520 = call ptr @candy_builtin_type_of(ptr %4519)
  %4521 = load ptr, ptr @tag_Tag, align 8
  %4522 = call ptr @candy_builtin_equals(ptr %4521, ptr %4520)
  %4523 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4524 = getelementptr inbounds { ptr }, ptr %4523, i32 0, i32 0
  store ptr %4519, ptr %4524, align 8
  %4525 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1380, ptr %4523, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4525, ptr @fun_Core_iterator_128_equals_then.1381, align 8
  %4526 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4527 = getelementptr inbounds { ptr }, ptr %4526, i32 0, i32 0
  store ptr %4520, ptr %4527, align 8
  %4528 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1410, ptr %4526, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4528, ptr @fun_Core_iterator_128_equals_else.1411, align 8
  %4529 = load ptr, ptr @fun_Core_iterator_128_equals_then.1381, align 8
  %4530 = load ptr, ptr @fun_Core_iterator_128_equals_else.1411, align 8
  %4531 = call ptr @candy_builtin_if_else(ptr %4522, ptr %4529, ptr %4530)
  %4532 = load ptr, ptr @num_0, align 8
  %4533 = call ptr @candy_builtin_list_get(ptr %4531, ptr %4532)
  %4534 = load ptr, ptr @tag_Match, align 8
  %4535 = call ptr @candy_builtin_equals(ptr %4533, ptr %4534)
  %4536 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4537 = getelementptr inbounds { ptr }, ptr %4536, i32 0, i32 0
  store ptr %4531, ptr %4537, align 8
  %4538 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1412, ptr %4536, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4538, ptr @fun_Core_iterator_128_isMatch_else.1413, align 8
  %4539 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %4540 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1413, align 8
  %4541 = call ptr @candy_builtin_if_else(ptr %4535, ptr %4539, ptr %4540)
  %4542 = load ptr, ptr @num_1, align 8
  %4543 = call ptr @candy_builtin_list_get(ptr %4531, ptr %4542)
  %4544 = load ptr, ptr @num_2, align 8
  %4545 = call ptr @candy_builtin_list_get(ptr %4531, ptr %4544)
  %4546 = load ptr, ptr @num_1, align 8
  %4547 = call ptr @Core_check_checkEquals(ptr %4543, ptr %4546)
  %4548 = call ptr @Core_iterator_next(ptr %4545)
  %4549 = call ptr @candy_builtin_type_of(ptr %4548)
  %4550 = load ptr, ptr @tag_Tag, align 8
  %4551 = call ptr @candy_builtin_equals(ptr %4550, ptr %4549)
  %4552 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4553 = getelementptr inbounds { ptr }, ptr %4552, i32 0, i32 0
  store ptr %4548, ptr %4553, align 8
  %4554 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1414, ptr %4552, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4554, ptr @fun_Core_iterator_137_equals_then.1415, align 8
  %4555 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4556 = getelementptr inbounds { ptr }, ptr %4555, i32 0, i32 0
  store ptr %4549, ptr %4556, align 8
  %4557 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1444, ptr %4555, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4557, ptr @fun_Core_iterator_137_equals_else.1445, align 8
  %4558 = load ptr, ptr @fun_Core_iterator_137_equals_then.1415, align 8
  %4559 = load ptr, ptr @fun_Core_iterator_137_equals_else.1445, align 8
  %4560 = call ptr @candy_builtin_if_else(ptr %4551, ptr %4558, ptr %4559)
  %4561 = load ptr, ptr @num_0, align 8
  %4562 = call ptr @candy_builtin_list_get(ptr %4560, ptr %4561)
  %4563 = load ptr, ptr @tag_Match, align 8
  %4564 = call ptr @candy_builtin_equals(ptr %4562, ptr %4563)
  %4565 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4566 = getelementptr inbounds { ptr }, ptr %4565, i32 0, i32 0
  store ptr %4560, ptr %4566, align 8
  %4567 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1446, ptr %4565, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4567, ptr @fun_Core_iterator_137_isMatch_else.1447, align 8
  %4568 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %4569 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1447, align 8
  %4570 = call ptr @candy_builtin_if_else(ptr %4564, ptr %4568, ptr %4569)
  %4571 = load ptr, ptr @num_1, align 8
  %4572 = call ptr @candy_builtin_list_get(ptr %4560, ptr %4571)
  %4573 = load ptr, ptr @num_2, align 8
  %4574 = call ptr @candy_builtin_list_get(ptr %4560, ptr %4573)
  %4575 = load ptr, ptr @num_2, align 8
  %4576 = call ptr @Core_check_checkEquals(ptr %4572, ptr %4575)
  %4577 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %4578 = call ptr @Core_iterator_wrapSafe(ptr %4516, ptr %4577)
  %4579 = call ptr @Core_iterator_next(ptr %4578)
  %4580 = load ptr, ptr @tag_Empty, align 8
  %4581 = call ptr @candy_builtin_equals(ptr %4579, ptr %4580)
  %4582 = load ptr, ptr @tag_False, align 8
  %4583 = call ptr @Core_check_checkEquals(ptr %4581, ptr %4582)
  %4584 = load ptr, ptr @231, align 8
  %4585 = call ptr @Core_iterator_fromList(ptr %4584)
  %4586 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %4587 = call ptr @Core_iterator_wrapSafe(ptr %4585, ptr %4586)
  %4588 = call ptr @Core_iterator_next(ptr %4587)
  %4589 = load ptr, ptr @tag_Empty, align 8
  %4590 = call ptr @candy_builtin_equals(ptr %4588, ptr %4589)
  %4591 = load ptr, ptr @tag_True, align 8
  %4592 = call ptr @Core_check_checkEquals(ptr %4590, ptr %4591)
  %4593 = load ptr, ptr @fun_Core_iterator_161, align 8
  %4594 = call ptr @Core_iterator_map(ptr %4516, ptr %4593)
  %4595 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %4596 = call ptr @Core_iterator_wrapSafe(ptr %4594, ptr %4595)
  %4597 = load ptr, ptr @231, align 8
  %4598 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4599 = call ptr @Core_iterator_foldLeft(ptr %4596, ptr %4597, ptr %4598)
  %4600 = load ptr, ptr @250, align 8
  %4601 = call ptr @Core_check_checkEquals(ptr %4599, ptr %4600)
  %4602 = call ptr @Core_iterator_sum(ptr %4516)
  %4603 = load ptr, ptr @num_6, align 8
  %4604 = call ptr @Core_check_checkEquals(ptr %4602, ptr %4603)
  %4605 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %4606 = call ptr @Core_iterator_wrapSafe(ptr %4516, ptr %4605)
  %4607 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %4608 = call ptr @Core_iterator_map(ptr %4606, ptr %4607)
  %4609 = call ptr @Core_iterator_sum(ptr %4608)
  %4610 = load ptr, ptr @num_3, align 8
  %4611 = call ptr @Core_check_checkEquals(ptr %4609, ptr %4610)
  %4612 = load ptr, ptr @fun_Core_iterator_185, align 8
  %4613 = call ptr @Core_iterator_all(ptr %4516, ptr %4612)
  %4614 = load ptr, ptr @tag_True, align 8
  %4615 = call ptr @Core_check_checkEquals(ptr %4613, ptr %4614)
  %4616 = load ptr, ptr @fun_Core_iterator_192, align 8
  %4617 = call ptr @Core_iterator_any(ptr %4516, ptr %4616)
  %4618 = load ptr, ptr @tag_True, align 8
  %4619 = call ptr @Core_check_checkEquals(ptr %4617, ptr %4618)
  %4620 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %4621 = call ptr @Core_iterator_map(ptr %4516, ptr %4620)
  %4622 = call ptr @Core_iterator_joinToText(ptr %4621)
  %4623 = load ptr, ptr @text_123, align 8
  %4624 = call ptr @Core_check_checkEquals(ptr %4622, ptr %4623)
  %4625 = load ptr, ptr @fun_Core_iterator_214, align 8
  %4626 = call ptr @Core_iterator_where(ptr %4518, ptr %4625)
  %4627 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %4628 = call ptr @Core_iterator_wrapSafe(ptr %4626, ptr %4627)
  %4629 = load ptr, ptr @231, align 8
  %4630 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4631 = call ptr @Core_iterator_foldLeft(ptr %4628, ptr %4629, ptr %4630)
  %4632 = load ptr, ptr @251, align 8
  %4633 = call ptr @Core_check_checkEquals(ptr %4631, ptr %4632)
  %4634 = load ptr, ptr @fun_Core_iterator_228, align 8
  %4635 = call ptr @Core_iterator_takeWhile(ptr %4518, ptr %4634)
  %4636 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %4637 = call ptr @Core_iterator_wrapSafe(ptr %4635, ptr %4636)
  %4638 = load ptr, ptr @231, align 8
  %4639 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4640 = call ptr @Core_iterator_foldLeft(ptr %4637, ptr %4638, ptr %4639)
  %4641 = load ptr, ptr @232, align 8
  %4642 = call ptr @Core_check_checkEquals(ptr %4640, ptr %4641)
  %4643 = load ptr, ptr @num_4, align 8
  %4644 = call ptr @Core_iterator_take(ptr %4518, ptr %4643)
  %4645 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %4646 = call ptr @Core_iterator_wrapSafe(ptr %4644, ptr %4645)
  %4647 = load ptr, ptr @231, align 8
  %4648 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4649 = call ptr @Core_iterator_foldLeft(ptr %4646, ptr %4647, ptr %4648)
  %4650 = load ptr, ptr @252, align 8
  %4651 = call ptr @Core_check_checkEquals(ptr %4649, ptr %4650)
  %4652 = load ptr, ptr @num_12, align 8
  %4653 = call ptr @Core_iterator_take(ptr %4518, ptr %4652)
  %4654 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %4655 = call ptr @Core_iterator_wrapSafe(ptr %4653, ptr %4654)
  %4656 = load ptr, ptr @231, align 8
  %4657 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4658 = call ptr @Core_iterator_foldLeft(ptr %4655, ptr %4656, ptr %4657)
  %4659 = load ptr, ptr @233, align 8
  %4660 = call ptr @Core_check_checkEquals(ptr %4658, ptr %4659)
  %4661 = load ptr, ptr @num_4, align 8
  %4662 = call ptr @Core_iterator_skip(ptr %4518, ptr %4661)
  %4663 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %4664 = call ptr @Core_iterator_wrapSafe(ptr %4662, ptr %4663)
  %4665 = load ptr, ptr @231, align 8
  %4666 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4667 = call ptr @Core_iterator_foldLeft(ptr %4664, ptr %4665, ptr %4666)
  %4668 = load ptr, ptr @253, align 8
  %4669 = call ptr @Core_check_checkEquals(ptr %4667, ptr %4668)
  %4670 = load ptr, ptr @num_40, align 8
  %4671 = call ptr @Core_iterator_skip(ptr %4518, ptr %4670)
  %4672 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %4673 = call ptr @Core_iterator_wrapSafe(ptr %4671, ptr %4672)
  %4674 = load ptr, ptr @231, align 8
  %4675 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4676 = call ptr @Core_iterator_foldLeft(ptr %4673, ptr %4674, ptr %4675)
  %4677 = load ptr, ptr @231, align 8
  %4678 = call ptr @Core_check_checkEquals(ptr %4676, ptr %4677)
  %4679 = load ptr, ptr @num_4, align 8
  %4680 = load ptr, ptr @num_3, align 8
  %4681 = load ptr, ptr @tag_False, align 8
  %4682 = call ptr @Core_iterator_windowed(ptr %4518, ptr %4679, ptr %4680, ptr %4681)
  %4683 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %4684 = call ptr @Core_iterator_wrapSafe(ptr %4682, ptr %4683)
  %4685 = load ptr, ptr @231, align 8
  %4686 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4687 = call ptr @Core_iterator_foldLeft(ptr %4684, ptr %4685, ptr %4686)
  %4688 = load ptr, ptr @256, align 8
  %4689 = call ptr @Core_check_checkEquals(ptr %4687, ptr %4688)
  %4690 = load ptr, ptr @num_3, align 8
  %4691 = call ptr @Core_iterator_chunked(ptr %4518, ptr %4690)
  %4692 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %4693 = call ptr @Core_iterator_wrapSafe(ptr %4691, ptr %4692)
  %4694 = load ptr, ptr @231, align 8
  %4695 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4696 = call ptr @Core_iterator_foldLeft(ptr %4693, ptr %4694, ptr %4695)
  %4697 = load ptr, ptr @260, align 8
  %4698 = call ptr @Core_check_checkEquals(ptr %4696, ptr %4697)
  %4699 = load ptr, ptr @num_0, align 8
  %4700 = load ptr, ptr @num_0, align 8
  %4701 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %4699, ptr %4700)
  %4702 = load ptr, ptr @232, align 8
  %4703 = call ptr @Core_iterator_fromList(ptr %4702)
  %4704 = load ptr, ptr @233, align 8
  %4705 = call ptr @Core_iterator_fromList(ptr %4704)
  %4706 = call ptr @Core_iterator_next(ptr %4703)
  %4707 = call ptr @candy_builtin_type_of(ptr %4706)
  %4708 = load ptr, ptr @tag_Tag, align 8
  %4709 = call ptr @candy_builtin_equals(ptr %4708, ptr %4707)
  %4710 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4711 = getelementptr inbounds { ptr }, ptr %4710, i32 0, i32 0
  store ptr %4706, ptr %4711, align 8
  %4712 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1448, ptr %4710, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4712, ptr @fun_Core_iterator_128_equals_then.1449, align 8
  %4713 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4714 = getelementptr inbounds { ptr }, ptr %4713, i32 0, i32 0
  store ptr %4707, ptr %4714, align 8
  %4715 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1478, ptr %4713, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4715, ptr @fun_Core_iterator_128_equals_else.1479, align 8
  %4716 = load ptr, ptr @fun_Core_iterator_128_equals_then.1449, align 8
  %4717 = load ptr, ptr @fun_Core_iterator_128_equals_else.1479, align 8
  %4718 = call ptr @candy_builtin_if_else(ptr %4709, ptr %4716, ptr %4717)
  %4719 = load ptr, ptr @num_0, align 8
  %4720 = call ptr @candy_builtin_list_get(ptr %4718, ptr %4719)
  %4721 = load ptr, ptr @tag_Match, align 8
  %4722 = call ptr @candy_builtin_equals(ptr %4720, ptr %4721)
  %4723 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4724 = getelementptr inbounds { ptr }, ptr %4723, i32 0, i32 0
  store ptr %4718, ptr %4724, align 8
  %4725 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1480, ptr %4723, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4725, ptr @fun_Core_iterator_128_isMatch_else.1481, align 8
  %4726 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %4727 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1481, align 8
  %4728 = call ptr @candy_builtin_if_else(ptr %4722, ptr %4726, ptr %4727)
  %4729 = load ptr, ptr @num_1, align 8
  %4730 = call ptr @candy_builtin_list_get(ptr %4718, ptr %4729)
  %4731 = load ptr, ptr @num_2, align 8
  %4732 = call ptr @candy_builtin_list_get(ptr %4718, ptr %4731)
  %4733 = load ptr, ptr @num_1, align 8
  %4734 = call ptr @Core_check_checkEquals(ptr %4730, ptr %4733)
  %4735 = call ptr @Core_iterator_next(ptr %4732)
  %4736 = call ptr @candy_builtin_type_of(ptr %4735)
  %4737 = load ptr, ptr @tag_Tag, align 8
  %4738 = call ptr @candy_builtin_equals(ptr %4737, ptr %4736)
  %4739 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4740 = getelementptr inbounds { ptr }, ptr %4739, i32 0, i32 0
  store ptr %4735, ptr %4740, align 8
  %4741 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1482, ptr %4739, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4741, ptr @fun_Core_iterator_137_equals_then.1483, align 8
  %4742 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4743 = getelementptr inbounds { ptr }, ptr %4742, i32 0, i32 0
  store ptr %4736, ptr %4743, align 8
  %4744 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1512, ptr %4742, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4744, ptr @fun_Core_iterator_137_equals_else.1513, align 8
  %4745 = load ptr, ptr @fun_Core_iterator_137_equals_then.1483, align 8
  %4746 = load ptr, ptr @fun_Core_iterator_137_equals_else.1513, align 8
  %4747 = call ptr @candy_builtin_if_else(ptr %4738, ptr %4745, ptr %4746)
  %4748 = load ptr, ptr @num_0, align 8
  %4749 = call ptr @candy_builtin_list_get(ptr %4747, ptr %4748)
  %4750 = load ptr, ptr @tag_Match, align 8
  %4751 = call ptr @candy_builtin_equals(ptr %4749, ptr %4750)
  %4752 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4753 = getelementptr inbounds { ptr }, ptr %4752, i32 0, i32 0
  store ptr %4747, ptr %4753, align 8
  %4754 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1514, ptr %4752, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4754, ptr @fun_Core_iterator_137_isMatch_else.1515, align 8
  %4755 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %4756 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1515, align 8
  %4757 = call ptr @candy_builtin_if_else(ptr %4751, ptr %4755, ptr %4756)
  %4758 = load ptr, ptr @num_1, align 8
  %4759 = call ptr @candy_builtin_list_get(ptr %4747, ptr %4758)
  %4760 = load ptr, ptr @num_2, align 8
  %4761 = call ptr @candy_builtin_list_get(ptr %4747, ptr %4760)
  %4762 = load ptr, ptr @num_2, align 8
  %4763 = call ptr @Core_check_checkEquals(ptr %4759, ptr %4762)
  %4764 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %4765 = call ptr @Core_iterator_wrapSafe(ptr %4703, ptr %4764)
  %4766 = call ptr @Core_iterator_next(ptr %4765)
  %4767 = load ptr, ptr @tag_Empty, align 8
  %4768 = call ptr @candy_builtin_equals(ptr %4766, ptr %4767)
  %4769 = load ptr, ptr @tag_False, align 8
  %4770 = call ptr @Core_check_checkEquals(ptr %4768, ptr %4769)
  %4771 = load ptr, ptr @231, align 8
  %4772 = call ptr @Core_iterator_fromList(ptr %4771)
  %4773 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %4774 = call ptr @Core_iterator_wrapSafe(ptr %4772, ptr %4773)
  %4775 = call ptr @Core_iterator_next(ptr %4774)
  %4776 = load ptr, ptr @tag_Empty, align 8
  %4777 = call ptr @candy_builtin_equals(ptr %4775, ptr %4776)
  %4778 = load ptr, ptr @tag_True, align 8
  %4779 = call ptr @Core_check_checkEquals(ptr %4777, ptr %4778)
  %4780 = load ptr, ptr @fun_Core_iterator_161, align 8
  %4781 = call ptr @Core_iterator_map(ptr %4703, ptr %4780)
  %4782 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %4783 = call ptr @Core_iterator_wrapSafe(ptr %4781, ptr %4782)
  %4784 = load ptr, ptr @231, align 8
  %4785 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4786 = call ptr @Core_iterator_foldLeft(ptr %4783, ptr %4784, ptr %4785)
  %4787 = load ptr, ptr @250, align 8
  %4788 = call ptr @Core_check_checkEquals(ptr %4786, ptr %4787)
  %4789 = call ptr @Core_iterator_sum(ptr %4703)
  %4790 = load ptr, ptr @num_6, align 8
  %4791 = call ptr @Core_check_checkEquals(ptr %4789, ptr %4790)
  %4792 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %4793 = call ptr @Core_iterator_wrapSafe(ptr %4703, ptr %4792)
  %4794 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %4795 = call ptr @Core_iterator_map(ptr %4793, ptr %4794)
  %4796 = call ptr @Core_iterator_sum(ptr %4795)
  %4797 = load ptr, ptr @num_3, align 8
  %4798 = call ptr @Core_check_checkEquals(ptr %4796, ptr %4797)
  %4799 = load ptr, ptr @fun_Core_iterator_185, align 8
  %4800 = call ptr @Core_iterator_all(ptr %4703, ptr %4799)
  %4801 = load ptr, ptr @tag_True, align 8
  %4802 = call ptr @Core_check_checkEquals(ptr %4800, ptr %4801)
  %4803 = load ptr, ptr @fun_Core_iterator_192, align 8
  %4804 = call ptr @Core_iterator_any(ptr %4703, ptr %4803)
  %4805 = load ptr, ptr @tag_True, align 8
  %4806 = call ptr @Core_check_checkEquals(ptr %4804, ptr %4805)
  %4807 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %4808 = call ptr @Core_iterator_map(ptr %4703, ptr %4807)
  %4809 = call ptr @Core_iterator_joinToText(ptr %4808)
  %4810 = load ptr, ptr @text_123, align 8
  %4811 = call ptr @Core_check_checkEquals(ptr %4809, ptr %4810)
  %4812 = load ptr, ptr @fun_Core_iterator_214, align 8
  %4813 = call ptr @Core_iterator_where(ptr %4705, ptr %4812)
  %4814 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %4815 = call ptr @Core_iterator_wrapSafe(ptr %4813, ptr %4814)
  %4816 = load ptr, ptr @231, align 8
  %4817 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4818 = call ptr @Core_iterator_foldLeft(ptr %4815, ptr %4816, ptr %4817)
  %4819 = load ptr, ptr @251, align 8
  %4820 = call ptr @Core_check_checkEquals(ptr %4818, ptr %4819)
  %4821 = load ptr, ptr @fun_Core_iterator_228, align 8
  %4822 = call ptr @Core_iterator_takeWhile(ptr %4705, ptr %4821)
  %4823 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %4824 = call ptr @Core_iterator_wrapSafe(ptr %4822, ptr %4823)
  %4825 = load ptr, ptr @231, align 8
  %4826 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4827 = call ptr @Core_iterator_foldLeft(ptr %4824, ptr %4825, ptr %4826)
  %4828 = load ptr, ptr @232, align 8
  %4829 = call ptr @Core_check_checkEquals(ptr %4827, ptr %4828)
  %4830 = load ptr, ptr @num_4, align 8
  %4831 = call ptr @Core_iterator_take(ptr %4705, ptr %4830)
  %4832 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %4833 = call ptr @Core_iterator_wrapSafe(ptr %4831, ptr %4832)
  %4834 = load ptr, ptr @231, align 8
  %4835 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4836 = call ptr @Core_iterator_foldLeft(ptr %4833, ptr %4834, ptr %4835)
  %4837 = load ptr, ptr @252, align 8
  %4838 = call ptr @Core_check_checkEquals(ptr %4836, ptr %4837)
  %4839 = load ptr, ptr @num_12, align 8
  %4840 = call ptr @Core_iterator_take(ptr %4705, ptr %4839)
  %4841 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %4842 = call ptr @Core_iterator_wrapSafe(ptr %4840, ptr %4841)
  %4843 = load ptr, ptr @231, align 8
  %4844 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4845 = call ptr @Core_iterator_foldLeft(ptr %4842, ptr %4843, ptr %4844)
  %4846 = load ptr, ptr @233, align 8
  %4847 = call ptr @Core_check_checkEquals(ptr %4845, ptr %4846)
  %4848 = load ptr, ptr @num_4, align 8
  %4849 = call ptr @Core_iterator_skip(ptr %4705, ptr %4848)
  %4850 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %4851 = call ptr @Core_iterator_wrapSafe(ptr %4849, ptr %4850)
  %4852 = load ptr, ptr @231, align 8
  %4853 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4854 = call ptr @Core_iterator_foldLeft(ptr %4851, ptr %4852, ptr %4853)
  %4855 = load ptr, ptr @253, align 8
  %4856 = call ptr @Core_check_checkEquals(ptr %4854, ptr %4855)
  %4857 = load ptr, ptr @num_40, align 8
  %4858 = call ptr @Core_iterator_skip(ptr %4705, ptr %4857)
  %4859 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %4860 = call ptr @Core_iterator_wrapSafe(ptr %4858, ptr %4859)
  %4861 = load ptr, ptr @231, align 8
  %4862 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4863 = call ptr @Core_iterator_foldLeft(ptr %4860, ptr %4861, ptr %4862)
  %4864 = load ptr, ptr @231, align 8
  %4865 = call ptr @Core_check_checkEquals(ptr %4863, ptr %4864)
  %4866 = load ptr, ptr @num_4, align 8
  %4867 = load ptr, ptr @num_3, align 8
  %4868 = load ptr, ptr @tag_False, align 8
  %4869 = call ptr @Core_iterator_windowed(ptr %4705, ptr %4866, ptr %4867, ptr %4868)
  %4870 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %4871 = call ptr @Core_iterator_wrapSafe(ptr %4869, ptr %4870)
  %4872 = load ptr, ptr @231, align 8
  %4873 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4874 = call ptr @Core_iterator_foldLeft(ptr %4871, ptr %4872, ptr %4873)
  %4875 = load ptr, ptr @256, align 8
  %4876 = call ptr @Core_check_checkEquals(ptr %4874, ptr %4875)
  %4877 = load ptr, ptr @num_3, align 8
  %4878 = call ptr @Core_iterator_chunked(ptr %4705, ptr %4877)
  %4879 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %4880 = call ptr @Core_iterator_wrapSafe(ptr %4878, ptr %4879)
  %4881 = load ptr, ptr @231, align 8
  %4882 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4883 = call ptr @Core_iterator_foldLeft(ptr %4880, ptr %4881, ptr %4882)
  %4884 = load ptr, ptr @260, align 8
  %4885 = call ptr @Core_check_checkEquals(ptr %4883, ptr %4884)
  %4886 = load ptr, ptr @num_0, align 8
  %4887 = load ptr, ptr @num_0, align 8
  %4888 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %4886, ptr %4887)
  %4889 = load ptr, ptr @232, align 8
  %4890 = call ptr @Core_iterator_fromList(ptr %4889)
  %4891 = load ptr, ptr @233, align 8
  %4892 = call ptr @Core_iterator_fromList(ptr %4891)
  %4893 = call ptr @Core_iterator_next(ptr %4890)
  %4894 = call ptr @candy_builtin_type_of(ptr %4893)
  %4895 = load ptr, ptr @tag_Tag, align 8
  %4896 = call ptr @candy_builtin_equals(ptr %4895, ptr %4894)
  %4897 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4898 = getelementptr inbounds { ptr }, ptr %4897, i32 0, i32 0
  store ptr %4893, ptr %4898, align 8
  %4899 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1516, ptr %4897, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4899, ptr @fun_Core_iterator_128_equals_then.1517, align 8
  %4900 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4901 = getelementptr inbounds { ptr }, ptr %4900, i32 0, i32 0
  store ptr %4894, ptr %4901, align 8
  %4902 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1546, ptr %4900, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4902, ptr @fun_Core_iterator_128_equals_else.1547, align 8
  %4903 = load ptr, ptr @fun_Core_iterator_128_equals_then.1517, align 8
  %4904 = load ptr, ptr @fun_Core_iterator_128_equals_else.1547, align 8
  %4905 = call ptr @candy_builtin_if_else(ptr %4896, ptr %4903, ptr %4904)
  %4906 = load ptr, ptr @num_0, align 8
  %4907 = call ptr @candy_builtin_list_get(ptr %4905, ptr %4906)
  %4908 = load ptr, ptr @tag_Match, align 8
  %4909 = call ptr @candy_builtin_equals(ptr %4907, ptr %4908)
  %4910 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4911 = getelementptr inbounds { ptr }, ptr %4910, i32 0, i32 0
  store ptr %4905, ptr %4911, align 8
  %4912 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1548, ptr %4910, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4912, ptr @fun_Core_iterator_128_isMatch_else.1549, align 8
  %4913 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %4914 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1549, align 8
  %4915 = call ptr @candy_builtin_if_else(ptr %4909, ptr %4913, ptr %4914)
  %4916 = load ptr, ptr @num_1, align 8
  %4917 = call ptr @candy_builtin_list_get(ptr %4905, ptr %4916)
  %4918 = load ptr, ptr @num_2, align 8
  %4919 = call ptr @candy_builtin_list_get(ptr %4905, ptr %4918)
  %4920 = load ptr, ptr @num_1, align 8
  %4921 = call ptr @Core_check_checkEquals(ptr %4917, ptr %4920)
  %4922 = call ptr @Core_iterator_next(ptr %4919)
  %4923 = call ptr @candy_builtin_type_of(ptr %4922)
  %4924 = load ptr, ptr @tag_Tag, align 8
  %4925 = call ptr @candy_builtin_equals(ptr %4924, ptr %4923)
  %4926 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4927 = getelementptr inbounds { ptr }, ptr %4926, i32 0, i32 0
  store ptr %4922, ptr %4927, align 8
  %4928 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1550, ptr %4926, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4928, ptr @fun_Core_iterator_137_equals_then.1551, align 8
  %4929 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4930 = getelementptr inbounds { ptr }, ptr %4929, i32 0, i32 0
  store ptr %4923, ptr %4930, align 8
  %4931 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1580, ptr %4929, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4931, ptr @fun_Core_iterator_137_equals_else.1581, align 8
  %4932 = load ptr, ptr @fun_Core_iterator_137_equals_then.1551, align 8
  %4933 = load ptr, ptr @fun_Core_iterator_137_equals_else.1581, align 8
  %4934 = call ptr @candy_builtin_if_else(ptr %4925, ptr %4932, ptr %4933)
  %4935 = load ptr, ptr @num_0, align 8
  %4936 = call ptr @candy_builtin_list_get(ptr %4934, ptr %4935)
  %4937 = load ptr, ptr @tag_Match, align 8
  %4938 = call ptr @candy_builtin_equals(ptr %4936, ptr %4937)
  %4939 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %4940 = getelementptr inbounds { ptr }, ptr %4939, i32 0, i32 0
  store ptr %4934, ptr %4940, align 8
  %4941 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1582, ptr %4939, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4941, ptr @fun_Core_iterator_137_isMatch_else.1583, align 8
  %4942 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %4943 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1583, align 8
  %4944 = call ptr @candy_builtin_if_else(ptr %4938, ptr %4942, ptr %4943)
  %4945 = load ptr, ptr @num_1, align 8
  %4946 = call ptr @candy_builtin_list_get(ptr %4934, ptr %4945)
  %4947 = load ptr, ptr @num_2, align 8
  %4948 = call ptr @candy_builtin_list_get(ptr %4934, ptr %4947)
  %4949 = load ptr, ptr @num_2, align 8
  %4950 = call ptr @Core_check_checkEquals(ptr %4946, ptr %4949)
  %4951 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %4952 = call ptr @Core_iterator_wrapSafe(ptr %4890, ptr %4951)
  %4953 = call ptr @Core_iterator_next(ptr %4952)
  %4954 = load ptr, ptr @tag_Empty, align 8
  %4955 = call ptr @candy_builtin_equals(ptr %4953, ptr %4954)
  %4956 = load ptr, ptr @tag_False, align 8
  %4957 = call ptr @Core_check_checkEquals(ptr %4955, ptr %4956)
  %4958 = load ptr, ptr @231, align 8
  %4959 = call ptr @Core_iterator_fromList(ptr %4958)
  %4960 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %4961 = call ptr @Core_iterator_wrapSafe(ptr %4959, ptr %4960)
  %4962 = call ptr @Core_iterator_next(ptr %4961)
  %4963 = load ptr, ptr @tag_Empty, align 8
  %4964 = call ptr @candy_builtin_equals(ptr %4962, ptr %4963)
  %4965 = load ptr, ptr @tag_True, align 8
  %4966 = call ptr @Core_check_checkEquals(ptr %4964, ptr %4965)
  %4967 = load ptr, ptr @fun_Core_iterator_161, align 8
  %4968 = call ptr @Core_iterator_map(ptr %4890, ptr %4967)
  %4969 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %4970 = call ptr @Core_iterator_wrapSafe(ptr %4968, ptr %4969)
  %4971 = load ptr, ptr @231, align 8
  %4972 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %4973 = call ptr @Core_iterator_foldLeft(ptr %4970, ptr %4971, ptr %4972)
  %4974 = load ptr, ptr @250, align 8
  %4975 = call ptr @Core_check_checkEquals(ptr %4973, ptr %4974)
  %4976 = call ptr @Core_iterator_sum(ptr %4890)
  %4977 = load ptr, ptr @num_6, align 8
  %4978 = call ptr @Core_check_checkEquals(ptr %4976, ptr %4977)
  %4979 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %4980 = call ptr @Core_iterator_wrapSafe(ptr %4890, ptr %4979)
  %4981 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %4982 = call ptr @Core_iterator_map(ptr %4980, ptr %4981)
  %4983 = call ptr @Core_iterator_sum(ptr %4982)
  %4984 = load ptr, ptr @num_3, align 8
  %4985 = call ptr @Core_check_checkEquals(ptr %4983, ptr %4984)
  %4986 = load ptr, ptr @fun_Core_iterator_185, align 8
  %4987 = call ptr @Core_iterator_all(ptr %4890, ptr %4986)
  %4988 = load ptr, ptr @tag_True, align 8
  %4989 = call ptr @Core_check_checkEquals(ptr %4987, ptr %4988)
  %4990 = load ptr, ptr @fun_Core_iterator_192, align 8
  %4991 = call ptr @Core_iterator_any(ptr %4890, ptr %4990)
  %4992 = load ptr, ptr @tag_True, align 8
  %4993 = call ptr @Core_check_checkEquals(ptr %4991, ptr %4992)
  %4994 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %4995 = call ptr @Core_iterator_map(ptr %4890, ptr %4994)
  %4996 = call ptr @Core_iterator_joinToText(ptr %4995)
  %4997 = load ptr, ptr @text_123, align 8
  %4998 = call ptr @Core_check_checkEquals(ptr %4996, ptr %4997)
  %4999 = load ptr, ptr @fun_Core_iterator_214, align 8
  %5000 = call ptr @Core_iterator_where(ptr %4892, ptr %4999)
  %5001 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %5002 = call ptr @Core_iterator_wrapSafe(ptr %5000, ptr %5001)
  %5003 = load ptr, ptr @231, align 8
  %5004 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5005 = call ptr @Core_iterator_foldLeft(ptr %5002, ptr %5003, ptr %5004)
  %5006 = load ptr, ptr @251, align 8
  %5007 = call ptr @Core_check_checkEquals(ptr %5005, ptr %5006)
  %5008 = load ptr, ptr @fun_Core_iterator_228, align 8
  %5009 = call ptr @Core_iterator_takeWhile(ptr %4892, ptr %5008)
  %5010 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %5011 = call ptr @Core_iterator_wrapSafe(ptr %5009, ptr %5010)
  %5012 = load ptr, ptr @231, align 8
  %5013 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5014 = call ptr @Core_iterator_foldLeft(ptr %5011, ptr %5012, ptr %5013)
  %5015 = load ptr, ptr @232, align 8
  %5016 = call ptr @Core_check_checkEquals(ptr %5014, ptr %5015)
  %5017 = load ptr, ptr @num_4, align 8
  %5018 = call ptr @Core_iterator_take(ptr %4892, ptr %5017)
  %5019 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %5020 = call ptr @Core_iterator_wrapSafe(ptr %5018, ptr %5019)
  %5021 = load ptr, ptr @231, align 8
  %5022 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5023 = call ptr @Core_iterator_foldLeft(ptr %5020, ptr %5021, ptr %5022)
  %5024 = load ptr, ptr @252, align 8
  %5025 = call ptr @Core_check_checkEquals(ptr %5023, ptr %5024)
  %5026 = load ptr, ptr @num_12, align 8
  %5027 = call ptr @Core_iterator_take(ptr %4892, ptr %5026)
  %5028 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %5029 = call ptr @Core_iterator_wrapSafe(ptr %5027, ptr %5028)
  %5030 = load ptr, ptr @231, align 8
  %5031 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5032 = call ptr @Core_iterator_foldLeft(ptr %5029, ptr %5030, ptr %5031)
  %5033 = load ptr, ptr @233, align 8
  %5034 = call ptr @Core_check_checkEquals(ptr %5032, ptr %5033)
  %5035 = load ptr, ptr @num_4, align 8
  %5036 = call ptr @Core_iterator_skip(ptr %4892, ptr %5035)
  %5037 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %5038 = call ptr @Core_iterator_wrapSafe(ptr %5036, ptr %5037)
  %5039 = load ptr, ptr @231, align 8
  %5040 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5041 = call ptr @Core_iterator_foldLeft(ptr %5038, ptr %5039, ptr %5040)
  %5042 = load ptr, ptr @253, align 8
  %5043 = call ptr @Core_check_checkEquals(ptr %5041, ptr %5042)
  %5044 = load ptr, ptr @num_40, align 8
  %5045 = call ptr @Core_iterator_skip(ptr %4892, ptr %5044)
  %5046 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %5047 = call ptr @Core_iterator_wrapSafe(ptr %5045, ptr %5046)
  %5048 = load ptr, ptr @231, align 8
  %5049 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5050 = call ptr @Core_iterator_foldLeft(ptr %5047, ptr %5048, ptr %5049)
  %5051 = load ptr, ptr @231, align 8
  %5052 = call ptr @Core_check_checkEquals(ptr %5050, ptr %5051)
  %5053 = load ptr, ptr @num_4, align 8
  %5054 = load ptr, ptr @num_3, align 8
  %5055 = load ptr, ptr @tag_False, align 8
  %5056 = call ptr @Core_iterator_windowed(ptr %4892, ptr %5053, ptr %5054, ptr %5055)
  %5057 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %5058 = call ptr @Core_iterator_wrapSafe(ptr %5056, ptr %5057)
  %5059 = load ptr, ptr @231, align 8
  %5060 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5061 = call ptr @Core_iterator_foldLeft(ptr %5058, ptr %5059, ptr %5060)
  %5062 = load ptr, ptr @256, align 8
  %5063 = call ptr @Core_check_checkEquals(ptr %5061, ptr %5062)
  %5064 = load ptr, ptr @num_3, align 8
  %5065 = call ptr @Core_iterator_chunked(ptr %4892, ptr %5064)
  %5066 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %5067 = call ptr @Core_iterator_wrapSafe(ptr %5065, ptr %5066)
  %5068 = load ptr, ptr @231, align 8
  %5069 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5070 = call ptr @Core_iterator_foldLeft(ptr %5067, ptr %5068, ptr %5069)
  %5071 = load ptr, ptr @260, align 8
  %5072 = call ptr @Core_check_checkEquals(ptr %5070, ptr %5071)
  %5073 = load ptr, ptr @num_0, align 8
  %5074 = load ptr, ptr @num_0, align 8
  %5075 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %5073, ptr %5074)
  %5076 = load ptr, ptr @232, align 8
  %5077 = call ptr @Core_iterator_fromList(ptr %5076)
  %5078 = load ptr, ptr @233, align 8
  %5079 = call ptr @Core_iterator_fromList(ptr %5078)
  %5080 = call ptr @Core_iterator_next(ptr %5077)
  %5081 = call ptr @candy_builtin_type_of(ptr %5080)
  %5082 = load ptr, ptr @tag_Tag, align 8
  %5083 = call ptr @candy_builtin_equals(ptr %5082, ptr %5081)
  %5084 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5085 = getelementptr inbounds { ptr }, ptr %5084, i32 0, i32 0
  store ptr %5080, ptr %5085, align 8
  %5086 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1584, ptr %5084, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5086, ptr @fun_Core_iterator_128_equals_then.1585, align 8
  %5087 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5088 = getelementptr inbounds { ptr }, ptr %5087, i32 0, i32 0
  store ptr %5081, ptr %5088, align 8
  %5089 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1614, ptr %5087, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5089, ptr @fun_Core_iterator_128_equals_else.1615, align 8
  %5090 = load ptr, ptr @fun_Core_iterator_128_equals_then.1585, align 8
  %5091 = load ptr, ptr @fun_Core_iterator_128_equals_else.1615, align 8
  %5092 = call ptr @candy_builtin_if_else(ptr %5083, ptr %5090, ptr %5091)
  %5093 = load ptr, ptr @num_0, align 8
  %5094 = call ptr @candy_builtin_list_get(ptr %5092, ptr %5093)
  %5095 = load ptr, ptr @tag_Match, align 8
  %5096 = call ptr @candy_builtin_equals(ptr %5094, ptr %5095)
  %5097 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5098 = getelementptr inbounds { ptr }, ptr %5097, i32 0, i32 0
  store ptr %5092, ptr %5098, align 8
  %5099 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1616, ptr %5097, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5099, ptr @fun_Core_iterator_128_isMatch_else.1617, align 8
  %5100 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %5101 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1617, align 8
  %5102 = call ptr @candy_builtin_if_else(ptr %5096, ptr %5100, ptr %5101)
  %5103 = load ptr, ptr @num_1, align 8
  %5104 = call ptr @candy_builtin_list_get(ptr %5092, ptr %5103)
  %5105 = load ptr, ptr @num_2, align 8
  %5106 = call ptr @candy_builtin_list_get(ptr %5092, ptr %5105)
  %5107 = load ptr, ptr @num_1, align 8
  %5108 = call ptr @Core_check_checkEquals(ptr %5104, ptr %5107)
  %5109 = call ptr @Core_iterator_next(ptr %5106)
  %5110 = call ptr @candy_builtin_type_of(ptr %5109)
  %5111 = load ptr, ptr @tag_Tag, align 8
  %5112 = call ptr @candy_builtin_equals(ptr %5111, ptr %5110)
  %5113 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5114 = getelementptr inbounds { ptr }, ptr %5113, i32 0, i32 0
  store ptr %5109, ptr %5114, align 8
  %5115 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1618, ptr %5113, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5115, ptr @fun_Core_iterator_137_equals_then.1619, align 8
  %5116 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5117 = getelementptr inbounds { ptr }, ptr %5116, i32 0, i32 0
  store ptr %5110, ptr %5117, align 8
  %5118 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1648, ptr %5116, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5118, ptr @fun_Core_iterator_137_equals_else.1649, align 8
  %5119 = load ptr, ptr @fun_Core_iterator_137_equals_then.1619, align 8
  %5120 = load ptr, ptr @fun_Core_iterator_137_equals_else.1649, align 8
  %5121 = call ptr @candy_builtin_if_else(ptr %5112, ptr %5119, ptr %5120)
  %5122 = load ptr, ptr @num_0, align 8
  %5123 = call ptr @candy_builtin_list_get(ptr %5121, ptr %5122)
  %5124 = load ptr, ptr @tag_Match, align 8
  %5125 = call ptr @candy_builtin_equals(ptr %5123, ptr %5124)
  %5126 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5127 = getelementptr inbounds { ptr }, ptr %5126, i32 0, i32 0
  store ptr %5121, ptr %5127, align 8
  %5128 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1650, ptr %5126, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5128, ptr @fun_Core_iterator_137_isMatch_else.1651, align 8
  %5129 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %5130 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1651, align 8
  %5131 = call ptr @candy_builtin_if_else(ptr %5125, ptr %5129, ptr %5130)
  %5132 = load ptr, ptr @num_1, align 8
  %5133 = call ptr @candy_builtin_list_get(ptr %5121, ptr %5132)
  %5134 = load ptr, ptr @num_2, align 8
  %5135 = call ptr @candy_builtin_list_get(ptr %5121, ptr %5134)
  %5136 = load ptr, ptr @num_2, align 8
  %5137 = call ptr @Core_check_checkEquals(ptr %5133, ptr %5136)
  %5138 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %5139 = call ptr @Core_iterator_wrapSafe(ptr %5077, ptr %5138)
  %5140 = call ptr @Core_iterator_next(ptr %5139)
  %5141 = load ptr, ptr @tag_Empty, align 8
  %5142 = call ptr @candy_builtin_equals(ptr %5140, ptr %5141)
  %5143 = load ptr, ptr @tag_False, align 8
  %5144 = call ptr @Core_check_checkEquals(ptr %5142, ptr %5143)
  %5145 = load ptr, ptr @231, align 8
  %5146 = call ptr @Core_iterator_fromList(ptr %5145)
  %5147 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %5148 = call ptr @Core_iterator_wrapSafe(ptr %5146, ptr %5147)
  %5149 = call ptr @Core_iterator_next(ptr %5148)
  %5150 = load ptr, ptr @tag_Empty, align 8
  %5151 = call ptr @candy_builtin_equals(ptr %5149, ptr %5150)
  %5152 = load ptr, ptr @tag_True, align 8
  %5153 = call ptr @Core_check_checkEquals(ptr %5151, ptr %5152)
  %5154 = load ptr, ptr @fun_Core_iterator_161, align 8
  %5155 = call ptr @Core_iterator_map(ptr %5077, ptr %5154)
  %5156 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %5157 = call ptr @Core_iterator_wrapSafe(ptr %5155, ptr %5156)
  %5158 = load ptr, ptr @231, align 8
  %5159 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5160 = call ptr @Core_iterator_foldLeft(ptr %5157, ptr %5158, ptr %5159)
  %5161 = load ptr, ptr @250, align 8
  %5162 = call ptr @Core_check_checkEquals(ptr %5160, ptr %5161)
  %5163 = call ptr @Core_iterator_sum(ptr %5077)
  %5164 = load ptr, ptr @num_6, align 8
  %5165 = call ptr @Core_check_checkEquals(ptr %5163, ptr %5164)
  %5166 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %5167 = call ptr @Core_iterator_wrapSafe(ptr %5077, ptr %5166)
  %5168 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %5169 = call ptr @Core_iterator_map(ptr %5167, ptr %5168)
  %5170 = call ptr @Core_iterator_sum(ptr %5169)
  %5171 = load ptr, ptr @num_3, align 8
  %5172 = call ptr @Core_check_checkEquals(ptr %5170, ptr %5171)
  %5173 = load ptr, ptr @fun_Core_iterator_185, align 8
  %5174 = call ptr @Core_iterator_all(ptr %5077, ptr %5173)
  %5175 = load ptr, ptr @tag_True, align 8
  %5176 = call ptr @Core_check_checkEquals(ptr %5174, ptr %5175)
  %5177 = load ptr, ptr @fun_Core_iterator_192, align 8
  %5178 = call ptr @Core_iterator_any(ptr %5077, ptr %5177)
  %5179 = load ptr, ptr @tag_True, align 8
  %5180 = call ptr @Core_check_checkEquals(ptr %5178, ptr %5179)
  %5181 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %5182 = call ptr @Core_iterator_map(ptr %5077, ptr %5181)
  %5183 = call ptr @Core_iterator_joinToText(ptr %5182)
  %5184 = load ptr, ptr @text_123, align 8
  %5185 = call ptr @Core_check_checkEquals(ptr %5183, ptr %5184)
  %5186 = load ptr, ptr @fun_Core_iterator_214, align 8
  %5187 = call ptr @Core_iterator_where(ptr %5079, ptr %5186)
  %5188 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %5189 = call ptr @Core_iterator_wrapSafe(ptr %5187, ptr %5188)
  %5190 = load ptr, ptr @231, align 8
  %5191 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5192 = call ptr @Core_iterator_foldLeft(ptr %5189, ptr %5190, ptr %5191)
  %5193 = load ptr, ptr @251, align 8
  %5194 = call ptr @Core_check_checkEquals(ptr %5192, ptr %5193)
  %5195 = load ptr, ptr @fun_Core_iterator_228, align 8
  %5196 = call ptr @Core_iterator_takeWhile(ptr %5079, ptr %5195)
  %5197 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %5198 = call ptr @Core_iterator_wrapSafe(ptr %5196, ptr %5197)
  %5199 = load ptr, ptr @231, align 8
  %5200 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5201 = call ptr @Core_iterator_foldLeft(ptr %5198, ptr %5199, ptr %5200)
  %5202 = load ptr, ptr @232, align 8
  %5203 = call ptr @Core_check_checkEquals(ptr %5201, ptr %5202)
  %5204 = load ptr, ptr @num_4, align 8
  %5205 = call ptr @Core_iterator_take(ptr %5079, ptr %5204)
  %5206 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %5207 = call ptr @Core_iterator_wrapSafe(ptr %5205, ptr %5206)
  %5208 = load ptr, ptr @231, align 8
  %5209 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5210 = call ptr @Core_iterator_foldLeft(ptr %5207, ptr %5208, ptr %5209)
  %5211 = load ptr, ptr @252, align 8
  %5212 = call ptr @Core_check_checkEquals(ptr %5210, ptr %5211)
  %5213 = load ptr, ptr @num_12, align 8
  %5214 = call ptr @Core_iterator_take(ptr %5079, ptr %5213)
  %5215 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %5216 = call ptr @Core_iterator_wrapSafe(ptr %5214, ptr %5215)
  %5217 = load ptr, ptr @231, align 8
  %5218 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5219 = call ptr @Core_iterator_foldLeft(ptr %5216, ptr %5217, ptr %5218)
  %5220 = load ptr, ptr @233, align 8
  %5221 = call ptr @Core_check_checkEquals(ptr %5219, ptr %5220)
  %5222 = load ptr, ptr @num_4, align 8
  %5223 = call ptr @Core_iterator_skip(ptr %5079, ptr %5222)
  %5224 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %5225 = call ptr @Core_iterator_wrapSafe(ptr %5223, ptr %5224)
  %5226 = load ptr, ptr @231, align 8
  %5227 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5228 = call ptr @Core_iterator_foldLeft(ptr %5225, ptr %5226, ptr %5227)
  %5229 = load ptr, ptr @253, align 8
  %5230 = call ptr @Core_check_checkEquals(ptr %5228, ptr %5229)
  %5231 = load ptr, ptr @num_40, align 8
  %5232 = call ptr @Core_iterator_skip(ptr %5079, ptr %5231)
  %5233 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %5234 = call ptr @Core_iterator_wrapSafe(ptr %5232, ptr %5233)
  %5235 = load ptr, ptr @231, align 8
  %5236 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5237 = call ptr @Core_iterator_foldLeft(ptr %5234, ptr %5235, ptr %5236)
  %5238 = load ptr, ptr @231, align 8
  %5239 = call ptr @Core_check_checkEquals(ptr %5237, ptr %5238)
  %5240 = load ptr, ptr @num_4, align 8
  %5241 = load ptr, ptr @num_3, align 8
  %5242 = load ptr, ptr @tag_False, align 8
  %5243 = call ptr @Core_iterator_windowed(ptr %5079, ptr %5240, ptr %5241, ptr %5242)
  %5244 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %5245 = call ptr @Core_iterator_wrapSafe(ptr %5243, ptr %5244)
  %5246 = load ptr, ptr @231, align 8
  %5247 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5248 = call ptr @Core_iterator_foldLeft(ptr %5245, ptr %5246, ptr %5247)
  %5249 = load ptr, ptr @256, align 8
  %5250 = call ptr @Core_check_checkEquals(ptr %5248, ptr %5249)
  %5251 = load ptr, ptr @num_3, align 8
  %5252 = call ptr @Core_iterator_chunked(ptr %5079, ptr %5251)
  %5253 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %5254 = call ptr @Core_iterator_wrapSafe(ptr %5252, ptr %5253)
  %5255 = load ptr, ptr @231, align 8
  %5256 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5257 = call ptr @Core_iterator_foldLeft(ptr %5254, ptr %5255, ptr %5256)
  %5258 = load ptr, ptr @260, align 8
  %5259 = call ptr @Core_check_checkEquals(ptr %5257, ptr %5258)
  %5260 = load ptr, ptr @num_0, align 8
  %5261 = load ptr, ptr @num_0, align 8
  %5262 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %5260, ptr %5261)
  %5263 = load ptr, ptr @232, align 8
  %5264 = call ptr @Core_iterator_fromList(ptr %5263)
  %5265 = load ptr, ptr @233, align 8
  %5266 = call ptr @Core_iterator_fromList(ptr %5265)
  %5267 = call ptr @Core_iterator_next(ptr %5264)
  %5268 = call ptr @candy_builtin_type_of(ptr %5267)
  %5269 = load ptr, ptr @tag_Tag, align 8
  %5270 = call ptr @candy_builtin_equals(ptr %5269, ptr %5268)
  %5271 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5272 = getelementptr inbounds { ptr }, ptr %5271, i32 0, i32 0
  store ptr %5267, ptr %5272, align 8
  %5273 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1652, ptr %5271, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5273, ptr @fun_Core_iterator_128_equals_then.1653, align 8
  %5274 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5275 = getelementptr inbounds { ptr }, ptr %5274, i32 0, i32 0
  store ptr %5268, ptr %5275, align 8
  %5276 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1682, ptr %5274, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5276, ptr @fun_Core_iterator_128_equals_else.1683, align 8
  %5277 = load ptr, ptr @fun_Core_iterator_128_equals_then.1653, align 8
  %5278 = load ptr, ptr @fun_Core_iterator_128_equals_else.1683, align 8
  %5279 = call ptr @candy_builtin_if_else(ptr %5270, ptr %5277, ptr %5278)
  %5280 = load ptr, ptr @num_0, align 8
  %5281 = call ptr @candy_builtin_list_get(ptr %5279, ptr %5280)
  %5282 = load ptr, ptr @tag_Match, align 8
  %5283 = call ptr @candy_builtin_equals(ptr %5281, ptr %5282)
  %5284 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5285 = getelementptr inbounds { ptr }, ptr %5284, i32 0, i32 0
  store ptr %5279, ptr %5285, align 8
  %5286 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1684, ptr %5284, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5286, ptr @fun_Core_iterator_128_isMatch_else.1685, align 8
  %5287 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %5288 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1685, align 8
  %5289 = call ptr @candy_builtin_if_else(ptr %5283, ptr %5287, ptr %5288)
  %5290 = load ptr, ptr @num_1, align 8
  %5291 = call ptr @candy_builtin_list_get(ptr %5279, ptr %5290)
  %5292 = load ptr, ptr @num_2, align 8
  %5293 = call ptr @candy_builtin_list_get(ptr %5279, ptr %5292)
  %5294 = load ptr, ptr @num_1, align 8
  %5295 = call ptr @Core_check_checkEquals(ptr %5291, ptr %5294)
  %5296 = call ptr @Core_iterator_next(ptr %5293)
  %5297 = call ptr @candy_builtin_type_of(ptr %5296)
  %5298 = load ptr, ptr @tag_Tag, align 8
  %5299 = call ptr @candy_builtin_equals(ptr %5298, ptr %5297)
  %5300 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5301 = getelementptr inbounds { ptr }, ptr %5300, i32 0, i32 0
  store ptr %5296, ptr %5301, align 8
  %5302 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1686, ptr %5300, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5302, ptr @fun_Core_iterator_137_equals_then.1687, align 8
  %5303 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5304 = getelementptr inbounds { ptr }, ptr %5303, i32 0, i32 0
  store ptr %5297, ptr %5304, align 8
  %5305 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1716, ptr %5303, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5305, ptr @fun_Core_iterator_137_equals_else.1717, align 8
  %5306 = load ptr, ptr @fun_Core_iterator_137_equals_then.1687, align 8
  %5307 = load ptr, ptr @fun_Core_iterator_137_equals_else.1717, align 8
  %5308 = call ptr @candy_builtin_if_else(ptr %5299, ptr %5306, ptr %5307)
  %5309 = load ptr, ptr @num_0, align 8
  %5310 = call ptr @candy_builtin_list_get(ptr %5308, ptr %5309)
  %5311 = load ptr, ptr @tag_Match, align 8
  %5312 = call ptr @candy_builtin_equals(ptr %5310, ptr %5311)
  %5313 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5314 = getelementptr inbounds { ptr }, ptr %5313, i32 0, i32 0
  store ptr %5308, ptr %5314, align 8
  %5315 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1718, ptr %5313, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5315, ptr @fun_Core_iterator_137_isMatch_else.1719, align 8
  %5316 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %5317 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1719, align 8
  %5318 = call ptr @candy_builtin_if_else(ptr %5312, ptr %5316, ptr %5317)
  %5319 = load ptr, ptr @num_1, align 8
  %5320 = call ptr @candy_builtin_list_get(ptr %5308, ptr %5319)
  %5321 = load ptr, ptr @num_2, align 8
  %5322 = call ptr @candy_builtin_list_get(ptr %5308, ptr %5321)
  %5323 = load ptr, ptr @num_2, align 8
  %5324 = call ptr @Core_check_checkEquals(ptr %5320, ptr %5323)
  %5325 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  %5326 = call ptr @Core_iterator_wrapSafe(ptr %5264, ptr %5325)
  %5327 = call ptr @Core_iterator_next(ptr %5326)
  %5328 = load ptr, ptr @tag_Empty, align 8
  %5329 = call ptr @candy_builtin_equals(ptr %5327, ptr %5328)
  %5330 = load ptr, ptr @tag_False, align 8
  %5331 = call ptr @Core_check_checkEquals(ptr %5329, ptr %5330)
  %5332 = load ptr, ptr @231, align 8
  %5333 = call ptr @Core_iterator_fromList(ptr %5332)
  %5334 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  %5335 = call ptr @Core_iterator_wrapSafe(ptr %5333, ptr %5334)
  %5336 = call ptr @Core_iterator_next(ptr %5335)
  %5337 = load ptr, ptr @tag_Empty, align 8
  %5338 = call ptr @candy_builtin_equals(ptr %5336, ptr %5337)
  %5339 = load ptr, ptr @tag_True, align 8
  %5340 = call ptr @Core_check_checkEquals(ptr %5338, ptr %5339)
  %5341 = load ptr, ptr @fun_Core_iterator_161, align 8
  %5342 = call ptr @Core_iterator_map(ptr %5264, ptr %5341)
  %5343 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  %5344 = call ptr @Core_iterator_wrapSafe(ptr %5342, ptr %5343)
  %5345 = load ptr, ptr @231, align 8
  %5346 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5347 = call ptr @Core_iterator_foldLeft(ptr %5344, ptr %5345, ptr %5346)
  %5348 = load ptr, ptr @250, align 8
  %5349 = call ptr @Core_check_checkEquals(ptr %5347, ptr %5348)
  %5350 = call ptr @Core_iterator_sum(ptr %5264)
  %5351 = load ptr, ptr @num_6, align 8
  %5352 = call ptr @Core_check_checkEquals(ptr %5350, ptr %5351)
  %5353 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  %5354 = call ptr @Core_iterator_wrapSafe(ptr %5264, ptr %5353)
  %5355 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  %5356 = call ptr @Core_iterator_map(ptr %5354, ptr %5355)
  %5357 = call ptr @Core_iterator_sum(ptr %5356)
  %5358 = load ptr, ptr @num_3, align 8
  %5359 = call ptr @Core_check_checkEquals(ptr %5357, ptr %5358)
  %5360 = load ptr, ptr @fun_Core_iterator_185, align 8
  %5361 = call ptr @Core_iterator_all(ptr %5264, ptr %5360)
  %5362 = load ptr, ptr @tag_True, align 8
  %5363 = call ptr @Core_check_checkEquals(ptr %5361, ptr %5362)
  %5364 = load ptr, ptr @fun_Core_iterator_192, align 8
  %5365 = call ptr @Core_iterator_any(ptr %5264, ptr %5364)
  %5366 = load ptr, ptr @tag_True, align 8
  %5367 = call ptr @Core_check_checkEquals(ptr %5365, ptr %5366)
  %5368 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  %5369 = call ptr @Core_iterator_map(ptr %5264, ptr %5368)
  %5370 = call ptr @Core_iterator_joinToText(ptr %5369)
  %5371 = load ptr, ptr @text_123, align 8
  %5372 = call ptr @Core_check_checkEquals(ptr %5370, ptr %5371)
  %5373 = load ptr, ptr @fun_Core_iterator_214, align 8
  %5374 = call ptr @Core_iterator_where(ptr %5266, ptr %5373)
  %5375 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  %5376 = call ptr @Core_iterator_wrapSafe(ptr %5374, ptr %5375)
  %5377 = load ptr, ptr @231, align 8
  %5378 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5379 = call ptr @Core_iterator_foldLeft(ptr %5376, ptr %5377, ptr %5378)
  %5380 = load ptr, ptr @251, align 8
  %5381 = call ptr @Core_check_checkEquals(ptr %5379, ptr %5380)
  %5382 = load ptr, ptr @fun_Core_iterator_228, align 8
  %5383 = call ptr @Core_iterator_takeWhile(ptr %5266, ptr %5382)
  %5384 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  %5385 = call ptr @Core_iterator_wrapSafe(ptr %5383, ptr %5384)
  %5386 = load ptr, ptr @231, align 8
  %5387 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5388 = call ptr @Core_iterator_foldLeft(ptr %5385, ptr %5386, ptr %5387)
  %5389 = load ptr, ptr @232, align 8
  %5390 = call ptr @Core_check_checkEquals(ptr %5388, ptr %5389)
  %5391 = load ptr, ptr @num_4, align 8
  %5392 = call ptr @Core_iterator_take(ptr %5266, ptr %5391)
  %5393 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  %5394 = call ptr @Core_iterator_wrapSafe(ptr %5392, ptr %5393)
  %5395 = load ptr, ptr @231, align 8
  %5396 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5397 = call ptr @Core_iterator_foldLeft(ptr %5394, ptr %5395, ptr %5396)
  %5398 = load ptr, ptr @252, align 8
  %5399 = call ptr @Core_check_checkEquals(ptr %5397, ptr %5398)
  %5400 = load ptr, ptr @num_12, align 8
  %5401 = call ptr @Core_iterator_take(ptr %5266, ptr %5400)
  %5402 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  %5403 = call ptr @Core_iterator_wrapSafe(ptr %5401, ptr %5402)
  %5404 = load ptr, ptr @231, align 8
  %5405 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5406 = call ptr @Core_iterator_foldLeft(ptr %5403, ptr %5404, ptr %5405)
  %5407 = load ptr, ptr @233, align 8
  %5408 = call ptr @Core_check_checkEquals(ptr %5406, ptr %5407)
  %5409 = load ptr, ptr @num_4, align 8
  %5410 = call ptr @Core_iterator_skip(ptr %5266, ptr %5409)
  %5411 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  %5412 = call ptr @Core_iterator_wrapSafe(ptr %5410, ptr %5411)
  %5413 = load ptr, ptr @231, align 8
  %5414 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5415 = call ptr @Core_iterator_foldLeft(ptr %5412, ptr %5413, ptr %5414)
  %5416 = load ptr, ptr @253, align 8
  %5417 = call ptr @Core_check_checkEquals(ptr %5415, ptr %5416)
  %5418 = load ptr, ptr @num_40, align 8
  %5419 = call ptr @Core_iterator_skip(ptr %5266, ptr %5418)
  %5420 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  %5421 = call ptr @Core_iterator_wrapSafe(ptr %5419, ptr %5420)
  %5422 = load ptr, ptr @231, align 8
  %5423 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5424 = call ptr @Core_iterator_foldLeft(ptr %5421, ptr %5422, ptr %5423)
  %5425 = load ptr, ptr @231, align 8
  %5426 = call ptr @Core_check_checkEquals(ptr %5424, ptr %5425)
  %5427 = load ptr, ptr @num_4, align 8
  %5428 = load ptr, ptr @num_3, align 8
  %5429 = load ptr, ptr @tag_False, align 8
  %5430 = call ptr @Core_iterator_windowed(ptr %5266, ptr %5427, ptr %5428, ptr %5429)
  %5431 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  %5432 = call ptr @Core_iterator_wrapSafe(ptr %5430, ptr %5431)
  %5433 = load ptr, ptr @231, align 8
  %5434 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5435 = call ptr @Core_iterator_foldLeft(ptr %5432, ptr %5433, ptr %5434)
  %5436 = load ptr, ptr @256, align 8
  %5437 = call ptr @Core_check_checkEquals(ptr %5435, ptr %5436)
  %5438 = load ptr, ptr @num_3, align 8
  %5439 = call ptr @Core_iterator_chunked(ptr %5266, ptr %5438)
  %5440 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  %5441 = call ptr @Core_iterator_wrapSafe(ptr %5439, ptr %5440)
  %5442 = load ptr, ptr @231, align 8
  %5443 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %5444 = call ptr @Core_iterator_foldLeft(ptr %5441, ptr %5442, ptr %5443)
  %5445 = load ptr, ptr @260, align 8
  %5446 = call ptr @Core_check_checkEquals(ptr %5444, ptr %5445)
  %5447 = alloca i8, i64 7, align 1
  store [7 x i8] c"Stdout\00", ptr %5447, align 1
  %5448 = call ptr @make_candy_tag(ptr %5447, ptr null)
  store ptr %5448, ptr @tag_Stdout, align 8
  %5449 = alloca i8, i64 26, align 1
  store [26 x i8] c"Examples:clock:22:print:7\00", ptr %5449, align 1
  %5450 = call ptr @make_candy_text(ptr %5449)
  store ptr %5450, ptr @"Examples:clock:22:print:7", align 8
  %5451 = alloca i8, i64 26, align 1
  store [26 x i8] c"Examples:clock:22:print:9\00", ptr %5451, align 1
  %5452 = call ptr @make_candy_text(ptr %5451)
  store ptr %5452, ptr @"Examples:clock:22:print:9", align 8
  %5453 = alloca i8, i64 12, align 1
  store [12 x i8] c"SystemClock\00", ptr %5453, align 1
  %5454 = call ptr @make_candy_tag(ptr %5453, ptr null)
  store ptr %5454, ptr @tag_SystemClock, align 8
  %5455 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:clock:22:15\00", ptr %5455, align 1
  %5456 = call ptr @make_candy_text(ptr %5455)
  store ptr %5456, ptr @"Examples:clock:22:15", align 8
  %5457 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:clock:22:16\00", ptr %5457, align 1
  %5458 = call ptr @make_candy_text(ptr %5457)
  store ptr %5458, ptr @"Examples:clock:22:16", align 8
  %5459 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:clock:22:27\00", ptr %5459, align 1
  %5460 = call ptr @make_candy_text(ptr %5459)
  store ptr %5460, ptr @"Examples:clock:22:27", align 8
  %5461 = alloca i8, i64 13, align 1
  store [13 x i8] c"It has been \00", ptr %5461, align 1
  %5462 = call ptr @make_candy_text(ptr %5461)
  store ptr %5462, ptr @"text_It has been ", align 8
  %5463 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:clock:22:46\00", ptr %5463, align 1
  %5464 = call ptr @make_candy_text(ptr %5463)
  store ptr %5464, ptr @"Examples:clock:22:46", align 8
  %5465 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:clock:22:55\00", ptr %5465, align 1
  %5466 = call ptr @make_candy_text(ptr %5465)
  store ptr %5466, ptr @"Examples:clock:22:55", align 8
  %5467 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:clock:22:56\00", ptr %5467, align 1
  %5468 = call ptr @make_candy_text(ptr %5467)
  store ptr %5468, ptr @"Examples:clock:22:56", align 8
  %5469 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:clock:22:57\00", ptr %5469, align 1
  %5470 = call ptr @make_candy_text(ptr %5469)
  store ptr %5470, ptr @"Examples:clock:22:57", align 8
  %5471 = alloca i8, i64 23, align 1
  store [23 x i8] c"Examples:clock:22:59:0\00", ptr %5471, align 1
  %5472 = call ptr @make_candy_text(ptr %5471)
  store ptr %5472, ptr @"Examples:clock:22:59:0", align 8
  %5473 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:clock:22:60\00", ptr %5473, align 1
  %5474 = call ptr @make_candy_text(ptr %5473)
  store ptr %5474, ptr @"Examples:clock:22:60", align 8
  %5475 = alloca i8, i64 35, align 1
  store [35 x i8] c" since the start the of Unix epoch\00", ptr %5475, align 1
  %5476 = call ptr @make_candy_text(ptr %5475)
  store ptr %5476, ptr @"text_ since the start the of Unix epoch", align 8
  %5477 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:clock:22:62\00", ptr %5477, align 1
  %5478 = call ptr @make_candy_text(ptr %5477)
  store ptr %5478, ptr @"Examples:clock:22:62", align 8
  %5479 = alloca i8, i64 21, align 1
  store [21 x i8] c"Examples:clock:22:63\00", ptr %5479, align 1
  %5480 = call ptr @make_candy_text(ptr %5479)
  store ptr %5480, ptr @"Examples:clock:22:63", align 8
  %5481 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5482 = call ptr @make_candy_function(ptr @Examples_clock_22, ptr %5481, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5482, ptr @fun_Examples_clock_22, align 8
  %5483 = call ptr @run_candy_main(ptr @fun_Examples_clock_22, ptr @candy_environment)
  call void @print_candy_value(ptr %5483)
  %5484 = load ptr, ptr @"Builtins::equals:6", align 8
  call void @free_candy_value(ptr %5484)
  %5485 = load ptr, ptr @"Builtins::fitsInRustU128:10", align 8
  call void @free_candy_value(ptr %5485)
  %5486 = load ptr, ptr @"Builtins::fitsInRustU128:16", align 8
  call void @free_candy_value(ptr %5486)
  %5487 = load ptr, ptr @"Builtins::fitsInRustU128:5", align 8
  call void @free_candy_value(ptr %5487)
  %5488 = load ptr, ptr @"Builtins::fitsInRustU128:8", align 8
  call void @free_candy_value(ptr %5488)
  %5489 = load ptr, ptr @"Builtins::functionRun:11", align 8
  call void @free_candy_value(ptr %5489)
  %5490 = load ptr, ptr @"Builtins::functionRun:16", align 8
  call void @free_candy_value(ptr %5490)
  %5491 = load ptr, ptr @"Builtins::functionRun:22", align 8
  call void @free_candy_value(ptr %5491)
  %5492 = load ptr, ptr @"Builtins::functionRun:5", align 8
  call void @free_candy_value(ptr %5492)
  %5493 = load ptr, ptr @"Builtins::getArgumentCount:11", align 8
  call void @free_candy_value(ptr %5493)
  %5494 = load ptr, ptr @"Builtins::getArgumentCount:5", align 8
  call void @free_candy_value(ptr %5494)
  %5495 = load ptr, ptr @"Builtins::ifElse:1", align 8
  call void @free_candy_value(ptr %5495)
  %5496 = load ptr, ptr @"Builtins::ifElse:11", align 8
  call void @free_candy_value(ptr %5496)
  %5497 = load ptr, ptr @"Builtins::ifElse:14", align 8
  call void @free_candy_value(ptr %5497)
  %5498 = load ptr, ptr @"Builtins::ifElse:19", align 8
  call void @free_candy_value(ptr %5498)
  %5499 = load ptr, ptr @"Builtins::ifElse:25", align 8
  call void @free_candy_value(ptr %5499)
  %5500 = load ptr, ptr @"Builtins::ifElse:28", align 8
  call void @free_candy_value(ptr %5500)
  %5501 = load ptr, ptr @"Builtins::ifElse:33", align 8
  call void @free_candy_value(ptr %5501)
  %5502 = load ptr, ptr @"Builtins::ifElse:41", align 8
  call void @free_candy_value(ptr %5502)
  %5503 = load ptr, ptr @"Builtins::ifElse:5", align 8
  call void @free_candy_value(ptr %5503)
  %5504 = load ptr, ptr @"Builtins::intAdd:11", align 8
  call void @free_candy_value(ptr %5504)
  %5505 = load ptr, ptr @"Builtins::intAdd:18", align 8
  call void @free_candy_value(ptr %5505)
  %5506 = load ptr, ptr @"Builtins::intAdd:5", align 8
  call void @free_candy_value(ptr %5506)
  %5507 = load ptr, ptr @"Builtins::intBitwiseAnd:18", align 8
  call void @free_candy_value(ptr %5507)
  %5508 = load ptr, ptr @"Builtins::intBitwiseAnd:5", align 8
  call void @free_candy_value(ptr %5508)
  %5509 = load ptr, ptr @"Builtins::intCompareTo:11", align 8
  call void @free_candy_value(ptr %5509)
  %5510 = load ptr, ptr @"Builtins::intCompareTo:18", align 8
  call void @free_candy_value(ptr %5510)
  %5511 = load ptr, ptr @"Builtins::intCompareTo:5", align 8
  call void @free_candy_value(ptr %5511)
  %5512 = load ptr, ptr @"Builtins::intDivideTruncating:11", align 8
  call void @free_candy_value(ptr %5512)
  %5513 = load ptr, ptr @"Builtins::intDivideTruncating:17", align 8
  call void @free_candy_value(ptr %5513)
  %5514 = load ptr, ptr @"Builtins::intDivideTruncating:25", align 8
  call void @free_candy_value(ptr %5514)
  %5515 = load ptr, ptr @"Builtins::intDivideTruncating:32", align 8
  call void @free_candy_value(ptr %5515)
  %5516 = load ptr, ptr @"Builtins::intDivideTruncating:5", align 8
  call void @free_candy_value(ptr %5516)
  %5517 = load ptr, ptr @"Builtins::intMultiply:11", align 8
  call void @free_candy_value(ptr %5517)
  %5518 = load ptr, ptr @"Builtins::intMultiply:18", align 8
  call void @free_candy_value(ptr %5518)
  %5519 = load ptr, ptr @"Builtins::intMultiply:5", align 8
  call void @free_candy_value(ptr %5519)
  %5520 = load ptr, ptr @"Builtins::intShiftRight:11", align 8
  call void @free_candy_value(ptr %5520)
  %5521 = load ptr, ptr @"Builtins::intShiftRight:14", align 8
  call void @free_candy_value(ptr %5521)
  %5522 = load ptr, ptr @"Builtins::intShiftRight:23", align 8
  call void @free_candy_value(ptr %5522)
  %5523 = load ptr, ptr @"Builtins::intShiftRight:24", align 8
  call void @free_candy_value(ptr %5523)
  %5524 = load ptr, ptr @"Builtins::intShiftRight:26:0", align 8
  call void @free_candy_value(ptr %5524)
  %5525 = load ptr, ptr @"Builtins::intShiftRight:27", align 8
  call void @free_candy_value(ptr %5525)
  %5526 = load ptr, ptr @"Builtins::intShiftRight:29", align 8
  call void @free_candy_value(ptr %5526)
  %5527 = load ptr, ptr @"Builtins::intShiftRight:30", align 8
  call void @free_candy_value(ptr %5527)
  %5528 = load ptr, ptr @"Builtins::intShiftRight:31", align 8
  call void @free_candy_value(ptr %5528)
  %5529 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  call void @free_candy_value(ptr %5529)
  %5530 = load ptr, ptr @"Builtins::intShiftRight:42", align 8
  call void @free_candy_value(ptr %5530)
  %5531 = load ptr, ptr @"Builtins::intShiftRight:49", align 8
  call void @free_candy_value(ptr %5531)
  %5532 = load ptr, ptr @"Builtins::intShiftRight:5", align 8
  call void @free_candy_value(ptr %5532)
  %5533 = load ptr, ptr @"Builtins::intSubtract:11", align 8
  call void @free_candy_value(ptr %5533)
  %5534 = load ptr, ptr @"Builtins::intSubtract:18", align 8
  call void @free_candy_value(ptr %5534)
  %5535 = load ptr, ptr @"Builtins::intSubtract:5", align 8
  call void @free_candy_value(ptr %5535)
  %5536 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:11", align 8
  call void @free_candy_value(ptr %5536)
  %5537 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:18", align 8
  call void @free_candy_value(ptr %5537)
  %5538 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:19", align 8
  call void @free_candy_value(ptr %5538)
  %5539 = load ptr, ptr @"Builtins::isLessThanOrEqualTo:5", align 8
  call void @free_candy_value(ptr %5539)
  %5540 = load ptr, ptr @"Builtins::isNonNegative:12", align 8
  call void @free_candy_value(ptr %5540)
  %5541 = load ptr, ptr @"Builtins::isNonNegative:13", align 8
  call void @free_candy_value(ptr %5541)
  %5542 = load ptr, ptr @"Builtins::isNonNegative:5", align 8
  call void @free_candy_value(ptr %5542)
  %5543 = load ptr, ptr @"Builtins::not:1", align 8
  call void @free_candy_value(ptr %5543)
  %5544 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %5544)
  %5545 = load ptr, ptr @"Builtins::structGet:14", align 8
  call void @free_candy_value(ptr %5545)
  %5546 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %5546)
  %5547 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %5547)
  %5548 = load ptr, ptr @"Builtins::tagGetValue:11", align 8
  call void @free_candy_value(ptr %5548)
  %5549 = load ptr, ptr @"Builtins::tagGetValue:13", align 8
  call void @free_candy_value(ptr %5549)
  %5550 = load ptr, ptr @"Builtins::tagGetValue:19", align 8
  call void @free_candy_value(ptr %5550)
  %5551 = load ptr, ptr @"Builtins::tagGetValue:5", align 8
  call void @free_candy_value(ptr %5551)
  %5552 = load ptr, ptr @"Builtins::toDebugText:5", align 8
  call void @free_candy_value(ptr %5552)
  %5553 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %5553)
  %5554 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %5554)
  %5555 = load ptr, ptr @"Builtins::typeOf:5", align 8
  call void @free_candy_value(ptr %5555)
  %5556 = load ptr, ptr @"Core:bool:and:13", align 8
  call void @free_candy_value(ptr %5556)
  %5557 = load ptr, ptr @"Core:bool:and:2", align 8
  call void @free_candy_value(ptr %5557)
  %5558 = load ptr, ptr @"Core:bool:and:4", align 8
  call void @free_candy_value(ptr %5558)
  %5559 = load ptr, ptr @"Core:bool:and:7", align 8
  call void @free_candy_value(ptr %5559)
  %5560 = load ptr, ptr @"Core:bool:and:9", align 8
  call void @free_candy_value(ptr %5560)
  %5561 = load ptr, ptr @"Core:bool:is:1", align 8
  call void @free_candy_value(ptr %5561)
  %5562 = load ptr, ptr @"Core:bool:lazyAnd:14", align 8
  call void @free_candy_value(ptr %5562)
  %5563 = load ptr, ptr @"Core:bool:lazyAnd:16", align 8
  call void @free_candy_value(ptr %5563)
  %5564 = load ptr, ptr @"Core:bool:lazyAnd:18", align 8
  call void @free_candy_value(ptr %5564)
  %5565 = load ptr, ptr @"Core:bool:lazyAnd:18:13", align 8
  call void @free_candy_value(ptr %5565)
  %5566 = load ptr, ptr @"Core:bool:lazyAnd:18:21", align 8
  call void @free_candy_value(ptr %5566)
  %5567 = load ptr, ptr @"Core:bool:lazyAnd:18:9", align 8
  call void @free_candy_value(ptr %5567)
  %5568 = load ptr, ptr @"Core:bool:lazyAnd:2", align 8
  call void @free_candy_value(ptr %5568)
  %5569 = load ptr, ptr @"Core:bool:lazyAnd:4", align 8
  call void @free_candy_value(ptr %5569)
  %5570 = load ptr, ptr @"Core:bool:lazyOr:14", align 8
  call void @free_candy_value(ptr %5570)
  %5571 = load ptr, ptr @"Core:bool:lazyOr:16", align 8
  call void @free_candy_value(ptr %5571)
  %5572 = load ptr, ptr @"Core:bool:lazyOr:18", align 8
  call void @free_candy_value(ptr %5572)
  %5573 = load ptr, ptr @"Core:bool:lazyOr:18:10", align 8
  call void @free_candy_value(ptr %5573)
  %5574 = load ptr, ptr @"Core:bool:lazyOr:18:14", align 8
  call void @free_candy_value(ptr %5574)
  %5575 = load ptr, ptr @"Core:bool:lazyOr:18:22", align 8
  call void @free_candy_value(ptr %5575)
  %5576 = load ptr, ptr @"Core:bool:lazyOr:2", align 8
  call void @free_candy_value(ptr %5576)
  %5577 = load ptr, ptr @"Core:bool:lazyOr:4", align 8
  call void @free_candy_value(ptr %5577)
  %5578 = load ptr, ptr @"Core:bool:not:2", align 8
  call void @free_candy_value(ptr %5578)
  %5579 = load ptr, ptr @"Core:bool:not:4", align 8
  call void @free_candy_value(ptr %5579)
  %5580 = load ptr, ptr @"Core:bool:not:6", align 8
  call void @free_candy_value(ptr %5580)
  %5581 = load ptr, ptr @"Core:bool:or:13", align 8
  call void @free_candy_value(ptr %5581)
  %5582 = load ptr, ptr @"Core:bool:or:2", align 8
  call void @free_candy_value(ptr %5582)
  %5583 = load ptr, ptr @"Core:bool:or:4", align 8
  call void @free_candy_value(ptr %5583)
  %5584 = load ptr, ptr @"Core:bool:or:7", align 8
  call void @free_candy_value(ptr %5584)
  %5585 = load ptr, ptr @"Core:bool:or:9", align 8
  call void @free_candy_value(ptr %5585)
  %5586 = load ptr, ptr @"Core:check:checkEquals:12", align 8
  call void @free_candy_value(ptr %5586)
  %5587 = load ptr, ptr @"Core:check:checkEquals:13", align 8
  call void @free_candy_value(ptr %5587)
  %5588 = load ptr, ptr @"Core:check:checkEquals:15:0", align 8
  call void @free_candy_value(ptr %5588)
  %5589 = load ptr, ptr @"Core:check:checkEquals:16", align 8
  call void @free_candy_value(ptr %5589)
  %5590 = load ptr, ptr @"Core:check:checkEquals:19", align 8
  call void @free_candy_value(ptr %5590)
  %5591 = load ptr, ptr @"Core:check:checkEquals:20", align 8
  call void @free_candy_value(ptr %5591)
  %5592 = load ptr, ptr @"Core:check:checkEquals:22:0", align 8
  call void @free_candy_value(ptr %5592)
  %5593 = load ptr, ptr @"Core:check:checkEquals:23", align 8
  call void @free_candy_value(ptr %5593)
  %5594 = load ptr, ptr @"Core:check:checkEquals:25", align 8
  call void @free_candy_value(ptr %5594)
  %5595 = load ptr, ptr @"Core:check:checkEquals:26", align 8
  call void @free_candy_value(ptr %5595)
  %5596 = load ptr, ptr @"Core:check:checkEquals:27", align 8
  call void @free_candy_value(ptr %5596)
  %5597 = load ptr, ptr @"Core:check:checkEquals:28", align 8
  call void @free_candy_value(ptr %5597)
  %5598 = load ptr, ptr @"Core:check:checkEquals:29", align 8
  call void @free_candy_value(ptr %5598)
  %5599 = load ptr, ptr @"Core:controlFlow:if:11", align 8
  call void @free_candy_value(ptr %5599)
  %5600 = load ptr, ptr @"Core:controlFlow:if:21", align 8
  call void @free_candy_value(ptr %5600)
  %5601 = load ptr, ptr @"Core:controlFlow:if:23", align 8
  call void @free_candy_value(ptr %5601)
  %5602 = load ptr, ptr @"Core:controlFlow:if:28", align 8
  call void @free_candy_value(ptr %5602)
  %5603 = load ptr, ptr @"Core:controlFlow:if:9", align 8
  call void @free_candy_value(ptr %5603)
  %5604 = load ptr, ptr @"Core:controlFlow:recursive:17", align 8
  call void @free_candy_value(ptr %5604)
  %5605 = load ptr, ptr @"Core:controlFlow:recursive:18:0:3", align 8
  call void @free_candy_value(ptr %5605)
  %5606 = load ptr, ptr @"Core:controlFlow:recursive:18:5", align 8
  call void @free_candy_value(ptr %5606)
  %5607 = load ptr, ptr @"Core:controlFlow:recursive:23", align 8
  call void @free_candy_value(ptr %5607)
  %5608 = load ptr, ptr @"Core:controlFlow:recursive:9", align 8
  call void @free_candy_value(ptr %5608)
  %5609 = load ptr, ptr @"Core:fixedDecimal:fromInt:11", align 8
  call void @free_candy_value(ptr %5609)
  %5610 = load ptr, ptr @"Core:fixedDecimal:fromInt:15", align 8
  call void @free_candy_value(ptr %5610)
  %5611 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:11", align 8
  call void @free_candy_value(ptr %5611)
  %5612 = load ptr, ptr @"Core:fixedDecimal:fromIntScaled:16", align 8
  call void @free_candy_value(ptr %5612)
  %5613 = load ptr, ptr @"Core:fixedDecimal:is:1", align 8
  call void @free_candy_value(ptr %5613)
  %5614 = load ptr, ptr @"Core:fixedDecimal:is:1:19", align 8
  call void @free_candy_value(ptr %5614)
  %5615 = load ptr, ptr @"Core:fixedDecimal:is:1:minorUnits", align 8
  call void @free_candy_value(ptr %5615)
  %5616 = load ptr, ptr @"Core:fixedDecimal:is:1:scale", align 8
  call void @free_candy_value(ptr %5616)
  %5617 = load ptr, ptr @"Core:fixedDecimal:isScale:18:9", align 8
  call void @free_candy_value(ptr %5617)
  %5618 = load ptr, ptr @"Core:fixedDecimal:isScale:19", align 8
  call void @free_candy_value(ptr %5618)
  %5619 = load ptr, ptr @"Core:fixedDecimal:minorUnits:19", align 8
  call void @free_candy_value(ptr %5619)
  %5620 = load ptr, ptr @"Core:fixedDecimal:minorUnits:2", align 8
  call void @free_candy_value(ptr %5620)
  %5621 = load ptr, ptr @"Core:fixedDecimal:minorUnits:21", align 8
  call void @free_candy_value(ptr %5621)
  %5622 = load ptr, ptr @"Core:fixedDecimal:minorUnits:4", align 8
  call void @free_candy_value(ptr %5622)
  %5623 = load ptr, ptr @"Core:fixedDecimal:scale:19", align 8
  call void @free_candy_value(ptr %5623)
  %5624 = load ptr, ptr @"Core:fixedDecimal:scale:2", align 8
  call void @free_candy_value(ptr %5624)
  %5625 = load ptr, ptr @"Core:fixedDecimal:scale:21", align 8
  call void @free_candy_value(ptr %5625)
  %5626 = load ptr, ptr @"Core:fixedDecimal:scale:4", align 8
  call void @free_candy_value(ptr %5626)
  %5627 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:15", align 8
  call void @free_candy_value(ptr %5627)
  %5628 = load ptr, ptr @"Core:fixedDecimal:scaleFactor:4", align 8
  call void @free_candy_value(ptr %5628)
  %5629 = load ptr, ptr @"Core:function:is0:11:3", align 8
  call void @free_candy_value(ptr %5629)
  %5630 = load ptr, ptr @"Core:function:is0:13", align 8
  call void @free_candy_value(ptr %5630)
  %5631 = load ptr, ptr @"Core:function:is2:11:3", align 8
  call void @free_candy_value(ptr %5631)
  %5632 = load ptr, ptr @"Core:function:is2:13", align 8
  call void @free_candy_value(ptr %5632)
  %5633 = load ptr, ptr @"Core:function:run:14", align 8
  call void @free_candy_value(ptr %5633)
  %5634 = load ptr, ptr @"Core:function:run:2", align 8
  call void @free_candy_value(ptr %5634)
  %5635 = load ptr, ptr @"Core:function:run:4", align 8
  call void @free_candy_value(ptr %5635)
  %5636 = load ptr, ptr @"Core:int:compareTo:20", align 8
  call void @free_candy_value(ptr %5636)
  %5637 = load ptr, ptr @"Core:int:compareTo:4", align 8
  call void @free_candy_value(ptr %5637)
  %5638 = load ptr, ptr @"Core:int:compareTo:9", align 8
  call void @free_candy_value(ptr %5638)
  %5639 = load ptr, ptr @"Core:int:isEven:4", align 8
  call void @free_candy_value(ptr %5639)
  %5640 = load ptr, ptr @"Core:int:isEven:8", align 8
  call void @free_candy_value(ptr %5640)
  %5641 = load ptr, ptr @"Core:int:isGreaterThan:13", align 8
  call void @free_candy_value(ptr %5641)
  %5642 = load ptr, ptr @"Core:int:isGreaterThan:4", align 8
  call void @free_candy_value(ptr %5642)
  %5643 = load ptr, ptr @"Core:int:isGreaterThan:9", align 8
  call void @free_candy_value(ptr %5643)
  %5644 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:13", align 8
  call void @free_candy_value(ptr %5644)
  %5645 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:22", align 8
  call void @free_candy_value(ptr %5645)
  %5646 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:4", align 8
  call void @free_candy_value(ptr %5646)
  %5647 = load ptr, ptr @"Core:int:isGreaterThanOrEqualTo:9", align 8
  call void @free_candy_value(ptr %5647)
  %5648 = load ptr, ptr @"Core:int:isLessThan:13", align 8
  call void @free_candy_value(ptr %5648)
  %5649 = load ptr, ptr @"Core:int:isLessThan:4", align 8
  call void @free_candy_value(ptr %5649)
  %5650 = load ptr, ptr @"Core:int:isLessThan:9", align 8
  call void @free_candy_value(ptr %5650)
  %5651 = load ptr, ptr @"Core:int:isNegative:4", align 8
  call void @free_candy_value(ptr %5651)
  %5652 = load ptr, ptr @"Core:int:isNegative:8", align 8
  call void @free_candy_value(ptr %5652)
  %5653 = load ptr, ptr @"Core:int:isNonNegative:16", align 8
  call void @free_candy_value(ptr %5653)
  %5654 = load ptr, ptr @"Core:int:isNonNegative:4", align 8
  call void @free_candy_value(ptr %5654)
  %5655 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  call void @free_candy_value(ptr %5655)
  %5656 = load ptr, ptr @"Core:int:max:14", align 8
  call void @free_candy_value(ptr %5656)
  %5657 = load ptr, ptr @"Core:int:max:17", align 8
  call void @free_candy_value(ptr %5657)
  %5658 = load ptr, ptr @"Core:int:max:4", align 8
  call void @free_candy_value(ptr %5658)
  %5659 = load ptr, ptr @"Core:int:max:9", align 8
  call void @free_candy_value(ptr %5659)
  %5660 = load ptr, ptr @"Core:int:pow:12", align 8
  call void @free_candy_value(ptr %5660)
  %5661 = load ptr, ptr @"Core:int:pow:14", align 8
  call void @free_candy_value(ptr %5661)
  %5662 = load ptr, ptr @"Core:int:pow:21:1", align 8
  call void @free_candy_value(ptr %5662)
  %5663 = load ptr, ptr @"Core:int:pow:21:4", align 8
  call void @free_candy_value(ptr %5663)
  %5664 = load ptr, ptr @"Core:int:pow:21:4:4", align 8
  call void @free_candy_value(ptr %5664)
  %5665 = load ptr, ptr @"Core:int:pow:21:4:5:10", align 8
  call void @free_candy_value(ptr %5665)
  %5666 = load ptr, ptr @"Core:int:pow:21:4:5:12", align 8
  call void @free_candy_value(ptr %5666)
  %5667 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  call void @free_candy_value(ptr %5667)
  %5668 = load ptr, ptr @"Core:int:pow:21:4:6:12", align 8
  call void @free_candy_value(ptr %5668)
  %5669 = load ptr, ptr @"Core:int:pow:21:4:6:15", align 8
  call void @free_candy_value(ptr %5669)
  %5670 = load ptr, ptr @"Core:int:pow:21:4:6:17", align 8
  call void @free_candy_value(ptr %5670)
  %5671 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  call void @free_candy_value(ptr %5671)
  %5672 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  call void @free_candy_value(ptr %5672)
  %5673 = load ptr, ptr @"Core:int:pow:21:4:7", align 8
  call void @free_candy_value(ptr %5673)
  %5674 = load ptr, ptr @"Core:int:pow:21:base", align 8
  call void @free_candy_value(ptr %5674)
  %5675 = load ptr, ptr @"Core:int:pow:21:exponent", align 8
  call void @free_candy_value(ptr %5675)
  %5676 = load ptr, ptr @"Core:int:pow:22", align 8
  call void @free_candy_value(ptr %5676)
  %5677 = load ptr, ptr @"Core:int:pow:4", align 8
  call void @free_candy_value(ptr %5677)
  %5678 = load ptr, ptr @"Core:int:pow:9", align 8
  call void @free_candy_value(ptr %5678)
  %5679 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %5679)
  %5680 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %5680)
  %5681 = load ptr, ptr @fun_candy_builtin_get_argument_count, align 8
  call void @free_candy_value(ptr %5681)
  %5682 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %5682)
  %5683 = load ptr, ptr @fun_candy_builtin_int_add, align 8
  call void @free_candy_value(ptr %5683)
  %5684 = load ptr, ptr @fun_candy_builtin_int_bitwise_and, align 8
  call void @free_candy_value(ptr %5684)
  %5685 = load ptr, ptr @fun_candy_builtin_int_compare_to, align 8
  call void @free_candy_value(ptr %5685)
  %5686 = load ptr, ptr @fun_candy_builtin_int_divide_truncating, align 8
  call void @free_candy_value(ptr %5686)
  %5687 = load ptr, ptr @fun_candy_builtin_int_multiply, align 8
  call void @free_candy_value(ptr %5687)
  %5688 = load ptr, ptr @fun_candy_builtin_int_shift_right, align 8
  call void @free_candy_value(ptr %5688)
  %5689 = load ptr, ptr @fun_candy_builtin_int_subtract, align 8
  call void @free_candy_value(ptr %5689)
  %5690 = load ptr, ptr @fun_candy_builtin_list_get, align 8
  call void @free_candy_value(ptr %5690)
  %5691 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %5691)
  %5692 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %5692)
  %5693 = load ptr, ptr @fun_candy_builtin_tag_get_value, align 8
  call void @free_candy_value(ptr %5693)
  %5694 = load ptr, ptr @fun_candy_builtin_tag_has_value, align 8
  call void @free_candy_value(ptr %5694)
  %5695 = load ptr, ptr @fun_candy_builtin_tag_without_value, align 8
  call void @free_candy_value(ptr %5695)
  %5696 = load ptr, ptr @fun_candy_builtin_text_concatenate, align 8
  call void @free_candy_value(ptr %5696)
  %5697 = load ptr, ptr @fun_candy_builtin_to_debug_text, align 8
  call void @free_candy_value(ptr %5697)
  %5698 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %5698)
  %5699 = load ptr, ptr @tag_Base, align 8
  call void @free_candy_value(ptr %5699)
  %5700 = load ptr, ptr @tag_Equal, align 8
  call void @free_candy_value(ptr %5700)
  %5701 = load ptr, ptr @tag_Exponent, align 8
  call void @free_candy_value(ptr %5701)
  %5702 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %5702)
  %5703 = load ptr, ptr @tag_FixedDecimal, align 8
  call void @free_candy_value(ptr %5703)
  %5704 = load ptr, ptr @tag_Function, align 8
  call void @free_candy_value(ptr %5704)
  %5705 = load ptr, ptr @tag_Greater, align 8
  call void @free_candy_value(ptr %5705)
  %5706 = load ptr, ptr @tag_Int, align 8
  call void @free_candy_value(ptr %5706)
  %5707 = load ptr, ptr @tag_Less, align 8
  call void @free_candy_value(ptr %5707)
  %5708 = load ptr, ptr @tag_Match, align 8
  call void @free_candy_value(ptr %5708)
  %5709 = load ptr, ptr @tag_MinorUnits, align 8
  call void @free_candy_value(ptr %5709)
  %5710 = load ptr, ptr @tag_NoMatch, align 8
  call void @free_candy_value(ptr %5710)
  %5711 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %5711)
  %5712 = load ptr, ptr @tag_Scale, align 8
  call void @free_candy_value(ptr %5712)
  %5713 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %5713)
  %5714 = load ptr, ptr @tag_Tag, align 8
  call void @free_candy_value(ptr %5714)
  %5715 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %5715)
  %5716 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %5716)
  %5717 = load ptr, ptr @num_0, align 8
  call void @free_candy_value(ptr %5717)
  %5718 = load ptr, ptr @num_1, align 8
  call void @free_candy_value(ptr %5718)
  %5719 = load ptr, ptr @num_2, align 8
  call void @free_candy_value(ptr %5719)
  %5720 = load ptr, ptr @num_3, align 8
  call void @free_candy_value(ptr %5720)
  %5721 = load ptr, ptr @num_4, align 8
  call void @free_candy_value(ptr %5721)
  %5722 = load ptr, ptr @num_5, align 8
  call void @free_candy_value(ptr %5722)
  %5723 = load ptr, ptr @num_10, align 8
  call void @free_candy_value(ptr %5723)
  %5724 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  call void @free_candy_value(ptr %5724)
  %5725 = load ptr, ptr @"text_ to be ", align 8
  call void @free_candy_value(ptr %5725)
  %5726 = load ptr, ptr @text_., align 8
  call void @free_candy_value(ptr %5726)
  %5727 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  call void @free_candy_value(ptr %5727)
  %5728 = load ptr, ptr @"text_A check failed: Expected ", align 8
  call void @free_candy_value(ptr %5728)
  %5729 = load ptr, ptr @"text_Expected Equal, got ", align 8
  call void @free_candy_value(ptr %5729)
  %5730 = load ptr, ptr @"text_Expected False, got ", align 8
  call void @free_candy_value(ptr %5730)
  %5731 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  call void @free_candy_value(ptr %5731)
  %5732 = load ptr, ptr @"text_Expected Greater, got ", align 8
  call void @free_candy_value(ptr %5732)
  %5733 = load ptr, ptr @"text_Expected Less, got ", align 8
  call void @free_candy_value(ptr %5733)
  %5734 = load ptr, ptr @"text_Expected True, got ", align 8
  call void @free_candy_value(ptr %5734)
  %5735 = load ptr, ptr @"text_Expected `0`, got `", align 8
  call void @free_candy_value(ptr %5735)
  %5736 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  call void @free_candy_value(ptr %5736)
  %5737 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  call void @free_candy_value(ptr %5737)
  %5738 = load ptr, ptr @"text_Expected tag to have a value, but it doesn't have any.", align 8
  call void @free_candy_value(ptr %5738)
  %5739 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  call void @free_candy_value(ptr %5739)
  %5740 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @free_candy_value(ptr %5740)
  %5741 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  call void @free_candy_value(ptr %5741)
  %5742 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  call void @free_candy_value(ptr %5742)
  %5743 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  call void @free_candy_value(ptr %5743)
  %5744 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  call void @free_candy_value(ptr %5744)
  %5745 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  call void @free_candy_value(ptr %5745)
  %5746 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  call void @free_candy_value(ptr %5746)
  %5747 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %5747)
  %5748 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %5748)
  %5749 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  call void @free_candy_value(ptr %5749)
  %5750 = load ptr, ptr @"text_You can't divide by zero.", align 8
  call void @free_candy_value(ptr %5750)
  %5751 = load ptr, ptr @"text_`.", align 8
  call void @free_candy_value(ptr %5751)
  %5752 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @free_candy_value(ptr %5752)
  %5753 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5753)
  %5754 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5754)
  %5755 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5755)
  %5756 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  call void @free_candy_value(ptr %5756)
  %5757 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  call void @free_candy_value(ptr %5757)
  %5758 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  call void @free_candy_value(ptr %5758)
  %5759 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5759)
  %5760 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5760)
  %5761 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %5761)
  %5762 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %5762)
  %5763 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5763)
  %5764 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5764)
  %5765 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %5765)
  %5766 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %5766)
  %5767 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  call void @free_candy_value(ptr %5767)
  %5768 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  call void @free_candy_value(ptr %5768)
  %5769 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5769)
  %5770 = load ptr, ptr @"text_`int.is a` was not satisfied", align 8
  call void @free_candy_value(ptr %5770)
  %5771 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  call void @free_candy_value(ptr %5771)
  %5772 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  call void @free_candy_value(ptr %5772)
  %5773 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  call void @free_candy_value(ptr %5773)
  %5774 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  call void @free_candy_value(ptr %5774)
  %5775 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  call void @free_candy_value(ptr %5775)
  %5776 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  call void @free_candy_value(ptr %5776)
  %5777 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  call void @free_candy_value(ptr %5777)
  %5778 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  call void @free_candy_value(ptr %5778)
  %5779 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  call void @free_candy_value(ptr %5779)
  %5780 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  call void @free_candy_value(ptr %5780)
  %5781 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  call void @free_candy_value(ptr %5781)
  %5782 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5782)
  %5783 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %5783)
  %5784 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  call void @free_candy_value(ptr %5784)
  %5785 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5785)
  %5786 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  call void @free_candy_value(ptr %5786)
  %5787 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  call void @free_candy_value(ptr %5787)
  %5788 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  call void @free_candy_value(ptr %5788)
  %5789 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  call void @free_candy_value(ptr %5789)
  %5790 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %5790)
  %5791 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %5791)
  %5792 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %5792)
  %5793 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %5793)
  %5794 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %5794)
  %5795 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %5795)
  %5796 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %5796)
  %5797 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %5797)
  %5798 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %5798)
  %5799 = load ptr, ptr @0, align 8
  call void @free_candy_value(ptr %5799)
  %5800 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  call void @free_candy_value(ptr %5800)
  %5801 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %5801)
  %5802 = load ptr, ptr @fun_Builtins__ifElse, align 8
  call void @free_candy_value(ptr %5802)
  %5803 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  call void @free_candy_value(ptr %5803)
  %5804 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  call void @free_candy_value(ptr %5804)
  %5805 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  call void @free_candy_value(ptr %5805)
  %5806 = load ptr, ptr @1, align 8
  call void @free_candy_value(ptr %5806)
  %5807 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.4, align 8
  call void @free_candy_value(ptr %5807)
  %5808 = load ptr, ptr @2, align 8
  call void @free_candy_value(ptr %5808)
  %5809 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  call void @free_candy_value(ptr %5809)
  %5810 = load ptr, ptr @3, align 8
  call void @free_candy_value(ptr %5810)
  %5811 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  call void @free_candy_value(ptr %5811)
  %5812 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  call void @free_candy_value(ptr %5812)
  %5813 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.8, align 8
  call void @free_candy_value(ptr %5813)
  %5814 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  call void @free_candy_value(ptr %5814)
  %5815 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.12, align 8
  call void @free_candy_value(ptr %5815)
  %5816 = load ptr, ptr @4, align 8
  call void @free_candy_value(ptr %5816)
  %5817 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  call void @free_candy_value(ptr %5817)
  %5818 = load ptr, ptr @5, align 8
  call void @free_candy_value(ptr %5818)
  %5819 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  call void @free_candy_value(ptr %5819)
  %5820 = load ptr, ptr @6, align 8
  call void @free_candy_value(ptr %5820)
  %5821 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5821)
  %5822 = load ptr, ptr @fun_Core_function_is0, align 8
  call void @free_candy_value(ptr %5822)
  %5823 = load ptr, ptr @fun_Core_function_is0_11, align 8
  call void @free_candy_value(ptr %5823)
  %5824 = load ptr, ptr @fun_Core_function_run, align 8
  call void @free_candy_value(ptr %5824)
  %5825 = load ptr, ptr @fun_Core_bool_is, align 8
  call void @free_candy_value(ptr %5825)
  %5826 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  call void @free_candy_value(ptr %5826)
  %5827 = load ptr, ptr @fun_Core_bool_is_1_equals_then.18, align 8
  call void @free_candy_value(ptr %5827)
  %5828 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  call void @free_candy_value(ptr %5828)
  %5829 = load ptr, ptr @7, align 8
  call void @free_candy_value(ptr %5829)
  %5830 = load ptr, ptr @fun_Core_bool_is_1_equals_else.20, align 8
  call void @free_candy_value(ptr %5830)
  %5831 = load ptr, ptr @8, align 8
  call void @free_candy_value(ptr %5831)
  %5832 = load ptr, ptr @fun_Core_bool_is_1_equals_else.22, align 8
  call void @free_candy_value(ptr %5832)
  %5833 = load ptr, ptr @9, align 8
  call void @free_candy_value(ptr %5833)
  %5834 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %5834)
  %5835 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %5835)
  %5836 = load ptr, ptr @fun_Core_bool_is_1_equals_then.24, align 8
  call void @free_candy_value(ptr %5836)
  %5837 = load ptr, ptr @fun_Core_bool_is_1_equals_then.26, align 8
  call void @free_candy_value(ptr %5837)
  %5838 = load ptr, ptr @fun_Core_bool_is_1_equals_else.28, align 8
  call void @free_candy_value(ptr %5838)
  %5839 = load ptr, ptr @10, align 8
  call void @free_candy_value(ptr %5839)
  %5840 = load ptr, ptr @fun_Core_bool_is_1_equals_else.30, align 8
  call void @free_candy_value(ptr %5840)
  %5841 = load ptr, ptr @11, align 8
  call void @free_candy_value(ptr %5841)
  %5842 = load ptr, ptr @fun_Core_bool_is_1_equals_else.32, align 8
  call void @free_candy_value(ptr %5842)
  %5843 = load ptr, ptr @12, align 8
  call void @free_candy_value(ptr %5843)
  %5844 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5844)
  %5845 = load ptr, ptr @fun_Core_bool_not, align 8
  call void @free_candy_value(ptr %5845)
  %5846 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  call void @free_candy_value(ptr %5846)
  %5847 = load ptr, ptr @fun_Core_bool_not_6_equals_then.34, align 8
  call void @free_candy_value(ptr %5847)
  %5848 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  call void @free_candy_value(ptr %5848)
  %5849 = load ptr, ptr @13, align 8
  call void @free_candy_value(ptr %5849)
  %5850 = load ptr, ptr @fun_Core_bool_not_6_equals_else.36, align 8
  call void @free_candy_value(ptr %5850)
  %5851 = load ptr, ptr @14, align 8
  call void @free_candy_value(ptr %5851)
  %5852 = load ptr, ptr @fun_Core_bool_not_6_equals_else.38, align 8
  call void @free_candy_value(ptr %5852)
  %5853 = load ptr, ptr @15, align 8
  call void @free_candy_value(ptr %5853)
  %5854 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5854)
  %5855 = load ptr, ptr @fun_Core_bool_not_6_equals_then.40, align 8
  call void @free_candy_value(ptr %5855)
  %5856 = load ptr, ptr @fun_Core_bool_not_6_equals_then.42, align 8
  call void @free_candy_value(ptr %5856)
  %5857 = load ptr, ptr @fun_Core_bool_not_6_equals_else.44, align 8
  call void @free_candy_value(ptr %5857)
  %5858 = load ptr, ptr @16, align 8
  call void @free_candy_value(ptr %5858)
  %5859 = load ptr, ptr @fun_Core_bool_not_6_equals_else.46, align 8
  call void @free_candy_value(ptr %5859)
  %5860 = load ptr, ptr @17, align 8
  call void @free_candy_value(ptr %5860)
  %5861 = load ptr, ptr @fun_Core_bool_not_6_equals_else.48, align 8
  call void @free_candy_value(ptr %5861)
  %5862 = load ptr, ptr @18, align 8
  call void @free_candy_value(ptr %5862)
  %5863 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %5863)
  %5864 = load ptr, ptr @fun_Core_bool_lazyAnd, align 8
  call void @free_candy_value(ptr %5864)
  %5865 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  call void @free_candy_value(ptr %5865)
  %5866 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.50, align 8
  call void @free_candy_value(ptr %5866)
  %5867 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  call void @free_candy_value(ptr %5867)
  %5868 = load ptr, ptr @19, align 8
  call void @free_candy_value(ptr %5868)
  %5869 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.52, align 8
  call void @free_candy_value(ptr %5869)
  %5870 = load ptr, ptr @20, align 8
  call void @free_candy_value(ptr %5870)
  %5871 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.54, align 8
  call void @free_candy_value(ptr %5871)
  %5872 = load ptr, ptr @21, align 8
  call void @free_candy_value(ptr %5872)
  %5873 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  call void @free_candy_value(ptr %5873)
  %5874 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5874)
  %5875 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.56, align 8
  call void @free_candy_value(ptr %5875)
  %5876 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.58, align 8
  call void @free_candy_value(ptr %5876)
  %5877 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.60, align 8
  call void @free_candy_value(ptr %5877)
  %5878 = load ptr, ptr @22, align 8
  call void @free_candy_value(ptr %5878)
  %5879 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.62, align 8
  call void @free_candy_value(ptr %5879)
  %5880 = load ptr, ptr @23, align 8
  call void @free_candy_value(ptr %5880)
  %5881 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.64, align 8
  call void @free_candy_value(ptr %5881)
  %5882 = load ptr, ptr @24, align 8
  call void @free_candy_value(ptr %5882)
  %5883 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %5883)
  %5884 = load ptr, ptr @fun_Core_bool_lazyOr, align 8
  call void @free_candy_value(ptr %5884)
  %5885 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  call void @free_candy_value(ptr %5885)
  %5886 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.66, align 8
  call void @free_candy_value(ptr %5886)
  %5887 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  call void @free_candy_value(ptr %5887)
  %5888 = load ptr, ptr @25, align 8
  call void @free_candy_value(ptr %5888)
  %5889 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.68, align 8
  call void @free_candy_value(ptr %5889)
  %5890 = load ptr, ptr @26, align 8
  call void @free_candy_value(ptr %5890)
  %5891 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.70, align 8
  call void @free_candy_value(ptr %5891)
  %5892 = load ptr, ptr @27, align 8
  call void @free_candy_value(ptr %5892)
  %5893 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5893)
  %5894 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.72, align 8
  call void @free_candy_value(ptr %5894)
  %5895 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.74, align 8
  call void @free_candy_value(ptr %5895)
  %5896 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.76, align 8
  call void @free_candy_value(ptr %5896)
  %5897 = load ptr, ptr @28, align 8
  call void @free_candy_value(ptr %5897)
  %5898 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.78, align 8
  call void @free_candy_value(ptr %5898)
  %5899 = load ptr, ptr @29, align 8
  call void @free_candy_value(ptr %5899)
  %5900 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.80, align 8
  call void @free_candy_value(ptr %5900)
  %5901 = load ptr, ptr @30, align 8
  call void @free_candy_value(ptr %5901)
  %5902 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  call void @free_candy_value(ptr %5902)
  %5903 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %5903)
  %5904 = load ptr, ptr @fun_Core_check_checkEquals, align 8
  call void @free_candy_value(ptr %5904)
  %5905 = load ptr, ptr @fun_Core_check_checkEquals_14, align 8
  call void @free_candy_value(ptr %5905)
  %5906 = load ptr, ptr @fun_Core_check_checkEquals_15, align 8
  call void @free_candy_value(ptr %5906)
  %5907 = load ptr, ptr @fun_Core_check_checkEquals_21, align 8
  call void @free_candy_value(ptr %5907)
  %5908 = load ptr, ptr @fun_Core_check_checkEquals_22, align 8
  call void @free_candy_value(ptr %5908)
  %5909 = load ptr, ptr @fun_Core_function_is2, align 8
  call void @free_candy_value(ptr %5909)
  %5910 = load ptr, ptr @fun_Core_function_is2_11, align 8
  call void @free_candy_value(ptr %5910)
  %5911 = load ptr, ptr @fun_Builtins__not, align 8
  call void @free_candy_value(ptr %5911)
  %5912 = load ptr, ptr @fun_Builtins__not_1_equals_then, align 8
  call void @free_candy_value(ptr %5912)
  %5913 = load ptr, ptr @fun_Builtins__not_1_equals_then.82, align 8
  call void @free_candy_value(ptr %5913)
  %5914 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  call void @free_candy_value(ptr %5914)
  %5915 = load ptr, ptr @31, align 8
  call void @free_candy_value(ptr %5915)
  %5916 = load ptr, ptr @fun_Builtins__not_1_equals_else.84, align 8
  call void @free_candy_value(ptr %5916)
  %5917 = load ptr, ptr @32, align 8
  call void @free_candy_value(ptr %5917)
  %5918 = load ptr, ptr @fun_Builtins__not_1_equals_else.86, align 8
  call void @free_candy_value(ptr %5918)
  %5919 = load ptr, ptr @33, align 8
  call void @free_candy_value(ptr %5919)
  %5920 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5920)
  %5921 = load ptr, ptr @fun_Builtins__not_1_equals_then.88, align 8
  call void @free_candy_value(ptr %5921)
  %5922 = load ptr, ptr @fun_Builtins__not_1_equals_then.90, align 8
  call void @free_candy_value(ptr %5922)
  %5923 = load ptr, ptr @fun_Builtins__not_1_equals_else.92, align 8
  call void @free_candy_value(ptr %5923)
  %5924 = load ptr, ptr @34, align 8
  call void @free_candy_value(ptr %5924)
  %5925 = load ptr, ptr @fun_Builtins__not_1_equals_else.94, align 8
  call void @free_candy_value(ptr %5925)
  %5926 = load ptr, ptr @35, align 8
  call void @free_candy_value(ptr %5926)
  %5927 = load ptr, ptr @fun_Builtins__not_1_equals_else.96, align 8
  call void @free_candy_value(ptr %5927)
  %5928 = load ptr, ptr @36, align 8
  call void @free_candy_value(ptr %5928)
  %5929 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %5929)
  %5930 = load ptr, ptr @fun_Builtins__isNonNegative, align 8
  call void @free_candy_value(ptr %5930)
  %5931 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  call void @free_candy_value(ptr %5931)
  %5932 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.98, align 8
  call void @free_candy_value(ptr %5932)
  %5933 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  call void @free_candy_value(ptr %5933)
  %5934 = load ptr, ptr @37, align 8
  call void @free_candy_value(ptr %5934)
  %5935 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.100, align 8
  call void @free_candy_value(ptr %5935)
  %5936 = load ptr, ptr @38, align 8
  call void @free_candy_value(ptr %5936)
  %5937 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  call void @free_candy_value(ptr %5937)
  %5938 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  call void @free_candy_value(ptr %5938)
  %5939 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.102, align 8
  call void @free_candy_value(ptr %5939)
  %5940 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.104, align 8
  call void @free_candy_value(ptr %5940)
  %5941 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.106, align 8
  call void @free_candy_value(ptr %5941)
  %5942 = load ptr, ptr @39, align 8
  call void @free_candy_value(ptr %5942)
  %5943 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.108, align 8
  call void @free_candy_value(ptr %5943)
  %5944 = load ptr, ptr @40, align 8
  call void @free_candy_value(ptr %5944)
  %5945 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5945)
  %5946 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.110, align 8
  call void @free_candy_value(ptr %5946)
  %5947 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.112, align 8
  call void @free_candy_value(ptr %5947)
  %5948 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.114, align 8
  call void @free_candy_value(ptr %5948)
  %5949 = load ptr, ptr @41, align 8
  call void @free_candy_value(ptr %5949)
  %5950 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.116, align 8
  call void @free_candy_value(ptr %5950)
  %5951 = load ptr, ptr @42, align 8
  call void @free_candy_value(ptr %5951)
  %5952 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %5952)
  %5953 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo, align 8
  call void @free_candy_value(ptr %5953)
  %5954 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  call void @free_candy_value(ptr %5954)
  %5955 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.118, align 8
  call void @free_candy_value(ptr %5955)
  %5956 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  call void @free_candy_value(ptr %5956)
  %5957 = load ptr, ptr @43, align 8
  call void @free_candy_value(ptr %5957)
  %5958 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.120, align 8
  call void @free_candy_value(ptr %5958)
  %5959 = load ptr, ptr @44, align 8
  call void @free_candy_value(ptr %5959)
  %5960 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  call void @free_candy_value(ptr %5960)
  %5961 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  call void @free_candy_value(ptr %5961)
  %5962 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.122, align 8
  call void @free_candy_value(ptr %5962)
  %5963 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.124, align 8
  call void @free_candy_value(ptr %5963)
  %5964 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.126, align 8
  call void @free_candy_value(ptr %5964)
  %5965 = load ptr, ptr @45, align 8
  call void @free_candy_value(ptr %5965)
  %5966 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.128, align 8
  call void @free_candy_value(ptr %5966)
  %5967 = load ptr, ptr @46, align 8
  call void @free_candy_value(ptr %5967)
  %5968 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %5968)
  %5969 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.130, align 8
  call void @free_candy_value(ptr %5969)
  %5970 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.132, align 8
  call void @free_candy_value(ptr %5970)
  %5971 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.134, align 8
  call void @free_candy_value(ptr %5971)
  %5972 = load ptr, ptr @47, align 8
  call void @free_candy_value(ptr %5972)
  %5973 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.136, align 8
  call void @free_candy_value(ptr %5973)
  %5974 = load ptr, ptr @48, align 8
  call void @free_candy_value(ptr %5974)
  %5975 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %5975)
  %5976 = load ptr, ptr @fun_Builtins__intDivideTruncating, align 8
  call void @free_candy_value(ptr %5976)
  %5977 = load ptr, ptr @fun_Builtins__intShiftRight, align 8
  call void @free_candy_value(ptr %5977)
  %5978 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  call void @free_candy_value(ptr %5978)
  %5979 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  call void @free_candy_value(ptr %5979)
  %5980 = load ptr, ptr @fun_Core_int_compareTo, align 8
  call void @free_candy_value(ptr %5980)
  %5981 = load ptr, ptr @fun_Core_int_isLessThan, align 8
  call void @free_candy_value(ptr %5981)
  %5982 = load ptr, ptr @fun_Core_int_isGreaterThan, align 8
  call void @free_candy_value(ptr %5982)
  %5983 = load ptr, ptr @fun_Core_int_isGreaterThanOrEqualTo, align 8
  call void @free_candy_value(ptr %5983)
  %5984 = load ptr, ptr @fun_Core_int_isNonNegative, align 8
  call void @free_candy_value(ptr %5984)
  %5985 = load ptr, ptr @fun_Core_int_isEven, align 8
  call void @free_candy_value(ptr %5985)
  %5986 = load ptr, ptr @fun_Core_int_max, align 8
  call void @free_candy_value(ptr %5986)
  %5987 = load ptr, ptr @fun_Core_int_max_15, align 8
  call void @free_candy_value(ptr %5987)
  %5988 = load ptr, ptr @fun_Core_int_max_16, align 8
  call void @free_candy_value(ptr %5988)
  %5989 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  call void @free_candy_value(ptr %5989)
  %5990 = load ptr, ptr @fun_Core_int_pow_21, align 8
  call void @free_candy_value(ptr %5990)
  %5991 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  call void @free_candy_value(ptr %5991)
  %5992 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  call void @free_candy_value(ptr %5992)
  %5993 = load ptr, ptr @49, align 8
  call void @free_candy_value(ptr %5993)
  %5994 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  call void @free_candy_value(ptr %5994)
  %5995 = load ptr, ptr @50, align 8
  call void @free_candy_value(ptr %5995)
  %5996 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  call void @free_candy_value(ptr %5996)
  %5997 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.138, align 8
  call void @free_candy_value(ptr %5997)
  %5998 = load ptr, ptr @51, align 8
  call void @free_candy_value(ptr %5998)
  %5999 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.140, align 8
  call void @free_candy_value(ptr %5999)
  %6000 = load ptr, ptr @52, align 8
  call void @free_candy_value(ptr %6000)
  %6001 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.142, align 8
  call void @free_candy_value(ptr %6001)
  %6002 = load ptr, ptr @53, align 8
  call void @free_candy_value(ptr %6002)
  %6003 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  call void @free_candy_value(ptr %6003)
  %6004 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.144, align 8
  call void @free_candy_value(ptr %6004)
  %6005 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  call void @free_candy_value(ptr %6005)
  %6006 = load ptr, ptr @54, align 8
  call void @free_candy_value(ptr %6006)
  %6007 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.146, align 8
  call void @free_candy_value(ptr %6007)
  %6008 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  call void @free_candy_value(ptr %6008)
  %6009 = load ptr, ptr @55, align 8
  call void @free_candy_value(ptr %6009)
  %6010 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6010)
  %6011 = load ptr, ptr @fun_Core_int_pow_21_4_case-1_matched, align 8
  call void @free_candy_value(ptr %6011)
  %6012 = load ptr, ptr @fun_Core_int_pow_21_4_5, align 8
  call void @free_candy_value(ptr %6012)
  %6013 = load ptr, ptr @fun_Core_int_pow_21_4_6, align 8
  call void @free_candy_value(ptr %6013)
  %6014 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  call void @free_candy_value(ptr %6014)
  %6015 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  call void @free_candy_value(ptr %6015)
  %6016 = load ptr, ptr @fun_Core_int_pow, align 8
  call void @free_candy_value(ptr %6016)
  %6017 = load ptr, ptr @56, align 8
  call void @free_candy_value(ptr %6017)
  %6018 = load ptr, ptr @fun_Core_fixedDecimal_is, align 8
  call void @free_candy_value(ptr %6018)
  %6019 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  call void @free_candy_value(ptr %6019)
  %6020 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.148, align 8
  call void @free_candy_value(ptr %6020)
  %6021 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.150, align 8
  call void @free_candy_value(ptr %6021)
  %6022 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.152, align 8
  call void @free_candy_value(ptr %6022)
  %6023 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  call void @free_candy_value(ptr %6023)
  %6024 = load ptr, ptr @57, align 8
  call void @free_candy_value(ptr %6024)
  %6025 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  call void @free_candy_value(ptr %6025)
  %6026 = load ptr, ptr @58, align 8
  call void @free_candy_value(ptr %6026)
  %6027 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %6027)
  %6028 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.154, align 8
  call void @free_candy_value(ptr %6028)
  %6029 = load ptr, ptr @59, align 8
  call void @free_candy_value(ptr %6029)
  %6030 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.156, align 8
  call void @free_candy_value(ptr %6030)
  %6031 = load ptr, ptr @60, align 8
  call void @free_candy_value(ptr %6031)
  %6032 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.158, align 8
  call void @free_candy_value(ptr %6032)
  %6033 = load ptr, ptr @61, align 8
  call void @free_candy_value(ptr %6033)
  %6034 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %6034)
  %6035 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.160, align 8
  call void @free_candy_value(ptr %6035)
  %6036 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  call void @free_candy_value(ptr %6036)
  %6037 = load ptr, ptr @62, align 8
  call void @free_candy_value(ptr %6037)
  %6038 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.162, align 8
  call void @free_candy_value(ptr %6038)
  %6039 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.164, align 8
  call void @free_candy_value(ptr %6039)
  %6040 = load ptr, ptr @63, align 8
  call void @free_candy_value(ptr %6040)
  %6041 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.166, align 8
  call void @free_candy_value(ptr %6041)
  %6042 = load ptr, ptr @64, align 8
  call void @free_candy_value(ptr %6042)
  %6043 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %6043)
  %6044 = load ptr, ptr @fun_Core_fixedDecimal_is_1_18, align 8
  call void @free_candy_value(ptr %6044)
  %6045 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  call void @free_candy_value(ptr %6045)
  %6046 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6046)
  %6047 = load ptr, ptr @fun_Core_fixedDecimal_minorUnits, align 8
  call void @free_candy_value(ptr %6047)
  %6048 = load ptr, ptr @fun_Core_fixedDecimal_scale, align 8
  call void @free_candy_value(ptr %6048)
  %6049 = load ptr, ptr @fun_Core_fixedDecimal_fromIntScaled, align 8
  call void @free_candy_value(ptr %6049)
  %6050 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.168, align 8
  call void @free_candy_value(ptr %6050)
  %6051 = load ptr, ptr @tag_FixedDecimal.169, align 8
  call void @free_candy_value(ptr %6051)
  %6052 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:2", align 8
  call void @free_candy_value(ptr %6052)
  %6053 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:4", align 8
  call void @free_candy_value(ptr %6053)
  %6054 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  call void @free_candy_value(ptr %6054)
  %6055 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:9", align 8
  call void @free_candy_value(ptr %6055)
  %6056 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:13", align 8
  call void @free_candy_value(ptr %6056)
  %6057 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:23", align 8
  call void @free_candy_value(ptr %6057)
  %6058 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:2", align 8
  call void @free_candy_value(ptr %6058)
  %6059 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:14", align 8
  call void @free_candy_value(ptr %6059)
  %6060 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:24", align 8
  call void @free_candy_value(ptr %6060)
  %6061 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:25", align 8
  call void @free_candy_value(ptr %6061)
  %6062 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:26", align 8
  call void @free_candy_value(ptr %6062)
  %6063 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:2", align 8
  call void @free_candy_value(ptr %6063)
  %6064 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:23", align 8
  call void @free_candy_value(ptr %6064)
  %6065 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:24", align 8
  call void @free_candy_value(ptr %6065)
  %6066 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:25", align 8
  call void @free_candy_value(ptr %6066)
  %6067 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:26", align 8
  call void @free_candy_value(ptr %6067)
  %6068 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:26", align 8
  call void @free_candy_value(ptr %6068)
  %6069 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits, align 8
  call void @free_candy_value(ptr %6069)
  %6070 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.171, align 8
  call void @free_candy_value(ptr %6070)
  %6071 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_24, align 8
  call void @free_candy_value(ptr %6071)
  %6072 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.173, align 8
  call void @free_candy_value(ptr %6072)
  %6073 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_25, align 8
  call void @free_candy_value(ptr %6073)
  %6074 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.175, align 8
  call void @free_candy_value(ptr %6074)
  %6075 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:2", align 8
  call void @free_candy_value(ptr %6075)
  %6076 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:4", align 8
  call void @free_candy_value(ptr %6076)
  %6077 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:7", align 8
  call void @free_candy_value(ptr %6077)
  %6078 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:9", align 8
  call void @free_candy_value(ptr %6078)
  %6079 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:20", align 8
  call void @free_candy_value(ptr %6079)
  %6080 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:23", align 8
  call void @free_candy_value(ptr %6080)
  %6081 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:24", align 8
  call void @free_candy_value(ptr %6081)
  %6082 = load ptr, ptr @tag_ValueA, align 8
  call void @free_candy_value(ptr %6082)
  %6083 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:30", align 8
  call void @free_candy_value(ptr %6083)
  %6084 = load ptr, ptr @tag_ValueB, align 8
  call void @free_candy_value(ptr %6084)
  %6085 = load ptr, ptr @"Core:fixedDecimal:comparableMinorUnits:35", align 8
  call void @free_candy_value(ptr %6085)
  %6086 = load ptr, ptr @tag_TargetScale, align 8
  call void @free_candy_value(ptr %6086)
  %6087 = load ptr, ptr @fun_Core_fixedDecimal_comparableMinorUnits, align 8
  call void @free_candy_value(ptr %6087)
  %6088 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  call void @free_candy_value(ptr %6088)
  %6089 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  call void @free_candy_value(ptr %6089)
  %6090 = load ptr, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  call void @free_candy_value(ptr %6090)
  %6091 = load ptr, ptr @"Core:fixedDecimal:subtract:2", align 8
  call void @free_candy_value(ptr %6091)
  %6092 = load ptr, ptr @"text_`is minuend` was not satisfied", align 8
  call void @free_candy_value(ptr %6092)
  %6093 = load ptr, ptr @"Core:fixedDecimal:subtract:4", align 8
  call void @free_candy_value(ptr %6093)
  %6094 = load ptr, ptr @"Core:fixedDecimal:subtract:7", align 8
  call void @free_candy_value(ptr %6094)
  %6095 = load ptr, ptr @"text_`is subtrahend` was not satisfied", align 8
  call void @free_candy_value(ptr %6095)
  %6096 = load ptr, ptr @"Core:fixedDecimal:subtract:9", align 8
  call void @free_candy_value(ptr %6096)
  %6097 = load ptr, ptr @"Core:fixedDecimal:subtract:13", align 8
  call void @free_candy_value(ptr %6097)
  %6098 = load ptr, ptr @"Core:fixedDecimal:subtract:14", align 8
  call void @free_candy_value(ptr %6098)
  %6099 = load ptr, ptr @"Core:fixedDecimal:subtract:valueA", align 8
  call void @free_candy_value(ptr %6099)
  %6100 = load ptr, ptr @"Core:fixedDecimal:subtract:valueB", align 8
  call void @free_candy_value(ptr %6100)
  %6101 = load ptr, ptr @"Core:fixedDecimal:subtract:targetScale", align 8
  call void @free_candy_value(ptr %6101)
  %6102 = load ptr, ptr @"Core:fixedDecimal:subtract:27", align 8
  call void @free_candy_value(ptr %6102)
  %6103 = load ptr, ptr @"Core:fixedDecimal:subtract:29", align 8
  call void @free_candy_value(ptr %6103)
  %6104 = load ptr, ptr @fun_Core_fixedDecimal_subtract, align 8
  call void @free_candy_value(ptr %6104)
  %6105 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_then, align 8
  call void @free_candy_value(ptr %6105)
  %6106 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then, align 8
  call void @free_candy_value(ptr %6106)
  %6107 = load ptr, ptr @65, align 8
  call void @free_candy_value(ptr %6107)
  %6108 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else, align 8
  call void @free_candy_value(ptr %6108)
  %6109 = load ptr, ptr @66, align 8
  call void @free_candy_value(ptr %6109)
  %6110 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then, align 8
  call void @free_candy_value(ptr %6110)
  %6111 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.177, align 8
  call void @free_candy_value(ptr %6111)
  %6112 = load ptr, ptr @67, align 8
  call void @free_candy_value(ptr %6112)
  %6113 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.179, align 8
  call void @free_candy_value(ptr %6113)
  %6114 = load ptr, ptr @68, align 8
  call void @free_candy_value(ptr %6114)
  %6115 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.181, align 8
  call void @free_candy_value(ptr %6115)
  %6116 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.183, align 8
  call void @free_candy_value(ptr %6116)
  %6117 = load ptr, ptr @69, align 8
  call void @free_candy_value(ptr %6117)
  %6118 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.185, align 8
  call void @free_candy_value(ptr %6118)
  %6119 = load ptr, ptr @70, align 8
  call void @free_candy_value(ptr %6119)
  %6120 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.187, align 8
  call void @free_candy_value(ptr %6120)
  %6121 = load ptr, ptr @71, align 8
  call void @free_candy_value(ptr %6121)
  %6122 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else, align 8
  call void @free_candy_value(ptr %6122)
  %6123 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.189, align 8
  call void @free_candy_value(ptr %6123)
  %6124 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.191, align 8
  call void @free_candy_value(ptr %6124)
  %6125 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_else, align 8
  call void @free_candy_value(ptr %6125)
  %6126 = load ptr, ptr @72, align 8
  call void @free_candy_value(ptr %6126)
  %6127 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.193, align 8
  call void @free_candy_value(ptr %6127)
  %6128 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:2", align 8
  call void @free_candy_value(ptr %6128)
  %6129 = load ptr, ptr @"text_`is dividend` was not satisfied", align 8
  call void @free_candy_value(ptr %6129)
  %6130 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:4", align 8
  call void @free_candy_value(ptr %6130)
  %6131 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:7", align 8
  call void @free_candy_value(ptr %6131)
  %6132 = load ptr, ptr @"text_`is divisor` was not satisfied", align 8
  call void @free_candy_value(ptr %6132)
  %6133 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:9", align 8
  call void @free_candy_value(ptr %6133)
  %6134 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:12", align 8
  call void @free_candy_value(ptr %6134)
  %6135 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:24", align 8
  call void @free_candy_value(ptr %6135)
  %6136 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:32", align 8
  call void @free_candy_value(ptr %6136)
  %6137 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:36", align 8
  call void @free_candy_value(ptr %6137)
  %6138 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:37", align 8
  call void @free_candy_value(ptr %6138)
  %6139 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:valueA", align 8
  call void @free_candy_value(ptr %6139)
  %6140 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:valueB", align 8
  call void @free_candy_value(ptr %6140)
  %6141 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:targetScale", align 8
  call void @free_candy_value(ptr %6141)
  %6142 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:51", align 8
  call void @free_candy_value(ptr %6142)
  %6143 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:52", align 8
  call void @free_candy_value(ptr %6143)
  %6144 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:62", align 8
  call void @free_candy_value(ptr %6144)
  %6145 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:64", align 8
  call void @free_candy_value(ptr %6145)
  %6146 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating, align 8
  call void @free_candy_value(ptr %6146)
  %6147 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_then, align 8
  call void @free_candy_value(ptr %6147)
  %6148 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then, align 8
  call void @free_candy_value(ptr %6148)
  %6149 = load ptr, ptr @73, align 8
  call void @free_candy_value(ptr %6149)
  %6150 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else, align 8
  call void @free_candy_value(ptr %6150)
  %6151 = load ptr, ptr @74, align 8
  call void @free_candy_value(ptr %6151)
  %6152 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then, align 8
  call void @free_candy_value(ptr %6152)
  %6153 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.195, align 8
  call void @free_candy_value(ptr %6153)
  %6154 = load ptr, ptr @75, align 8
  call void @free_candy_value(ptr %6154)
  %6155 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.197, align 8
  call void @free_candy_value(ptr %6155)
  %6156 = load ptr, ptr @76, align 8
  call void @free_candy_value(ptr %6156)
  %6157 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.199, align 8
  call void @free_candy_value(ptr %6157)
  %6158 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.201, align 8
  call void @free_candy_value(ptr %6158)
  %6159 = load ptr, ptr @77, align 8
  call void @free_candy_value(ptr %6159)
  %6160 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.203, align 8
  call void @free_candy_value(ptr %6160)
  %6161 = load ptr, ptr @78, align 8
  call void @free_candy_value(ptr %6161)
  %6162 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.205, align 8
  call void @free_candy_value(ptr %6162)
  %6163 = load ptr, ptr @79, align 8
  call void @free_candy_value(ptr %6163)
  %6164 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else, align 8
  call void @free_candy_value(ptr %6164)
  %6165 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.207, align 8
  call void @free_candy_value(ptr %6165)
  %6166 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.209, align 8
  call void @free_candy_value(ptr %6166)
  %6167 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_else, align 8
  call void @free_candy_value(ptr %6167)
  %6168 = load ptr, ptr @80, align 8
  call void @free_candy_value(ptr %6168)
  %6169 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.211, align 8
  call void @free_candy_value(ptr %6169)
  %6170 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.213, align 8
  call void @free_candy_value(ptr %6170)
  %6171 = load ptr, ptr @"Core:function:is1:11:3", align 8
  call void @free_candy_value(ptr %6171)
  %6172 = load ptr, ptr @"Core:function:is1:13", align 8
  call void @free_candy_value(ptr %6172)
  %6173 = load ptr, ptr @fun_Core_function_is1, align 8
  call void @free_candy_value(ptr %6173)
  %6174 = load ptr, ptr @fun_Core_function_is1_11, align 8
  call void @free_candy_value(ptr %6174)
  %6175 = load ptr, ptr @"Core:int:fitsInRustU32:15", align 8
  call void @free_candy_value(ptr %6175)
  %6176 = load ptr, ptr @"Core:int:fitsInRustU32:4", align 8
  call void @free_candy_value(ptr %6176)
  %6177 = load ptr, ptr @"Core:int:fitsInRustU32:7", align 8
  call void @free_candy_value(ptr %6177)
  %6178 = load ptr, ptr @"Core:int:fitsInRustU32:9", align 8
  call void @free_candy_value(ptr %6178)
  %6179 = load ptr, ptr @"Core:int:isOdd:4", align 8
  call void @free_candy_value(ptr %6179)
  %6180 = load ptr, ptr @"Core:int:isOdd:8", align 8
  call void @free_candy_value(ptr %6180)
  %6181 = load ptr, ptr @"Core:int:isPositive:4", align 8
  call void @free_candy_value(ptr %6181)
  %6182 = load ptr, ptr @"Core:int:isPositive:8", align 8
  call void @free_candy_value(ptr %6182)
  %6183 = load ptr, ptr @num_4294967295, align 8
  call void @free_candy_value(ptr %6183)
  %6184 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  call void @free_candy_value(ptr %6184)
  %6185 = load ptr, ptr @fun_Core_int_isOdd, align 8
  call void @free_candy_value(ptr %6185)
  %6186 = load ptr, ptr @"Builtins::listGet:11", align 8
  call void @free_candy_value(ptr %6186)
  %6187 = load ptr, ptr @"Builtins::listGet:14", align 8
  call void @free_candy_value(ptr %6187)
  %6188 = load ptr, ptr @"Builtins::listGet:16", align 8
  call void @free_candy_value(ptr %6188)
  %6189 = load ptr, ptr @"Builtins::listGet:24", align 8
  call void @free_candy_value(ptr %6189)
  %6190 = load ptr, ptr @"Builtins::listGet:25", align 8
  call void @free_candy_value(ptr %6190)
  %6191 = load ptr, ptr @"Builtins::listGet:30", align 8
  call void @free_candy_value(ptr %6191)
  %6192 = load ptr, ptr @"Builtins::listGet:37", align 8
  call void @free_candy_value(ptr %6192)
  %6193 = load ptr, ptr @"Builtins::listGet:5", align 8
  call void @free_candy_value(ptr %6193)
  %6194 = load ptr, ptr @"Builtins::listInsert:11", align 8
  call void @free_candy_value(ptr %6194)
  %6195 = load ptr, ptr @"Builtins::listInsert:14", align 8
  call void @free_candy_value(ptr %6195)
  %6196 = load ptr, ptr @"Builtins::listInsert:16", align 8
  call void @free_candy_value(ptr %6196)
  %6197 = load ptr, ptr @"Builtins::listInsert:24", align 8
  call void @free_candy_value(ptr %6197)
  %6198 = load ptr, ptr @"Builtins::listInsert:25", align 8
  call void @free_candy_value(ptr %6198)
  %6199 = load ptr, ptr @"Builtins::listInsert:27", align 8
  call void @free_candy_value(ptr %6199)
  %6200 = load ptr, ptr @"Builtins::listInsert:35", align 8
  call void @free_candy_value(ptr %6200)
  %6201 = load ptr, ptr @"Builtins::listInsert:5", align 8
  call void @free_candy_value(ptr %6201)
  %6202 = load ptr, ptr @"Builtins::listLength:11", align 8
  call void @free_candy_value(ptr %6202)
  %6203 = load ptr, ptr @"Builtins::listLength:5", align 8
  call void @free_candy_value(ptr %6203)
  %6204 = load ptr, ptr @"Builtins::textConcatenate:11", align 8
  call void @free_candy_value(ptr %6204)
  %6205 = load ptr, ptr @"Builtins::textConcatenate:18", align 8
  call void @free_candy_value(ptr %6205)
  %6206 = load ptr, ptr @"Builtins::textConcatenate:5", align 8
  call void @free_candy_value(ptr %6206)
  %6207 = load ptr, ptr @"Core:iterator:109", align 8
  call void @free_candy_value(ptr %6207)
  %6208 = load ptr, ptr @"Core:iterator:all:11", align 8
  call void @free_candy_value(ptr %6208)
  %6209 = load ptr, ptr @"Core:iterator:all:15", align 8
  call void @free_candy_value(ptr %6209)
  %6210 = load ptr, ptr @"Core:iterator:all:18:13", align 8
  call void @free_candy_value(ptr %6210)
  %6211 = load ptr, ptr @"Core:iterator:all:18:15", align 8
  call void @free_candy_value(ptr %6211)
  %6212 = load ptr, ptr @"Core:iterator:all:18:2", align 8
  call void @free_candy_value(ptr %6212)
  %6213 = load ptr, ptr @"Core:iterator:all:18:26", align 8
  call void @free_candy_value(ptr %6213)
  %6214 = load ptr, ptr @"Core:iterator:all:19", align 8
  call void @free_candy_value(ptr %6214)
  %6215 = load ptr, ptr @"Core:iterator:all:9", align 8
  call void @free_candy_value(ptr %6215)
  %6216 = load ptr, ptr @"Core:iterator:any:11", align 8
  call void @free_candy_value(ptr %6216)
  %6217 = load ptr, ptr @"Core:iterator:any:15", align 8
  call void @free_candy_value(ptr %6217)
  %6218 = load ptr, ptr @"Core:iterator:any:18:13", align 8
  call void @free_candy_value(ptr %6218)
  %6219 = load ptr, ptr @"Core:iterator:any:18:15", align 8
  call void @free_candy_value(ptr %6219)
  %6220 = load ptr, ptr @"Core:iterator:any:18:2", align 8
  call void @free_candy_value(ptr %6220)
  %6221 = load ptr, ptr @"Core:iterator:any:18:26", align 8
  call void @free_candy_value(ptr %6221)
  %6222 = load ptr, ptr @"Core:iterator:any:19", align 8
  call void @free_candy_value(ptr %6222)
  %6223 = load ptr, ptr @"Core:iterator:any:9", align 8
  call void @free_candy_value(ptr %6223)
  %6224 = load ptr, ptr @"Core:iterator:chunked:11", align 8
  call void @free_candy_value(ptr %6224)
  %6225 = load ptr, ptr @"Core:iterator:chunked:21", align 8
  call void @free_candy_value(ptr %6225)
  %6226 = load ptr, ptr @"Core:iterator:chunked:23", align 8
  call void @free_candy_value(ptr %6226)
  %6227 = load ptr, ptr @"Core:iterator:chunked:27", align 8
  call void @free_candy_value(ptr %6227)
  %6228 = load ptr, ptr @"Core:iterator:chunked:32", align 8
  call void @free_candy_value(ptr %6228)
  %6229 = load ptr, ptr @"Core:iterator:ensure:11", align 8
  call void @free_candy_value(ptr %6229)
  %6230 = load ptr, ptr @"Core:iterator:ensure:15", align 8
  call void @free_candy_value(ptr %6230)
  %6231 = load ptr, ptr @"Core:iterator:ensure:19:2", align 8
  call void @free_candy_value(ptr %6231)
  %6232 = load ptr, ptr @"Core:iterator:ensure:20", align 8
  call void @free_candy_value(ptr %6232)
  %6233 = load ptr, ptr @"Core:iterator:ensure:9", align 8
  call void @free_candy_value(ptr %6233)
  %6234 = load ptr, ptr @"Core:iterator:foldLeft:14", align 8
  call void @free_candy_value(ptr %6234)
  %6235 = load ptr, ptr @"Core:iterator:foldLeft:16", align 8
  call void @free_candy_value(ptr %6235)
  %6236 = load ptr, ptr @"Core:iterator:foldLeft:23:1", align 8
  call void @free_candy_value(ptr %6236)
  %6237 = load ptr, ptr @"Core:iterator:foldLeft:23:4", align 8
  call void @free_candy_value(ptr %6237)
  %6238 = load ptr, ptr @"Core:iterator:foldLeft:23:5", align 8
  call void @free_candy_value(ptr %6238)
  %6239 = load ptr, ptr @"Core:iterator:foldLeft:23:5:10", align 8
  call void @free_candy_value(ptr %6239)
  %6240 = load ptr, ptr @"Core:iterator:foldLeft:23:5:8", align 8
  call void @free_candy_value(ptr %6240)
  %6241 = load ptr, ptr @"Core:iterator:foldLeft:23:5:item", align 8
  call void @free_candy_value(ptr %6241)
  %6242 = load ptr, ptr @"Core:iterator:foldLeft:23:5:rest", align 8
  call void @free_candy_value(ptr %6242)
  %6243 = load ptr, ptr @"Core:iterator:foldLeft:23:iterator", align 8
  call void @free_candy_value(ptr %6243)
  %6244 = load ptr, ptr @"Core:iterator:foldLeft:23:value", align 8
  call void @free_candy_value(ptr %6244)
  %6245 = load ptr, ptr @"Core:iterator:foldLeft:24", align 8
  call void @free_candy_value(ptr %6245)
  %6246 = load ptr, ptr @"Core:iterator:foldLeft:3", align 8
  call void @free_candy_value(ptr %6246)
  %6247 = load ptr, ptr @"Core:iterator:fromList:11", align 8
  call void @free_candy_value(ptr %6247)
  %6248 = load ptr, ptr @"Core:iterator:fromList:22", align 8
  call void @free_candy_value(ptr %6248)
  %6249 = load ptr, ptr @"Core:iterator:fromList:23:10", align 8
  call void @free_candy_value(ptr %6249)
  %6250 = load ptr, ptr @"Core:iterator:fromList:24", align 8
  call void @free_candy_value(ptr %6250)
  %6251 = load ptr, ptr @"Core:iterator:generate:11", align 8
  call void @free_candy_value(ptr %6251)
  %6252 = load ptr, ptr @"Core:iterator:generate:21", align 8
  call void @free_candy_value(ptr %6252)
  %6253 = load ptr, ptr @"Core:iterator:generate:23", align 8
  call void @free_candy_value(ptr %6253)
  %6254 = load ptr, ptr @"Core:iterator:generate:33", align 8
  call void @free_candy_value(ptr %6254)
  %6255 = load ptr, ptr @"Core:iterator:generate:35", align 8
  call void @free_candy_value(ptr %6255)
  %6256 = load ptr, ptr @"Core:iterator:generate:45", align 8
  call void @free_candy_value(ptr %6256)
  %6257 = load ptr, ptr @"Core:iterator:generate:47", align 8
  call void @free_candy_value(ptr %6257)
  %6258 = load ptr, ptr @"Core:iterator:generate:50:6:16", align 8
  call void @free_candy_value(ptr %6258)
  %6259 = load ptr, ptr @"Core:iterator:generate:50:6:4", align 8
  call void @free_candy_value(ptr %6259)
  %6260 = load ptr, ptr @"Core:iterator:generate:50:7", align 8
  call void @free_candy_value(ptr %6260)
  %6261 = load ptr, ptr @"Core:iterator:generate:51", align 8
  call void @free_candy_value(ptr %6261)
  %6262 = load ptr, ptr @"Core:iterator:generateWithState:11", align 8
  call void @free_candy_value(ptr %6262)
  %6263 = load ptr, ptr @"Core:iterator:generateWithState:14:1:2", align 8
  call void @free_candy_value(ptr %6263)
  %6264 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3", align 8
  call void @free_candy_value(ptr %6264)
  %6265 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:19", align 8
  call void @free_candy_value(ptr %6265)
  %6266 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:20", align 8
  call void @free_candy_value(ptr %6266)
  %6267 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:22:0", align 8
  call void @free_candy_value(ptr %6267)
  %6268 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:23", align 8
  call void @free_candy_value(ptr %6268)
  %6269 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:25", align 8
  call void @free_candy_value(ptr %6269)
  %6270 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:26", align 8
  call void @free_candy_value(ptr %6270)
  %6271 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:27", align 8
  call void @free_candy_value(ptr %6271)
  %6272 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:6", align 8
  call void @free_candy_value(ptr %6272)
  %6273 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:item", align 8
  call void @free_candy_value(ptr %6273)
  %6274 = load ptr, ptr @"Core:iterator:generateWithState:14:1:3:state", align 8
  call void @free_candy_value(ptr %6274)
  %6275 = load ptr, ptr @"Core:iterator:generateWithState:15", align 8
  call void @free_candy_value(ptr %6275)
  %6276 = load ptr, ptr @"Core:iterator:generateWithState:9", align 8
  call void @free_candy_value(ptr %6276)
  %6277 = load ptr, ptr @"Core:iterator:isEmpty:3", align 8
  call void @free_candy_value(ptr %6277)
  %6278 = load ptr, ptr @"Core:iterator:isEmpty:7", align 8
  call void @free_candy_value(ptr %6278)
  %6279 = load ptr, ptr @"Core:iterator:joinToText:12:11", align 8
  call void @free_candy_value(ptr %6279)
  %6280 = load ptr, ptr @"Core:iterator:joinToText:12:22", align 8
  call void @free_candy_value(ptr %6280)
  %6281 = load ptr, ptr @"Core:iterator:joinToText:13", align 8
  call void @free_candy_value(ptr %6281)
  %6282 = load ptr, ptr @"Core:iterator:joinToText:3", align 8
  call void @free_candy_value(ptr %6282)
  %6283 = load ptr, ptr @"Core:iterator:length:3", align 8
  call void @free_candy_value(ptr %6283)
  %6284 = load ptr, ptr @"Core:iterator:length:6", align 8
  call void @free_candy_value(ptr %6284)
  %6285 = load ptr, ptr @"Core:iterator:length:8", align 8
  call void @free_candy_value(ptr %6285)
  %6286 = load ptr, ptr @"Core:iterator:map:14", align 8
  call void @free_candy_value(ptr %6286)
  %6287 = load ptr, ptr @"Core:iterator:map:16", align 8
  call void @free_candy_value(ptr %6287)
  %6288 = load ptr, ptr @"Core:iterator:map:19:2", align 8
  call void @free_candy_value(ptr %6288)
  %6289 = load ptr, ptr @"Core:iterator:map:19:3", align 8
  call void @free_candy_value(ptr %6289)
  %6290 = load ptr, ptr @"Core:iterator:map:19:3:5", align 8
  call void @free_candy_value(ptr %6290)
  %6291 = load ptr, ptr @"Core:iterator:map:19:3:item", align 8
  call void @free_candy_value(ptr %6291)
  %6292 = load ptr, ptr @"Core:iterator:map:19:3:rest", align 8
  call void @free_candy_value(ptr %6292)
  %6293 = load ptr, ptr @"Core:iterator:map:20", align 8
  call void @free_candy_value(ptr %6293)
  %6294 = load ptr, ptr @"Core:iterator:map:3", align 8
  call void @free_candy_value(ptr %6294)
  %6295 = load ptr, ptr @"Core:iterator:next:17", align 8
  call void @free_candy_value(ptr %6295)
  %6296 = load ptr, ptr @"Core:iterator:next:3", align 8
  call void @free_candy_value(ptr %6296)
  %6297 = load ptr, ptr @"Core:iterator:next:6", align 8
  call void @free_candy_value(ptr %6297)
  %6298 = load ptr, ptr @"Core:iterator:next:nextFunction", align 8
  call void @free_candy_value(ptr %6298)
  %6299 = load ptr, ptr @"Core:iterator:reduceLeft:11", align 8
  call void @free_candy_value(ptr %6299)
  %6300 = load ptr, ptr @"Core:iterator:reduceLeft:15", align 8
  call void @free_candy_value(ptr %6300)
  %6301 = load ptr, ptr @"Core:iterator:reduceLeft:17", align 8
  call void @free_candy_value(ptr %6301)
  %6302 = load ptr, ptr @"Core:iterator:reduceLeft:18", align 8
  call void @free_candy_value(ptr %6302)
  %6303 = load ptr, ptr @"Core:iterator:reduceLeft:18:14", align 8
  call void @free_candy_value(ptr %6303)
  %6304 = load ptr, ptr @"Core:iterator:reduceLeft:18:item", align 8
  call void @free_candy_value(ptr %6304)
  %6305 = load ptr, ptr @"Core:iterator:reduceLeft:18:rest", align 8
  call void @free_candy_value(ptr %6305)
  %6306 = load ptr, ptr @"Core:iterator:reduceLeft:9", align 8
  call void @free_candy_value(ptr %6306)
  %6307 = load ptr, ptr @"Core:iterator:skip:16", align 8
  call void @free_candy_value(ptr %6307)
  %6308 = load ptr, ptr @"Core:iterator:skip:26", align 8
  call void @free_candy_value(ptr %6308)
  %6309 = load ptr, ptr @"Core:iterator:skip:28", align 8
  call void @free_candy_value(ptr %6309)
  %6310 = load ptr, ptr @"Core:iterator:skip:3", align 8
  call void @free_candy_value(ptr %6310)
  %6311 = load ptr, ptr @"Core:iterator:skip:30:6:1", align 8
  call void @free_candy_value(ptr %6311)
  %6312 = load ptr, ptr @"Core:iterator:skip:30:6:7:2", align 8
  call void @free_candy_value(ptr %6312)
  %6313 = load ptr, ptr @"Core:iterator:skip:30:6:8:2", align 8
  call void @free_candy_value(ptr %6313)
  %6314 = load ptr, ptr @"Core:iterator:skip:30:6:8:3", align 8
  call void @free_candy_value(ptr %6314)
  %6315 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:15", align 8
  call void @free_candy_value(ptr %6315)
  %6316 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:17", align 8
  call void @free_candy_value(ptr %6316)
  %6317 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:rest", align 8
  call void @free_candy_value(ptr %6317)
  %6318 = load ptr, ptr @"Core:iterator:skip:30:6:9", align 8
  call void @free_candy_value(ptr %6318)
  %6319 = load ptr, ptr @"Core:iterator:skip:30:6:iterator", align 8
  call void @free_candy_value(ptr %6319)
  %6320 = load ptr, ptr @"Core:iterator:skip:30:6:n", align 8
  call void @free_candy_value(ptr %6320)
  %6321 = load ptr, ptr @"Core:iterator:skip:30:7", align 8
  call void @free_candy_value(ptr %6321)
  %6322 = load ptr, ptr @"Core:iterator:sum:19", align 8
  call void @free_candy_value(ptr %6322)
  %6323 = load ptr, ptr @"Core:iterator:sum:3", align 8
  call void @free_candy_value(ptr %6323)
  %6324 = load ptr, ptr @"Core:iterator:sum:5:17", align 8
  call void @free_candy_value(ptr %6324)
  %6325 = load ptr, ptr @"Core:iterator:sum:6", align 8
  call void @free_candy_value(ptr %6325)
  %6326 = load ptr, ptr @"Core:iterator:sum:8:10", align 8
  call void @free_candy_value(ptr %6326)
  %6327 = load ptr, ptr @"Core:iterator:sum:9", align 8
  call void @free_candy_value(ptr %6327)
  %6328 = load ptr, ptr @"Core:iterator:take:11", align 8
  call void @free_candy_value(ptr %6328)
  %6329 = load ptr, ptr @"Core:iterator:take:21", align 8
  call void @free_candy_value(ptr %6329)
  %6330 = load ptr, ptr @"Core:iterator:take:23", align 8
  call void @free_candy_value(ptr %6330)
  %6331 = load ptr, ptr @"Core:iterator:take:27", align 8
  call void @free_candy_value(ptr %6331)
  %6332 = load ptr, ptr @"Core:iterator:take:29", align 8
  call void @free_candy_value(ptr %6332)
  %6333 = load ptr, ptr @"Core:iterator:take:31:1", align 8
  call void @free_candy_value(ptr %6333)
  %6334 = load ptr, ptr @"Core:iterator:take:31:12", align 8
  call void @free_candy_value(ptr %6334)
  %6335 = load ptr, ptr @"Core:iterator:take:31:index", align 8
  call void @free_candy_value(ptr %6335)
  %6336 = load ptr, ptr @"Core:iterator:take:31:item", align 8
  call void @free_candy_value(ptr %6336)
  %6337 = load ptr, ptr @"Core:iterator:take:32", align 8
  call void @free_candy_value(ptr %6337)
  %6338 = load ptr, ptr @"Core:iterator:take:34:7", align 8
  call void @free_candy_value(ptr %6338)
  %6339 = load ptr, ptr @"Core:iterator:take:35", align 8
  call void @free_candy_value(ptr %6339)
  %6340 = load ptr, ptr @"Core:iterator:takeWhile:3", align 8
  call void @free_candy_value(ptr %6340)
  %6341 = load ptr, ptr @"Core:iterator:takeWhile:7:2", align 8
  call void @free_candy_value(ptr %6341)
  %6342 = load ptr, ptr @"Core:iterator:takeWhile:7:3", align 8
  call void @free_candy_value(ptr %6342)
  %6343 = load ptr, ptr @"Core:iterator:takeWhile:7:3:4", align 8
  call void @free_candy_value(ptr %6343)
  %6344 = load ptr, ptr @"Core:iterator:takeWhile:7:3:7", align 8
  call void @free_candy_value(ptr %6344)
  %6345 = load ptr, ptr @"Core:iterator:takeWhile:7:3:item", align 8
  call void @free_candy_value(ptr %6345)
  %6346 = load ptr, ptr @"Core:iterator:takeWhile:7:3:rest", align 8
  call void @free_candy_value(ptr %6346)
  %6347 = load ptr, ptr @"Core:iterator:takeWhile:8", align 8
  call void @free_candy_value(ptr %6347)
  %6348 = load ptr, ptr @"Core:iterator:toList:3", align 8
  call void @free_candy_value(ptr %6348)
  %6349 = load ptr, ptr @"Core:iterator:toList:6:10", align 8
  call void @free_candy_value(ptr %6349)
  %6350 = load ptr, ptr @"Core:iterator:toList:7", align 8
  call void @free_candy_value(ptr %6350)
  %6351 = load ptr, ptr @"Core:iterator:where:14", align 8
  call void @free_candy_value(ptr %6351)
  %6352 = load ptr, ptr @"Core:iterator:where:16", align 8
  call void @free_candy_value(ptr %6352)
  %6353 = load ptr, ptr @"Core:iterator:where:19:2:2", align 8
  call void @free_candy_value(ptr %6353)
  %6354 = load ptr, ptr @"Core:iterator:where:19:2:3", align 8
  call void @free_candy_value(ptr %6354)
  %6355 = load ptr, ptr @"Core:iterator:where:19:2:3:4", align 8
  call void @free_candy_value(ptr %6355)
  %6356 = load ptr, ptr @"Core:iterator:where:19:2:3:6:2", align 8
  call void @free_candy_value(ptr %6356)
  %6357 = load ptr, ptr @"Core:iterator:where:19:2:3:6:4", align 8
  call void @free_candy_value(ptr %6357)
  %6358 = load ptr, ptr @"Core:iterator:where:19:2:3:6:5", align 8
  call void @free_candy_value(ptr %6358)
  %6359 = load ptr, ptr @"Core:iterator:where:19:2:3:6:5:item", align 8
  call void @free_candy_value(ptr %6359)
  %6360 = load ptr, ptr @"Core:iterator:where:19:2:3:6:5:rest", align 8
  call void @free_candy_value(ptr %6360)
  %6361 = load ptr, ptr @"Core:iterator:where:19:2:3:7", align 8
  call void @free_candy_value(ptr %6361)
  %6362 = load ptr, ptr @"Core:iterator:where:19:2:3:item", align 8
  call void @free_candy_value(ptr %6362)
  %6363 = load ptr, ptr @"Core:iterator:where:19:2:3:rest", align 8
  call void @free_candy_value(ptr %6363)
  %6364 = load ptr, ptr @"Core:iterator:where:19:3", align 8
  call void @free_candy_value(ptr %6364)
  %6365 = load ptr, ptr @"Core:iterator:where:20", align 8
  call void @free_candy_value(ptr %6365)
  %6366 = load ptr, ptr @"Core:iterator:where:3", align 8
  call void @free_candy_value(ptr %6366)
  %6367 = load ptr, ptr @"Core:iterator:windowed:16", align 8
  call void @free_candy_value(ptr %6367)
  %6368 = load ptr, ptr @"Core:iterator:windowed:26", align 8
  call void @free_candy_value(ptr %6368)
  %6369 = load ptr, ptr @"Core:iterator:windowed:28", align 8
  call void @free_candy_value(ptr %6369)
  %6370 = load ptr, ptr @"Core:iterator:windowed:3", align 8
  call void @free_candy_value(ptr %6370)
  %6371 = load ptr, ptr @"Core:iterator:windowed:40", align 8
  call void @free_candy_value(ptr %6371)
  %6372 = load ptr, ptr @"Core:iterator:windowed:50", align 8
  call void @free_candy_value(ptr %6372)
  %6373 = load ptr, ptr @"Core:iterator:windowed:52", align 8
  call void @free_candy_value(ptr %6373)
  %6374 = load ptr, ptr @"Core:iterator:windowed:62", align 8
  call void @free_candy_value(ptr %6374)
  %6375 = load ptr, ptr @"Core:iterator:windowed:64", align 8
  call void @free_candy_value(ptr %6375)
  %6376 = load ptr, ptr @"Core:iterator:windowed:67:16", align 8
  call void @free_candy_value(ptr %6376)
  %6377 = load ptr, ptr @"Core:iterator:windowed:67:22", align 8
  call void @free_candy_value(ptr %6377)
  %6378 = load ptr, ptr @"Core:iterator:windowed:67:26:7", align 8
  call void @free_candy_value(ptr %6378)
  %6379 = load ptr, ptr @"Core:iterator:windowed:67:28", align 8
  call void @free_candy_value(ptr %6379)
  %6380 = load ptr, ptr @"Core:iterator:windowed:67:3", align 8
  call void @free_candy_value(ptr %6380)
  %6381 = load ptr, ptr @"Core:iterator:windowed:67:5", align 8
  call void @free_candy_value(ptr %6381)
  %6382 = load ptr, ptr @"Core:iterator:windowed:68", align 8
  call void @free_candy_value(ptr %6382)
  %6383 = load ptr, ptr @"Core:iterator:withIndex:11:1", align 8
  call void @free_candy_value(ptr %6383)
  %6384 = load ptr, ptr @"Core:iterator:withIndex:11:4", align 8
  call void @free_candy_value(ptr %6384)
  %6385 = load ptr, ptr @"Core:iterator:withIndex:11:5", align 8
  call void @free_candy_value(ptr %6385)
  %6386 = load ptr, ptr @"Core:iterator:withIndex:11:5:22", align 8
  call void @free_candy_value(ptr %6386)
  %6387 = load ptr, ptr @"Core:iterator:withIndex:11:5:item", align 8
  call void @free_candy_value(ptr %6387)
  %6388 = load ptr, ptr @"Core:iterator:withIndex:11:5:rest", align 8
  call void @free_candy_value(ptr %6388)
  %6389 = load ptr, ptr @"Core:iterator:withIndex:11:index", align 8
  call void @free_candy_value(ptr %6389)
  %6390 = load ptr, ptr @"Core:iterator:withIndex:11:iterator", align 8
  call void @free_candy_value(ptr %6390)
  %6391 = load ptr, ptr @"Core:iterator:withIndex:12", align 8
  call void @free_candy_value(ptr %6391)
  %6392 = load ptr, ptr @"Core:iterator:withIndex:3", align 8
  call void @free_candy_value(ptr %6392)
  %6393 = load ptr, ptr @"Core:iterator:wrapSafe:11", align 8
  call void @free_candy_value(ptr %6393)
  %6394 = load ptr, ptr @"Core:iterator:wrapSafe:12:9", align 8
  call void @free_candy_value(ptr %6394)
  %6395 = load ptr, ptr @"Core:iterator:wrapSafe:16:1", align 8
  call void @free_candy_value(ptr %6395)
  %6396 = load ptr, ptr @"Core:iterator:wrapSafe:16:13", align 8
  call void @free_candy_value(ptr %6396)
  %6397 = load ptr, ptr @"Core:iterator:wrapSafe:16:1:10", align 8
  call void @free_candy_value(ptr %6397)
  %6398 = load ptr, ptr @"Core:iterator:wrapSafe:16:1:function", align 8
  call void @free_candy_value(ptr %6398)
  %6399 = load ptr, ptr @"Core:iterator:wrapSafe:16:22", align 8
  call void @free_candy_value(ptr %6399)
  %6400 = load ptr, ptr @"Core:iterator:wrapSafe:16:24", align 8
  call void @free_candy_value(ptr %6400)
  %6401 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10", align 8
  call void @free_candy_value(ptr %6401)
  %6402 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:19", align 8
  call void @free_candy_value(ptr %6402)
  %6403 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:7", align 8
  call void @free_candy_value(ptr %6403)
  %6404 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:item", align 8
  call void @free_candy_value(ptr %6404)
  %6405 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:10:rest", align 8
  call void @free_candy_value(ptr %6405)
  %6406 = load ptr, ptr @"Core:iterator:wrapSafe:16:26:9", align 8
  call void @free_candy_value(ptr %6406)
  %6407 = load ptr, ptr @"Core:iterator:wrapSafe:17", align 8
  call void @free_candy_value(ptr %6407)
  %6408 = load ptr, ptr @"Core:iterator:wrapSafe:9", align 8
  call void @free_candy_value(ptr %6408)
  %6409 = load ptr, ptr @"Core:list:append:11", align 8
  call void @free_candy_value(ptr %6409)
  %6410 = load ptr, ptr @"Core:list:append:4", align 8
  call void @free_candy_value(ptr %6410)
  %6411 = load ptr, ptr @"Core:list:append:9", align 8
  call void @free_candy_value(ptr %6411)
  %6412 = load ptr, ptr @"Core:result:is:1", align 8
  call void @free_candy_value(ptr %6412)
  %6413 = load ptr, ptr @"Core:result:is:1:_", align 8
  call void @free_candy_value(ptr %6413)
  %6414 = load ptr, ptr @"Core:result:mapOrElse:14", align 8
  call void @free_candy_value(ptr %6414)
  %6415 = load ptr, ptr @"Core:result:mapOrElse:16", align 8
  call void @free_candy_value(ptr %6415)
  %6416 = load ptr, ptr @"Core:result:mapOrElse:2", align 8
  call void @free_candy_value(ptr %6416)
  %6417 = load ptr, ptr @"Core:result:mapOrElse:26", align 8
  call void @free_candy_value(ptr %6417)
  %6418 = load ptr, ptr @"Core:result:mapOrElse:28", align 8
  call void @free_candy_value(ptr %6418)
  %6419 = load ptr, ptr @"Core:result:mapOrElse:30", align 8
  call void @free_candy_value(ptr %6419)
  %6420 = load ptr, ptr @"Core:result:mapOrElse:30:2", align 8
  call void @free_candy_value(ptr %6420)
  %6421 = load ptr, ptr @"Core:result:mapOrElse:30:5", align 8
  call void @free_candy_value(ptr %6421)
  %6422 = load ptr, ptr @"Core:result:mapOrElse:30:value", align 8
  call void @free_candy_value(ptr %6422)
  %6423 = load ptr, ptr @"Core:result:mapOrElse:30:value#1", align 8
  call void @free_candy_value(ptr %6423)
  %6424 = load ptr, ptr @"Core:result:mapOrElse:4", align 8
  call void @free_candy_value(ptr %6424)
  %6425 = load ptr, ptr @"Core:result:unwrapOr:2", align 8
  call void @free_candy_value(ptr %6425)
  %6426 = load ptr, ptr @"Core:result:unwrapOr:4", align 8
  call void @free_candy_value(ptr %6426)
  %6427 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  call void @free_candy_value(ptr %6427)
  %6428 = load ptr, ptr @"Core:result:unwrapOrElse:14", align 8
  call void @free_candy_value(ptr %6428)
  %6429 = load ptr, ptr @"Core:result:unwrapOrElse:16", align 8
  call void @free_candy_value(ptr %6429)
  %6430 = load ptr, ptr @"Core:result:unwrapOrElse:2", align 8
  call void @free_candy_value(ptr %6430)
  %6431 = load ptr, ptr @"Core:result:unwrapOrElse:20:9", align 8
  call void @free_candy_value(ptr %6431)
  %6432 = load ptr, ptr @"Core:result:unwrapOrElse:21", align 8
  call void @free_candy_value(ptr %6432)
  %6433 = load ptr, ptr @"Core:result:unwrapOrElse:4", align 8
  call void @free_candy_value(ptr %6433)
  %6434 = load ptr, ptr @fun_candy_builtin_list_insert, align 8
  call void @free_candy_value(ptr %6434)
  %6435 = load ptr, ptr @fun_candy_builtin_list_length, align 8
  call void @free_candy_value(ptr %6435)
  %6436 = load ptr, ptr @tag_Empty, align 8
  call void @free_candy_value(ptr %6436)
  %6437 = load ptr, ptr @tag_Error, align 8
  call void @free_candy_value(ptr %6437)
  %6438 = load ptr, ptr @tag_Index, align 8
  call void @free_candy_value(ptr %6438)
  %6439 = load ptr, ptr @tag_Item, align 8
  call void @free_candy_value(ptr %6439)
  %6440 = load ptr, ptr @tag_Iterator, align 8
  call void @free_candy_value(ptr %6440)
  %6441 = load ptr, ptr @tag_List, align 8
  call void @free_candy_value(ptr %6441)
  %6442 = load ptr, ptr @tag_More, align 8
  call void @free_candy_value(ptr %6442)
  %6443 = load ptr, ptr @tag_N, align 8
  call void @free_candy_value(ptr %6443)
  %6444 = load ptr, ptr @tag_Ok, align 8
  call void @free_candy_value(ptr %6444)
  %6445 = load ptr, ptr @tag_Rest, align 8
  call void @free_candy_value(ptr %6445)
  %6446 = load ptr, ptr @tag_State, align 8
  call void @free_candy_value(ptr %6446)
  %6447 = load ptr, ptr @tag_Value, align 8
  call void @free_candy_value(ptr %6447)
  %6448 = load ptr, ptr @text_, align 8
  call void @free_candy_value(ptr %6448)
  %6449 = load ptr, ptr @"text_Can't `reduceLeft` an empty iterator", align 8
  call void @free_candy_value(ptr %6449)
  %6450 = load ptr, ptr @"text_Expected Empty, got ", align 8
  call void @free_candy_value(ptr %6450)
  %6451 = load ptr, ptr @"text_Expected Error, got ", align 8
  call void @free_candy_value(ptr %6451)
  %6452 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  call void @free_candy_value(ptr %6452)
  %6453 = load ptr, ptr @"text_Expected More, got ", align 8
  call void @free_candy_value(ptr %6453)
  %6454 = load ptr, ptr @"text_Expected Ok, got ", align 8
  call void @free_candy_value(ptr %6454)
  %6455 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  call void @free_candy_value(ptr %6455)
  %6456 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  call void @free_candy_value(ptr %6456)
  %6457 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  call void @free_candy_value(ptr %6457)
  %6458 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  call void @free_candy_value(ptr %6458)
  %6459 = load ptr, ptr @"text_Struct doesn't contain key `N`: `", align 8
  call void @free_candy_value(ptr %6459)
  %6460 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  call void @free_candy_value(ptr %6460)
  %6461 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  call void @free_candy_value(ptr %6461)
  %6462 = load ptr, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  call void @free_candy_value(ptr %6462)
  %6463 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  call void @free_candy_value(ptr %6463)
  %6464 = load ptr, ptr @"text_The guard needs to panic.", align 8
  call void @free_candy_value(ptr %6464)
  %6465 = load ptr, ptr @"text_`", align 8
  call void @free_candy_value(ptr %6465)
  %6466 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %6466)
  %6467 = load ptr, ptr @"text_`all` needs an iterator.", align 8
  call void @free_candy_value(ptr %6467)
  %6468 = load ptr, ptr @"text_`any` needs an iterator.", align 8
  call void @free_candy_value(ptr %6468)
  %6469 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %6469)
  %6470 = load ptr, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  call void @free_candy_value(ptr %6470)
  %6471 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  call void @free_candy_value(ptr %6471)
  %6472 = load ptr, ptr @"text_`chunked` needs an iterator.", align 8
  call void @free_candy_value(ptr %6472)
  %6473 = load ptr, ptr @"text_`ensure` needs an iterator.", align 8
  call void @free_candy_value(ptr %6473)
  %6474 = load ptr, ptr @"text_`foldLeft` needs an iterator.", align 8
  call void @free_candy_value(ptr %6474)
  %6475 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %6475)
  %6476 = load ptr, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  call void @free_candy_value(ptr %6476)
  %6477 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %6477)
  %6478 = load ptr, ptr @"text_`function.is1 guard` was not satisfied", align 8
  call void @free_candy_value(ptr %6478)
  %6479 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  call void @free_candy_value(ptr %6479)
  %6480 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  call void @free_candy_value(ptr %6480)
  %6481 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  call void @free_candy_value(ptr %6481)
  %6482 = load ptr, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  call void @free_candy_value(ptr %6482)
  %6483 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  call void @free_candy_value(ptr %6483)
  %6484 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  call void @free_candy_value(ptr %6484)
  %6485 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %6485)
  %6486 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %6486)
  %6487 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %6487)
  %6488 = load ptr, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  call void @free_candy_value(ptr %6488)
  %6489 = load ptr, ptr @"text_`int.is length` was not satisfied", align 8
  call void @free_candy_value(ptr %6489)
  %6490 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  call void @free_candy_value(ptr %6490)
  %6491 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  call void @free_candy_value(ptr %6491)
  %6492 = load ptr, ptr @"text_`int.is step` was not satisfied", align 8
  call void @free_candy_value(ptr %6492)
  %6493 = load ptr, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  call void @free_candy_value(ptr %6493)
  %6494 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  call void @free_candy_value(ptr %6494)
  %6495 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  call void @free_candy_value(ptr %6495)
  %6496 = load ptr, ptr @"text_`int.isPositive step` was not satisfied", align 8
  call void @free_candy_value(ptr %6496)
  %6497 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  call void @free_candy_value(ptr %6497)
  %6498 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  call void @free_candy_value(ptr %6498)
  %6499 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @free_candy_value(ptr %6499)
  %6500 = load ptr, ptr @"text_`joinToText` needs an iterator.", align 8
  call void @free_candy_value(ptr %6500)
  %6501 = load ptr, ptr @"text_`length` needs an iterator.", align 8
  call void @free_candy_value(ptr %6501)
  %6502 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  call void @free_candy_value(ptr %6502)
  %6503 = load ptr, ptr @"text_`list.is l` was not satisfied", align 8
  call void @free_candy_value(ptr %6503)
  %6504 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @free_candy_value(ptr %6504)
  %6505 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @free_candy_value(ptr %6505)
  %6506 = load ptr, ptr @"text_`reduceLeft` needs an iterator.", align 8
  call void @free_candy_value(ptr %6506)
  %6507 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @free_candy_value(ptr %6507)
  %6508 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @free_candy_value(ptr %6508)
  %6509 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @free_candy_value(ptr %6509)
  %6510 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @free_candy_value(ptr %6510)
  %6511 = load ptr, ptr @"text_`text.is item` was not satisfied", align 8
  call void @free_candy_value(ptr %6511)
  %6512 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @free_candy_value(ptr %6512)
  %6513 = load ptr, ptr @"text_`where` needs an iterator.", align 8
  call void @free_candy_value(ptr %6513)
  %6514 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @free_candy_value(ptr %6514)
  %6515 = load ptr, ptr @"text_`withIndex` needs an iterator.", align 8
  call void @free_candy_value(ptr %6515)
  %6516 = load ptr, ptr @fun_Core_result_is, align 8
  call void @free_candy_value(ptr %6516)
  %6517 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  call void @free_candy_value(ptr %6517)
  %6518 = load ptr, ptr @fun_Core_result_is_1_equals_then.215, align 8
  call void @free_candy_value(ptr %6518)
  %6519 = load ptr, ptr @fun_Core_result_is_1_equals_then.217, align 8
  call void @free_candy_value(ptr %6519)
  %6520 = load ptr, ptr @81, align 8
  call void @free_candy_value(ptr %6520)
  %6521 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  call void @free_candy_value(ptr %6521)
  %6522 = load ptr, ptr @fun_Core_result_is_1_equals_else.219, align 8
  call void @free_candy_value(ptr %6522)
  %6523 = load ptr, ptr @82, align 8
  call void @free_candy_value(ptr %6523)
  %6524 = load ptr, ptr @fun_Core_result_is_1_equals_else.221, align 8
  call void @free_candy_value(ptr %6524)
  %6525 = load ptr, ptr @83, align 8
  call void @free_candy_value(ptr %6525)
  %6526 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  call void @free_candy_value(ptr %6526)
  %6527 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  call void @free_candy_value(ptr %6527)
  %6528 = load ptr, ptr @fun_Core_result_is_1_equals_then.223, align 8
  call void @free_candy_value(ptr %6528)
  %6529 = load ptr, ptr @fun_Core_result_is_1_equals_then.225, align 8
  call void @free_candy_value(ptr %6529)
  %6530 = load ptr, ptr @fun_Core_result_is_1_equals_then.227, align 8
  call void @free_candy_value(ptr %6530)
  %6531 = load ptr, ptr @84, align 8
  call void @free_candy_value(ptr %6531)
  %6532 = load ptr, ptr @fun_Core_result_is_1_equals_else.229, align 8
  call void @free_candy_value(ptr %6532)
  %6533 = load ptr, ptr @fun_Core_result_is_1_equals_else.231, align 8
  call void @free_candy_value(ptr %6533)
  %6534 = load ptr, ptr @85, align 8
  call void @free_candy_value(ptr %6534)
  %6535 = load ptr, ptr @fun_Core_result_is_1_equals_else.233, align 8
  call void @free_candy_value(ptr %6535)
  %6536 = load ptr, ptr @86, align 8
  call void @free_candy_value(ptr %6536)
  %6537 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %6537)
  %6538 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6538)
  %6539 = load ptr, ptr @fun_Core_result_mapOrElse, align 8
  call void @free_candy_value(ptr %6539)
  %6540 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  call void @free_candy_value(ptr %6540)
  %6541 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.235, align 8
  call void @free_candy_value(ptr %6541)
  %6542 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.237, align 8
  call void @free_candy_value(ptr %6542)
  %6543 = load ptr, ptr @87, align 8
  call void @free_candy_value(ptr %6543)
  %6544 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  call void @free_candy_value(ptr %6544)
  %6545 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.239, align 8
  call void @free_candy_value(ptr %6545)
  %6546 = load ptr, ptr @88, align 8
  call void @free_candy_value(ptr %6546)
  %6547 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.241, align 8
  call void @free_candy_value(ptr %6547)
  %6548 = load ptr, ptr @89, align 8
  call void @free_candy_value(ptr %6548)
  %6549 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  call void @free_candy_value(ptr %6549)
  %6550 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6550)
  %6551 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.243, align 8
  call void @free_candy_value(ptr %6551)
  %6552 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.245, align 8
  call void @free_candy_value(ptr %6552)
  %6553 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.247, align 8
  call void @free_candy_value(ptr %6553)
  %6554 = load ptr, ptr @90, align 8
  call void @free_candy_value(ptr %6554)
  %6555 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.249, align 8
  call void @free_candy_value(ptr %6555)
  %6556 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.251, align 8
  call void @free_candy_value(ptr %6556)
  %6557 = load ptr, ptr @91, align 8
  call void @free_candy_value(ptr %6557)
  %6558 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.253, align 8
  call void @free_candy_value(ptr %6558)
  %6559 = load ptr, ptr @92, align 8
  call void @free_candy_value(ptr %6559)
  %6560 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  call void @free_candy_value(ptr %6560)
  %6561 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %6561)
  %6562 = load ptr, ptr @"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19", align 8
  call void @free_candy_value(ptr %6562)
  %6563 = load ptr, ptr @fun_Core_result_unwrapOr, align 8
  call void @free_candy_value(ptr %6563)
  %6564 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  call void @free_candy_value(ptr %6564)
  %6565 = load ptr, ptr @fun_Core_result_unwrapOrElse_20, align 8
  call void @free_candy_value(ptr %6565)
  %6566 = load ptr, ptr @fun_Builtins__listGet, align 8
  call void @free_candy_value(ptr %6566)
  %6567 = load ptr, ptr @fun_Builtins__listInsert, align 8
  call void @free_candy_value(ptr %6567)
  %6568 = load ptr, ptr @fun_Core_list_append, align 8
  call void @free_candy_value(ptr %6568)
  %6569 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  call void @free_candy_value(ptr %6569)
  %6570 = load ptr, ptr @fun_Core_iterator_wrapSafe, align 8
  call void @free_candy_value(ptr %6570)
  %6571 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  call void @free_candy_value(ptr %6571)
  %6572 = load ptr, ptr @fun_Core_iterator_wrapSafe_16, align 8
  call void @free_candy_value(ptr %6572)
  %6573 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then, align 8
  call void @free_candy_value(ptr %6573)
  %6574 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.255, align 8
  call void @free_candy_value(ptr %6574)
  %6575 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.257, align 8
  call void @free_candy_value(ptr %6575)
  %6576 = load ptr, ptr @93, align 8
  call void @free_candy_value(ptr %6576)
  %6577 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else, align 8
  call void @free_candy_value(ptr %6577)
  %6578 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.259, align 8
  call void @free_candy_value(ptr %6578)
  %6579 = load ptr, ptr @94, align 8
  call void @free_candy_value(ptr %6579)
  %6580 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.261, align 8
  call void @free_candy_value(ptr %6580)
  %6581 = load ptr, ptr @95, align 8
  call void @free_candy_value(ptr %6581)
  %6582 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_matched, align 8
  call void @free_candy_value(ptr %6582)
  %6583 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6583)
  %6584 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26, align 8
  call void @free_candy_value(ptr %6584)
  %6585 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then, align 8
  call void @free_candy_value(ptr %6585)
  %6586 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.263, align 8
  call void @free_candy_value(ptr %6586)
  %6587 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else, align 8
  call void @free_candy_value(ptr %6587)
  %6588 = load ptr, ptr @96, align 8
  call void @free_candy_value(ptr %6588)
  %6589 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.265, align 8
  call void @free_candy_value(ptr %6589)
  %6590 = load ptr, ptr @97, align 8
  call void @free_candy_value(ptr %6590)
  %6591 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.267, align 8
  call void @free_candy_value(ptr %6591)
  %6592 = load ptr, ptr @98, align 8
  call void @free_candy_value(ptr %6592)
  %6593 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6593)
  %6594 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.269, align 8
  call void @free_candy_value(ptr %6594)
  %6595 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.271, align 8
  call void @free_candy_value(ptr %6595)
  %6596 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.273, align 8
  call void @free_candy_value(ptr %6596)
  %6597 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.275, align 8
  call void @free_candy_value(ptr %6597)
  %6598 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then, align 8
  call void @free_candy_value(ptr %6598)
  %6599 = load ptr, ptr @99, align 8
  call void @free_candy_value(ptr %6599)
  %6600 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else, align 8
  call void @free_candy_value(ptr %6600)
  %6601 = load ptr, ptr @100, align 8
  call void @free_candy_value(ptr %6601)
  %6602 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then, align 8
  call void @free_candy_value(ptr %6602)
  %6603 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.277, align 8
  call void @free_candy_value(ptr %6603)
  %6604 = load ptr, ptr @101, align 8
  call void @free_candy_value(ptr %6604)
  %6605 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.279, align 8
  call void @free_candy_value(ptr %6605)
  %6606 = load ptr, ptr @102, align 8
  call void @free_candy_value(ptr %6606)
  %6607 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.281, align 8
  call void @free_candy_value(ptr %6607)
  %6608 = load ptr, ptr @103, align 8
  call void @free_candy_value(ptr %6608)
  %6609 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else, align 8
  call void @free_candy_value(ptr %6609)
  %6610 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.283, align 8
  call void @free_candy_value(ptr %6610)
  %6611 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.285, align 8
  call void @free_candy_value(ptr %6611)
  %6612 = load ptr, ptr @104, align 8
  call void @free_candy_value(ptr %6612)
  %6613 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.287, align 8
  call void @free_candy_value(ptr %6613)
  %6614 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.289, align 8
  call void @free_candy_value(ptr %6614)
  %6615 = load ptr, ptr @105, align 8
  call void @free_candy_value(ptr %6615)
  %6616 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.291, align 8
  call void @free_candy_value(ptr %6616)
  %6617 = load ptr, ptr @106, align 8
  call void @free_candy_value(ptr %6617)
  %6618 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_matched, align 8
  call void @free_candy_value(ptr %6618)
  %6619 = load ptr, ptr @tag_More.292, align 8
  call void @free_candy_value(ptr %6619)
  %6620 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %6620)
  %6621 = load ptr, ptr @tag_Iterator.293, align 8
  call void @free_candy_value(ptr %6621)
  %6622 = load ptr, ptr @fun_Core_controlFlow_recursive_18.295, align 8
  call void @free_candy_value(ptr %6622)
  %6623 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.297, align 8
  call void @free_candy_value(ptr %6623)
  %6624 = load ptr, ptr @fun_Core_iterator_next, align 8
  call void @free_candy_value(ptr %6624)
  %6625 = load ptr, ptr @fun_Core_iterator_next_2, align 8
  call void @free_candy_value(ptr %6625)
  %6626 = load ptr, ptr @fun_Core_iterator_next_6_equals_then, align 8
  call void @free_candy_value(ptr %6626)
  %6627 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.299, align 8
  call void @free_candy_value(ptr %6627)
  %6628 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.301, align 8
  call void @free_candy_value(ptr %6628)
  %6629 = load ptr, ptr @107, align 8
  call void @free_candy_value(ptr %6629)
  %6630 = load ptr, ptr @fun_Core_iterator_next_6_equals_else, align 8
  call void @free_candy_value(ptr %6630)
  %6631 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.303, align 8
  call void @free_candy_value(ptr %6631)
  %6632 = load ptr, ptr @108, align 8
  call void @free_candy_value(ptr %6632)
  %6633 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.305, align 8
  call void @free_candy_value(ptr %6633)
  %6634 = load ptr, ptr @109, align 8
  call void @free_candy_value(ptr %6634)
  %6635 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  call void @free_candy_value(ptr %6635)
  %6636 = load ptr, ptr @fun_Core_iterator_generateWithState, align 8
  call void @free_candy_value(ptr %6636)
  %6637 = load ptr, ptr @fun_Core_iterator_generateWithState_14, align 8
  call void @free_candy_value(ptr %6637)
  %6638 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1, align 8
  call void @free_candy_value(ptr %6638)
  %6639 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then, align 8
  call void @free_candy_value(ptr %6639)
  %6640 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.307, align 8
  call void @free_candy_value(ptr %6640)
  %6641 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.309, align 8
  call void @free_candy_value(ptr %6641)
  %6642 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.311, align 8
  call void @free_candy_value(ptr %6642)
  %6643 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then, align 8
  call void @free_candy_value(ptr %6643)
  %6644 = load ptr, ptr @110, align 8
  call void @free_candy_value(ptr %6644)
  %6645 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else, align 8
  call void @free_candy_value(ptr %6645)
  %6646 = load ptr, ptr @111, align 8
  call void @free_candy_value(ptr %6646)
  %6647 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then, align 8
  call void @free_candy_value(ptr %6647)
  %6648 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then.313, align 8
  call void @free_candy_value(ptr %6648)
  %6649 = load ptr, ptr @112, align 8
  call void @free_candy_value(ptr %6649)
  %6650 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else.315, align 8
  call void @free_candy_value(ptr %6650)
  %6651 = load ptr, ptr @113, align 8
  call void @free_candy_value(ptr %6651)
  %6652 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then.317, align 8
  call void @free_candy_value(ptr %6652)
  %6653 = load ptr, ptr @114, align 8
  call void @free_candy_value(ptr %6653)
  %6654 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else, align 8
  call void @free_candy_value(ptr %6654)
  %6655 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else.319, align 8
  call void @free_candy_value(ptr %6655)
  %6656 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else, align 8
  call void @free_candy_value(ptr %6656)
  %6657 = load ptr, ptr @115, align 8
  call void @free_candy_value(ptr %6657)
  %6658 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.321, align 8
  call void @free_candy_value(ptr %6658)
  %6659 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.323, align 8
  call void @free_candy_value(ptr %6659)
  %6660 = load ptr, ptr @116, align 8
  call void @free_candy_value(ptr %6660)
  %6661 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.325, align 8
  call void @free_candy_value(ptr %6661)
  %6662 = load ptr, ptr @117, align 8
  call void @free_candy_value(ptr %6662)
  %6663 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_matched, align 8
  call void @free_candy_value(ptr %6663)
  %6664 = load ptr, ptr @tag_More.326, align 8
  call void @free_candy_value(ptr %6664)
  %6665 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6665)
  %6666 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.328, align 8
  call void @free_candy_value(ptr %6666)
  %6667 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.330, align 8
  call void @free_candy_value(ptr %6667)
  %6668 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.332, align 8
  call void @free_candy_value(ptr %6668)
  %6669 = load ptr, ptr @118, align 8
  call void @free_candy_value(ptr %6669)
  %6670 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.334, align 8
  call void @free_candy_value(ptr %6670)
  %6671 = load ptr, ptr @119, align 8
  call void @free_candy_value(ptr %6671)
  %6672 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.336, align 8
  call void @free_candy_value(ptr %6672)
  %6673 = load ptr, ptr @120, align 8
  call void @free_candy_value(ptr %6673)
  %6674 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %6674)
  %6675 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-2_matched, align 8
  call void @free_candy_value(ptr %6675)
  %6676 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_21, align 8
  call void @free_candy_value(ptr %6676)
  %6677 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_22, align 8
  call void @free_candy_value(ptr %6677)
  %6678 = load ptr, ptr @tag_Iterator.337, align 8
  call void @free_candy_value(ptr %6678)
  %6679 = load ptr, ptr @fun_Core_controlFlow_recursive_18.339, align 8
  call void @free_candy_value(ptr %6679)
  %6680 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.341, align 8
  call void @free_candy_value(ptr %6680)
  %6681 = load ptr, ptr @fun_Core_iterator_generate, align 8
  call void @free_candy_value(ptr %6681)
  %6682 = load ptr, ptr @fun_Core_iterator_generate_50, align 8
  call void @free_candy_value(ptr %6682)
  %6683 = load ptr, ptr @fun_Core_iterator_generate_50_6, align 8
  call void @free_candy_value(ptr %6683)
  %6684 = load ptr, ptr @tag_More.342, align 8
  call void @free_candy_value(ptr %6684)
  %6685 = load ptr, ptr @fun_Core_iterator_map, align 8
  call void @free_candy_value(ptr %6685)
  %6686 = load ptr, ptr @fun_Core_iterator_map_2, align 8
  call void @free_candy_value(ptr %6686)
  %6687 = load ptr, ptr @fun_Core_iterator_map_19, align 8
  call void @free_candy_value(ptr %6687)
  %6688 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then, align 8
  call void @free_candy_value(ptr %6688)
  %6689 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.344, align 8
  call void @free_candy_value(ptr %6689)
  %6690 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else, align 8
  call void @free_candy_value(ptr %6690)
  %6691 = load ptr, ptr @121, align 8
  call void @free_candy_value(ptr %6691)
  %6692 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.346, align 8
  call void @free_candy_value(ptr %6692)
  %6693 = load ptr, ptr @122, align 8
  call void @free_candy_value(ptr %6693)
  %6694 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.348, align 8
  call void @free_candy_value(ptr %6694)
  %6695 = load ptr, ptr @123, align 8
  call void @free_candy_value(ptr %6695)
  %6696 = load ptr, ptr @fun_Core_iterator_map_19_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6696)
  %6697 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.350, align 8
  call void @free_candy_value(ptr %6697)
  %6698 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.352, align 8
  call void @free_candy_value(ptr %6698)
  %6699 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.354, align 8
  call void @free_candy_value(ptr %6699)
  %6700 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.356, align 8
  call void @free_candy_value(ptr %6700)
  %6701 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then, align 8
  call void @free_candy_value(ptr %6701)
  %6702 = load ptr, ptr @124, align 8
  call void @free_candy_value(ptr %6702)
  %6703 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else, align 8
  call void @free_candy_value(ptr %6703)
  %6704 = load ptr, ptr @125, align 8
  call void @free_candy_value(ptr %6704)
  %6705 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then, align 8
  call void @free_candy_value(ptr %6705)
  %6706 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then.358, align 8
  call void @free_candy_value(ptr %6706)
  %6707 = load ptr, ptr @126, align 8
  call void @free_candy_value(ptr %6707)
  %6708 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else.360, align 8
  call void @free_candy_value(ptr %6708)
  %6709 = load ptr, ptr @127, align 8
  call void @free_candy_value(ptr %6709)
  %6710 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then.362, align 8
  call void @free_candy_value(ptr %6710)
  %6711 = load ptr, ptr @128, align 8
  call void @free_candy_value(ptr %6711)
  %6712 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else, align 8
  call void @free_candy_value(ptr %6712)
  %6713 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else.364, align 8
  call void @free_candy_value(ptr %6713)
  %6714 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.366, align 8
  call void @free_candy_value(ptr %6714)
  %6715 = load ptr, ptr @129, align 8
  call void @free_candy_value(ptr %6715)
  %6716 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.368, align 8
  call void @free_candy_value(ptr %6716)
  %6717 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.370, align 8
  call void @free_candy_value(ptr %6717)
  %6718 = load ptr, ptr @130, align 8
  call void @free_candy_value(ptr %6718)
  %6719 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.372, align 8
  call void @free_candy_value(ptr %6719)
  %6720 = load ptr, ptr @131, align 8
  call void @free_candy_value(ptr %6720)
  %6721 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_matched, align 8
  call void @free_candy_value(ptr %6721)
  %6722 = load ptr, ptr @tag_More.373, align 8
  call void @free_candy_value(ptr %6722)
  %6723 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %6723)
  %6724 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  call void @free_candy_value(ptr %6724)
  %6725 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  call void @free_candy_value(ptr %6725)
  %6726 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  call void @free_candy_value(ptr %6726)
  %6727 = load ptr, ptr @132, align 8
  call void @free_candy_value(ptr %6727)
  %6728 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  call void @free_candy_value(ptr %6728)
  %6729 = load ptr, ptr @133, align 8
  call void @free_candy_value(ptr %6729)
  %6730 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  call void @free_candy_value(ptr %6730)
  %6731 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.375, align 8
  call void @free_candy_value(ptr %6731)
  %6732 = load ptr, ptr @134, align 8
  call void @free_candy_value(ptr %6732)
  %6733 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.377, align 8
  call void @free_candy_value(ptr %6733)
  %6734 = load ptr, ptr @135, align 8
  call void @free_candy_value(ptr %6734)
  %6735 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.379, align 8
  call void @free_candy_value(ptr %6735)
  %6736 = load ptr, ptr @136, align 8
  call void @free_candy_value(ptr %6736)
  %6737 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  call void @free_candy_value(ptr %6737)
  %6738 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.381, align 8
  call void @free_candy_value(ptr %6738)
  %6739 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  call void @free_candy_value(ptr %6739)
  %6740 = load ptr, ptr @137, align 8
  call void @free_candy_value(ptr %6740)
  %6741 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.383, align 8
  call void @free_candy_value(ptr %6741)
  %6742 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  call void @free_candy_value(ptr %6742)
  %6743 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.385, align 8
  call void @free_candy_value(ptr %6743)
  %6744 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  call void @free_candy_value(ptr %6744)
  %6745 = load ptr, ptr @138, align 8
  call void @free_candy_value(ptr %6745)
  %6746 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.387, align 8
  call void @free_candy_value(ptr %6746)
  %6747 = load ptr, ptr @139, align 8
  call void @free_candy_value(ptr %6747)
  %6748 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.389, align 8
  call void @free_candy_value(ptr %6748)
  %6749 = load ptr, ptr @140, align 8
  call void @free_candy_value(ptr %6749)
  %6750 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6750)
  %6751 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.391, align 8
  call void @free_candy_value(ptr %6751)
  %6752 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.393, align 8
  call void @free_candy_value(ptr %6752)
  %6753 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.395, align 8
  call void @free_candy_value(ptr %6753)
  %6754 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.397, align 8
  call void @free_candy_value(ptr %6754)
  %6755 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  call void @free_candy_value(ptr %6755)
  %6756 = load ptr, ptr @141, align 8
  call void @free_candy_value(ptr %6756)
  %6757 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  call void @free_candy_value(ptr %6757)
  %6758 = load ptr, ptr @142, align 8
  call void @free_candy_value(ptr %6758)
  %6759 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  call void @free_candy_value(ptr %6759)
  %6760 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.399, align 8
  call void @free_candy_value(ptr %6760)
  %6761 = load ptr, ptr @143, align 8
  call void @free_candy_value(ptr %6761)
  %6762 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.401, align 8
  call void @free_candy_value(ptr %6762)
  %6763 = load ptr, ptr @144, align 8
  call void @free_candy_value(ptr %6763)
  %6764 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.403, align 8
  call void @free_candy_value(ptr %6764)
  %6765 = load ptr, ptr @145, align 8
  call void @free_candy_value(ptr %6765)
  %6766 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  call void @free_candy_value(ptr %6766)
  %6767 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.405, align 8
  call void @free_candy_value(ptr %6767)
  %6768 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.407, align 8
  call void @free_candy_value(ptr %6768)
  %6769 = load ptr, ptr @146, align 8
  call void @free_candy_value(ptr %6769)
  %6770 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.409, align 8
  call void @free_candy_value(ptr %6770)
  %6771 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.411, align 8
  call void @free_candy_value(ptr %6771)
  %6772 = load ptr, ptr @147, align 8
  call void @free_candy_value(ptr %6772)
  %6773 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.413, align 8
  call void @free_candy_value(ptr %6773)
  %6774 = load ptr, ptr @148, align 8
  call void @free_candy_value(ptr %6774)
  %6775 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  call void @free_candy_value(ptr %6775)
  %6776 = load ptr, ptr @tag_More.414, align 8
  call void @free_candy_value(ptr %6776)
  %6777 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %6777)
  %6778 = load ptr, ptr @fun_Core_iterator_ensure, align 8
  call void @free_candy_value(ptr %6778)
  %6779 = load ptr, ptr @fun_Core_iterator_ensure_14, align 8
  call void @free_candy_value(ptr %6779)
  %6780 = load ptr, ptr @fun_Core_iterator_ensure_19, align 8
  call void @free_candy_value(ptr %6780)
  %6781 = load ptr, ptr @fun_Core_iterator_foldLeft, align 8
  call void @free_candy_value(ptr %6781)
  %6782 = load ptr, ptr @fun_Core_iterator_foldLeft_2, align 8
  call void @free_candy_value(ptr %6782)
  %6783 = load ptr, ptr @fun_Core_iterator_foldLeft_23, align 8
  call void @free_candy_value(ptr %6783)
  %6784 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_then, align 8
  call void @free_candy_value(ptr %6784)
  %6785 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then, align 8
  call void @free_candy_value(ptr %6785)
  %6786 = load ptr, ptr @149, align 8
  call void @free_candy_value(ptr %6786)
  %6787 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else, align 8
  call void @free_candy_value(ptr %6787)
  %6788 = load ptr, ptr @150, align 8
  call void @free_candy_value(ptr %6788)
  %6789 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then, align 8
  call void @free_candy_value(ptr %6789)
  %6790 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then.416, align 8
  call void @free_candy_value(ptr %6790)
  %6791 = load ptr, ptr @151, align 8
  call void @free_candy_value(ptr %6791)
  %6792 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else.418, align 8
  call void @free_candy_value(ptr %6792)
  %6793 = load ptr, ptr @152, align 8
  call void @free_candy_value(ptr %6793)
  %6794 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then.420, align 8
  call void @free_candy_value(ptr %6794)
  %6795 = load ptr, ptr @153, align 8
  call void @free_candy_value(ptr %6795)
  %6796 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else, align 8
  call void @free_candy_value(ptr %6796)
  %6797 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.422, align 8
  call void @free_candy_value(ptr %6797)
  %6798 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_else, align 8
  call void @free_candy_value(ptr %6798)
  %6799 = load ptr, ptr @154, align 8
  call void @free_candy_value(ptr %6799)
  %6800 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.424, align 8
  call void @free_candy_value(ptr %6800)
  %6801 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then, align 8
  call void @free_candy_value(ptr %6801)
  %6802 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.426, align 8
  call void @free_candy_value(ptr %6802)
  %6803 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else, align 8
  call void @free_candy_value(ptr %6803)
  %6804 = load ptr, ptr @155, align 8
  call void @free_candy_value(ptr %6804)
  %6805 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.428, align 8
  call void @free_candy_value(ptr %6805)
  %6806 = load ptr, ptr @156, align 8
  call void @free_candy_value(ptr %6806)
  %6807 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.430, align 8
  call void @free_candy_value(ptr %6807)
  %6808 = load ptr, ptr @157, align 8
  call void @free_candy_value(ptr %6808)
  %6809 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_matched, align 8
  call void @free_candy_value(ptr %6809)
  %6810 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6810)
  %6811 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.432, align 8
  call void @free_candy_value(ptr %6811)
  %6812 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.434, align 8
  call void @free_candy_value(ptr %6812)
  %6813 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.436, align 8
  call void @free_candy_value(ptr %6813)
  %6814 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.438, align 8
  call void @free_candy_value(ptr %6814)
  %6815 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then, align 8
  call void @free_candy_value(ptr %6815)
  %6816 = load ptr, ptr @158, align 8
  call void @free_candy_value(ptr %6816)
  %6817 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else, align 8
  call void @free_candy_value(ptr %6817)
  %6818 = load ptr, ptr @159, align 8
  call void @free_candy_value(ptr %6818)
  %6819 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then, align 8
  call void @free_candy_value(ptr %6819)
  %6820 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then.440, align 8
  call void @free_candy_value(ptr %6820)
  %6821 = load ptr, ptr @160, align 8
  call void @free_candy_value(ptr %6821)
  %6822 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else.442, align 8
  call void @free_candy_value(ptr %6822)
  %6823 = load ptr, ptr @161, align 8
  call void @free_candy_value(ptr %6823)
  %6824 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then.444, align 8
  call void @free_candy_value(ptr %6824)
  %6825 = load ptr, ptr @162, align 8
  call void @free_candy_value(ptr %6825)
  %6826 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else, align 8
  call void @free_candy_value(ptr %6826)
  %6827 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else.446, align 8
  call void @free_candy_value(ptr %6827)
  %6828 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.448, align 8
  call void @free_candy_value(ptr %6828)
  %6829 = load ptr, ptr @163, align 8
  call void @free_candy_value(ptr %6829)
  %6830 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.450, align 8
  call void @free_candy_value(ptr %6830)
  %6831 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.452, align 8
  call void @free_candy_value(ptr %6831)
  %6832 = load ptr, ptr @164, align 8
  call void @free_candy_value(ptr %6832)
  %6833 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.454, align 8
  call void @free_candy_value(ptr %6833)
  %6834 = load ptr, ptr @165, align 8
  call void @free_candy_value(ptr %6834)
  %6835 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_matched, align 8
  call void @free_candy_value(ptr %6835)
  %6836 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %6836)
  %6837 = load ptr, ptr @fun_Core_controlFlow_recursive_18.456, align 8
  call void @free_candy_value(ptr %6837)
  %6838 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.458, align 8
  call void @free_candy_value(ptr %6838)
  %6839 = load ptr, ptr @tag_Error.459, align 8
  call void @free_candy_value(ptr %6839)
  %6840 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_matched, align 8
  call void @free_candy_value(ptr %6840)
  %6841 = load ptr, ptr @fun_Core_iterator_reduceLeft, align 8
  call void @free_candy_value(ptr %6841)
  %6842 = load ptr, ptr @fun_Core_iterator_reduceLeft_14, align 8
  call void @free_candy_value(ptr %6842)
  %6843 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then, align 8
  call void @free_candy_value(ptr %6843)
  %6844 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.461, align 8
  call void @free_candy_value(ptr %6844)
  %6845 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else, align 8
  call void @free_candy_value(ptr %6845)
  %6846 = load ptr, ptr @166, align 8
  call void @free_candy_value(ptr %6846)
  %6847 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.463, align 8
  call void @free_candy_value(ptr %6847)
  %6848 = load ptr, ptr @167, align 8
  call void @free_candy_value(ptr %6848)
  %6849 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.465, align 8
  call void @free_candy_value(ptr %6849)
  %6850 = load ptr, ptr @168, align 8
  call void @free_candy_value(ptr %6850)
  %6851 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6851)
  %6852 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.467, align 8
  call void @free_candy_value(ptr %6852)
  %6853 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.469, align 8
  call void @free_candy_value(ptr %6853)
  %6854 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.471, align 8
  call void @free_candy_value(ptr %6854)
  %6855 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.473, align 8
  call void @free_candy_value(ptr %6855)
  %6856 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then, align 8
  call void @free_candy_value(ptr %6856)
  %6857 = load ptr, ptr @169, align 8
  call void @free_candy_value(ptr %6857)
  %6858 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else, align 8
  call void @free_candy_value(ptr %6858)
  %6859 = load ptr, ptr @170, align 8
  call void @free_candy_value(ptr %6859)
  %6860 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then, align 8
  call void @free_candy_value(ptr %6860)
  %6861 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then.475, align 8
  call void @free_candy_value(ptr %6861)
  %6862 = load ptr, ptr @171, align 8
  call void @free_candy_value(ptr %6862)
  %6863 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else.477, align 8
  call void @free_candy_value(ptr %6863)
  %6864 = load ptr, ptr @172, align 8
  call void @free_candy_value(ptr %6864)
  %6865 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then.479, align 8
  call void @free_candy_value(ptr %6865)
  %6866 = load ptr, ptr @173, align 8
  call void @free_candy_value(ptr %6866)
  %6867 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else, align 8
  call void @free_candy_value(ptr %6867)
  %6868 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else.481, align 8
  call void @free_candy_value(ptr %6868)
  %6869 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.483, align 8
  call void @free_candy_value(ptr %6869)
  %6870 = load ptr, ptr @174, align 8
  call void @free_candy_value(ptr %6870)
  %6871 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.485, align 8
  call void @free_candy_value(ptr %6871)
  %6872 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.487, align 8
  call void @free_candy_value(ptr %6872)
  %6873 = load ptr, ptr @175, align 8
  call void @free_candy_value(ptr %6873)
  %6874 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.489, align 8
  call void @free_candy_value(ptr %6874)
  %6875 = load ptr, ptr @176, align 8
  call void @free_candy_value(ptr %6875)
  %6876 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_matched, align 8
  call void @free_candy_value(ptr %6876)
  %6877 = load ptr, ptr @tag_Ok.490, align 8
  call void @free_candy_value(ptr %6877)
  %6878 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %6878)
  %6879 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  call void @free_candy_value(ptr %6879)
  %6880 = load ptr, ptr @fun_Core_iterator_sum, align 8
  call void @free_candy_value(ptr %6880)
  %6881 = load ptr, ptr @fun_Core_iterator_sum_2, align 8
  call void @free_candy_value(ptr %6881)
  %6882 = load ptr, ptr @fun_Core_iterator_sum_5, align 8
  call void @free_candy_value(ptr %6882)
  %6883 = load ptr, ptr @fun_Core_iterator_length_5, align 8
  call void @free_candy_value(ptr %6883)
  %6884 = load ptr, ptr @fun_Core_iterator_all, align 8
  call void @free_candy_value(ptr %6884)
  %6885 = load ptr, ptr @fun_Core_iterator_all_14, align 8
  call void @free_candy_value(ptr %6885)
  %6886 = load ptr, ptr @fun_Core_iterator_all_18, align 8
  call void @free_candy_value(ptr %6886)
  %6887 = load ptr, ptr @fun_Core_bool_and_12, align 8
  call void @free_candy_value(ptr %6887)
  %6888 = load ptr, ptr @fun_Core_iterator_any, align 8
  call void @free_candy_value(ptr %6888)
  %6889 = load ptr, ptr @fun_Core_iterator_any_14, align 8
  call void @free_candy_value(ptr %6889)
  %6890 = load ptr, ptr @fun_Core_iterator_any_18, align 8
  call void @free_candy_value(ptr %6890)
  %6891 = load ptr, ptr @fun_Core_bool_or_12, align 8
  call void @free_candy_value(ptr %6891)
  %6892 = load ptr, ptr @fun_Core_iterator_joinToText, align 8
  call void @free_candy_value(ptr %6892)
  %6893 = load ptr, ptr @fun_Core_iterator_joinToText_2, align 8
  call void @free_candy_value(ptr %6893)
  %6894 = load ptr, ptr @fun_Core_iterator_joinToText_12, align 8
  call void @free_candy_value(ptr %6894)
  %6895 = load ptr, ptr @fun_Core_iterator_where, align 8
  call void @free_candy_value(ptr %6895)
  %6896 = load ptr, ptr @fun_Core_iterator_where_2, align 8
  call void @free_candy_value(ptr %6896)
  %6897 = load ptr, ptr @fun_Core_iterator_where_19, align 8
  call void @free_candy_value(ptr %6897)
  %6898 = load ptr, ptr @fun_Core_iterator_where_19_2, align 8
  call void @free_candy_value(ptr %6898)
  %6899 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then, align 8
  call void @free_candy_value(ptr %6899)
  %6900 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.492, align 8
  call void @free_candy_value(ptr %6900)
  %6901 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else, align 8
  call void @free_candy_value(ptr %6901)
  %6902 = load ptr, ptr @177, align 8
  call void @free_candy_value(ptr %6902)
  %6903 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.494, align 8
  call void @free_candy_value(ptr %6903)
  %6904 = load ptr, ptr @178, align 8
  call void @free_candy_value(ptr %6904)
  %6905 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.496, align 8
  call void @free_candy_value(ptr %6905)
  %6906 = load ptr, ptr @179, align 8
  call void @free_candy_value(ptr %6906)
  %6907 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6907)
  %6908 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.498, align 8
  call void @free_candy_value(ptr %6908)
  %6909 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.500, align 8
  call void @free_candy_value(ptr %6909)
  %6910 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.502, align 8
  call void @free_candy_value(ptr %6910)
  %6911 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.504, align 8
  call void @free_candy_value(ptr %6911)
  %6912 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then, align 8
  call void @free_candy_value(ptr %6912)
  %6913 = load ptr, ptr @180, align 8
  call void @free_candy_value(ptr %6913)
  %6914 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else, align 8
  call void @free_candy_value(ptr %6914)
  %6915 = load ptr, ptr @181, align 8
  call void @free_candy_value(ptr %6915)
  %6916 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then, align 8
  call void @free_candy_value(ptr %6916)
  %6917 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then.506, align 8
  call void @free_candy_value(ptr %6917)
  %6918 = load ptr, ptr @182, align 8
  call void @free_candy_value(ptr %6918)
  %6919 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else.508, align 8
  call void @free_candy_value(ptr %6919)
  %6920 = load ptr, ptr @183, align 8
  call void @free_candy_value(ptr %6920)
  %6921 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then.510, align 8
  call void @free_candy_value(ptr %6921)
  %6922 = load ptr, ptr @184, align 8
  call void @free_candy_value(ptr %6922)
  %6923 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else, align 8
  call void @free_candy_value(ptr %6923)
  %6924 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else.512, align 8
  call void @free_candy_value(ptr %6924)
  %6925 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.514, align 8
  call void @free_candy_value(ptr %6925)
  %6926 = load ptr, ptr @185, align 8
  call void @free_candy_value(ptr %6926)
  %6927 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.516, align 8
  call void @free_candy_value(ptr %6927)
  %6928 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.518, align 8
  call void @free_candy_value(ptr %6928)
  %6929 = load ptr, ptr @186, align 8
  call void @free_candy_value(ptr %6929)
  %6930 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.520, align 8
  call void @free_candy_value(ptr %6930)
  %6931 = load ptr, ptr @187, align 8
  call void @free_candy_value(ptr %6931)
  %6932 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_matched, align 8
  call void @free_candy_value(ptr %6932)
  %6933 = load ptr, ptr @fun_Core_iterator_where_19_2_3_5, align 8
  call void @free_candy_value(ptr %6933)
  %6934 = load ptr, ptr @tag_More.521, align 8
  call void @free_candy_value(ptr %6934)
  %6935 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6, align 8
  call void @free_candy_value(ptr %6935)
  %6936 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then, align 8
  call void @free_candy_value(ptr %6936)
  %6937 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.523, align 8
  call void @free_candy_value(ptr %6937)
  %6938 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else, align 8
  call void @free_candy_value(ptr %6938)
  %6939 = load ptr, ptr @188, align 8
  call void @free_candy_value(ptr %6939)
  %6940 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.525, align 8
  call void @free_candy_value(ptr %6940)
  %6941 = load ptr, ptr @189, align 8
  call void @free_candy_value(ptr %6941)
  %6942 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.527, align 8
  call void @free_candy_value(ptr %6942)
  %6943 = load ptr, ptr @190, align 8
  call void @free_candy_value(ptr %6943)
  %6944 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6944)
  %6945 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.529, align 8
  call void @free_candy_value(ptr %6945)
  %6946 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.531, align 8
  call void @free_candy_value(ptr %6946)
  %6947 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.533, align 8
  call void @free_candy_value(ptr %6947)
  %6948 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.535, align 8
  call void @free_candy_value(ptr %6948)
  %6949 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then, align 8
  call void @free_candy_value(ptr %6949)
  %6950 = load ptr, ptr @191, align 8
  call void @free_candy_value(ptr %6950)
  %6951 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else, align 8
  call void @free_candy_value(ptr %6951)
  %6952 = load ptr, ptr @192, align 8
  call void @free_candy_value(ptr %6952)
  %6953 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then, align 8
  call void @free_candy_value(ptr %6953)
  %6954 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then.537, align 8
  call void @free_candy_value(ptr %6954)
  %6955 = load ptr, ptr @193, align 8
  call void @free_candy_value(ptr %6955)
  %6956 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else.539, align 8
  call void @free_candy_value(ptr %6956)
  %6957 = load ptr, ptr @194, align 8
  call void @free_candy_value(ptr %6957)
  %6958 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then.541, align 8
  call void @free_candy_value(ptr %6958)
  %6959 = load ptr, ptr @195, align 8
  call void @free_candy_value(ptr %6959)
  %6960 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else, align 8
  call void @free_candy_value(ptr %6960)
  %6961 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else.543, align 8
  call void @free_candy_value(ptr %6961)
  %6962 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.545, align 8
  call void @free_candy_value(ptr %6962)
  %6963 = load ptr, ptr @196, align 8
  call void @free_candy_value(ptr %6963)
  %6964 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.547, align 8
  call void @free_candy_value(ptr %6964)
  %6965 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.549, align 8
  call void @free_candy_value(ptr %6965)
  %6966 = load ptr, ptr @197, align 8
  call void @free_candy_value(ptr %6966)
  %6967 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.551, align 8
  call void @free_candy_value(ptr %6967)
  %6968 = load ptr, ptr @198, align 8
  call void @free_candy_value(ptr %6968)
  %6969 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_matched, align 8
  call void @free_candy_value(ptr %6969)
  %6970 = load ptr, ptr @tag_More.552, align 8
  call void @free_candy_value(ptr %6970)
  %6971 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %6971)
  %6972 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %6972)
  %6973 = load ptr, ptr @fun_Core_controlFlow_recursive_18.554, align 8
  call void @free_candy_value(ptr %6973)
  %6974 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.556, align 8
  call void @free_candy_value(ptr %6974)
  %6975 = load ptr, ptr @fun_Core_iterator_takeWhile, align 8
  call void @free_candy_value(ptr %6975)
  %6976 = load ptr, ptr @fun_Core_iterator_takeWhile_2, align 8
  call void @free_candy_value(ptr %6976)
  %6977 = load ptr, ptr @fun_Core_iterator_takeWhile_7, align 8
  call void @free_candy_value(ptr %6977)
  %6978 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  call void @free_candy_value(ptr %6978)
  %6979 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.558, align 8
  call void @free_candy_value(ptr %6979)
  %6980 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  call void @free_candy_value(ptr %6980)
  %6981 = load ptr, ptr @199, align 8
  call void @free_candy_value(ptr %6981)
  %6982 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.560, align 8
  call void @free_candy_value(ptr %6982)
  %6983 = load ptr, ptr @200, align 8
  call void @free_candy_value(ptr %6983)
  %6984 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.562, align 8
  call void @free_candy_value(ptr %6984)
  %6985 = load ptr, ptr @201, align 8
  call void @free_candy_value(ptr %6985)
  %6986 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %6986)
  %6987 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.564, align 8
  call void @free_candy_value(ptr %6987)
  %6988 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.566, align 8
  call void @free_candy_value(ptr %6988)
  %6989 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.568, align 8
  call void @free_candy_value(ptr %6989)
  %6990 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.570, align 8
  call void @free_candy_value(ptr %6990)
  %6991 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  call void @free_candy_value(ptr %6991)
  %6992 = load ptr, ptr @202, align 8
  call void @free_candy_value(ptr %6992)
  %6993 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  call void @free_candy_value(ptr %6993)
  %6994 = load ptr, ptr @203, align 8
  call void @free_candy_value(ptr %6994)
  %6995 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  call void @free_candy_value(ptr %6995)
  %6996 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.572, align 8
  call void @free_candy_value(ptr %6996)
  %6997 = load ptr, ptr @204, align 8
  call void @free_candy_value(ptr %6997)
  %6998 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.574, align 8
  call void @free_candy_value(ptr %6998)
  %6999 = load ptr, ptr @205, align 8
  call void @free_candy_value(ptr %6999)
  %7000 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.576, align 8
  call void @free_candy_value(ptr %7000)
  %7001 = load ptr, ptr @206, align 8
  call void @free_candy_value(ptr %7001)
  %7002 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  call void @free_candy_value(ptr %7002)
  %7003 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.578, align 8
  call void @free_candy_value(ptr %7003)
  %7004 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.580, align 8
  call void @free_candy_value(ptr %7004)
  %7005 = load ptr, ptr @207, align 8
  call void @free_candy_value(ptr %7005)
  %7006 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.582, align 8
  call void @free_candy_value(ptr %7006)
  %7007 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.584, align 8
  call void @free_candy_value(ptr %7007)
  %7008 = load ptr, ptr @208, align 8
  call void @free_candy_value(ptr %7008)
  %7009 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.586, align 8
  call void @free_candy_value(ptr %7009)
  %7010 = load ptr, ptr @209, align 8
  call void @free_candy_value(ptr %7010)
  %7011 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  call void @free_candy_value(ptr %7011)
  %7012 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  call void @free_candy_value(ptr %7012)
  %7013 = load ptr, ptr @tag_More.587, align 8
  call void @free_candy_value(ptr %7013)
  %7014 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %7014)
  %7015 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  call void @free_candy_value(ptr %7015)
  %7016 = load ptr, ptr @fun_Core_iterator_take_34, align 8
  call void @free_candy_value(ptr %7016)
  %7017 = load ptr, ptr @fun_Core_iterator_take, align 8
  call void @free_candy_value(ptr %7017)
  %7018 = load ptr, ptr @fun_Core_iterator_take_26, align 8
  call void @free_candy_value(ptr %7018)
  %7019 = load ptr, ptr @fun_Core_iterator_take_31, align 8
  call void @free_candy_value(ptr %7019)
  %7020 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_then, align 8
  call void @free_candy_value(ptr %7020)
  %7021 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then, align 8
  call void @free_candy_value(ptr %7021)
  %7022 = load ptr, ptr @210, align 8
  call void @free_candy_value(ptr %7022)
  %7023 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else, align 8
  call void @free_candy_value(ptr %7023)
  %7024 = load ptr, ptr @211, align 8
  call void @free_candy_value(ptr %7024)
  %7025 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then, align 8
  call void @free_candy_value(ptr %7025)
  %7026 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then.589, align 8
  call void @free_candy_value(ptr %7026)
  %7027 = load ptr, ptr @212, align 8
  call void @free_candy_value(ptr %7027)
  %7028 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else.591, align 8
  call void @free_candy_value(ptr %7028)
  %7029 = load ptr, ptr @213, align 8
  call void @free_candy_value(ptr %7029)
  %7030 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then.593, align 8
  call void @free_candy_value(ptr %7030)
  %7031 = load ptr, ptr @214, align 8
  call void @free_candy_value(ptr %7031)
  %7032 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else, align 8
  call void @free_candy_value(ptr %7032)
  %7033 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.595, align 8
  call void @free_candy_value(ptr %7033)
  %7034 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_else, align 8
  call void @free_candy_value(ptr %7034)
  %7035 = load ptr, ptr @215, align 8
  call void @free_candy_value(ptr %7035)
  %7036 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.597, align 8
  call void @free_candy_value(ptr %7036)
  %7037 = load ptr, ptr @fun_Core_iterator_skip_30_6, align 8
  call void @free_candy_value(ptr %7037)
  %7038 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_then, align 8
  call void @free_candy_value(ptr %7038)
  %7039 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then, align 8
  call void @free_candy_value(ptr %7039)
  %7040 = load ptr, ptr @216, align 8
  call void @free_candy_value(ptr %7040)
  %7041 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else, align 8
  call void @free_candy_value(ptr %7041)
  %7042 = load ptr, ptr @217, align 8
  call void @free_candy_value(ptr %7042)
  %7043 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then, align 8
  call void @free_candy_value(ptr %7043)
  %7044 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then.599, align 8
  call void @free_candy_value(ptr %7044)
  %7045 = load ptr, ptr @218, align 8
  call void @free_candy_value(ptr %7045)
  %7046 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else.601, align 8
  call void @free_candy_value(ptr %7046)
  %7047 = load ptr, ptr @219, align 8
  call void @free_candy_value(ptr %7047)
  %7048 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then.603, align 8
  call void @free_candy_value(ptr %7048)
  %7049 = load ptr, ptr @220, align 8
  call void @free_candy_value(ptr %7049)
  %7050 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else, align 8
  call void @free_candy_value(ptr %7050)
  %7051 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.605, align 8
  call void @free_candy_value(ptr %7051)
  %7052 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_else, align 8
  call void @free_candy_value(ptr %7052)
  %7053 = load ptr, ptr @221, align 8
  call void @free_candy_value(ptr %7053)
  %7054 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.607, align 8
  call void @free_candy_value(ptr %7054)
  %7055 = load ptr, ptr @fun_Core_iterator_skip_30_6_7, align 8
  call void @free_candy_value(ptr %7055)
  %7056 = load ptr, ptr @fun_Core_iterator_skip_30_6_8, align 8
  call void @free_candy_value(ptr %7056)
  %7057 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then, align 8
  call void @free_candy_value(ptr %7057)
  %7058 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.609, align 8
  call void @free_candy_value(ptr %7058)
  %7059 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else, align 8
  call void @free_candy_value(ptr %7059)
  %7060 = load ptr, ptr @222, align 8
  call void @free_candy_value(ptr %7060)
  %7061 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.611, align 8
  call void @free_candy_value(ptr %7061)
  %7062 = load ptr, ptr @223, align 8
  call void @free_candy_value(ptr %7062)
  %7063 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.613, align 8
  call void @free_candy_value(ptr %7063)
  %7064 = load ptr, ptr @224, align 8
  call void @free_candy_value(ptr %7064)
  %7065 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %7065)
  %7066 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.615, align 8
  call void @free_candy_value(ptr %7066)
  %7067 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.617, align 8
  call void @free_candy_value(ptr %7067)
  %7068 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.619, align 8
  call void @free_candy_value(ptr %7068)
  %7069 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.621, align 8
  call void @free_candy_value(ptr %7069)
  %7070 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_then, align 8
  call void @free_candy_value(ptr %7070)
  %7071 = load ptr, ptr @225, align 8
  call void @free_candy_value(ptr %7071)
  %7072 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_else, align 8
  call void @free_candy_value(ptr %7072)
  %7073 = load ptr, ptr @226, align 8
  call void @free_candy_value(ptr %7073)
  %7074 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_then, align 8
  call void @free_candy_value(ptr %7074)
  %7075 = load ptr, ptr @227, align 8
  call void @free_candy_value(ptr %7075)
  %7076 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_else, align 8
  call void @free_candy_value(ptr %7076)
  %7077 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.623, align 8
  call void @free_candy_value(ptr %7077)
  %7078 = load ptr, ptr @228, align 8
  call void @free_candy_value(ptr %7078)
  %7079 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.625, align 8
  call void @free_candy_value(ptr %7079)
  %7080 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.627, align 8
  call void @free_candy_value(ptr %7080)
  %7081 = load ptr, ptr @229, align 8
  call void @free_candy_value(ptr %7081)
  %7082 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.629, align 8
  call void @free_candy_value(ptr %7082)
  %7083 = load ptr, ptr @230, align 8
  call void @free_candy_value(ptr %7083)
  %7084 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_matched, align 8
  call void @free_candy_value(ptr %7084)
  %7085 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch, align 8
  call void @free_candy_value(ptr %7085)
  %7086 = load ptr, ptr @fun_Core_controlFlow_recursive_18.631, align 8
  call void @free_candy_value(ptr %7086)
  %7087 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.633, align 8
  call void @free_candy_value(ptr %7087)
  %7088 = load ptr, ptr @fun_Core_iterator_skip, align 8
  call void @free_candy_value(ptr %7088)
  %7089 = load ptr, ptr @fun_Core_iterator_skip_2, align 8
  call void @free_candy_value(ptr %7089)
  %7090 = load ptr, ptr @fun_Core_iterator_skip_30, align 8
  call void @free_candy_value(ptr %7090)
  %7091 = load ptr, ptr @tag_Iterator.634, align 8
  call void @free_candy_value(ptr %7091)
  %7092 = load ptr, ptr @fun_Core_iterator_fromList, align 8
  call void @free_candy_value(ptr %7092)
  %7093 = load ptr, ptr @fun_Core_iterator_fromList_23, align 8
  call void @free_candy_value(ptr %7093)
  %7094 = load ptr, ptr @231, align 8
  call void @free_candy_value(ptr %7094)
  %7095 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  call void @free_candy_value(ptr %7095)
  %7096 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  call void @free_candy_value(ptr %7096)
  %7097 = load ptr, ptr @fun_Core_iterator_windowed, align 8
  call void @free_candy_value(ptr %7097)
  %7098 = load ptr, ptr @fun_Core_iterator_windowed_2, align 8
  call void @free_candy_value(ptr %7098)
  %7099 = load ptr, ptr @fun_Core_iterator_windowed_67, align 8
  call void @free_candy_value(ptr %7099)
  %7100 = load ptr, ptr @fun_Core_iterator_windowed_67_20, align 8
  call void @free_candy_value(ptr %7100)
  %7101 = load ptr, ptr @fun_Core_iterator_windowed_67_21, align 8
  call void @free_candy_value(ptr %7101)
  %7102 = load ptr, ptr @fun_Core_iterator_windowed_67_26, align 8
  call void @free_candy_value(ptr %7102)
  %7103 = load ptr, ptr @tag_More.635, align 8
  call void @free_candy_value(ptr %7103)
  %7104 = load ptr, ptr @fun_Core_iterator_chunked, align 8
  call void @free_candy_value(ptr %7104)
  %7105 = load ptr, ptr @fun_Core_iterator_chunked_26, align 8
  call void @free_candy_value(ptr %7105)
  %7106 = load ptr, ptr @"fun_Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText", align 8
  call void @free_candy_value(ptr %7106)
  %7107 = load ptr, ptr @232, align 8
  call void @free_candy_value(ptr %7107)
  %7108 = load ptr, ptr @num_6, align 8
  call void @free_candy_value(ptr %7108)
  %7109 = load ptr, ptr @num_7, align 8
  call void @free_candy_value(ptr %7109)
  %7110 = load ptr, ptr @num_8, align 8
  call void @free_candy_value(ptr %7110)
  %7111 = load ptr, ptr @num_9, align 8
  call void @free_candy_value(ptr %7111)
  %7112 = load ptr, ptr @233, align 8
  call void @free_candy_value(ptr %7112)
  %7113 = load ptr, ptr @"Core:iterator:123", align 8
  call void @free_candy_value(ptr %7113)
  %7114 = load ptr, ptr @"Core:iterator:127", align 8
  call void @free_candy_value(ptr %7114)
  %7115 = load ptr, ptr @"Core:iterator:128", align 8
  call void @free_candy_value(ptr %7115)
  %7116 = load ptr, ptr @fun_Core_iterator_128_equals_then, align 8
  call void @free_candy_value(ptr %7116)
  %7117 = load ptr, ptr @fun_Core_iterator_128_equals_then.637, align 8
  call void @free_candy_value(ptr %7117)
  %7118 = load ptr, ptr @fun_Core_iterator_128_equals_then.639, align 8
  call void @free_candy_value(ptr %7118)
  %7119 = load ptr, ptr @fun_Core_iterator_128_equals_then.641, align 8
  call void @free_candy_value(ptr %7119)
  %7120 = load ptr, ptr @fun_Core_iterator_128_hasKey_then, align 8
  call void @free_candy_value(ptr %7120)
  %7121 = load ptr, ptr @234, align 8
  call void @free_candy_value(ptr %7121)
  %7122 = load ptr, ptr @fun_Core_iterator_128_hasKey_else, align 8
  call void @free_candy_value(ptr %7122)
  %7123 = load ptr, ptr @235, align 8
  call void @free_candy_value(ptr %7123)
  %7124 = load ptr, ptr @fun_Core_iterator_128_isMatch_then, align 8
  call void @free_candy_value(ptr %7124)
  %7125 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.643, align 8
  call void @free_candy_value(ptr %7125)
  %7126 = load ptr, ptr @236, align 8
  call void @free_candy_value(ptr %7126)
  %7127 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.645, align 8
  call void @free_candy_value(ptr %7127)
  %7128 = load ptr, ptr @237, align 8
  call void @free_candy_value(ptr %7128)
  %7129 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.647, align 8
  call void @free_candy_value(ptr %7129)
  %7130 = load ptr, ptr @238, align 8
  call void @free_candy_value(ptr %7130)
  %7131 = load ptr, ptr @fun_Core_iterator_128_isMatch_else, align 8
  call void @free_candy_value(ptr %7131)
  %7132 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.649, align 8
  call void @free_candy_value(ptr %7132)
  %7133 = load ptr, ptr @fun_Core_iterator_128_equals_else, align 8
  call void @free_candy_value(ptr %7133)
  %7134 = load ptr, ptr @239, align 8
  call void @free_candy_value(ptr %7134)
  %7135 = load ptr, ptr @fun_Core_iterator_128_equals_else.651, align 8
  call void @free_candy_value(ptr %7135)
  %7136 = load ptr, ptr @fun_Core_iterator_128_equals_else.653, align 8
  call void @free_candy_value(ptr %7136)
  %7137 = load ptr, ptr @240, align 8
  call void @free_candy_value(ptr %7137)
  %7138 = load ptr, ptr @fun_Core_iterator_128_equals_else.655, align 8
  call void @free_candy_value(ptr %7138)
  %7139 = load ptr, ptr @241, align 8
  call void @free_candy_value(ptr %7139)
  %7140 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.657, align 8
  call void @free_candy_value(ptr %7140)
  %7141 = load ptr, ptr @"Core:iterator:item", align 8
  call void @free_candy_value(ptr %7141)
  %7142 = load ptr, ptr @"Core:iterator:rest", align 8
  call void @free_candy_value(ptr %7142)
  %7143 = load ptr, ptr @"Core:iterator:133", align 8
  call void @free_candy_value(ptr %7143)
  %7144 = load ptr, ptr @"Core:iterator:136", align 8
  call void @free_candy_value(ptr %7144)
  %7145 = load ptr, ptr @"Core:iterator:137", align 8
  call void @free_candy_value(ptr %7145)
  %7146 = load ptr, ptr @fun_Core_iterator_137_equals_then, align 8
  call void @free_candy_value(ptr %7146)
  %7147 = load ptr, ptr @fun_Core_iterator_137_equals_then.659, align 8
  call void @free_candy_value(ptr %7147)
  %7148 = load ptr, ptr @fun_Core_iterator_137_equals_then.661, align 8
  call void @free_candy_value(ptr %7148)
  %7149 = load ptr, ptr @fun_Core_iterator_137_equals_then.663, align 8
  call void @free_candy_value(ptr %7149)
  %7150 = load ptr, ptr @fun_Core_iterator_137_hasKey_then, align 8
  call void @free_candy_value(ptr %7150)
  %7151 = load ptr, ptr @242, align 8
  call void @free_candy_value(ptr %7151)
  %7152 = load ptr, ptr @fun_Core_iterator_137_hasKey_else, align 8
  call void @free_candy_value(ptr %7152)
  %7153 = load ptr, ptr @243, align 8
  call void @free_candy_value(ptr %7153)
  %7154 = load ptr, ptr @fun_Core_iterator_137_isMatch_then, align 8
  call void @free_candy_value(ptr %7154)
  %7155 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.665, align 8
  call void @free_candy_value(ptr %7155)
  %7156 = load ptr, ptr @244, align 8
  call void @free_candy_value(ptr %7156)
  %7157 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.667, align 8
  call void @free_candy_value(ptr %7157)
  %7158 = load ptr, ptr @245, align 8
  call void @free_candy_value(ptr %7158)
  %7159 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.669, align 8
  call void @free_candy_value(ptr %7159)
  %7160 = load ptr, ptr @246, align 8
  call void @free_candy_value(ptr %7160)
  %7161 = load ptr, ptr @fun_Core_iterator_137_isMatch_else, align 8
  call void @free_candy_value(ptr %7161)
  %7162 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.671, align 8
  call void @free_candy_value(ptr %7162)
  %7163 = load ptr, ptr @fun_Core_iterator_137_equals_else, align 8
  call void @free_candy_value(ptr %7163)
  %7164 = load ptr, ptr @247, align 8
  call void @free_candy_value(ptr %7164)
  %7165 = load ptr, ptr @fun_Core_iterator_137_equals_else.673, align 8
  call void @free_candy_value(ptr %7165)
  %7166 = load ptr, ptr @fun_Core_iterator_137_equals_else.675, align 8
  call void @free_candy_value(ptr %7166)
  %7167 = load ptr, ptr @248, align 8
  call void @free_candy_value(ptr %7167)
  %7168 = load ptr, ptr @fun_Core_iterator_137_equals_else.677, align 8
  call void @free_candy_value(ptr %7168)
  %7169 = load ptr, ptr @249, align 8
  call void @free_candy_value(ptr %7169)
  %7170 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.679, align 8
  call void @free_candy_value(ptr %7170)
  %7171 = load ptr, ptr @"Core:iterator:item#1", align 8
  call void @free_candy_value(ptr %7171)
  %7172 = load ptr, ptr @"Core:iterator:rest#1", align 8
  call void @free_candy_value(ptr %7172)
  %7173 = load ptr, ptr @"Core:iterator:142", align 8
  call void @free_candy_value(ptr %7173)
  %7174 = load ptr, ptr @"Core:iterator:147", align 8
  call void @free_candy_value(ptr %7174)
  %7175 = load ptr, ptr @fun_Core_iterator_isEmpty_2, align 8
  call void @free_candy_value(ptr %7175)
  %7176 = load ptr, ptr @"Core:iterator:149", align 8
  call void @free_candy_value(ptr %7176)
  %7177 = load ptr, ptr @"Core:iterator:154", align 8
  call void @free_candy_value(ptr %7177)
  %7178 = load ptr, ptr @"Core:iterator:155", align 8
  call void @free_candy_value(ptr %7178)
  %7179 = load ptr, ptr @fun_Core_iterator_isEmpty_2.681, align 8
  call void @free_candy_value(ptr %7179)
  %7180 = load ptr, ptr @"Core:iterator:157", align 8
  call void @free_candy_value(ptr %7180)
  %7181 = load ptr, ptr @"Core:iterator:161:10", align 8
  call void @free_candy_value(ptr %7181)
  %7182 = load ptr, ptr @fun_Core_iterator_161, align 8
  call void @free_candy_value(ptr %7182)
  %7183 = load ptr, ptr @"Core:iterator:162", align 8
  call void @free_candy_value(ptr %7183)
  %7184 = load ptr, ptr @"Core:iterator:164", align 8
  call void @free_candy_value(ptr %7184)
  %7185 = load ptr, ptr @fun_Core_iterator_toList_2.683, align 8
  call void @free_candy_value(ptr %7185)
  %7186 = load ptr, ptr @250, align 8
  call void @free_candy_value(ptr %7186)
  %7187 = load ptr, ptr @"Core:iterator:169", align 8
  call void @free_candy_value(ptr %7187)
  %7188 = load ptr, ptr @"Core:iterator:173", align 8
  call void @free_candy_value(ptr %7188)
  %7189 = load ptr, ptr @"Core:iterator:175", align 8
  call void @free_candy_value(ptr %7189)
  %7190 = load ptr, ptr @"Core:iterator:179", align 8
  call void @free_candy_value(ptr %7190)
  %7191 = load ptr, ptr @fun_Core_iterator_length_2, align 8
  call void @free_candy_value(ptr %7191)
  %7192 = load ptr, ptr @"Core:iterator:181", align 8
  call void @free_candy_value(ptr %7192)
  %7193 = load ptr, ptr @"Core:iterator:185:9", align 8
  call void @free_candy_value(ptr %7193)
  %7194 = load ptr, ptr @fun_Core_iterator_185, align 8
  call void @free_candy_value(ptr %7194)
  %7195 = load ptr, ptr @"Core:iterator:186", align 8
  call void @free_candy_value(ptr %7195)
  %7196 = load ptr, ptr @"Core:iterator:188", align 8
  call void @free_candy_value(ptr %7196)
  %7197 = load ptr, ptr @fun_Core_iterator_192, align 8
  call void @free_candy_value(ptr %7197)
  %7198 = load ptr, ptr @"Core:iterator:193", align 8
  call void @free_candy_value(ptr %7198)
  %7199 = load ptr, ptr @"Core:iterator:195", align 8
  call void @free_candy_value(ptr %7199)
  %7200 = load ptr, ptr @"Core:iterator:200", align 8
  call void @free_candy_value(ptr %7200)
  %7201 = load ptr, ptr @"Core:iterator:202", align 8
  call void @free_candy_value(ptr %7201)
  %7202 = load ptr, ptr @text_123, align 8
  call void @free_candy_value(ptr %7202)
  %7203 = load ptr, ptr @"Core:iterator:210", align 8
  call void @free_candy_value(ptr %7203)
  %7204 = load ptr, ptr @"Core:iterator:214:9", align 8
  call void @free_candy_value(ptr %7204)
  %7205 = load ptr, ptr @fun_Core_iterator_214, align 8
  call void @free_candy_value(ptr %7205)
  %7206 = load ptr, ptr @"Core:iterator:215", align 8
  call void @free_candy_value(ptr %7206)
  %7207 = load ptr, ptr @"Core:iterator:217", align 8
  call void @free_candy_value(ptr %7207)
  %7208 = load ptr, ptr @fun_Core_iterator_toList_2.685, align 8
  call void @free_candy_value(ptr %7208)
  %7209 = load ptr, ptr @251, align 8
  call void @free_candy_value(ptr %7209)
  %7210 = load ptr, ptr @"Core:iterator:224", align 8
  call void @free_candy_value(ptr %7210)
  %7211 = load ptr, ptr @"Core:iterator:228:10", align 8
  call void @free_candy_value(ptr %7211)
  %7212 = load ptr, ptr @fun_Core_iterator_228, align 8
  call void @free_candy_value(ptr %7212)
  %7213 = load ptr, ptr @"Core:iterator:229", align 8
  call void @free_candy_value(ptr %7213)
  %7214 = load ptr, ptr @"Core:iterator:231", align 8
  call void @free_candy_value(ptr %7214)
  %7215 = load ptr, ptr @fun_Core_iterator_toList_2.687, align 8
  call void @free_candy_value(ptr %7215)
  %7216 = load ptr, ptr @"Core:iterator:236", align 8
  call void @free_candy_value(ptr %7216)
  %7217 = load ptr, ptr @"Core:iterator:241", align 8
  call void @free_candy_value(ptr %7217)
  %7218 = load ptr, ptr @"Core:iterator:243", align 8
  call void @free_candy_value(ptr %7218)
  %7219 = load ptr, ptr @fun_Core_iterator_toList_2.689, align 8
  call void @free_candy_value(ptr %7219)
  %7220 = load ptr, ptr @252, align 8
  call void @free_candy_value(ptr %7220)
  %7221 = load ptr, ptr @"Core:iterator:249", align 8
  call void @free_candy_value(ptr %7221)
  %7222 = load ptr, ptr @num_12, align 8
  call void @free_candy_value(ptr %7222)
  %7223 = load ptr, ptr @"Core:iterator:254", align 8
  call void @free_candy_value(ptr %7223)
  %7224 = load ptr, ptr @"Core:iterator:256", align 8
  call void @free_candy_value(ptr %7224)
  %7225 = load ptr, ptr @fun_Core_iterator_toList_2.691, align 8
  call void @free_candy_value(ptr %7225)
  %7226 = load ptr, ptr @"Core:iterator:268", align 8
  call void @free_candy_value(ptr %7226)
  %7227 = load ptr, ptr @"Core:iterator:273", align 8
  call void @free_candy_value(ptr %7227)
  %7228 = load ptr, ptr @"Core:iterator:275", align 8
  call void @free_candy_value(ptr %7228)
  %7229 = load ptr, ptr @fun_Core_iterator_toList_2.693, align 8
  call void @free_candy_value(ptr %7229)
  %7230 = load ptr, ptr @253, align 8
  call void @free_candy_value(ptr %7230)
  %7231 = load ptr, ptr @"Core:iterator:283", align 8
  call void @free_candy_value(ptr %7231)
  %7232 = load ptr, ptr @num_40, align 8
  call void @free_candy_value(ptr %7232)
  %7233 = load ptr, ptr @"Core:iterator:288", align 8
  call void @free_candy_value(ptr %7233)
  %7234 = load ptr, ptr @"Core:iterator:290", align 8
  call void @free_candy_value(ptr %7234)
  %7235 = load ptr, ptr @fun_Core_iterator_toList_2.695, align 8
  call void @free_candy_value(ptr %7235)
  %7236 = load ptr, ptr @"Core:iterator:292", align 8
  call void @free_candy_value(ptr %7236)
  %7237 = load ptr, ptr @"Core:iterator:299", align 8
  call void @free_candy_value(ptr %7237)
  %7238 = load ptr, ptr @"Core:iterator:301", align 8
  call void @free_candy_value(ptr %7238)
  %7239 = load ptr, ptr @fun_Core_iterator_toList_2.697, align 8
  call void @free_candy_value(ptr %7239)
  %7240 = load ptr, ptr @254, align 8
  call void @free_candy_value(ptr %7240)
  %7241 = load ptr, ptr @255, align 8
  call void @free_candy_value(ptr %7241)
  %7242 = load ptr, ptr @256, align 8
  call void @free_candy_value(ptr %7242)
  %7243 = load ptr, ptr @"Core:iterator:318", align 8
  call void @free_candy_value(ptr %7243)
  %7244 = load ptr, ptr @"Core:iterator:323", align 8
  call void @free_candy_value(ptr %7244)
  %7245 = load ptr, ptr @"Core:iterator:325", align 8
  call void @free_candy_value(ptr %7245)
  %7246 = load ptr, ptr @fun_Core_iterator_toList_2.699, align 8
  call void @free_candy_value(ptr %7246)
  %7247 = load ptr, ptr @257, align 8
  call void @free_candy_value(ptr %7247)
  %7248 = load ptr, ptr @258, align 8
  call void @free_candy_value(ptr %7248)
  %7249 = load ptr, ptr @259, align 8
  call void @free_candy_value(ptr %7249)
  %7250 = load ptr, ptr @260, align 8
  call void @free_candy_value(ptr %7250)
  %7251 = load ptr, ptr @"Core:iterator:341", align 8
  call void @free_candy_value(ptr %7251)
  %7252 = load ptr, ptr @fun_Core_iterator_128_equals_then.701, align 8
  call void @free_candy_value(ptr %7252)
  %7253 = load ptr, ptr @fun_Core_iterator_128_equals_then.703, align 8
  call void @free_candy_value(ptr %7253)
  %7254 = load ptr, ptr @fun_Core_iterator_128_equals_then.705, align 8
  call void @free_candy_value(ptr %7254)
  %7255 = load ptr, ptr @fun_Core_iterator_128_equals_then.707, align 8
  call void @free_candy_value(ptr %7255)
  %7256 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.709, align 8
  call void @free_candy_value(ptr %7256)
  %7257 = load ptr, ptr @261, align 8
  call void @free_candy_value(ptr %7257)
  %7258 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.711, align 8
  call void @free_candy_value(ptr %7258)
  %7259 = load ptr, ptr @262, align 8
  call void @free_candy_value(ptr %7259)
  %7260 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.713, align 8
  call void @free_candy_value(ptr %7260)
  %7261 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.715, align 8
  call void @free_candy_value(ptr %7261)
  %7262 = load ptr, ptr @263, align 8
  call void @free_candy_value(ptr %7262)
  %7263 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.717, align 8
  call void @free_candy_value(ptr %7263)
  %7264 = load ptr, ptr @264, align 8
  call void @free_candy_value(ptr %7264)
  %7265 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.719, align 8
  call void @free_candy_value(ptr %7265)
  %7266 = load ptr, ptr @265, align 8
  call void @free_candy_value(ptr %7266)
  %7267 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.721, align 8
  call void @free_candy_value(ptr %7267)
  %7268 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.723, align 8
  call void @free_candy_value(ptr %7268)
  %7269 = load ptr, ptr @fun_Core_iterator_128_equals_else.725, align 8
  call void @free_candy_value(ptr %7269)
  %7270 = load ptr, ptr @266, align 8
  call void @free_candy_value(ptr %7270)
  %7271 = load ptr, ptr @fun_Core_iterator_128_equals_else.727, align 8
  call void @free_candy_value(ptr %7271)
  %7272 = load ptr, ptr @fun_Core_iterator_128_equals_else.729, align 8
  call void @free_candy_value(ptr %7272)
  %7273 = load ptr, ptr @267, align 8
  call void @free_candy_value(ptr %7273)
  %7274 = load ptr, ptr @fun_Core_iterator_128_equals_else.731, align 8
  call void @free_candy_value(ptr %7274)
  %7275 = load ptr, ptr @268, align 8
  call void @free_candy_value(ptr %7275)
  %7276 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.733, align 8
  call void @free_candy_value(ptr %7276)
  %7277 = load ptr, ptr @fun_Core_iterator_137_equals_then.735, align 8
  call void @free_candy_value(ptr %7277)
  %7278 = load ptr, ptr @fun_Core_iterator_137_equals_then.737, align 8
  call void @free_candy_value(ptr %7278)
  %7279 = load ptr, ptr @fun_Core_iterator_137_equals_then.739, align 8
  call void @free_candy_value(ptr %7279)
  %7280 = load ptr, ptr @fun_Core_iterator_137_equals_then.741, align 8
  call void @free_candy_value(ptr %7280)
  %7281 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.743, align 8
  call void @free_candy_value(ptr %7281)
  %7282 = load ptr, ptr @269, align 8
  call void @free_candy_value(ptr %7282)
  %7283 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.745, align 8
  call void @free_candy_value(ptr %7283)
  %7284 = load ptr, ptr @270, align 8
  call void @free_candy_value(ptr %7284)
  %7285 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.747, align 8
  call void @free_candy_value(ptr %7285)
  %7286 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.749, align 8
  call void @free_candy_value(ptr %7286)
  %7287 = load ptr, ptr @271, align 8
  call void @free_candy_value(ptr %7287)
  %7288 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.751, align 8
  call void @free_candy_value(ptr %7288)
  %7289 = load ptr, ptr @272, align 8
  call void @free_candy_value(ptr %7289)
  %7290 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.753, align 8
  call void @free_candy_value(ptr %7290)
  %7291 = load ptr, ptr @273, align 8
  call void @free_candy_value(ptr %7291)
  %7292 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.755, align 8
  call void @free_candy_value(ptr %7292)
  %7293 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.757, align 8
  call void @free_candy_value(ptr %7293)
  %7294 = load ptr, ptr @fun_Core_iterator_137_equals_else.759, align 8
  call void @free_candy_value(ptr %7294)
  %7295 = load ptr, ptr @274, align 8
  call void @free_candy_value(ptr %7295)
  %7296 = load ptr, ptr @fun_Core_iterator_137_equals_else.761, align 8
  call void @free_candy_value(ptr %7296)
  %7297 = load ptr, ptr @fun_Core_iterator_137_equals_else.763, align 8
  call void @free_candy_value(ptr %7297)
  %7298 = load ptr, ptr @275, align 8
  call void @free_candy_value(ptr %7298)
  %7299 = load ptr, ptr @fun_Core_iterator_137_equals_else.765, align 8
  call void @free_candy_value(ptr %7299)
  %7300 = load ptr, ptr @276, align 8
  call void @free_candy_value(ptr %7300)
  %7301 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.767, align 8
  call void @free_candy_value(ptr %7301)
  %7302 = load ptr, ptr @fun_Core_iterator_128_equals_then.769, align 8
  call void @free_candy_value(ptr %7302)
  %7303 = load ptr, ptr @fun_Core_iterator_128_equals_then.771, align 8
  call void @free_candy_value(ptr %7303)
  %7304 = load ptr, ptr @fun_Core_iterator_128_equals_then.773, align 8
  call void @free_candy_value(ptr %7304)
  %7305 = load ptr, ptr @fun_Core_iterator_128_equals_then.775, align 8
  call void @free_candy_value(ptr %7305)
  %7306 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.777, align 8
  call void @free_candy_value(ptr %7306)
  %7307 = load ptr, ptr @277, align 8
  call void @free_candy_value(ptr %7307)
  %7308 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.779, align 8
  call void @free_candy_value(ptr %7308)
  %7309 = load ptr, ptr @278, align 8
  call void @free_candy_value(ptr %7309)
  %7310 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.781, align 8
  call void @free_candy_value(ptr %7310)
  %7311 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.783, align 8
  call void @free_candy_value(ptr %7311)
  %7312 = load ptr, ptr @279, align 8
  call void @free_candy_value(ptr %7312)
  %7313 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.785, align 8
  call void @free_candy_value(ptr %7313)
  %7314 = load ptr, ptr @280, align 8
  call void @free_candy_value(ptr %7314)
  %7315 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.787, align 8
  call void @free_candy_value(ptr %7315)
  %7316 = load ptr, ptr @281, align 8
  call void @free_candy_value(ptr %7316)
  %7317 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.789, align 8
  call void @free_candy_value(ptr %7317)
  %7318 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.791, align 8
  call void @free_candy_value(ptr %7318)
  %7319 = load ptr, ptr @fun_Core_iterator_128_equals_else.793, align 8
  call void @free_candy_value(ptr %7319)
  %7320 = load ptr, ptr @282, align 8
  call void @free_candy_value(ptr %7320)
  %7321 = load ptr, ptr @fun_Core_iterator_128_equals_else.795, align 8
  call void @free_candy_value(ptr %7321)
  %7322 = load ptr, ptr @fun_Core_iterator_128_equals_else.797, align 8
  call void @free_candy_value(ptr %7322)
  %7323 = load ptr, ptr @283, align 8
  call void @free_candy_value(ptr %7323)
  %7324 = load ptr, ptr @fun_Core_iterator_128_equals_else.799, align 8
  call void @free_candy_value(ptr %7324)
  %7325 = load ptr, ptr @284, align 8
  call void @free_candy_value(ptr %7325)
  %7326 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.801, align 8
  call void @free_candy_value(ptr %7326)
  %7327 = load ptr, ptr @fun_Core_iterator_137_equals_then.803, align 8
  call void @free_candy_value(ptr %7327)
  %7328 = load ptr, ptr @fun_Core_iterator_137_equals_then.805, align 8
  call void @free_candy_value(ptr %7328)
  %7329 = load ptr, ptr @fun_Core_iterator_137_equals_then.807, align 8
  call void @free_candy_value(ptr %7329)
  %7330 = load ptr, ptr @fun_Core_iterator_137_equals_then.809, align 8
  call void @free_candy_value(ptr %7330)
  %7331 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.811, align 8
  call void @free_candy_value(ptr %7331)
  %7332 = load ptr, ptr @285, align 8
  call void @free_candy_value(ptr %7332)
  %7333 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.813, align 8
  call void @free_candy_value(ptr %7333)
  %7334 = load ptr, ptr @286, align 8
  call void @free_candy_value(ptr %7334)
  %7335 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.815, align 8
  call void @free_candy_value(ptr %7335)
  %7336 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.817, align 8
  call void @free_candy_value(ptr %7336)
  %7337 = load ptr, ptr @287, align 8
  call void @free_candy_value(ptr %7337)
  %7338 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.819, align 8
  call void @free_candy_value(ptr %7338)
  %7339 = load ptr, ptr @288, align 8
  call void @free_candy_value(ptr %7339)
  %7340 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.821, align 8
  call void @free_candy_value(ptr %7340)
  %7341 = load ptr, ptr @289, align 8
  call void @free_candy_value(ptr %7341)
  %7342 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.823, align 8
  call void @free_candy_value(ptr %7342)
  %7343 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.825, align 8
  call void @free_candy_value(ptr %7343)
  %7344 = load ptr, ptr @fun_Core_iterator_137_equals_else.827, align 8
  call void @free_candy_value(ptr %7344)
  %7345 = load ptr, ptr @290, align 8
  call void @free_candy_value(ptr %7345)
  %7346 = load ptr, ptr @fun_Core_iterator_137_equals_else.829, align 8
  call void @free_candy_value(ptr %7346)
  %7347 = load ptr, ptr @fun_Core_iterator_137_equals_else.831, align 8
  call void @free_candy_value(ptr %7347)
  %7348 = load ptr, ptr @291, align 8
  call void @free_candy_value(ptr %7348)
  %7349 = load ptr, ptr @fun_Core_iterator_137_equals_else.833, align 8
  call void @free_candy_value(ptr %7349)
  %7350 = load ptr, ptr @292, align 8
  call void @free_candy_value(ptr %7350)
  %7351 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.835, align 8
  call void @free_candy_value(ptr %7351)
  %7352 = load ptr, ptr @fun_Core_iterator_128_equals_then.837, align 8
  call void @free_candy_value(ptr %7352)
  %7353 = load ptr, ptr @fun_Core_iterator_128_equals_then.839, align 8
  call void @free_candy_value(ptr %7353)
  %7354 = load ptr, ptr @fun_Core_iterator_128_equals_then.841, align 8
  call void @free_candy_value(ptr %7354)
  %7355 = load ptr, ptr @fun_Core_iterator_128_equals_then.843, align 8
  call void @free_candy_value(ptr %7355)
  %7356 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.845, align 8
  call void @free_candy_value(ptr %7356)
  %7357 = load ptr, ptr @293, align 8
  call void @free_candy_value(ptr %7357)
  %7358 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.847, align 8
  call void @free_candy_value(ptr %7358)
  %7359 = load ptr, ptr @294, align 8
  call void @free_candy_value(ptr %7359)
  %7360 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.849, align 8
  call void @free_candy_value(ptr %7360)
  %7361 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.851, align 8
  call void @free_candy_value(ptr %7361)
  %7362 = load ptr, ptr @295, align 8
  call void @free_candy_value(ptr %7362)
  %7363 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.853, align 8
  call void @free_candy_value(ptr %7363)
  %7364 = load ptr, ptr @296, align 8
  call void @free_candy_value(ptr %7364)
  %7365 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.855, align 8
  call void @free_candy_value(ptr %7365)
  %7366 = load ptr, ptr @297, align 8
  call void @free_candy_value(ptr %7366)
  %7367 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.857, align 8
  call void @free_candy_value(ptr %7367)
  %7368 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.859, align 8
  call void @free_candy_value(ptr %7368)
  %7369 = load ptr, ptr @fun_Core_iterator_128_equals_else.861, align 8
  call void @free_candy_value(ptr %7369)
  %7370 = load ptr, ptr @298, align 8
  call void @free_candy_value(ptr %7370)
  %7371 = load ptr, ptr @fun_Core_iterator_128_equals_else.863, align 8
  call void @free_candy_value(ptr %7371)
  %7372 = load ptr, ptr @fun_Core_iterator_128_equals_else.865, align 8
  call void @free_candy_value(ptr %7372)
  %7373 = load ptr, ptr @299, align 8
  call void @free_candy_value(ptr %7373)
  %7374 = load ptr, ptr @fun_Core_iterator_128_equals_else.867, align 8
  call void @free_candy_value(ptr %7374)
  %7375 = load ptr, ptr @300, align 8
  call void @free_candy_value(ptr %7375)
  %7376 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.869, align 8
  call void @free_candy_value(ptr %7376)
  %7377 = load ptr, ptr @fun_Core_iterator_137_equals_then.871, align 8
  call void @free_candy_value(ptr %7377)
  %7378 = load ptr, ptr @fun_Core_iterator_137_equals_then.873, align 8
  call void @free_candy_value(ptr %7378)
  %7379 = load ptr, ptr @fun_Core_iterator_137_equals_then.875, align 8
  call void @free_candy_value(ptr %7379)
  %7380 = load ptr, ptr @fun_Core_iterator_137_equals_then.877, align 8
  call void @free_candy_value(ptr %7380)
  %7381 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.879, align 8
  call void @free_candy_value(ptr %7381)
  %7382 = load ptr, ptr @301, align 8
  call void @free_candy_value(ptr %7382)
  %7383 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.881, align 8
  call void @free_candy_value(ptr %7383)
  %7384 = load ptr, ptr @302, align 8
  call void @free_candy_value(ptr %7384)
  %7385 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.883, align 8
  call void @free_candy_value(ptr %7385)
  %7386 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.885, align 8
  call void @free_candy_value(ptr %7386)
  %7387 = load ptr, ptr @303, align 8
  call void @free_candy_value(ptr %7387)
  %7388 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.887, align 8
  call void @free_candy_value(ptr %7388)
  %7389 = load ptr, ptr @304, align 8
  call void @free_candy_value(ptr %7389)
  %7390 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.889, align 8
  call void @free_candy_value(ptr %7390)
  %7391 = load ptr, ptr @305, align 8
  call void @free_candy_value(ptr %7391)
  %7392 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.891, align 8
  call void @free_candy_value(ptr %7392)
  %7393 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.893, align 8
  call void @free_candy_value(ptr %7393)
  %7394 = load ptr, ptr @fun_Core_iterator_137_equals_else.895, align 8
  call void @free_candy_value(ptr %7394)
  %7395 = load ptr, ptr @306, align 8
  call void @free_candy_value(ptr %7395)
  %7396 = load ptr, ptr @fun_Core_iterator_137_equals_else.897, align 8
  call void @free_candy_value(ptr %7396)
  %7397 = load ptr, ptr @fun_Core_iterator_137_equals_else.899, align 8
  call void @free_candy_value(ptr %7397)
  %7398 = load ptr, ptr @307, align 8
  call void @free_candy_value(ptr %7398)
  %7399 = load ptr, ptr @fun_Core_iterator_137_equals_else.901, align 8
  call void @free_candy_value(ptr %7399)
  %7400 = load ptr, ptr @308, align 8
  call void @free_candy_value(ptr %7400)
  %7401 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.903, align 8
  call void @free_candy_value(ptr %7401)
  %7402 = load ptr, ptr @fun_Core_iterator_128_equals_then.905, align 8
  call void @free_candy_value(ptr %7402)
  %7403 = load ptr, ptr @fun_Core_iterator_128_equals_then.907, align 8
  call void @free_candy_value(ptr %7403)
  %7404 = load ptr, ptr @fun_Core_iterator_128_equals_then.909, align 8
  call void @free_candy_value(ptr %7404)
  %7405 = load ptr, ptr @fun_Core_iterator_128_equals_then.911, align 8
  call void @free_candy_value(ptr %7405)
  %7406 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.913, align 8
  call void @free_candy_value(ptr %7406)
  %7407 = load ptr, ptr @309, align 8
  call void @free_candy_value(ptr %7407)
  %7408 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.915, align 8
  call void @free_candy_value(ptr %7408)
  %7409 = load ptr, ptr @310, align 8
  call void @free_candy_value(ptr %7409)
  %7410 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.917, align 8
  call void @free_candy_value(ptr %7410)
  %7411 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.919, align 8
  call void @free_candy_value(ptr %7411)
  %7412 = load ptr, ptr @311, align 8
  call void @free_candy_value(ptr %7412)
  %7413 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.921, align 8
  call void @free_candy_value(ptr %7413)
  %7414 = load ptr, ptr @312, align 8
  call void @free_candy_value(ptr %7414)
  %7415 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.923, align 8
  call void @free_candy_value(ptr %7415)
  %7416 = load ptr, ptr @313, align 8
  call void @free_candy_value(ptr %7416)
  %7417 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.925, align 8
  call void @free_candy_value(ptr %7417)
  %7418 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.927, align 8
  call void @free_candy_value(ptr %7418)
  %7419 = load ptr, ptr @fun_Core_iterator_128_equals_else.929, align 8
  call void @free_candy_value(ptr %7419)
  %7420 = load ptr, ptr @314, align 8
  call void @free_candy_value(ptr %7420)
  %7421 = load ptr, ptr @fun_Core_iterator_128_equals_else.931, align 8
  call void @free_candy_value(ptr %7421)
  %7422 = load ptr, ptr @fun_Core_iterator_128_equals_else.933, align 8
  call void @free_candy_value(ptr %7422)
  %7423 = load ptr, ptr @315, align 8
  call void @free_candy_value(ptr %7423)
  %7424 = load ptr, ptr @fun_Core_iterator_128_equals_else.935, align 8
  call void @free_candy_value(ptr %7424)
  %7425 = load ptr, ptr @316, align 8
  call void @free_candy_value(ptr %7425)
  %7426 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.937, align 8
  call void @free_candy_value(ptr %7426)
  %7427 = load ptr, ptr @fun_Core_iterator_137_equals_then.939, align 8
  call void @free_candy_value(ptr %7427)
  %7428 = load ptr, ptr @fun_Core_iterator_137_equals_then.941, align 8
  call void @free_candy_value(ptr %7428)
  %7429 = load ptr, ptr @fun_Core_iterator_137_equals_then.943, align 8
  call void @free_candy_value(ptr %7429)
  %7430 = load ptr, ptr @fun_Core_iterator_137_equals_then.945, align 8
  call void @free_candy_value(ptr %7430)
  %7431 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.947, align 8
  call void @free_candy_value(ptr %7431)
  %7432 = load ptr, ptr @317, align 8
  call void @free_candy_value(ptr %7432)
  %7433 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.949, align 8
  call void @free_candy_value(ptr %7433)
  %7434 = load ptr, ptr @318, align 8
  call void @free_candy_value(ptr %7434)
  %7435 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.951, align 8
  call void @free_candy_value(ptr %7435)
  %7436 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.953, align 8
  call void @free_candy_value(ptr %7436)
  %7437 = load ptr, ptr @319, align 8
  call void @free_candy_value(ptr %7437)
  %7438 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.955, align 8
  call void @free_candy_value(ptr %7438)
  %7439 = load ptr, ptr @320, align 8
  call void @free_candy_value(ptr %7439)
  %7440 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.957, align 8
  call void @free_candy_value(ptr %7440)
  %7441 = load ptr, ptr @321, align 8
  call void @free_candy_value(ptr %7441)
  %7442 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.959, align 8
  call void @free_candy_value(ptr %7442)
  %7443 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.961, align 8
  call void @free_candy_value(ptr %7443)
  %7444 = load ptr, ptr @fun_Core_iterator_137_equals_else.963, align 8
  call void @free_candy_value(ptr %7444)
  %7445 = load ptr, ptr @322, align 8
  call void @free_candy_value(ptr %7445)
  %7446 = load ptr, ptr @fun_Core_iterator_137_equals_else.965, align 8
  call void @free_candy_value(ptr %7446)
  %7447 = load ptr, ptr @fun_Core_iterator_137_equals_else.967, align 8
  call void @free_candy_value(ptr %7447)
  %7448 = load ptr, ptr @323, align 8
  call void @free_candy_value(ptr %7448)
  %7449 = load ptr, ptr @fun_Core_iterator_137_equals_else.969, align 8
  call void @free_candy_value(ptr %7449)
  %7450 = load ptr, ptr @324, align 8
  call void @free_candy_value(ptr %7450)
  %7451 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.971, align 8
  call void @free_candy_value(ptr %7451)
  %7452 = load ptr, ptr @"Chrono:duration:is:1", align 8
  call void @free_candy_value(ptr %7452)
  %7453 = load ptr, ptr @tag_Duration, align 8
  call void @free_candy_value(ptr %7453)
  %7454 = load ptr, ptr @"text_Expected Duration, got ", align 8
  call void @free_candy_value(ptr %7454)
  %7455 = load ptr, ptr @"Chrono:duration:is:1:seconds", align 8
  call void @free_candy_value(ptr %7455)
  %7456 = load ptr, ptr @"Chrono:duration:is:1:9", align 8
  call void @free_candy_value(ptr %7456)
  %7457 = load ptr, ptr @fun_Chrono_duration_is, align 8
  call void @free_candy_value(ptr %7457)
  %7458 = load ptr, ptr @fun_Chrono_duration_is_1_equals_then, align 8
  call void @free_candy_value(ptr %7458)
  %7459 = load ptr, ptr @fun_Chrono_duration_is_1_equals_then.973, align 8
  call void @free_candy_value(ptr %7459)
  %7460 = load ptr, ptr @fun_Chrono_duration_is_1_equals_then.975, align 8
  call void @free_candy_value(ptr %7460)
  %7461 = load ptr, ptr @325, align 8
  call void @free_candy_value(ptr %7461)
  %7462 = load ptr, ptr @fun_Chrono_duration_is_1_equals_else, align 8
  call void @free_candy_value(ptr %7462)
  %7463 = load ptr, ptr @fun_Chrono_duration_is_1_equals_else.977, align 8
  call void @free_candy_value(ptr %7463)
  %7464 = load ptr, ptr @326, align 8
  call void @free_candy_value(ptr %7464)
  %7465 = load ptr, ptr @fun_Chrono_duration_is_1_equals_else.979, align 8
  call void @free_candy_value(ptr %7465)
  %7466 = load ptr, ptr @327, align 8
  call void @free_candy_value(ptr %7466)
  %7467 = load ptr, ptr @fun_Chrono_duration_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %7467)
  %7468 = load ptr, ptr @fun_Chrono_duration_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %7468)
  %7469 = load ptr, ptr @"Chrono:duration:subtract:2", align 8
  call void @free_candy_value(ptr %7469)
  %7470 = load ptr, ptr @"Chrono:duration:subtract:4", align 8
  call void @free_candy_value(ptr %7470)
  %7471 = load ptr, ptr @"Chrono:duration:subtract:7", align 8
  call void @free_candy_value(ptr %7471)
  %7472 = load ptr, ptr @"Chrono:duration:subtract:9", align 8
  call void @free_candy_value(ptr %7472)
  %7473 = load ptr, ptr @"Chrono:duration:subtract:28", align 8
  call void @free_candy_value(ptr %7473)
  %7474 = load ptr, ptr @"Chrono:duration:subtract:38", align 8
  call void @free_candy_value(ptr %7474)
  %7475 = load ptr, ptr @"Chrono:duration:subtract:39", align 8
  call void @free_candy_value(ptr %7475)
  %7476 = load ptr, ptr @fun_Chrono_duration_subtract, align 8
  call void @free_candy_value(ptr %7476)
  %7477 = load ptr, ptr @tag_Duration.980, align 8
  call void @free_candy_value(ptr %7477)
  %7478 = load ptr, ptr @"Chrono:instant:is:1", align 8
  call void @free_candy_value(ptr %7478)
  %7479 = load ptr, ptr @tag_Instant, align 8
  call void @free_candy_value(ptr %7479)
  %7480 = load ptr, ptr @"text_Expected Instant, got ", align 8
  call void @free_candy_value(ptr %7480)
  %7481 = load ptr, ptr @"Chrono:instant:is:1:dur", align 8
  call void @free_candy_value(ptr %7481)
  %7482 = load ptr, ptr @"Chrono:instant:is:1:9", align 8
  call void @free_candy_value(ptr %7482)
  %7483 = load ptr, ptr @fun_Chrono_instant_is, align 8
  call void @free_candy_value(ptr %7483)
  %7484 = load ptr, ptr @fun_Chrono_instant_is_1_equals_then, align 8
  call void @free_candy_value(ptr %7484)
  %7485 = load ptr, ptr @fun_Chrono_instant_is_1_equals_then.982, align 8
  call void @free_candy_value(ptr %7485)
  %7486 = load ptr, ptr @fun_Chrono_instant_is_1_equals_then.984, align 8
  call void @free_candy_value(ptr %7486)
  %7487 = load ptr, ptr @328, align 8
  call void @free_candy_value(ptr %7487)
  %7488 = load ptr, ptr @fun_Chrono_instant_is_1_equals_else, align 8
  call void @free_candy_value(ptr %7488)
  %7489 = load ptr, ptr @fun_Chrono_instant_is_1_equals_else.986, align 8
  call void @free_candy_value(ptr %7489)
  %7490 = load ptr, ptr @329, align 8
  call void @free_candy_value(ptr %7490)
  %7491 = load ptr, ptr @fun_Chrono_instant_is_1_equals_else.988, align 8
  call void @free_candy_value(ptr %7491)
  %7492 = load ptr, ptr @330, align 8
  call void @free_candy_value(ptr %7492)
  %7493 = load ptr, ptr @fun_Chrono_instant_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %7493)
  %7494 = load ptr, ptr @fun_Chrono_instant_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %7494)
  %7495 = load ptr, ptr @"Chrono:instant:fromUnixDuration:9", align 8
  call void @free_candy_value(ptr %7495)
  %7496 = load ptr, ptr @"text_`duration.is dur` was not satisfied", align 8
  call void @free_candy_value(ptr %7496)
  %7497 = load ptr, ptr @"Chrono:instant:fromUnixDuration:11", align 8
  call void @free_candy_value(ptr %7497)
  %7498 = load ptr, ptr @"text_`is instant` was not satisfied", align 8
  call void @free_candy_value(ptr %7498)
  %7499 = load ptr, ptr @"Chrono:instant:toUnixTimeDuration:2", align 8
  call void @free_candy_value(ptr %7499)
  %7500 = load ptr, ptr @"Chrono:instant:toUnixTimeDuration:4", align 8
  call void @free_candy_value(ptr %7500)
  %7501 = load ptr, ptr @"Chrono:instant:toUnixTimeDuration:14", align 8
  call void @free_candy_value(ptr %7501)
  %7502 = load ptr, ptr @fun_Chrono_instant_toUnixTimeDuration, align 8
  call void @free_candy_value(ptr %7502)
  %7503 = load ptr, ptr @fun_Core_iterator_128_equals_then.990, align 8
  call void @free_candy_value(ptr %7503)
  %7504 = load ptr, ptr @fun_Core_iterator_128_equals_then.992, align 8
  call void @free_candy_value(ptr %7504)
  %7505 = load ptr, ptr @fun_Core_iterator_128_equals_then.994, align 8
  call void @free_candy_value(ptr %7505)
  %7506 = load ptr, ptr @fun_Core_iterator_128_equals_then.996, align 8
  call void @free_candy_value(ptr %7506)
  %7507 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.998, align 8
  call void @free_candy_value(ptr %7507)
  %7508 = load ptr, ptr @331, align 8
  call void @free_candy_value(ptr %7508)
  %7509 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1000, align 8
  call void @free_candy_value(ptr %7509)
  %7510 = load ptr, ptr @332, align 8
  call void @free_candy_value(ptr %7510)
  %7511 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1002, align 8
  call void @free_candy_value(ptr %7511)
  %7512 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1004, align 8
  call void @free_candy_value(ptr %7512)
  %7513 = load ptr, ptr @333, align 8
  call void @free_candy_value(ptr %7513)
  %7514 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1006, align 8
  call void @free_candy_value(ptr %7514)
  %7515 = load ptr, ptr @334, align 8
  call void @free_candy_value(ptr %7515)
  %7516 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1008, align 8
  call void @free_candy_value(ptr %7516)
  %7517 = load ptr, ptr @335, align 8
  call void @free_candy_value(ptr %7517)
  %7518 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1010, align 8
  call void @free_candy_value(ptr %7518)
  %7519 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1012, align 8
  call void @free_candy_value(ptr %7519)
  %7520 = load ptr, ptr @fun_Core_iterator_128_equals_else.1014, align 8
  call void @free_candy_value(ptr %7520)
  %7521 = load ptr, ptr @336, align 8
  call void @free_candy_value(ptr %7521)
  %7522 = load ptr, ptr @fun_Core_iterator_128_equals_else.1016, align 8
  call void @free_candy_value(ptr %7522)
  %7523 = load ptr, ptr @fun_Core_iterator_128_equals_else.1018, align 8
  call void @free_candy_value(ptr %7523)
  %7524 = load ptr, ptr @337, align 8
  call void @free_candy_value(ptr %7524)
  %7525 = load ptr, ptr @fun_Core_iterator_128_equals_else.1020, align 8
  call void @free_candy_value(ptr %7525)
  %7526 = load ptr, ptr @338, align 8
  call void @free_candy_value(ptr %7526)
  %7527 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1022, align 8
  call void @free_candy_value(ptr %7527)
  %7528 = load ptr, ptr @fun_Core_iterator_137_equals_then.1024, align 8
  call void @free_candy_value(ptr %7528)
  %7529 = load ptr, ptr @fun_Core_iterator_137_equals_then.1026, align 8
  call void @free_candy_value(ptr %7529)
  %7530 = load ptr, ptr @fun_Core_iterator_137_equals_then.1028, align 8
  call void @free_candy_value(ptr %7530)
  %7531 = load ptr, ptr @fun_Core_iterator_137_equals_then.1030, align 8
  call void @free_candy_value(ptr %7531)
  %7532 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1032, align 8
  call void @free_candy_value(ptr %7532)
  %7533 = load ptr, ptr @339, align 8
  call void @free_candy_value(ptr %7533)
  %7534 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1034, align 8
  call void @free_candy_value(ptr %7534)
  %7535 = load ptr, ptr @340, align 8
  call void @free_candy_value(ptr %7535)
  %7536 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1036, align 8
  call void @free_candy_value(ptr %7536)
  %7537 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1038, align 8
  call void @free_candy_value(ptr %7537)
  %7538 = load ptr, ptr @341, align 8
  call void @free_candy_value(ptr %7538)
  %7539 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1040, align 8
  call void @free_candy_value(ptr %7539)
  %7540 = load ptr, ptr @342, align 8
  call void @free_candy_value(ptr %7540)
  %7541 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1042, align 8
  call void @free_candy_value(ptr %7541)
  %7542 = load ptr, ptr @343, align 8
  call void @free_candy_value(ptr %7542)
  %7543 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1044, align 8
  call void @free_candy_value(ptr %7543)
  %7544 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1046, align 8
  call void @free_candy_value(ptr %7544)
  %7545 = load ptr, ptr @fun_Core_iterator_137_equals_else.1048, align 8
  call void @free_candy_value(ptr %7545)
  %7546 = load ptr, ptr @344, align 8
  call void @free_candy_value(ptr %7546)
  %7547 = load ptr, ptr @fun_Core_iterator_137_equals_else.1050, align 8
  call void @free_candy_value(ptr %7547)
  %7548 = load ptr, ptr @fun_Core_iterator_137_equals_else.1052, align 8
  call void @free_candy_value(ptr %7548)
  %7549 = load ptr, ptr @345, align 8
  call void @free_candy_value(ptr %7549)
  %7550 = load ptr, ptr @fun_Core_iterator_137_equals_else.1054, align 8
  call void @free_candy_value(ptr %7550)
  %7551 = load ptr, ptr @346, align 8
  call void @free_candy_value(ptr %7551)
  %7552 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1056, align 8
  call void @free_candy_value(ptr %7552)
  %7553 = load ptr, ptr @fun_Core_iterator_128_equals_then.1058, align 8
  call void @free_candy_value(ptr %7553)
  %7554 = load ptr, ptr @fun_Core_iterator_128_equals_then.1060, align 8
  call void @free_candy_value(ptr %7554)
  %7555 = load ptr, ptr @fun_Core_iterator_128_equals_then.1062, align 8
  call void @free_candy_value(ptr %7555)
  %7556 = load ptr, ptr @fun_Core_iterator_128_equals_then.1064, align 8
  call void @free_candy_value(ptr %7556)
  %7557 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1066, align 8
  call void @free_candy_value(ptr %7557)
  %7558 = load ptr, ptr @347, align 8
  call void @free_candy_value(ptr %7558)
  %7559 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1068, align 8
  call void @free_candy_value(ptr %7559)
  %7560 = load ptr, ptr @348, align 8
  call void @free_candy_value(ptr %7560)
  %7561 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1070, align 8
  call void @free_candy_value(ptr %7561)
  %7562 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1072, align 8
  call void @free_candy_value(ptr %7562)
  %7563 = load ptr, ptr @349, align 8
  call void @free_candy_value(ptr %7563)
  %7564 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1074, align 8
  call void @free_candy_value(ptr %7564)
  %7565 = load ptr, ptr @350, align 8
  call void @free_candy_value(ptr %7565)
  %7566 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1076, align 8
  call void @free_candy_value(ptr %7566)
  %7567 = load ptr, ptr @351, align 8
  call void @free_candy_value(ptr %7567)
  %7568 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1078, align 8
  call void @free_candy_value(ptr %7568)
  %7569 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1080, align 8
  call void @free_candy_value(ptr %7569)
  %7570 = load ptr, ptr @fun_Core_iterator_128_equals_else.1082, align 8
  call void @free_candy_value(ptr %7570)
  %7571 = load ptr, ptr @352, align 8
  call void @free_candy_value(ptr %7571)
  %7572 = load ptr, ptr @fun_Core_iterator_128_equals_else.1084, align 8
  call void @free_candy_value(ptr %7572)
  %7573 = load ptr, ptr @fun_Core_iterator_128_equals_else.1086, align 8
  call void @free_candy_value(ptr %7573)
  %7574 = load ptr, ptr @353, align 8
  call void @free_candy_value(ptr %7574)
  %7575 = load ptr, ptr @fun_Core_iterator_128_equals_else.1088, align 8
  call void @free_candy_value(ptr %7575)
  %7576 = load ptr, ptr @354, align 8
  call void @free_candy_value(ptr %7576)
  %7577 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1090, align 8
  call void @free_candy_value(ptr %7577)
  %7578 = load ptr, ptr @fun_Core_iterator_137_equals_then.1092, align 8
  call void @free_candy_value(ptr %7578)
  %7579 = load ptr, ptr @fun_Core_iterator_137_equals_then.1094, align 8
  call void @free_candy_value(ptr %7579)
  %7580 = load ptr, ptr @fun_Core_iterator_137_equals_then.1096, align 8
  call void @free_candy_value(ptr %7580)
  %7581 = load ptr, ptr @fun_Core_iterator_137_equals_then.1098, align 8
  call void @free_candy_value(ptr %7581)
  %7582 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1100, align 8
  call void @free_candy_value(ptr %7582)
  %7583 = load ptr, ptr @355, align 8
  call void @free_candy_value(ptr %7583)
  %7584 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1102, align 8
  call void @free_candy_value(ptr %7584)
  %7585 = load ptr, ptr @356, align 8
  call void @free_candy_value(ptr %7585)
  %7586 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1104, align 8
  call void @free_candy_value(ptr %7586)
  %7587 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1106, align 8
  call void @free_candy_value(ptr %7587)
  %7588 = load ptr, ptr @357, align 8
  call void @free_candy_value(ptr %7588)
  %7589 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1108, align 8
  call void @free_candy_value(ptr %7589)
  %7590 = load ptr, ptr @358, align 8
  call void @free_candy_value(ptr %7590)
  %7591 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1110, align 8
  call void @free_candy_value(ptr %7591)
  %7592 = load ptr, ptr @359, align 8
  call void @free_candy_value(ptr %7592)
  %7593 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1112, align 8
  call void @free_candy_value(ptr %7593)
  %7594 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1114, align 8
  call void @free_candy_value(ptr %7594)
  %7595 = load ptr, ptr @fun_Core_iterator_137_equals_else.1116, align 8
  call void @free_candy_value(ptr %7595)
  %7596 = load ptr, ptr @360, align 8
  call void @free_candy_value(ptr %7596)
  %7597 = load ptr, ptr @fun_Core_iterator_137_equals_else.1118, align 8
  call void @free_candy_value(ptr %7597)
  %7598 = load ptr, ptr @fun_Core_iterator_137_equals_else.1120, align 8
  call void @free_candy_value(ptr %7598)
  %7599 = load ptr, ptr @361, align 8
  call void @free_candy_value(ptr %7599)
  %7600 = load ptr, ptr @fun_Core_iterator_137_equals_else.1122, align 8
  call void @free_candy_value(ptr %7600)
  %7601 = load ptr, ptr @362, align 8
  call void @free_candy_value(ptr %7601)
  %7602 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1124, align 8
  call void @free_candy_value(ptr %7602)
  %7603 = load ptr, ptr @num_1000000000, align 8
  call void @free_candy_value(ptr %7603)
  %7604 = load ptr, ptr @"Chrono:duration:isNumber:18:9", align 8
  call void @free_candy_value(ptr %7604)
  %7605 = load ptr, ptr @"Chrono:duration:isNumber:19", align 8
  call void @free_candy_value(ptr %7605)
  %7606 = load ptr, ptr @"text_`isNumber n` was not satisfied", align 8
  call void @free_candy_value(ptr %7606)
  %7607 = load ptr, ptr @"Chrono:duration:numberAsFixedDecimal:4", align 8
  call void @free_candy_value(ptr %7607)
  %7608 = load ptr, ptr @"Chrono:duration:numberAsFixedDecimal:15", align 8
  call void @free_candy_value(ptr %7608)
  %7609 = load ptr, ptr @"Chrono:duration:numberAsFixedDecimal:17:9", align 8
  call void @free_candy_value(ptr %7609)
  %7610 = load ptr, ptr @"Chrono:duration:numberAsFixedDecimal:18", align 8
  call void @free_candy_value(ptr %7610)
  %7611 = load ptr, ptr @fun_Chrono_duration_numberAsFixedDecimal, align 8
  call void @free_candy_value(ptr %7611)
  %7612 = load ptr, ptr @fun_Chrono_duration_isNumber_18, align 8
  call void @free_candy_value(ptr %7612)
  %7613 = load ptr, ptr @fun_Chrono_duration_numberAsFixedDecimal_16, align 8
  call void @free_candy_value(ptr %7613)
  %7614 = load ptr, ptr @fun_Chrono_duration_numberAsFixedDecimal_17, align 8
  call void @free_candy_value(ptr %7614)
  %7615 = load ptr, ptr @"text_`isNumber nanoseconds` was not satisfied", align 8
  call void @free_candy_value(ptr %7615)
  %7616 = load ptr, ptr @"Chrono:duration:fromNanoseconds:4", align 8
  call void @free_candy_value(ptr %7616)
  %7617 = load ptr, ptr @"Chrono:duration:fromNanoseconds:8", align 8
  call void @free_candy_value(ptr %7617)
  %7618 = load ptr, ptr @"Chrono:duration:fromNanoseconds:34", align 8
  call void @free_candy_value(ptr %7618)
  %7619 = load ptr, ptr @fun_Chrono_duration_fromNanoseconds, align 8
  call void @free_candy_value(ptr %7619)
  %7620 = load ptr, ptr @fun_Chrono_duration_isNumber_18.1126, align 8
  call void @free_candy_value(ptr %7620)
  %7621 = load ptr, ptr @tag_Duration.1127, align 8
  call void @free_candy_value(ptr %7621)
  %7622 = load ptr, ptr @"Chrono:clock:is:1", align 8
  call void @free_candy_value(ptr %7622)
  %7623 = load ptr, ptr @tag_Clock, align 8
  call void @free_candy_value(ptr %7623)
  %7624 = load ptr, ptr @"text_Expected Clock, got ", align 8
  call void @free_candy_value(ptr %7624)
  %7625 = load ptr, ptr @"Chrono:clock:is:1:f", align 8
  call void @free_candy_value(ptr %7625)
  %7626 = load ptr, ptr @"Chrono:clock:is:1:9", align 8
  call void @free_candy_value(ptr %7626)
  %7627 = load ptr, ptr @fun_Chrono_clock_is, align 8
  call void @free_candy_value(ptr %7627)
  %7628 = load ptr, ptr @fun_Chrono_clock_is_1_equals_then, align 8
  call void @free_candy_value(ptr %7628)
  %7629 = load ptr, ptr @fun_Chrono_clock_is_1_equals_then.1129, align 8
  call void @free_candy_value(ptr %7629)
  %7630 = load ptr, ptr @fun_Chrono_clock_is_1_equals_then.1131, align 8
  call void @free_candy_value(ptr %7630)
  %7631 = load ptr, ptr @363, align 8
  call void @free_candy_value(ptr %7631)
  %7632 = load ptr, ptr @fun_Chrono_clock_is_1_equals_else, align 8
  call void @free_candy_value(ptr %7632)
  %7633 = load ptr, ptr @fun_Chrono_clock_is_1_equals_else.1133, align 8
  call void @free_candy_value(ptr %7633)
  %7634 = load ptr, ptr @364, align 8
  call void @free_candy_value(ptr %7634)
  %7635 = load ptr, ptr @fun_Chrono_clock_is_1_equals_else.1135, align 8
  call void @free_candy_value(ptr %7635)
  %7636 = load ptr, ptr @365, align 8
  call void @free_candy_value(ptr %7636)
  %7637 = load ptr, ptr @fun_Chrono_clock_is_1_case-0_matched, align 8
  call void @free_candy_value(ptr %7637)
  %7638 = load ptr, ptr @fun_Chrono_clock_is_1_case-0_didNotMatch, align 8
  call void @free_candy_value(ptr %7638)
  %7639 = load ptr, ptr @"Chrono:clock:fromSystemClock:9", align 8
  call void @free_candy_value(ptr %7639)
  %7640 = load ptr, ptr @"text_`function.is0 systemClock` was not satisfied", align 8
  call void @free_candy_value(ptr %7640)
  %7641 = load ptr, ptr @"Chrono:clock:fromSystemClock:11", align 8
  call void @free_candy_value(ptr %7641)
  %7642 = load ptr, ptr @"Chrono:clock:fromSystemClock:13:9", align 8
  call void @free_candy_value(ptr %7642)
  %7643 = load ptr, ptr @"Chrono:clock:fromSystemClock:13:18", align 8
  call void @free_candy_value(ptr %7643)
  %7644 = load ptr, ptr @"Chrono:clock:fromSystemClock:13:27", align 8
  call void @free_candy_value(ptr %7644)
  %7645 = load ptr, ptr @fun_Chrono_clock_fromSystemClock, align 8
  call void @free_candy_value(ptr %7645)
  %7646 = load ptr, ptr @fun_Chrono_clock_fromSystemClock_13, align 8
  call void @free_candy_value(ptr %7646)
  %7647 = load ptr, ptr @tag_Instant.1136, align 8
  call void @free_candy_value(ptr %7647)
  %7648 = load ptr, ptr @tag_Clock.1137, align 8
  call void @free_candy_value(ptr %7648)
  %7649 = load ptr, ptr @"Chrono:clock:now:2", align 8
  call void @free_candy_value(ptr %7649)
  %7650 = load ptr, ptr @"text_`is clock` was not satisfied", align 8
  call void @free_candy_value(ptr %7650)
  %7651 = load ptr, ptr @"Chrono:clock:now:4", align 8
  call void @free_candy_value(ptr %7651)
  %7652 = load ptr, ptr @"Chrono:clock:now:14", align 8
  call void @free_candy_value(ptr %7652)
  %7653 = load ptr, ptr @"Chrono:clock:now:23", align 8
  call void @free_candy_value(ptr %7653)
  %7654 = load ptr, ptr @fun_Chrono_clock_now, align 8
  call void @free_candy_value(ptr %7654)
  %7655 = load ptr, ptr @fun_Core_iterator_128_equals_then.1139, align 8
  call void @free_candy_value(ptr %7655)
  %7656 = load ptr, ptr @fun_Core_iterator_128_equals_then.1141, align 8
  call void @free_candy_value(ptr %7656)
  %7657 = load ptr, ptr @fun_Core_iterator_128_equals_then.1143, align 8
  call void @free_candy_value(ptr %7657)
  %7658 = load ptr, ptr @fun_Core_iterator_128_equals_then.1145, align 8
  call void @free_candy_value(ptr %7658)
  %7659 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1147, align 8
  call void @free_candy_value(ptr %7659)
  %7660 = load ptr, ptr @366, align 8
  call void @free_candy_value(ptr %7660)
  %7661 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1149, align 8
  call void @free_candy_value(ptr %7661)
  %7662 = load ptr, ptr @367, align 8
  call void @free_candy_value(ptr %7662)
  %7663 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1151, align 8
  call void @free_candy_value(ptr %7663)
  %7664 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1153, align 8
  call void @free_candy_value(ptr %7664)
  %7665 = load ptr, ptr @368, align 8
  call void @free_candy_value(ptr %7665)
  %7666 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1155, align 8
  call void @free_candy_value(ptr %7666)
  %7667 = load ptr, ptr @369, align 8
  call void @free_candy_value(ptr %7667)
  %7668 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1157, align 8
  call void @free_candy_value(ptr %7668)
  %7669 = load ptr, ptr @370, align 8
  call void @free_candy_value(ptr %7669)
  %7670 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1159, align 8
  call void @free_candy_value(ptr %7670)
  %7671 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1161, align 8
  call void @free_candy_value(ptr %7671)
  %7672 = load ptr, ptr @fun_Core_iterator_128_equals_else.1163, align 8
  call void @free_candy_value(ptr %7672)
  %7673 = load ptr, ptr @371, align 8
  call void @free_candy_value(ptr %7673)
  %7674 = load ptr, ptr @fun_Core_iterator_128_equals_else.1165, align 8
  call void @free_candy_value(ptr %7674)
  %7675 = load ptr, ptr @fun_Core_iterator_128_equals_else.1167, align 8
  call void @free_candy_value(ptr %7675)
  %7676 = load ptr, ptr @372, align 8
  call void @free_candy_value(ptr %7676)
  %7677 = load ptr, ptr @fun_Core_iterator_128_equals_else.1169, align 8
  call void @free_candy_value(ptr %7677)
  %7678 = load ptr, ptr @373, align 8
  call void @free_candy_value(ptr %7678)
  %7679 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1171, align 8
  call void @free_candy_value(ptr %7679)
  %7680 = load ptr, ptr @fun_Core_iterator_137_equals_then.1173, align 8
  call void @free_candy_value(ptr %7680)
  %7681 = load ptr, ptr @fun_Core_iterator_137_equals_then.1175, align 8
  call void @free_candy_value(ptr %7681)
  %7682 = load ptr, ptr @fun_Core_iterator_137_equals_then.1177, align 8
  call void @free_candy_value(ptr %7682)
  %7683 = load ptr, ptr @fun_Core_iterator_137_equals_then.1179, align 8
  call void @free_candy_value(ptr %7683)
  %7684 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1181, align 8
  call void @free_candy_value(ptr %7684)
  %7685 = load ptr, ptr @374, align 8
  call void @free_candy_value(ptr %7685)
  %7686 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1183, align 8
  call void @free_candy_value(ptr %7686)
  %7687 = load ptr, ptr @375, align 8
  call void @free_candy_value(ptr %7687)
  %7688 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1185, align 8
  call void @free_candy_value(ptr %7688)
  %7689 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1187, align 8
  call void @free_candy_value(ptr %7689)
  %7690 = load ptr, ptr @376, align 8
  call void @free_candy_value(ptr %7690)
  %7691 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1189, align 8
  call void @free_candy_value(ptr %7691)
  %7692 = load ptr, ptr @377, align 8
  call void @free_candy_value(ptr %7692)
  %7693 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1191, align 8
  call void @free_candy_value(ptr %7693)
  %7694 = load ptr, ptr @378, align 8
  call void @free_candy_value(ptr %7694)
  %7695 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1193, align 8
  call void @free_candy_value(ptr %7695)
  %7696 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1195, align 8
  call void @free_candy_value(ptr %7696)
  %7697 = load ptr, ptr @fun_Core_iterator_137_equals_else.1197, align 8
  call void @free_candy_value(ptr %7697)
  %7698 = load ptr, ptr @379, align 8
  call void @free_candy_value(ptr %7698)
  %7699 = load ptr, ptr @fun_Core_iterator_137_equals_else.1199, align 8
  call void @free_candy_value(ptr %7699)
  %7700 = load ptr, ptr @fun_Core_iterator_137_equals_else.1201, align 8
  call void @free_candy_value(ptr %7700)
  %7701 = load ptr, ptr @380, align 8
  call void @free_candy_value(ptr %7701)
  %7702 = load ptr, ptr @fun_Core_iterator_137_equals_else.1203, align 8
  call void @free_candy_value(ptr %7702)
  %7703 = load ptr, ptr @381, align 8
  call void @free_candy_value(ptr %7703)
  %7704 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1205, align 8
  call void @free_candy_value(ptr %7704)
  %7705 = load ptr, ptr @num_60, align 8
  call void @free_candy_value(ptr %7705)
  %7706 = load ptr, ptr @num_3600, align 8
  call void @free_candy_value(ptr %7706)
  %7707 = load ptr, ptr @num_86400, align 8
  call void @free_candy_value(ptr %7707)
  %7708 = load ptr, ptr @"Builtins::intRemainder:11", align 8
  call void @free_candy_value(ptr %7708)
  %7709 = load ptr, ptr @"Builtins::intRemainder:17", align 8
  call void @free_candy_value(ptr %7709)
  %7710 = load ptr, ptr @"Builtins::intRemainder:25", align 8
  call void @free_candy_value(ptr %7710)
  %7711 = load ptr, ptr @"Builtins::intRemainder:32", align 8
  call void @free_candy_value(ptr %7711)
  %7712 = load ptr, ptr @"Builtins::intRemainder:5", align 8
  call void @free_candy_value(ptr %7712)
  %7713 = load ptr, ptr @"Builtins::textGetRange:11", align 8
  call void @free_candy_value(ptr %7713)
  %7714 = load ptr, ptr @"Builtins::textGetRange:14", align 8
  call void @free_candy_value(ptr %7714)
  %7715 = load ptr, ptr @"Builtins::textGetRange:16", align 8
  call void @free_candy_value(ptr %7715)
  %7716 = load ptr, ptr @"Builtins::textGetRange:24", align 8
  call void @free_candy_value(ptr %7716)
  %7717 = load ptr, ptr @"Builtins::textGetRange:25", align 8
  call void @free_candy_value(ptr %7717)
  %7718 = load ptr, ptr @"Builtins::textGetRange:27", align 8
  call void @free_candy_value(ptr %7718)
  %7719 = load ptr, ptr @"Builtins::textGetRange:33", align 8
  call void @free_candy_value(ptr %7719)
  %7720 = load ptr, ptr @"Builtins::textGetRange:36", align 8
  call void @free_candy_value(ptr %7720)
  %7721 = load ptr, ptr @"Builtins::textGetRange:38", align 8
  call void @free_candy_value(ptr %7721)
  %7722 = load ptr, ptr @"Builtins::textGetRange:46", align 8
  call void @free_candy_value(ptr %7722)
  %7723 = load ptr, ptr @"Builtins::textGetRange:47", align 8
  call void @free_candy_value(ptr %7723)
  %7724 = load ptr, ptr @"Builtins::textGetRange:49", align 8
  call void @free_candy_value(ptr %7724)
  %7725 = load ptr, ptr @"Builtins::textGetRange:5", align 8
  call void @free_candy_value(ptr %7725)
  %7726 = load ptr, ptr @"Builtins::textGetRange:53", align 8
  call void @free_candy_value(ptr %7726)
  %7727 = load ptr, ptr @"Builtins::textGetRange:55", align 8
  call void @free_candy_value(ptr %7727)
  %7728 = load ptr, ptr @"Builtins::textGetRange:63", align 8
  call void @free_candy_value(ptr %7728)
  %7729 = load ptr, ptr @"Builtins::textLength:11", align 8
  call void @free_candy_value(ptr %7729)
  %7730 = load ptr, ptr @"Builtins::textLength:5", align 8
  call void @free_candy_value(ptr %7730)
  %7731 = load ptr, ptr @"Builtins::textStartsWith:11", align 8
  call void @free_candy_value(ptr %7731)
  %7732 = load ptr, ptr @"Builtins::textStartsWith:18", align 8
  call void @free_candy_value(ptr %7732)
  %7733 = load ptr, ptr @"Builtins::textStartsWith:5", align 8
  call void @free_candy_value(ptr %7733)
  %7734 = load ptr, ptr @"Core:fixedDecimal:floorToInt:18", align 8
  call void @free_candy_value(ptr %7734)
  %7735 = load ptr, ptr @"Core:fixedDecimal:floorToInt:2", align 8
  call void @free_candy_value(ptr %7735)
  %7736 = load ptr, ptr @"Core:fixedDecimal:floorToInt:20", align 8
  call void @free_candy_value(ptr %7736)
  %7737 = load ptr, ptr @"Core:fixedDecimal:floorToInt:21", align 8
  call void @free_candy_value(ptr %7737)
  %7738 = load ptr, ptr @"Core:fixedDecimal:floorToInt:4", align 8
  call void @free_candy_value(ptr %7738)
  %7739 = load ptr, ptr @"Core:fixedDecimal:floorToInt:7", align 8
  call void @free_candy_value(ptr %7739)
  %7740 = load ptr, ptr @"Core:text:removePrefix:14", align 8
  call void @free_candy_value(ptr %7740)
  %7741 = load ptr, ptr @"Core:text:removePrefix:15:4", align 8
  call void @free_candy_value(ptr %7741)
  %7742 = load ptr, ptr @"Core:text:removePrefix:15:7", align 8
  call void @free_candy_value(ptr %7742)
  %7743 = load ptr, ptr @"Core:text:removePrefix:15:8", align 8
  call void @free_candy_value(ptr %7743)
  %7744 = load ptr, ptr @"Core:text:removePrefix:17", align 8
  call void @free_candy_value(ptr %7744)
  %7745 = load ptr, ptr @"Core:text:removePrefix:4", align 8
  call void @free_candy_value(ptr %7745)
  %7746 = load ptr, ptr @"Core:text:removePrefix:9", align 8
  call void @free_candy_value(ptr %7746)
  %7747 = load ptr, ptr @fun_candy_builtin_int_remainder, align 8
  call void @free_candy_value(ptr %7747)
  %7748 = load ptr, ptr @fun_candy_builtin_text_get_range, align 8
  call void @free_candy_value(ptr %7748)
  %7749 = load ptr, ptr @fun_candy_builtin_text_length, align 8
  call void @free_candy_value(ptr %7749)
  %7750 = load ptr, ptr @fun_candy_builtin_text_starts_with, align 8
  call void @free_candy_value(ptr %7750)
  %7751 = load ptr, ptr @text_1, align 8
  call void @free_candy_value(ptr %7751)
  %7752 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %7752)
  %7753 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %7753)
  %7754 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7754)
  %7755 = load ptr, ptr @"text_`is prefix` was not satisfied", align 8
  call void @free_candy_value(ptr %7755)
  %7756 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  call void @free_candy_value(ptr %7756)
  %7757 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %7757)
  %7758 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  call void @free_candy_value(ptr %7758)
  %7759 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  call void @free_candy_value(ptr %7759)
  %7760 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  call void @free_candy_value(ptr %7760)
  %7761 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  call void @free_candy_value(ptr %7761)
  %7762 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  call void @free_candy_value(ptr %7762)
  %7763 = load ptr, ptr @fun_Builtins__intRemainder, align 8
  call void @free_candy_value(ptr %7763)
  %7764 = load ptr, ptr @fun_Builtins__textGetRange, align 8
  call void @free_candy_value(ptr %7764)
  %7765 = load ptr, ptr @fun_Core_text_removePrefix, align 8
  call void @free_candy_value(ptr %7765)
  %7766 = load ptr, ptr @fun_Core_text_removePrefix_15, align 8
  call void @free_candy_value(ptr %7766)
  %7767 = load ptr, ptr @fun_Core_text_removePrefix_16, align 8
  call void @free_candy_value(ptr %7767)
  %7768 = load ptr, ptr @fun_Core_fixedDecimal_floorToInt, align 8
  call void @free_candy_value(ptr %7768)
  %7769 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1207, align 8
  call void @free_candy_value(ptr %7769)
  %7770 = load ptr, ptr @"Core:fixedDecimal:multiply:2", align 8
  call void @free_candy_value(ptr %7770)
  %7771 = load ptr, ptr @"text_`is factorA` was not satisfied", align 8
  call void @free_candy_value(ptr %7771)
  %7772 = load ptr, ptr @"Core:fixedDecimal:multiply:4", align 8
  call void @free_candy_value(ptr %7772)
  %7773 = load ptr, ptr @"Core:fixedDecimal:multiply:7", align 8
  call void @free_candy_value(ptr %7773)
  %7774 = load ptr, ptr @"text_`is factorB` was not satisfied", align 8
  call void @free_candy_value(ptr %7774)
  %7775 = load ptr, ptr @"Core:fixedDecimal:multiply:9", align 8
  call void @free_candy_value(ptr %7775)
  %7776 = load ptr, ptr @"Core:fixedDecimal:multiply:13", align 8
  call void @free_candy_value(ptr %7776)
  %7777 = load ptr, ptr @"Core:fixedDecimal:multiply:24", align 8
  call void @free_candy_value(ptr %7777)
  %7778 = load ptr, ptr @"Core:fixedDecimal:multiply:25", align 8
  call void @free_candy_value(ptr %7778)
  %7779 = load ptr, ptr @"Core:fixedDecimal:multiply:28", align 8
  call void @free_candy_value(ptr %7779)
  %7780 = load ptr, ptr @"Core:fixedDecimal:multiply:39", align 8
  call void @free_candy_value(ptr %7780)
  %7781 = load ptr, ptr @"Core:fixedDecimal:multiply:40", align 8
  call void @free_candy_value(ptr %7781)
  %7782 = load ptr, ptr @"Core:fixedDecimal:multiply:41", align 8
  call void @free_candy_value(ptr %7782)
  %7783 = load ptr, ptr @fun_Core_fixedDecimal_multiply, align 8
  call void @free_candy_value(ptr %7783)
  %7784 = load ptr, ptr @"Core:fixedDecimal:isNegative:2", align 8
  call void @free_candy_value(ptr %7784)
  %7785 = load ptr, ptr @"Core:fixedDecimal:isNegative:4", align 8
  call void @free_candy_value(ptr %7785)
  %7786 = load ptr, ptr @"Core:fixedDecimal:isNegative:7", align 8
  call void @free_candy_value(ptr %7786)
  %7787 = load ptr, ptr @"Core:fixedDecimal:isNegative:17", align 8
  call void @free_candy_value(ptr %7787)
  %7788 = load ptr, ptr @"Core:fixedDecimal:toText:2", align 8
  call void @free_candy_value(ptr %7788)
  %7789 = load ptr, ptr @"Core:fixedDecimal:toText:4", align 8
  call void @free_candy_value(ptr %7789)
  %7790 = load ptr, ptr @"Core:fixedDecimal:toText:7", align 8
  call void @free_candy_value(ptr %7790)
  %7791 = load ptr, ptr @"Core:fixedDecimal:toText:10:2", align 8
  call void @free_candy_value(ptr %7791)
  %7792 = load ptr, ptr @"Core:fixedDecimal:toText:10:4", align 8
  call void @free_candy_value(ptr %7792)
  %7793 = load ptr, ptr @"Core:fixedDecimal:toText:10:8", align 8
  call void @free_candy_value(ptr %7793)
  %7794 = load ptr, ptr @"Core:fixedDecimal:toText:10:18", align 8
  call void @free_candy_value(ptr %7794)
  %7795 = load ptr, ptr @"Core:fixedDecimal:toText:10:30", align 8
  call void @free_candy_value(ptr %7795)
  %7796 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:10", align 8
  call void @free_candy_value(ptr %7796)
  %7797 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:28", align 8
  call void @free_candy_value(ptr %7797)
  %7798 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:10", align 8
  call void @free_candy_value(ptr %7798)
  %7799 = load ptr, ptr @text_-1, align 8
  call void @free_candy_value(ptr %7799)
  %7800 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:28", align 8
  call void @free_candy_value(ptr %7800)
  %7801 = load ptr, ptr @"Core:fixedDecimal:toText:10:33", align 8
  call void @free_candy_value(ptr %7801)
  %7802 = load ptr, ptr @"Core:fixedDecimal:toText:11", align 8
  call void @free_candy_value(ptr %7802)
  %7803 = load ptr, ptr @"Core:fixedDecimal:toText:20", align 8
  call void @free_candy_value(ptr %7803)
  %7804 = load ptr, ptr @"Core:fixedDecimal:toText:21", align 8
  call void @free_candy_value(ptr %7804)
  %7805 = load ptr, ptr @"Core:fixedDecimal:toText:23:0", align 8
  call void @free_candy_value(ptr %7805)
  %7806 = load ptr, ptr @"Core:fixedDecimal:toText:24", align 8
  call void @free_candy_value(ptr %7806)
  %7807 = load ptr, ptr @"Core:fixedDecimal:toText:27", align 8
  call void @free_candy_value(ptr %7807)
  %7808 = load ptr, ptr @"Core:fixedDecimal:toText:28", align 8
  call void @free_candy_value(ptr %7808)
  %7809 = load ptr, ptr @"Core:fixedDecimal:toText:30:0", align 8
  call void @free_candy_value(ptr %7809)
  %7810 = load ptr, ptr @"Core:fixedDecimal:toText:31", align 8
  call void @free_candy_value(ptr %7810)
  %7811 = load ptr, ptr @"Core:fixedDecimal:toText:32", align 8
  call void @free_candy_value(ptr %7811)
  %7812 = load ptr, ptr @"Core:fixedDecimal:toText:33", align 8
  call void @free_candy_value(ptr %7812)
  %7813 = load ptr, ptr @fun_Core_fixedDecimal_toText, align 8
  call void @free_candy_value(ptr %7813)
  %7814 = load ptr, ptr @fun_Core_fixedDecimal_toText_10, align 8
  call void @free_candy_value(ptr %7814)
  %7815 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1209, align 8
  call void @free_candy_value(ptr %7815)
  %7816 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_31, align 8
  call void @free_candy_value(ptr %7816)
  %7817 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_32, align 8
  call void @free_candy_value(ptr %7817)
  %7818 = load ptr, ptr @fun_Core_fixedDecimal_toText_22, align 8
  call void @free_candy_value(ptr %7818)
  %7819 = load ptr, ptr @fun_Core_fixedDecimal_toText_23, align 8
  call void @free_candy_value(ptr %7819)
  %7820 = load ptr, ptr @fun_Core_fixedDecimal_toText_29, align 8
  call void @free_candy_value(ptr %7820)
  %7821 = load ptr, ptr @fun_Core_fixedDecimal_toText_30, align 8
  call void @free_candy_value(ptr %7821)
  %7822 = load ptr, ptr @fun_Core_iterator_128_equals_then.1211, align 8
  call void @free_candy_value(ptr %7822)
  %7823 = load ptr, ptr @fun_Core_iterator_128_equals_then.1213, align 8
  call void @free_candy_value(ptr %7823)
  %7824 = load ptr, ptr @fun_Core_iterator_128_equals_then.1215, align 8
  call void @free_candy_value(ptr %7824)
  %7825 = load ptr, ptr @fun_Core_iterator_128_equals_then.1217, align 8
  call void @free_candy_value(ptr %7825)
  %7826 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1219, align 8
  call void @free_candy_value(ptr %7826)
  %7827 = load ptr, ptr @382, align 8
  call void @free_candy_value(ptr %7827)
  %7828 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1221, align 8
  call void @free_candy_value(ptr %7828)
  %7829 = load ptr, ptr @383, align 8
  call void @free_candy_value(ptr %7829)
  %7830 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1223, align 8
  call void @free_candy_value(ptr %7830)
  %7831 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1225, align 8
  call void @free_candy_value(ptr %7831)
  %7832 = load ptr, ptr @384, align 8
  call void @free_candy_value(ptr %7832)
  %7833 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1227, align 8
  call void @free_candy_value(ptr %7833)
  %7834 = load ptr, ptr @385, align 8
  call void @free_candy_value(ptr %7834)
  %7835 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1229, align 8
  call void @free_candy_value(ptr %7835)
  %7836 = load ptr, ptr @386, align 8
  call void @free_candy_value(ptr %7836)
  %7837 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1231, align 8
  call void @free_candy_value(ptr %7837)
  %7838 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1233, align 8
  call void @free_candy_value(ptr %7838)
  %7839 = load ptr, ptr @fun_Core_iterator_128_equals_else.1235, align 8
  call void @free_candy_value(ptr %7839)
  %7840 = load ptr, ptr @387, align 8
  call void @free_candy_value(ptr %7840)
  %7841 = load ptr, ptr @fun_Core_iterator_128_equals_else.1237, align 8
  call void @free_candy_value(ptr %7841)
  %7842 = load ptr, ptr @fun_Core_iterator_128_equals_else.1239, align 8
  call void @free_candy_value(ptr %7842)
  %7843 = load ptr, ptr @388, align 8
  call void @free_candy_value(ptr %7843)
  %7844 = load ptr, ptr @fun_Core_iterator_128_equals_else.1241, align 8
  call void @free_candy_value(ptr %7844)
  %7845 = load ptr, ptr @389, align 8
  call void @free_candy_value(ptr %7845)
  %7846 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1243, align 8
  call void @free_candy_value(ptr %7846)
  %7847 = load ptr, ptr @fun_Core_iterator_137_equals_then.1245, align 8
  call void @free_candy_value(ptr %7847)
  %7848 = load ptr, ptr @fun_Core_iterator_137_equals_then.1247, align 8
  call void @free_candy_value(ptr %7848)
  %7849 = load ptr, ptr @fun_Core_iterator_137_equals_then.1249, align 8
  call void @free_candy_value(ptr %7849)
  %7850 = load ptr, ptr @fun_Core_iterator_137_equals_then.1251, align 8
  call void @free_candy_value(ptr %7850)
  %7851 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1253, align 8
  call void @free_candy_value(ptr %7851)
  %7852 = load ptr, ptr @390, align 8
  call void @free_candy_value(ptr %7852)
  %7853 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1255, align 8
  call void @free_candy_value(ptr %7853)
  %7854 = load ptr, ptr @391, align 8
  call void @free_candy_value(ptr %7854)
  %7855 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1257, align 8
  call void @free_candy_value(ptr %7855)
  %7856 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1259, align 8
  call void @free_candy_value(ptr %7856)
  %7857 = load ptr, ptr @392, align 8
  call void @free_candy_value(ptr %7857)
  %7858 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1261, align 8
  call void @free_candy_value(ptr %7858)
  %7859 = load ptr, ptr @393, align 8
  call void @free_candy_value(ptr %7859)
  %7860 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1263, align 8
  call void @free_candy_value(ptr %7860)
  %7861 = load ptr, ptr @394, align 8
  call void @free_candy_value(ptr %7861)
  %7862 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1265, align 8
  call void @free_candy_value(ptr %7862)
  %7863 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1267, align 8
  call void @free_candy_value(ptr %7863)
  %7864 = load ptr, ptr @fun_Core_iterator_137_equals_else.1269, align 8
  call void @free_candy_value(ptr %7864)
  %7865 = load ptr, ptr @395, align 8
  call void @free_candy_value(ptr %7865)
  %7866 = load ptr, ptr @fun_Core_iterator_137_equals_else.1271, align 8
  call void @free_candy_value(ptr %7866)
  %7867 = load ptr, ptr @fun_Core_iterator_137_equals_else.1273, align 8
  call void @free_candy_value(ptr %7867)
  %7868 = load ptr, ptr @396, align 8
  call void @free_candy_value(ptr %7868)
  %7869 = load ptr, ptr @fun_Core_iterator_137_equals_else.1275, align 8
  call void @free_candy_value(ptr %7869)
  %7870 = load ptr, ptr @397, align 8
  call void @free_candy_value(ptr %7870)
  %7871 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1277, align 8
  call void @free_candy_value(ptr %7871)
  %7872 = load ptr, ptr @"Core:list:firstIndexOf:8", align 8
  call void @free_candy_value(ptr %7872)
  %7873 = load ptr, ptr @"Core:list:firstIndexWhere:14", align 8
  call void @free_candy_value(ptr %7873)
  %7874 = load ptr, ptr @"Core:list:firstIndexWhere:16", align 8
  call void @free_candy_value(ptr %7874)
  %7875 = load ptr, ptr @"Core:list:firstIndexWhere:23:1", align 8
  call void @free_candy_value(ptr %7875)
  %7876 = load ptr, ptr @"Core:list:firstIndexWhere:23:10:16", align 8
  call void @free_candy_value(ptr %7876)
  %7877 = load ptr, ptr @"Core:list:firstIndexWhere:23:10:18", align 8
  call void @free_candy_value(ptr %7877)
  %7878 = load ptr, ptr @"Core:list:firstIndexWhere:23:10:22:14", align 8
  call void @free_candy_value(ptr %7878)
  %7879 = load ptr, ptr @"Core:list:firstIndexWhere:23:10:22:16", align 8
  call void @free_candy_value(ptr %7879)
  %7880 = load ptr, ptr @"Core:list:firstIndexWhere:23:10:23", align 8
  call void @free_candy_value(ptr %7880)
  %7881 = load ptr, ptr @"Core:list:firstIndexWhere:23:10:4", align 8
  call void @free_candy_value(ptr %7881)
  %7882 = load ptr, ptr @"Core:list:firstIndexWhere:23:10:5", align 8
  call void @free_candy_value(ptr %7882)
  %7883 = load ptr, ptr @"Core:list:firstIndexWhere:23:11", align 8
  call void @free_candy_value(ptr %7883)
  %7884 = load ptr, ptr @"Core:list:firstIndexWhere:23:7", align 8
  call void @free_candy_value(ptr %7884)
  %7885 = load ptr, ptr @"Core:list:firstIndexWhere:23:index", align 8
  call void @free_candy_value(ptr %7885)
  %7886 = load ptr, ptr @"Core:list:firstIndexWhere:23:list", align 8
  call void @free_candy_value(ptr %7886)
  %7887 = load ptr, ptr @"Core:list:firstIndexWhere:24", align 8
  call void @free_candy_value(ptr %7887)
  %7888 = load ptr, ptr @"Core:list:firstIndexWhere:4", align 8
  call void @free_candy_value(ptr %7888)
  %7889 = load ptr, ptr @tag_NotFound, align 8
  call void @free_candy_value(ptr %7889)
  %7890 = load ptr, ptr @"text_Expected a List, got `", align 8
  call void @free_candy_value(ptr %7890)
  %7891 = load ptr, ptr @"text_Struct doesn't contain key `List`: `", align 8
  call void @free_candy_value(ptr %7891)
  %7892 = load ptr, ptr @"text_`bool.is predicateResult` was not satisfied", align 8
  call void @free_candy_value(ptr %7892)
  %7893 = load ptr, ptr @"text_`function.is1 predicate` was not satisfied", align 8
  call void @free_candy_value(ptr %7893)
  %7894 = load ptr, ptr @"fun_Core_list_firstIndexWhere_23_9, Core_list_firstWhere_21_case-1_matched, Core_list_lastIndexWhere_44_16, Core_list_lastWhere_21_case-1_matched", align 8
  call void @free_candy_value(ptr %7894)
  %7895 = load ptr, ptr @fun_Core_list_firstIndexWhere, align 8
  call void @free_candy_value(ptr %7895)
  %7896 = load ptr, ptr @fun_Core_list_firstIndexWhere_23, align 8
  call void @free_candy_value(ptr %7896)
  %7897 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_equals_then, align 8
  call void @free_candy_value(ptr %7897)
  %7898 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_then, align 8
  call void @free_candy_value(ptr %7898)
  %7899 = load ptr, ptr @398, align 8
  call void @free_candy_value(ptr %7899)
  %7900 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_else, align 8
  call void @free_candy_value(ptr %7900)
  %7901 = load ptr, ptr @399, align 8
  call void @free_candy_value(ptr %7901)
  %7902 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_then, align 8
  call void @free_candy_value(ptr %7902)
  %7903 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_then.1279, align 8
  call void @free_candy_value(ptr %7903)
  %7904 = load ptr, ptr @400, align 8
  call void @free_candy_value(ptr %7904)
  %7905 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_else.1281, align 8
  call void @free_candy_value(ptr %7905)
  %7906 = load ptr, ptr @401, align 8
  call void @free_candy_value(ptr %7906)
  %7907 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_then.1283, align 8
  call void @free_candy_value(ptr %7907)
  %7908 = load ptr, ptr @402, align 8
  call void @free_candy_value(ptr %7908)
  %7909 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_else, align 8
  call void @free_candy_value(ptr %7909)
  %7910 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_else.1285, align 8
  call void @free_candy_value(ptr %7910)
  %7911 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_equals_else, align 8
  call void @free_candy_value(ptr %7911)
  %7912 = load ptr, ptr @403, align 8
  call void @free_candy_value(ptr %7912)
  %7913 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_else.1287, align 8
  call void @free_candy_value(ptr %7913)
  %7914 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_10, align 8
  call void @free_candy_value(ptr %7914)
  %7915 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_10_21, align 8
  call void @free_candy_value(ptr %7915)
  %7916 = load ptr, ptr @tag_FoundAt, align 8
  call void @free_candy_value(ptr %7916)
  %7917 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_10_22, align 8
  call void @free_candy_value(ptr %7917)
  %7918 = load ptr, ptr @fun_Core_controlFlow_recursive_18.1289, align 8
  call void @free_candy_value(ptr %7918)
  %7919 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.1291, align 8
  call void @free_candy_value(ptr %7919)
  %7920 = load ptr, ptr @"Builtins::textCharacters:11", align 8
  call void @free_candy_value(ptr %7920)
  %7921 = load ptr, ptr @"Builtins::textCharacters:5", align 8
  call void @free_candy_value(ptr %7921)
  %7922 = load ptr, ptr @"Core:text:firstIndexOf:12", align 8
  call void @free_candy_value(ptr %7922)
  %7923 = load ptr, ptr @"Core:text:firstIndexOf:17", align 8
  call void @free_candy_value(ptr %7923)
  %7924 = load ptr, ptr @"Core:text:firstIndexOf:20", align 8
  call void @free_candy_value(ptr %7924)
  %7925 = load ptr, ptr @"Core:text:firstIndexOf:4", align 8
  call void @free_candy_value(ptr %7925)
  %7926 = load ptr, ptr @"Core:text:firstIndexOf:9", align 8
  call void @free_candy_value(ptr %7926)
  %7927 = load ptr, ptr @"Core:text:padEnd:16", align 8
  call void @free_candy_value(ptr %7927)
  %7928 = load ptr, ptr @"Core:text:padEnd:21", align 8
  call void @free_candy_value(ptr %7928)
  %7929 = load ptr, ptr @"Core:text:padEnd:24", align 8
  call void @free_candy_value(ptr %7929)
  %7930 = load ptr, ptr @"Core:text:padEnd:29", align 8
  call void @free_candy_value(ptr %7930)
  %7931 = load ptr, ptr @"Core:text:padEnd:32", align 8
  call void @free_candy_value(ptr %7931)
  %7932 = load ptr, ptr @"Core:text:padEnd:4", align 8
  call void @free_candy_value(ptr %7932)
  %7933 = load ptr, ptr @"Core:text:padEnd:45", align 8
  call void @free_candy_value(ptr %7933)
  %7934 = load ptr, ptr @"Core:text:padEnd:47:14", align 8
  call void @free_candy_value(ptr %7934)
  %7935 = load ptr, ptr @"Core:text:padEnd:47:15", align 8
  call void @free_candy_value(ptr %7935)
  %7936 = load ptr, ptr @"Core:text:padEnd:47:16", align 8
  call void @free_candy_value(ptr %7936)
  %7937 = load ptr, ptr @"Core:text:padEnd:48", align 8
  call void @free_candy_value(ptr %7937)
  %7938 = load ptr, ptr @"Core:text:padStart:16", align 8
  call void @free_candy_value(ptr %7938)
  %7939 = load ptr, ptr @"Core:text:padStart:21", align 8
  call void @free_candy_value(ptr %7939)
  %7940 = load ptr, ptr @"Core:text:padStart:24", align 8
  call void @free_candy_value(ptr %7940)
  %7941 = load ptr, ptr @"Core:text:padStart:29", align 8
  call void @free_candy_value(ptr %7941)
  %7942 = load ptr, ptr @"Core:text:padStart:32", align 8
  call void @free_candy_value(ptr %7942)
  %7943 = load ptr, ptr @"Core:text:padStart:4", align 8
  call void @free_candy_value(ptr %7943)
  %7944 = load ptr, ptr @"Core:text:padStart:45", align 8
  call void @free_candy_value(ptr %7944)
  %7945 = load ptr, ptr @"Core:text:padStart:47:12", align 8
  call void @free_candy_value(ptr %7945)
  %7946 = load ptr, ptr @"Core:text:padStart:47:13", align 8
  call void @free_candy_value(ptr %7946)
  %7947 = load ptr, ptr @"Core:text:padStart:47:16", align 8
  call void @free_candy_value(ptr %7947)
  %7948 = load ptr, ptr @"Core:text:padStart:48", align 8
  call void @free_candy_value(ptr %7948)
  %7949 = load ptr, ptr @"Core:text:repeat:16", align 8
  call void @free_candy_value(ptr %7949)
  %7950 = load ptr, ptr @"Core:text:repeat:27", align 8
  call void @free_candy_value(ptr %7950)
  %7951 = load ptr, ptr @"Core:text:repeat:29", align 8
  call void @free_candy_value(ptr %7951)
  %7952 = load ptr, ptr @"Core:text:repeat:34:1", align 8
  call void @free_candy_value(ptr %7952)
  %7953 = load ptr, ptr @"Core:text:repeat:34:8:14", align 8
  call void @free_candy_value(ptr %7953)
  %7954 = load ptr, ptr @"Core:text:repeat:34:8:17", align 8
  call void @free_candy_value(ptr %7954)
  %7955 = load ptr, ptr @"Core:text:repeat:34:8:3", align 8
  call void @free_candy_value(ptr %7955)
  %7956 = load ptr, ptr @"Core:text:repeat:34:9", align 8
  call void @free_candy_value(ptr %7956)
  %7957 = load ptr, ptr @"Core:text:repeat:34:repeatedText", align 8
  call void @free_candy_value(ptr %7957)
  %7958 = load ptr, ptr @"Core:text:repeat:34:times", align 8
  call void @free_candy_value(ptr %7958)
  %7959 = load ptr, ptr @"Core:text:repeat:35", align 8
  call void @free_candy_value(ptr %7959)
  %7960 = load ptr, ptr @"Core:text:repeat:4", align 8
  call void @free_candy_value(ptr %7960)
  %7961 = load ptr, ptr @fun_candy_builtin_text_characters, align 8
  call void @free_candy_value(ptr %7961)
  %7962 = load ptr, ptr @text_0, align 8
  call void @free_candy_value(ptr %7962)
  %7963 = load ptr, ptr @"text_Expected 2 items, got ", align 8
  call void @free_candy_value(ptr %7963)
  %7964 = load ptr, ptr @"text_`character | length | equals 1` was not satisfied", align 8
  call void @free_candy_value(ptr %7964)
  %7965 = load ptr, ptr @"text_`int.is len` was not satisfied", align 8
  call void @free_candy_value(ptr %7965)
  %7966 = load ptr, ptr @"text_`int.is times` was not satisfied", align 8
  call void @free_candy_value(ptr %7966)
  %7967 = load ptr, ptr @"text_`is character` was not satisfied", align 8
  call void @free_candy_value(ptr %7967)
  %7968 = load ptr, ptr @"text_`times | int.isGreaterThanOrEqualTo 1` was not satisfied", align 8
  call void @free_candy_value(ptr %7968)
  %7969 = load ptr, ptr @fun_Core_text_firstIndexOf, align 8
  call void @free_candy_value(ptr %7969)
  %7970 = load ptr, ptr @fun_Core_list_firstIndexOf_7, align 8
  call void @free_candy_value(ptr %7970)
  %7971 = load ptr, ptr @fun_Core_text_repeat, align 8
  call void @free_candy_value(ptr %7971)
  %7972 = load ptr, ptr @404, align 8
  call void @free_candy_value(ptr %7972)
  %7973 = load ptr, ptr @fun_Core_text_repeat_34, align 8
  call void @free_candy_value(ptr %7973)
  %7974 = load ptr, ptr @fun_Core_text_repeat_34_1_equals_then, align 8
  call void @free_candy_value(ptr %7974)
  %7975 = load ptr, ptr @fun_Core_text_repeat_34_1_equals_then.1293, align 8
  call void @free_candy_value(ptr %7975)
  %7976 = load ptr, ptr @405, align 8
  call void @free_candy_value(ptr %7976)
  %7977 = load ptr, ptr @fun_Core_text_repeat_34_1_equals_else, align 8
  call void @free_candy_value(ptr %7977)
  %7978 = load ptr, ptr @406, align 8
  call void @free_candy_value(ptr %7978)
  %7979 = load ptr, ptr @fun_Core_text_repeat_34_1_equals_else.1295, align 8
  call void @free_candy_value(ptr %7979)
  %7980 = load ptr, ptr @407, align 8
  call void @free_candy_value(ptr %7980)
  %7981 = load ptr, ptr @fun_Core_text_repeat_34_1_isMatch_else, align 8
  call void @free_candy_value(ptr %7981)
  %7982 = load ptr, ptr @fun_Core_text_repeat_34_7, align 8
  call void @free_candy_value(ptr %7982)
  %7983 = load ptr, ptr @fun_Core_text_repeat_34_8, align 8
  call void @free_candy_value(ptr %7983)
  %7984 = load ptr, ptr @408, align 8
  call void @free_candy_value(ptr %7984)
  %7985 = load ptr, ptr @fun_Core_controlFlow_recursive_18.1297, align 8
  call void @free_candy_value(ptr %7985)
  %7986 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.1299, align 8
  call void @free_candy_value(ptr %7986)
  %7987 = load ptr, ptr @fun_Core_text_padStart, align 8
  call void @free_candy_value(ptr %7987)
  %7988 = load ptr, ptr @fun_Core_text_padStart_46, align 8
  call void @free_candy_value(ptr %7988)
  %7989 = load ptr, ptr @fun_Core_text_padStart_47, align 8
  call void @free_candy_value(ptr %7989)
  %7990 = load ptr, ptr @fun_Core_text_padEnd, align 8
  call void @free_candy_value(ptr %7990)
  %7991 = load ptr, ptr @fun_Core_text_padEnd_46, align 8
  call void @free_candy_value(ptr %7991)
  %7992 = load ptr, ptr @fun_Core_text_padEnd_47, align 8
  call void @free_candy_value(ptr %7992)
  %7993 = load ptr, ptr @fun_Core_iterator_128_equals_then.1301, align 8
  call void @free_candy_value(ptr %7993)
  %7994 = load ptr, ptr @fun_Core_iterator_128_equals_then.1303, align 8
  call void @free_candy_value(ptr %7994)
  %7995 = load ptr, ptr @fun_Core_iterator_128_equals_then.1305, align 8
  call void @free_candy_value(ptr %7995)
  %7996 = load ptr, ptr @fun_Core_iterator_128_equals_then.1307, align 8
  call void @free_candy_value(ptr %7996)
  %7997 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1309, align 8
  call void @free_candy_value(ptr %7997)
  %7998 = load ptr, ptr @409, align 8
  call void @free_candy_value(ptr %7998)
  %7999 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1311, align 8
  call void @free_candy_value(ptr %7999)
  %8000 = load ptr, ptr @410, align 8
  call void @free_candy_value(ptr %8000)
  %8001 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1313, align 8
  call void @free_candy_value(ptr %8001)
  %8002 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1315, align 8
  call void @free_candy_value(ptr %8002)
  %8003 = load ptr, ptr @411, align 8
  call void @free_candy_value(ptr %8003)
  %8004 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1317, align 8
  call void @free_candy_value(ptr %8004)
  %8005 = load ptr, ptr @412, align 8
  call void @free_candy_value(ptr %8005)
  %8006 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1319, align 8
  call void @free_candy_value(ptr %8006)
  %8007 = load ptr, ptr @413, align 8
  call void @free_candy_value(ptr %8007)
  %8008 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1321, align 8
  call void @free_candy_value(ptr %8008)
  %8009 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1323, align 8
  call void @free_candy_value(ptr %8009)
  %8010 = load ptr, ptr @fun_Core_iterator_128_equals_else.1325, align 8
  call void @free_candy_value(ptr %8010)
  %8011 = load ptr, ptr @414, align 8
  call void @free_candy_value(ptr %8011)
  %8012 = load ptr, ptr @fun_Core_iterator_128_equals_else.1327, align 8
  call void @free_candy_value(ptr %8012)
  %8013 = load ptr, ptr @fun_Core_iterator_128_equals_else.1329, align 8
  call void @free_candy_value(ptr %8013)
  %8014 = load ptr, ptr @415, align 8
  call void @free_candy_value(ptr %8014)
  %8015 = load ptr, ptr @fun_Core_iterator_128_equals_else.1331, align 8
  call void @free_candy_value(ptr %8015)
  %8016 = load ptr, ptr @416, align 8
  call void @free_candy_value(ptr %8016)
  %8017 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1333, align 8
  call void @free_candy_value(ptr %8017)
  %8018 = load ptr, ptr @fun_Core_iterator_137_equals_then.1335, align 8
  call void @free_candy_value(ptr %8018)
  %8019 = load ptr, ptr @fun_Core_iterator_137_equals_then.1337, align 8
  call void @free_candy_value(ptr %8019)
  %8020 = load ptr, ptr @fun_Core_iterator_137_equals_then.1339, align 8
  call void @free_candy_value(ptr %8020)
  %8021 = load ptr, ptr @fun_Core_iterator_137_equals_then.1341, align 8
  call void @free_candy_value(ptr %8021)
  %8022 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1343, align 8
  call void @free_candy_value(ptr %8022)
  %8023 = load ptr, ptr @417, align 8
  call void @free_candy_value(ptr %8023)
  %8024 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1345, align 8
  call void @free_candy_value(ptr %8024)
  %8025 = load ptr, ptr @418, align 8
  call void @free_candy_value(ptr %8025)
  %8026 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1347, align 8
  call void @free_candy_value(ptr %8026)
  %8027 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1349, align 8
  call void @free_candy_value(ptr %8027)
  %8028 = load ptr, ptr @419, align 8
  call void @free_candy_value(ptr %8028)
  %8029 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1351, align 8
  call void @free_candy_value(ptr %8029)
  %8030 = load ptr, ptr @420, align 8
  call void @free_candy_value(ptr %8030)
  %8031 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1353, align 8
  call void @free_candy_value(ptr %8031)
  %8032 = load ptr, ptr @421, align 8
  call void @free_candy_value(ptr %8032)
  %8033 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1355, align 8
  call void @free_candy_value(ptr %8033)
  %8034 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1357, align 8
  call void @free_candy_value(ptr %8034)
  %8035 = load ptr, ptr @fun_Core_iterator_137_equals_else.1359, align 8
  call void @free_candy_value(ptr %8035)
  %8036 = load ptr, ptr @422, align 8
  call void @free_candy_value(ptr %8036)
  %8037 = load ptr, ptr @fun_Core_iterator_137_equals_else.1361, align 8
  call void @free_candy_value(ptr %8037)
  %8038 = load ptr, ptr @fun_Core_iterator_137_equals_else.1363, align 8
  call void @free_candy_value(ptr %8038)
  %8039 = load ptr, ptr @423, align 8
  call void @free_candy_value(ptr %8039)
  %8040 = load ptr, ptr @fun_Core_iterator_137_equals_else.1365, align 8
  call void @free_candy_value(ptr %8040)
  %8041 = load ptr, ptr @424, align 8
  call void @free_candy_value(ptr %8041)
  %8042 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1367, align 8
  call void @free_candy_value(ptr %8042)
  %8043 = load ptr, ptr @"text_`isNumber seconds` was not satisfied", align 8
  call void @free_candy_value(ptr %8043)
  %8044 = load ptr, ptr @"Chrono:duration:fromSeconds:4", align 8
  call void @free_candy_value(ptr %8044)
  %8045 = load ptr, ptr @"Chrono:duration:fromSeconds:8", align 8
  call void @free_candy_value(ptr %8045)
  %8046 = load ptr, ptr @fun_Chrono_duration_fromSeconds, align 8
  call void @free_candy_value(ptr %8046)
  %8047 = load ptr, ptr @fun_Chrono_duration_isNumber_18.1369, align 8
  call void @free_candy_value(ptr %8047)
  %8048 = load ptr, ptr @tag_Duration.1370, align 8
  call void @free_candy_value(ptr %8048)
  %8049 = load ptr, ptr @"text_`isNumber minutes` was not satisfied", align 8
  call void @free_candy_value(ptr %8049)
  %8050 = load ptr, ptr @"Chrono:duration:fromMinutes:4", align 8
  call void @free_candy_value(ptr %8050)
  %8051 = load ptr, ptr @"Chrono:duration:fromMinutes:8", align 8
  call void @free_candy_value(ptr %8051)
  %8052 = load ptr, ptr @"Chrono:duration:fromMinutes:34", align 8
  call void @free_candy_value(ptr %8052)
  %8053 = load ptr, ptr @fun_Chrono_duration_fromMinutes, align 8
  call void @free_candy_value(ptr %8053)
  %8054 = load ptr, ptr @fun_Chrono_duration_isNumber_18.1372, align 8
  call void @free_candy_value(ptr %8054)
  %8055 = load ptr, ptr @tag_Duration.1373, align 8
  call void @free_candy_value(ptr %8055)
  %8056 = load ptr, ptr @"text_`isNumber hours` was not satisfied", align 8
  call void @free_candy_value(ptr %8056)
  %8057 = load ptr, ptr @"Chrono:duration:fromHours:4", align 8
  call void @free_candy_value(ptr %8057)
  %8058 = load ptr, ptr @"Chrono:duration:fromHours:8", align 8
  call void @free_candy_value(ptr %8058)
  %8059 = load ptr, ptr @"Chrono:duration:fromHours:34", align 8
  call void @free_candy_value(ptr %8059)
  %8060 = load ptr, ptr @fun_Chrono_duration_fromHours, align 8
  call void @free_candy_value(ptr %8060)
  %8061 = load ptr, ptr @fun_Chrono_duration_isNumber_18.1375, align 8
  call void @free_candy_value(ptr %8061)
  %8062 = load ptr, ptr @tag_Duration.1376, align 8
  call void @free_candy_value(ptr %8062)
  %8063 = load ptr, ptr @"text_`isNumber days` was not satisfied", align 8
  call void @free_candy_value(ptr %8063)
  %8064 = load ptr, ptr @"Chrono:duration:fromNormalDays:4", align 8
  call void @free_candy_value(ptr %8064)
  %8065 = load ptr, ptr @"Chrono:duration:fromNormalDays:8", align 8
  call void @free_candy_value(ptr %8065)
  %8066 = load ptr, ptr @"Chrono:duration:fromNormalDays:34", align 8
  call void @free_candy_value(ptr %8066)
  %8067 = load ptr, ptr @fun_Chrono_duration_fromNormalDays, align 8
  call void @free_candy_value(ptr %8067)
  %8068 = load ptr, ptr @fun_Chrono_duration_isNumber_18.1378, align 8
  call void @free_candy_value(ptr %8068)
  %8069 = load ptr, ptr @tag_Duration.1379, align 8
  call void @free_candy_value(ptr %8069)
  %8070 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  call void @free_candy_value(ptr %8070)
  %8071 = load ptr, ptr @"Chrono:duration:totalSeconds:2", align 8
  call void @free_candy_value(ptr %8071)
  %8072 = load ptr, ptr @"Chrono:duration:totalSeconds:4", align 8
  call void @free_candy_value(ptr %8072)
  %8073 = load ptr, ptr @"Chrono:duration:totalSeconds:14", align 8
  call void @free_candy_value(ptr %8073)
  %8074 = load ptr, ptr @fun_Chrono_duration_totalSeconds, align 8
  call void @free_candy_value(ptr %8074)
  %8075 = load ptr, ptr @"Chrono:duration:totalMinutes:2", align 8
  call void @free_candy_value(ptr %8075)
  %8076 = load ptr, ptr @"Chrono:duration:totalMinutes:4", align 8
  call void @free_candy_value(ptr %8076)
  %8077 = load ptr, ptr @"Chrono:duration:totalMinutes:14", align 8
  call void @free_candy_value(ptr %8077)
  %8078 = load ptr, ptr @"Chrono:duration:totalMinutes:40", align 8
  call void @free_candy_value(ptr %8078)
  %8079 = load ptr, ptr @fun_Chrono_duration_totalMinutes, align 8
  call void @free_candy_value(ptr %8079)
  %8080 = load ptr, ptr @"Chrono:duration:totalHours:2", align 8
  call void @free_candy_value(ptr %8080)
  %8081 = load ptr, ptr @"Chrono:duration:totalHours:4", align 8
  call void @free_candy_value(ptr %8081)
  %8082 = load ptr, ptr @"Chrono:duration:totalHours:14", align 8
  call void @free_candy_value(ptr %8082)
  %8083 = load ptr, ptr @"Chrono:duration:totalHours:40", align 8
  call void @free_candy_value(ptr %8083)
  %8084 = load ptr, ptr @fun_Chrono_duration_totalHours, align 8
  call void @free_candy_value(ptr %8084)
  %8085 = load ptr, ptr @"Chrono:duration:totalNormalDays:2", align 8
  call void @free_candy_value(ptr %8085)
  %8086 = load ptr, ptr @"Chrono:duration:totalNormalDays:4", align 8
  call void @free_candy_value(ptr %8086)
  %8087 = load ptr, ptr @"Chrono:duration:totalNormalDays:14", align 8
  call void @free_candy_value(ptr %8087)
  %8088 = load ptr, ptr @"Chrono:duration:totalNormalDays:40", align 8
  call void @free_candy_value(ptr %8088)
  %8089 = load ptr, ptr @fun_Chrono_duration_totalNormalDays, align 8
  call void @free_candy_value(ptr %8089)
  %8090 = load ptr, ptr @"Chrono:duration:subNormalDayComponent:2", align 8
  call void @free_candy_value(ptr %8090)
  %8091 = load ptr, ptr @"Chrono:duration:subNormalDayComponent:4", align 8
  call void @free_candy_value(ptr %8091)
  %8092 = load ptr, ptr @"Chrono:duration:subNormalDayComponent:10", align 8
  call void @free_candy_value(ptr %8092)
  %8093 = load ptr, ptr @"Chrono:duration:subNormalDayComponent:19", align 8
  call void @free_candy_value(ptr %8093)
  %8094 = load ptr, ptr @"Chrono:duration:subNormalDayComponent:20", align 8
  call void @free_candy_value(ptr %8094)
  %8095 = load ptr, ptr @"Chrono:duration:subNormalDayComponent:21", align 8
  call void @free_candy_value(ptr %8095)
  %8096 = load ptr, ptr @"Chrono:duration:subHourComponent:2", align 8
  call void @free_candy_value(ptr %8096)
  %8097 = load ptr, ptr @"Chrono:duration:subHourComponent:4", align 8
  call void @free_candy_value(ptr %8097)
  %8098 = load ptr, ptr @"Chrono:duration:subHourComponent:10", align 8
  call void @free_candy_value(ptr %8098)
  %8099 = load ptr, ptr @"Chrono:duration:subHourComponent:19", align 8
  call void @free_candy_value(ptr %8099)
  %8100 = load ptr, ptr @"Chrono:duration:subHourComponent:20", align 8
  call void @free_candy_value(ptr %8100)
  %8101 = load ptr, ptr @"Chrono:duration:subHourComponent:21", align 8
  call void @free_candy_value(ptr %8101)
  %8102 = load ptr, ptr @"Chrono:duration:subMinuteComponent:2", align 8
  call void @free_candy_value(ptr %8102)
  %8103 = load ptr, ptr @"Chrono:duration:subMinuteComponent:4", align 8
  call void @free_candy_value(ptr %8103)
  %8104 = load ptr, ptr @"Chrono:duration:subMinuteComponent:10", align 8
  call void @free_candy_value(ptr %8104)
  %8105 = load ptr, ptr @"Chrono:duration:subMinuteComponent:19", align 8
  call void @free_candy_value(ptr %8105)
  %8106 = load ptr, ptr @"Chrono:duration:subMinuteComponent:20", align 8
  call void @free_candy_value(ptr %8106)
  %8107 = load ptr, ptr @"Chrono:duration:subMinuteComponent:21", align 8
  call void @free_candy_value(ptr %8107)
  %8108 = load ptr, ptr @"Chrono:duration:subSecondComponent:2", align 8
  call void @free_candy_value(ptr %8108)
  %8109 = load ptr, ptr @"Chrono:duration:subSecondComponent:4", align 8
  call void @free_candy_value(ptr %8109)
  %8110 = load ptr, ptr @"Chrono:duration:subSecondComponent:10", align 8
  call void @free_candy_value(ptr %8110)
  %8111 = load ptr, ptr @"Chrono:duration:subSecondComponent:19", align 8
  call void @free_candy_value(ptr %8111)
  %8112 = load ptr, ptr @"Chrono:duration:subSecondComponent:20", align 8
  call void @free_candy_value(ptr %8112)
  %8113 = load ptr, ptr @"Chrono:duration:subSecondComponent:21", align 8
  call void @free_candy_value(ptr %8113)
  %8114 = load ptr, ptr @"Chrono:duration:normalDays:2", align 8
  call void @free_candy_value(ptr %8114)
  %8115 = load ptr, ptr @"Chrono:duration:normalDays:4", align 8
  call void @free_candy_value(ptr %8115)
  %8116 = load ptr, ptr @"Chrono:duration:normalDays:7", align 8
  call void @free_candy_value(ptr %8116)
  %8117 = load ptr, ptr @"Chrono:duration:normalDays:16", align 8
  call void @free_candy_value(ptr %8117)
  %8118 = load ptr, ptr @"Chrono:duration:hours:2", align 8
  call void @free_candy_value(ptr %8118)
  %8119 = load ptr, ptr @"Chrono:duration:hours:4", align 8
  call void @free_candy_value(ptr %8119)
  %8120 = load ptr, ptr @"Chrono:duration:hours:7", align 8
  call void @free_candy_value(ptr %8120)
  %8121 = load ptr, ptr @"Chrono:duration:hours:9", align 8
  call void @free_candy_value(ptr %8121)
  %8122 = load ptr, ptr @"Chrono:duration:hours:18", align 8
  call void @free_candy_value(ptr %8122)
  %8123 = load ptr, ptr @fun_Chrono_duration_hours, align 8
  call void @free_candy_value(ptr %8123)
  %8124 = load ptr, ptr @"Chrono:duration:minutes:2", align 8
  call void @free_candy_value(ptr %8124)
  %8125 = load ptr, ptr @"Chrono:duration:minutes:4", align 8
  call void @free_candy_value(ptr %8125)
  %8126 = load ptr, ptr @"Chrono:duration:minutes:7", align 8
  call void @free_candy_value(ptr %8126)
  %8127 = load ptr, ptr @"Chrono:duration:minutes:9", align 8
  call void @free_candy_value(ptr %8127)
  %8128 = load ptr, ptr @"Chrono:duration:minutes:18", align 8
  call void @free_candy_value(ptr %8128)
  %8129 = load ptr, ptr @fun_Chrono_duration_minutes, align 8
  call void @free_candy_value(ptr %8129)
  %8130 = load ptr, ptr @"Chrono:duration:seconds:2", align 8
  call void @free_candy_value(ptr %8130)
  %8131 = load ptr, ptr @"Chrono:duration:seconds:4", align 8
  call void @free_candy_value(ptr %8131)
  %8132 = load ptr, ptr @"Chrono:duration:seconds:7", align 8
  call void @free_candy_value(ptr %8132)
  %8133 = load ptr, ptr @"Chrono:duration:seconds:9", align 8
  call void @free_candy_value(ptr %8133)
  %8134 = load ptr, ptr @"Chrono:duration:seconds:18", align 8
  call void @free_candy_value(ptr %8134)
  %8135 = load ptr, ptr @fun_Chrono_duration_seconds, align 8
  call void @free_candy_value(ptr %8135)
  %8136 = load ptr, ptr @"Chrono:duration:isNegative:2", align 8
  call void @free_candy_value(ptr %8136)
  %8137 = load ptr, ptr @"Chrono:duration:isNegative:4", align 8
  call void @free_candy_value(ptr %8137)
  %8138 = load ptr, ptr @"Chrono:duration:isNegative:14", align 8
  call void @free_candy_value(ptr %8138)
  %8139 = load ptr, ptr @"Chrono:duration:isNegative:23", align 8
  call void @free_candy_value(ptr %8139)
  %8140 = load ptr, ptr @fun_Chrono_duration_isNegative, align 8
  call void @free_candy_value(ptr %8140)
  %8141 = load ptr, ptr @"Chrono:duration:toText:2", align 8
  call void @free_candy_value(ptr %8141)
  %8142 = load ptr, ptr @"Chrono:duration:toText:4", align 8
  call void @free_candy_value(ptr %8142)
  %8143 = load ptr, ptr @"Chrono:duration:toText:8", align 8
  call void @free_candy_value(ptr %8143)
  %8144 = load ptr, ptr @text_-, align 8
  call void @free_candy_value(ptr %8144)
  %8145 = load ptr, ptr @fun_Chrono_duration_toText_9, align 8
  call void @free_candy_value(ptr %8145)
  %8146 = load ptr, ptr @fun_Chrono_duration_toText_10, align 8
  call void @free_candy_value(ptr %8146)
  %8147 = load ptr, ptr @"Chrono:duration:toText:11", align 8
  call void @free_candy_value(ptr %8147)
  %8148 = load ptr, ptr @"Chrono:duration:toText:15", align 8
  call void @free_candy_value(ptr %8148)
  %8149 = load ptr, ptr @"Chrono:duration:toText:19", align 8
  call void @free_candy_value(ptr %8149)
  %8150 = load ptr, ptr @"Chrono:duration:toText:38", align 8
  call void @free_candy_value(ptr %8150)
  %8151 = load ptr, ptr @"Chrono:duration:toText:42", align 8
  call void @free_candy_value(ptr %8151)
  %8152 = load ptr, ptr @"Chrono:duration:toText:61", align 8
  call void @free_candy_value(ptr %8152)
  %8153 = load ptr, ptr @"Chrono:duration:toText:65", align 8
  call void @free_candy_value(ptr %8153)
  %8154 = load ptr, ptr @"Chrono:duration:toText:84", align 8
  call void @free_candy_value(ptr %8154)
  %8155 = load ptr, ptr @"Chrono:duration:toText:88", align 8
  call void @free_candy_value(ptr %8155)
  %8156 = load ptr, ptr @"Chrono:duration:toText:97", align 8
  call void @free_candy_value(ptr %8156)
  %8157 = load ptr, ptr @"Chrono:duration:toText:106", align 8
  call void @free_candy_value(ptr %8157)
  %8158 = load ptr, ptr @"Chrono:duration:toText:134", align 8
  call void @free_candy_value(ptr %8158)
  %8159 = load ptr, ptr @"Chrono:duration:toText:135", align 8
  call void @free_candy_value(ptr %8159)
  %8160 = load ptr, ptr @"Chrono:duration:toText:152", align 8
  call void @free_candy_value(ptr %8160)
  %8161 = load ptr, ptr @"Chrono:duration:toText:161", align 8
  call void @free_candy_value(ptr %8161)
  %8162 = load ptr, ptr @"Chrono:duration:toText:162", align 8
  call void @free_candy_value(ptr %8162)
  %8163 = load ptr, ptr @"Chrono:duration:toText:164:0", align 8
  call void @free_candy_value(ptr %8163)
  %8164 = load ptr, ptr @"Chrono:duration:toText:165", align 8
  call void @free_candy_value(ptr %8164)
  %8165 = load ptr, ptr @"Chrono:duration:toText:167", align 8
  call void @free_candy_value(ptr %8165)
  %8166 = load ptr, ptr @"Chrono:duration:toText:168", align 8
  call void @free_candy_value(ptr %8166)
  %8167 = load ptr, ptr @"Chrono:duration:toText:170:0", align 8
  call void @free_candy_value(ptr %8167)
  %8168 = load ptr, ptr @"Chrono:duration:toText:171", align 8
  call void @free_candy_value(ptr %8168)
  %8169 = load ptr, ptr @"text_:", align 8
  call void @free_candy_value(ptr %8169)
  %8170 = load ptr, ptr @"Chrono:duration:toText:174", align 8
  call void @free_candy_value(ptr %8170)
  %8171 = load ptr, ptr @"Chrono:duration:toText:175", align 8
  call void @free_candy_value(ptr %8171)
  %8172 = load ptr, ptr @"Chrono:duration:toText:177:0", align 8
  call void @free_candy_value(ptr %8172)
  %8173 = load ptr, ptr @"Chrono:duration:toText:178", align 8
  call void @free_candy_value(ptr %8173)
  %8174 = load ptr, ptr @"Chrono:duration:toText:181", align 8
  call void @free_candy_value(ptr %8174)
  %8175 = load ptr, ptr @"Chrono:duration:toText:182", align 8
  call void @free_candy_value(ptr %8175)
  %8176 = load ptr, ptr @"Chrono:duration:toText:184:0", align 8
  call void @free_candy_value(ptr %8176)
  %8177 = load ptr, ptr @"Chrono:duration:toText:185", align 8
  call void @free_candy_value(ptr %8177)
  %8178 = load ptr, ptr @"Chrono:duration:toText:188", align 8
  call void @free_candy_value(ptr %8178)
  %8179 = load ptr, ptr @"Chrono:duration:toText:189", align 8
  call void @free_candy_value(ptr %8179)
  %8180 = load ptr, ptr @"Chrono:duration:toText:191:0", align 8
  call void @free_candy_value(ptr %8180)
  %8181 = load ptr, ptr @"Chrono:duration:toText:192", align 8
  call void @free_candy_value(ptr %8181)
  %8182 = load ptr, ptr @"Chrono:duration:toText:195", align 8
  call void @free_candy_value(ptr %8182)
  %8183 = load ptr, ptr @"Chrono:duration:toText:196", align 8
  call void @free_candy_value(ptr %8183)
  %8184 = load ptr, ptr @"Chrono:duration:toText:198:0", align 8
  call void @free_candy_value(ptr %8184)
  %8185 = load ptr, ptr @"Chrono:duration:toText:199", align 8
  call void @free_candy_value(ptr %8185)
  %8186 = load ptr, ptr @"Chrono:duration:toText:200", align 8
  call void @free_candy_value(ptr %8186)
  %8187 = load ptr, ptr @"Chrono:duration:toText:201", align 8
  call void @free_candy_value(ptr %8187)
  %8188 = load ptr, ptr @"Chrono:duration:toText:202", align 8
  call void @free_candy_value(ptr %8188)
  %8189 = load ptr, ptr @"Chrono:duration:toText:203", align 8
  call void @free_candy_value(ptr %8189)
  %8190 = load ptr, ptr @"Chrono:duration:toText:204", align 8
  call void @free_candy_value(ptr %8190)
  %8191 = load ptr, ptr @"Chrono:duration:toText:205", align 8
  call void @free_candy_value(ptr %8191)
  %8192 = load ptr, ptr @"Chrono:duration:toText:206", align 8
  call void @free_candy_value(ptr %8192)
  %8193 = load ptr, ptr @"Chrono:duration:toText:207", align 8
  call void @free_candy_value(ptr %8193)
  %8194 = load ptr, ptr @"Chrono:duration:toText:208", align 8
  call void @free_candy_value(ptr %8194)
  %8195 = load ptr, ptr @fun_Chrono_duration_toText, align 8
  call void @free_candy_value(ptr %8195)
  %8196 = load ptr, ptr @fun_Chrono_duration_toText_163, align 8
  call void @free_candy_value(ptr %8196)
  %8197 = load ptr, ptr @fun_Chrono_duration_toText_164, align 8
  call void @free_candy_value(ptr %8197)
  %8198 = load ptr, ptr @fun_Chrono_duration_toText_169, align 8
  call void @free_candy_value(ptr %8198)
  %8199 = load ptr, ptr @fun_Chrono_duration_toText_170, align 8
  call void @free_candy_value(ptr %8199)
  %8200 = load ptr, ptr @fun_Chrono_duration_toText_176, align 8
  call void @free_candy_value(ptr %8200)
  %8201 = load ptr, ptr @fun_Chrono_duration_toText_177, align 8
  call void @free_candy_value(ptr %8201)
  %8202 = load ptr, ptr @fun_Chrono_duration_toText_183, align 8
  call void @free_candy_value(ptr %8202)
  %8203 = load ptr, ptr @fun_Chrono_duration_toText_184, align 8
  call void @free_candy_value(ptr %8203)
  %8204 = load ptr, ptr @fun_Chrono_duration_toText_190, align 8
  call void @free_candy_value(ptr %8204)
  %8205 = load ptr, ptr @fun_Chrono_duration_toText_191, align 8
  call void @free_candy_value(ptr %8205)
  %8206 = load ptr, ptr @fun_Chrono_duration_toText_197, align 8
  call void @free_candy_value(ptr %8206)
  %8207 = load ptr, ptr @fun_Chrono_duration_toText_198, align 8
  call void @free_candy_value(ptr %8207)
  %8208 = load ptr, ptr @fun_Core_iterator_128_equals_then.1381, align 8
  call void @free_candy_value(ptr %8208)
  %8209 = load ptr, ptr @fun_Core_iterator_128_equals_then.1383, align 8
  call void @free_candy_value(ptr %8209)
  %8210 = load ptr, ptr @fun_Core_iterator_128_equals_then.1385, align 8
  call void @free_candy_value(ptr %8210)
  %8211 = load ptr, ptr @fun_Core_iterator_128_equals_then.1387, align 8
  call void @free_candy_value(ptr %8211)
  %8212 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1389, align 8
  call void @free_candy_value(ptr %8212)
  %8213 = load ptr, ptr @425, align 8
  call void @free_candy_value(ptr %8213)
  %8214 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1391, align 8
  call void @free_candy_value(ptr %8214)
  %8215 = load ptr, ptr @426, align 8
  call void @free_candy_value(ptr %8215)
  %8216 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1393, align 8
  call void @free_candy_value(ptr %8216)
  %8217 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1395, align 8
  call void @free_candy_value(ptr %8217)
  %8218 = load ptr, ptr @427, align 8
  call void @free_candy_value(ptr %8218)
  %8219 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1397, align 8
  call void @free_candy_value(ptr %8219)
  %8220 = load ptr, ptr @428, align 8
  call void @free_candy_value(ptr %8220)
  %8221 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1399, align 8
  call void @free_candy_value(ptr %8221)
  %8222 = load ptr, ptr @429, align 8
  call void @free_candy_value(ptr %8222)
  %8223 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1401, align 8
  call void @free_candy_value(ptr %8223)
  %8224 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1403, align 8
  call void @free_candy_value(ptr %8224)
  %8225 = load ptr, ptr @fun_Core_iterator_128_equals_else.1405, align 8
  call void @free_candy_value(ptr %8225)
  %8226 = load ptr, ptr @430, align 8
  call void @free_candy_value(ptr %8226)
  %8227 = load ptr, ptr @fun_Core_iterator_128_equals_else.1407, align 8
  call void @free_candy_value(ptr %8227)
  %8228 = load ptr, ptr @fun_Core_iterator_128_equals_else.1409, align 8
  call void @free_candy_value(ptr %8228)
  %8229 = load ptr, ptr @431, align 8
  call void @free_candy_value(ptr %8229)
  %8230 = load ptr, ptr @fun_Core_iterator_128_equals_else.1411, align 8
  call void @free_candy_value(ptr %8230)
  %8231 = load ptr, ptr @432, align 8
  call void @free_candy_value(ptr %8231)
  %8232 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1413, align 8
  call void @free_candy_value(ptr %8232)
  %8233 = load ptr, ptr @fun_Core_iterator_137_equals_then.1415, align 8
  call void @free_candy_value(ptr %8233)
  %8234 = load ptr, ptr @fun_Core_iterator_137_equals_then.1417, align 8
  call void @free_candy_value(ptr %8234)
  %8235 = load ptr, ptr @fun_Core_iterator_137_equals_then.1419, align 8
  call void @free_candy_value(ptr %8235)
  %8236 = load ptr, ptr @fun_Core_iterator_137_equals_then.1421, align 8
  call void @free_candy_value(ptr %8236)
  %8237 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1423, align 8
  call void @free_candy_value(ptr %8237)
  %8238 = load ptr, ptr @433, align 8
  call void @free_candy_value(ptr %8238)
  %8239 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1425, align 8
  call void @free_candy_value(ptr %8239)
  %8240 = load ptr, ptr @434, align 8
  call void @free_candy_value(ptr %8240)
  %8241 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1427, align 8
  call void @free_candy_value(ptr %8241)
  %8242 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1429, align 8
  call void @free_candy_value(ptr %8242)
  %8243 = load ptr, ptr @435, align 8
  call void @free_candy_value(ptr %8243)
  %8244 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1431, align 8
  call void @free_candy_value(ptr %8244)
  %8245 = load ptr, ptr @436, align 8
  call void @free_candy_value(ptr %8245)
  %8246 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1433, align 8
  call void @free_candy_value(ptr %8246)
  %8247 = load ptr, ptr @437, align 8
  call void @free_candy_value(ptr %8247)
  %8248 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1435, align 8
  call void @free_candy_value(ptr %8248)
  %8249 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1437, align 8
  call void @free_candy_value(ptr %8249)
  %8250 = load ptr, ptr @fun_Core_iterator_137_equals_else.1439, align 8
  call void @free_candy_value(ptr %8250)
  %8251 = load ptr, ptr @438, align 8
  call void @free_candy_value(ptr %8251)
  %8252 = load ptr, ptr @fun_Core_iterator_137_equals_else.1441, align 8
  call void @free_candy_value(ptr %8252)
  %8253 = load ptr, ptr @fun_Core_iterator_137_equals_else.1443, align 8
  call void @free_candy_value(ptr %8253)
  %8254 = load ptr, ptr @439, align 8
  call void @free_candy_value(ptr %8254)
  %8255 = load ptr, ptr @fun_Core_iterator_137_equals_else.1445, align 8
  call void @free_candy_value(ptr %8255)
  %8256 = load ptr, ptr @440, align 8
  call void @free_candy_value(ptr %8256)
  %8257 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1447, align 8
  call void @free_candy_value(ptr %8257)
  %8258 = load ptr, ptr @fun_Core_iterator_128_equals_then.1449, align 8
  call void @free_candy_value(ptr %8258)
  %8259 = load ptr, ptr @fun_Core_iterator_128_equals_then.1451, align 8
  call void @free_candy_value(ptr %8259)
  %8260 = load ptr, ptr @fun_Core_iterator_128_equals_then.1453, align 8
  call void @free_candy_value(ptr %8260)
  %8261 = load ptr, ptr @fun_Core_iterator_128_equals_then.1455, align 8
  call void @free_candy_value(ptr %8261)
  %8262 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1457, align 8
  call void @free_candy_value(ptr %8262)
  %8263 = load ptr, ptr @441, align 8
  call void @free_candy_value(ptr %8263)
  %8264 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1459, align 8
  call void @free_candy_value(ptr %8264)
  %8265 = load ptr, ptr @442, align 8
  call void @free_candy_value(ptr %8265)
  %8266 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1461, align 8
  call void @free_candy_value(ptr %8266)
  %8267 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1463, align 8
  call void @free_candy_value(ptr %8267)
  %8268 = load ptr, ptr @443, align 8
  call void @free_candy_value(ptr %8268)
  %8269 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1465, align 8
  call void @free_candy_value(ptr %8269)
  %8270 = load ptr, ptr @444, align 8
  call void @free_candy_value(ptr %8270)
  %8271 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1467, align 8
  call void @free_candy_value(ptr %8271)
  %8272 = load ptr, ptr @445, align 8
  call void @free_candy_value(ptr %8272)
  %8273 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1469, align 8
  call void @free_candy_value(ptr %8273)
  %8274 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1471, align 8
  call void @free_candy_value(ptr %8274)
  %8275 = load ptr, ptr @fun_Core_iterator_128_equals_else.1473, align 8
  call void @free_candy_value(ptr %8275)
  %8276 = load ptr, ptr @446, align 8
  call void @free_candy_value(ptr %8276)
  %8277 = load ptr, ptr @fun_Core_iterator_128_equals_else.1475, align 8
  call void @free_candy_value(ptr %8277)
  %8278 = load ptr, ptr @fun_Core_iterator_128_equals_else.1477, align 8
  call void @free_candy_value(ptr %8278)
  %8279 = load ptr, ptr @447, align 8
  call void @free_candy_value(ptr %8279)
  %8280 = load ptr, ptr @fun_Core_iterator_128_equals_else.1479, align 8
  call void @free_candy_value(ptr %8280)
  %8281 = load ptr, ptr @448, align 8
  call void @free_candy_value(ptr %8281)
  %8282 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1481, align 8
  call void @free_candy_value(ptr %8282)
  %8283 = load ptr, ptr @fun_Core_iterator_137_equals_then.1483, align 8
  call void @free_candy_value(ptr %8283)
  %8284 = load ptr, ptr @fun_Core_iterator_137_equals_then.1485, align 8
  call void @free_candy_value(ptr %8284)
  %8285 = load ptr, ptr @fun_Core_iterator_137_equals_then.1487, align 8
  call void @free_candy_value(ptr %8285)
  %8286 = load ptr, ptr @fun_Core_iterator_137_equals_then.1489, align 8
  call void @free_candy_value(ptr %8286)
  %8287 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1491, align 8
  call void @free_candy_value(ptr %8287)
  %8288 = load ptr, ptr @449, align 8
  call void @free_candy_value(ptr %8288)
  %8289 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1493, align 8
  call void @free_candy_value(ptr %8289)
  %8290 = load ptr, ptr @450, align 8
  call void @free_candy_value(ptr %8290)
  %8291 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1495, align 8
  call void @free_candy_value(ptr %8291)
  %8292 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1497, align 8
  call void @free_candy_value(ptr %8292)
  %8293 = load ptr, ptr @451, align 8
  call void @free_candy_value(ptr %8293)
  %8294 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1499, align 8
  call void @free_candy_value(ptr %8294)
  %8295 = load ptr, ptr @452, align 8
  call void @free_candy_value(ptr %8295)
  %8296 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1501, align 8
  call void @free_candy_value(ptr %8296)
  %8297 = load ptr, ptr @453, align 8
  call void @free_candy_value(ptr %8297)
  %8298 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1503, align 8
  call void @free_candy_value(ptr %8298)
  %8299 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1505, align 8
  call void @free_candy_value(ptr %8299)
  %8300 = load ptr, ptr @fun_Core_iterator_137_equals_else.1507, align 8
  call void @free_candy_value(ptr %8300)
  %8301 = load ptr, ptr @454, align 8
  call void @free_candy_value(ptr %8301)
  %8302 = load ptr, ptr @fun_Core_iterator_137_equals_else.1509, align 8
  call void @free_candy_value(ptr %8302)
  %8303 = load ptr, ptr @fun_Core_iterator_137_equals_else.1511, align 8
  call void @free_candy_value(ptr %8303)
  %8304 = load ptr, ptr @455, align 8
  call void @free_candy_value(ptr %8304)
  %8305 = load ptr, ptr @fun_Core_iterator_137_equals_else.1513, align 8
  call void @free_candy_value(ptr %8305)
  %8306 = load ptr, ptr @456, align 8
  call void @free_candy_value(ptr %8306)
  %8307 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1515, align 8
  call void @free_candy_value(ptr %8307)
  %8308 = load ptr, ptr @fun_Core_iterator_128_equals_then.1517, align 8
  call void @free_candy_value(ptr %8308)
  %8309 = load ptr, ptr @fun_Core_iterator_128_equals_then.1519, align 8
  call void @free_candy_value(ptr %8309)
  %8310 = load ptr, ptr @fun_Core_iterator_128_equals_then.1521, align 8
  call void @free_candy_value(ptr %8310)
  %8311 = load ptr, ptr @fun_Core_iterator_128_equals_then.1523, align 8
  call void @free_candy_value(ptr %8311)
  %8312 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1525, align 8
  call void @free_candy_value(ptr %8312)
  %8313 = load ptr, ptr @457, align 8
  call void @free_candy_value(ptr %8313)
  %8314 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1527, align 8
  call void @free_candy_value(ptr %8314)
  %8315 = load ptr, ptr @458, align 8
  call void @free_candy_value(ptr %8315)
  %8316 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1529, align 8
  call void @free_candy_value(ptr %8316)
  %8317 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1531, align 8
  call void @free_candy_value(ptr %8317)
  %8318 = load ptr, ptr @459, align 8
  call void @free_candy_value(ptr %8318)
  %8319 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1533, align 8
  call void @free_candy_value(ptr %8319)
  %8320 = load ptr, ptr @460, align 8
  call void @free_candy_value(ptr %8320)
  %8321 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1535, align 8
  call void @free_candy_value(ptr %8321)
  %8322 = load ptr, ptr @461, align 8
  call void @free_candy_value(ptr %8322)
  %8323 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1537, align 8
  call void @free_candy_value(ptr %8323)
  %8324 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1539, align 8
  call void @free_candy_value(ptr %8324)
  %8325 = load ptr, ptr @fun_Core_iterator_128_equals_else.1541, align 8
  call void @free_candy_value(ptr %8325)
  %8326 = load ptr, ptr @462, align 8
  call void @free_candy_value(ptr %8326)
  %8327 = load ptr, ptr @fun_Core_iterator_128_equals_else.1543, align 8
  call void @free_candy_value(ptr %8327)
  %8328 = load ptr, ptr @fun_Core_iterator_128_equals_else.1545, align 8
  call void @free_candy_value(ptr %8328)
  %8329 = load ptr, ptr @463, align 8
  call void @free_candy_value(ptr %8329)
  %8330 = load ptr, ptr @fun_Core_iterator_128_equals_else.1547, align 8
  call void @free_candy_value(ptr %8330)
  %8331 = load ptr, ptr @464, align 8
  call void @free_candy_value(ptr %8331)
  %8332 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1549, align 8
  call void @free_candy_value(ptr %8332)
  %8333 = load ptr, ptr @fun_Core_iterator_137_equals_then.1551, align 8
  call void @free_candy_value(ptr %8333)
  %8334 = load ptr, ptr @fun_Core_iterator_137_equals_then.1553, align 8
  call void @free_candy_value(ptr %8334)
  %8335 = load ptr, ptr @fun_Core_iterator_137_equals_then.1555, align 8
  call void @free_candy_value(ptr %8335)
  %8336 = load ptr, ptr @fun_Core_iterator_137_equals_then.1557, align 8
  call void @free_candy_value(ptr %8336)
  %8337 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1559, align 8
  call void @free_candy_value(ptr %8337)
  %8338 = load ptr, ptr @465, align 8
  call void @free_candy_value(ptr %8338)
  %8339 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1561, align 8
  call void @free_candy_value(ptr %8339)
  %8340 = load ptr, ptr @466, align 8
  call void @free_candy_value(ptr %8340)
  %8341 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1563, align 8
  call void @free_candy_value(ptr %8341)
  %8342 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1565, align 8
  call void @free_candy_value(ptr %8342)
  %8343 = load ptr, ptr @467, align 8
  call void @free_candy_value(ptr %8343)
  %8344 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1567, align 8
  call void @free_candy_value(ptr %8344)
  %8345 = load ptr, ptr @468, align 8
  call void @free_candy_value(ptr %8345)
  %8346 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1569, align 8
  call void @free_candy_value(ptr %8346)
  %8347 = load ptr, ptr @469, align 8
  call void @free_candy_value(ptr %8347)
  %8348 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1571, align 8
  call void @free_candy_value(ptr %8348)
  %8349 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1573, align 8
  call void @free_candy_value(ptr %8349)
  %8350 = load ptr, ptr @fun_Core_iterator_137_equals_else.1575, align 8
  call void @free_candy_value(ptr %8350)
  %8351 = load ptr, ptr @470, align 8
  call void @free_candy_value(ptr %8351)
  %8352 = load ptr, ptr @fun_Core_iterator_137_equals_else.1577, align 8
  call void @free_candy_value(ptr %8352)
  %8353 = load ptr, ptr @fun_Core_iterator_137_equals_else.1579, align 8
  call void @free_candy_value(ptr %8353)
  %8354 = load ptr, ptr @471, align 8
  call void @free_candy_value(ptr %8354)
  %8355 = load ptr, ptr @fun_Core_iterator_137_equals_else.1581, align 8
  call void @free_candy_value(ptr %8355)
  %8356 = load ptr, ptr @472, align 8
  call void @free_candy_value(ptr %8356)
  %8357 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1583, align 8
  call void @free_candy_value(ptr %8357)
  %8358 = load ptr, ptr @fun_Core_iterator_128_equals_then.1585, align 8
  call void @free_candy_value(ptr %8358)
  %8359 = load ptr, ptr @fun_Core_iterator_128_equals_then.1587, align 8
  call void @free_candy_value(ptr %8359)
  %8360 = load ptr, ptr @fun_Core_iterator_128_equals_then.1589, align 8
  call void @free_candy_value(ptr %8360)
  %8361 = load ptr, ptr @fun_Core_iterator_128_equals_then.1591, align 8
  call void @free_candy_value(ptr %8361)
  %8362 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1593, align 8
  call void @free_candy_value(ptr %8362)
  %8363 = load ptr, ptr @473, align 8
  call void @free_candy_value(ptr %8363)
  %8364 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1595, align 8
  call void @free_candy_value(ptr %8364)
  %8365 = load ptr, ptr @474, align 8
  call void @free_candy_value(ptr %8365)
  %8366 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1597, align 8
  call void @free_candy_value(ptr %8366)
  %8367 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1599, align 8
  call void @free_candy_value(ptr %8367)
  %8368 = load ptr, ptr @475, align 8
  call void @free_candy_value(ptr %8368)
  %8369 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1601, align 8
  call void @free_candy_value(ptr %8369)
  %8370 = load ptr, ptr @476, align 8
  call void @free_candy_value(ptr %8370)
  %8371 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1603, align 8
  call void @free_candy_value(ptr %8371)
  %8372 = load ptr, ptr @477, align 8
  call void @free_candy_value(ptr %8372)
  %8373 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1605, align 8
  call void @free_candy_value(ptr %8373)
  %8374 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1607, align 8
  call void @free_candy_value(ptr %8374)
  %8375 = load ptr, ptr @fun_Core_iterator_128_equals_else.1609, align 8
  call void @free_candy_value(ptr %8375)
  %8376 = load ptr, ptr @478, align 8
  call void @free_candy_value(ptr %8376)
  %8377 = load ptr, ptr @fun_Core_iterator_128_equals_else.1611, align 8
  call void @free_candy_value(ptr %8377)
  %8378 = load ptr, ptr @fun_Core_iterator_128_equals_else.1613, align 8
  call void @free_candy_value(ptr %8378)
  %8379 = load ptr, ptr @479, align 8
  call void @free_candy_value(ptr %8379)
  %8380 = load ptr, ptr @fun_Core_iterator_128_equals_else.1615, align 8
  call void @free_candy_value(ptr %8380)
  %8381 = load ptr, ptr @480, align 8
  call void @free_candy_value(ptr %8381)
  %8382 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1617, align 8
  call void @free_candy_value(ptr %8382)
  %8383 = load ptr, ptr @fun_Core_iterator_137_equals_then.1619, align 8
  call void @free_candy_value(ptr %8383)
  %8384 = load ptr, ptr @fun_Core_iterator_137_equals_then.1621, align 8
  call void @free_candy_value(ptr %8384)
  %8385 = load ptr, ptr @fun_Core_iterator_137_equals_then.1623, align 8
  call void @free_candy_value(ptr %8385)
  %8386 = load ptr, ptr @fun_Core_iterator_137_equals_then.1625, align 8
  call void @free_candy_value(ptr %8386)
  %8387 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1627, align 8
  call void @free_candy_value(ptr %8387)
  %8388 = load ptr, ptr @481, align 8
  call void @free_candy_value(ptr %8388)
  %8389 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1629, align 8
  call void @free_candy_value(ptr %8389)
  %8390 = load ptr, ptr @482, align 8
  call void @free_candy_value(ptr %8390)
  %8391 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1631, align 8
  call void @free_candy_value(ptr %8391)
  %8392 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1633, align 8
  call void @free_candy_value(ptr %8392)
  %8393 = load ptr, ptr @483, align 8
  call void @free_candy_value(ptr %8393)
  %8394 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1635, align 8
  call void @free_candy_value(ptr %8394)
  %8395 = load ptr, ptr @484, align 8
  call void @free_candy_value(ptr %8395)
  %8396 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1637, align 8
  call void @free_candy_value(ptr %8396)
  %8397 = load ptr, ptr @485, align 8
  call void @free_candy_value(ptr %8397)
  %8398 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1639, align 8
  call void @free_candy_value(ptr %8398)
  %8399 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1641, align 8
  call void @free_candy_value(ptr %8399)
  %8400 = load ptr, ptr @fun_Core_iterator_137_equals_else.1643, align 8
  call void @free_candy_value(ptr %8400)
  %8401 = load ptr, ptr @486, align 8
  call void @free_candy_value(ptr %8401)
  %8402 = load ptr, ptr @fun_Core_iterator_137_equals_else.1645, align 8
  call void @free_candy_value(ptr %8402)
  %8403 = load ptr, ptr @fun_Core_iterator_137_equals_else.1647, align 8
  call void @free_candy_value(ptr %8403)
  %8404 = load ptr, ptr @487, align 8
  call void @free_candy_value(ptr %8404)
  %8405 = load ptr, ptr @fun_Core_iterator_137_equals_else.1649, align 8
  call void @free_candy_value(ptr %8405)
  %8406 = load ptr, ptr @488, align 8
  call void @free_candy_value(ptr %8406)
  %8407 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1651, align 8
  call void @free_candy_value(ptr %8407)
  %8408 = load ptr, ptr @fun_Core_iterator_128_equals_then.1653, align 8
  call void @free_candy_value(ptr %8408)
  %8409 = load ptr, ptr @fun_Core_iterator_128_equals_then.1655, align 8
  call void @free_candy_value(ptr %8409)
  %8410 = load ptr, ptr @fun_Core_iterator_128_equals_then.1657, align 8
  call void @free_candy_value(ptr %8410)
  %8411 = load ptr, ptr @fun_Core_iterator_128_equals_then.1659, align 8
  call void @free_candy_value(ptr %8411)
  %8412 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1661, align 8
  call void @free_candy_value(ptr %8412)
  %8413 = load ptr, ptr @489, align 8
  call void @free_candy_value(ptr %8413)
  %8414 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1663, align 8
  call void @free_candy_value(ptr %8414)
  %8415 = load ptr, ptr @490, align 8
  call void @free_candy_value(ptr %8415)
  %8416 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1665, align 8
  call void @free_candy_value(ptr %8416)
  %8417 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1667, align 8
  call void @free_candy_value(ptr %8417)
  %8418 = load ptr, ptr @491, align 8
  call void @free_candy_value(ptr %8418)
  %8419 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1669, align 8
  call void @free_candy_value(ptr %8419)
  %8420 = load ptr, ptr @492, align 8
  call void @free_candy_value(ptr %8420)
  %8421 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1671, align 8
  call void @free_candy_value(ptr %8421)
  %8422 = load ptr, ptr @493, align 8
  call void @free_candy_value(ptr %8422)
  %8423 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1673, align 8
  call void @free_candy_value(ptr %8423)
  %8424 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1675, align 8
  call void @free_candy_value(ptr %8424)
  %8425 = load ptr, ptr @fun_Core_iterator_128_equals_else.1677, align 8
  call void @free_candy_value(ptr %8425)
  %8426 = load ptr, ptr @494, align 8
  call void @free_candy_value(ptr %8426)
  %8427 = load ptr, ptr @fun_Core_iterator_128_equals_else.1679, align 8
  call void @free_candy_value(ptr %8427)
  %8428 = load ptr, ptr @fun_Core_iterator_128_equals_else.1681, align 8
  call void @free_candy_value(ptr %8428)
  %8429 = load ptr, ptr @495, align 8
  call void @free_candy_value(ptr %8429)
  %8430 = load ptr, ptr @fun_Core_iterator_128_equals_else.1683, align 8
  call void @free_candy_value(ptr %8430)
  %8431 = load ptr, ptr @496, align 8
  call void @free_candy_value(ptr %8431)
  %8432 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1685, align 8
  call void @free_candy_value(ptr %8432)
  %8433 = load ptr, ptr @fun_Core_iterator_137_equals_then.1687, align 8
  call void @free_candy_value(ptr %8433)
  %8434 = load ptr, ptr @fun_Core_iterator_137_equals_then.1689, align 8
  call void @free_candy_value(ptr %8434)
  %8435 = load ptr, ptr @fun_Core_iterator_137_equals_then.1691, align 8
  call void @free_candy_value(ptr %8435)
  %8436 = load ptr, ptr @fun_Core_iterator_137_equals_then.1693, align 8
  call void @free_candy_value(ptr %8436)
  %8437 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1695, align 8
  call void @free_candy_value(ptr %8437)
  %8438 = load ptr, ptr @497, align 8
  call void @free_candy_value(ptr %8438)
  %8439 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1697, align 8
  call void @free_candy_value(ptr %8439)
  %8440 = load ptr, ptr @498, align 8
  call void @free_candy_value(ptr %8440)
  %8441 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1699, align 8
  call void @free_candy_value(ptr %8441)
  %8442 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1701, align 8
  call void @free_candy_value(ptr %8442)
  %8443 = load ptr, ptr @499, align 8
  call void @free_candy_value(ptr %8443)
  %8444 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1703, align 8
  call void @free_candy_value(ptr %8444)
  %8445 = load ptr, ptr @500, align 8
  call void @free_candy_value(ptr %8445)
  %8446 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1705, align 8
  call void @free_candy_value(ptr %8446)
  %8447 = load ptr, ptr @501, align 8
  call void @free_candy_value(ptr %8447)
  %8448 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1707, align 8
  call void @free_candy_value(ptr %8448)
  %8449 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1709, align 8
  call void @free_candy_value(ptr %8449)
  %8450 = load ptr, ptr @fun_Core_iterator_137_equals_else.1711, align 8
  call void @free_candy_value(ptr %8450)
  %8451 = load ptr, ptr @502, align 8
  call void @free_candy_value(ptr %8451)
  %8452 = load ptr, ptr @fun_Core_iterator_137_equals_else.1713, align 8
  call void @free_candy_value(ptr %8452)
  %8453 = load ptr, ptr @fun_Core_iterator_137_equals_else.1715, align 8
  call void @free_candy_value(ptr %8453)
  %8454 = load ptr, ptr @503, align 8
  call void @free_candy_value(ptr %8454)
  %8455 = load ptr, ptr @fun_Core_iterator_137_equals_else.1717, align 8
  call void @free_candy_value(ptr %8455)
  %8456 = load ptr, ptr @504, align 8
  call void @free_candy_value(ptr %8456)
  %8457 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1719, align 8
  call void @free_candy_value(ptr %8457)
  %8458 = load ptr, ptr @tag_Stdout, align 8
  call void @free_candy_value(ptr %8458)
  %8459 = load ptr, ptr @"Examples:clock:22:print:7", align 8
  call void @free_candy_value(ptr %8459)
  %8460 = load ptr, ptr @"Examples:clock:22:print:9", align 8
  call void @free_candy_value(ptr %8460)
  %8461 = load ptr, ptr @tag_SystemClock, align 8
  call void @free_candy_value(ptr %8461)
  %8462 = load ptr, ptr @"Examples:clock:22:15", align 8
  call void @free_candy_value(ptr %8462)
  %8463 = load ptr, ptr @"Examples:clock:22:16", align 8
  call void @free_candy_value(ptr %8463)
  %8464 = load ptr, ptr @"Examples:clock:22:27", align 8
  call void @free_candy_value(ptr %8464)
  %8465 = load ptr, ptr @"text_It has been ", align 8
  call void @free_candy_value(ptr %8465)
  %8466 = load ptr, ptr @"Examples:clock:22:46", align 8
  call void @free_candy_value(ptr %8466)
  %8467 = load ptr, ptr @"Examples:clock:22:55", align 8
  call void @free_candy_value(ptr %8467)
  %8468 = load ptr, ptr @"Examples:clock:22:56", align 8
  call void @free_candy_value(ptr %8468)
  %8469 = load ptr, ptr @"Examples:clock:22:57", align 8
  call void @free_candy_value(ptr %8469)
  %8470 = load ptr, ptr @"Examples:clock:22:59:0", align 8
  call void @free_candy_value(ptr %8470)
  %8471 = load ptr, ptr @"Examples:clock:22:60", align 8
  call void @free_candy_value(ptr %8471)
  %8472 = load ptr, ptr @"text_ since the start the of Unix epoch", align 8
  call void @free_candy_value(ptr %8472)
  %8473 = load ptr, ptr @"Examples:clock:22:62", align 8
  call void @free_candy_value(ptr %8473)
  %8474 = load ptr, ptr @"Examples:clock:22:63", align 8
  call void @free_candy_value(ptr %8474)
  %8475 = load ptr, ptr @fun_Examples_clock_22, align 8
  call void @free_candy_value(ptr %8475)
  %8476 = load ptr, ptr @fun_Examples_clock_22_58, align 8
  call void @free_candy_value(ptr %8476)
  %8477 = load ptr, ptr @fun_Examples_clock_22_59, align 8
  call void @free_candy_value(ptr %8477)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_get_argument_count(ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_int_add(ptr, ptr)

declare ptr @candy_builtin_int_bitwise_and(ptr, ptr)

declare ptr @candy_builtin_int_compare_to(ptr, ptr)

declare ptr @candy_builtin_int_divide_truncating(ptr, ptr)

declare ptr @candy_builtin_int_multiply(ptr, ptr)

declare ptr @candy_builtin_int_shift_right(ptr, ptr)

declare ptr @candy_builtin_int_subtract(ptr, ptr)

declare ptr @candy_builtin_list_get(ptr, ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_tag_get_value(ptr)

declare ptr @candy_builtin_tag_has_value(ptr)

declare ptr @candy_builtin_tag_without_value(ptr)

declare ptr @candy_builtin_text_concatenate(ptr, ptr)

declare ptr @candy_builtin_to_debug_text(ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_i":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then"() {
"Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then":
  %0 = load ptr, ptr @0, align 8
  ret ptr %0
}

define ptr @"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else"() {
"Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else":
  %0 = load ptr, ptr @tag_False, align 8
  ret ptr %0
}

define ptr @Builtins__ifElse(ptr %0, ptr %1, ptr %2) {
Builtins__ifElse:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.5, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  %12 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.6, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_then, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %0, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_isMatch_else, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %25 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_then, align 8
  %26 = load ptr, ptr @fun_Builtins__ifElse_1_isMatch_else, align 8
  %27 = call ptr @candy_builtin_if_else(ptr %18, ptr %25, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_list_get(ptr %27, ptr %28)
  %30 = load ptr, ptr @tag_Match, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr }, ptr %32, i32 0, i32 0
  store ptr %27, ptr %33, align 8
  %34 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_case-0_didNotMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %34, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %35 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %36 = load ptr, ptr @fun_Builtins__ifElse_1_case-0_didNotMatch, align 8
  %37 = call ptr @candy_builtin_if_else(ptr %31, ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`conditionIsBool` was not satisfied", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr null)
  %40 = call ptr @candy_builtin_type_of(ptr %1)
  %41 = load ptr, ptr @tag_Function, align 8
  %42 = call ptr @candy_builtin_equals(ptr %40, ptr %41)
  %43 = load ptr, ptr @"text_`then | typeIs Function` was not satisfied", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %42, ptr %43, ptr null)
  %45 = call ptr @candy_builtin_type_of(ptr %1)
  %46 = load ptr, ptr @tag_Function, align 8
  %47 = call ptr @candy_builtin_equals(ptr %45, ptr %46)
  %48 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %49 = load ptr, ptr @"Builtins::ifElse:14", align 8
  %50 = call ptr @"anonymous_$generated__needs"(ptr %47, ptr %48, ptr %49)
  %51 = call ptr @candy_builtin_get_argument_count(ptr %1)
  %52 = load ptr, ptr @num_0, align 8
  %53 = call ptr @candy_builtin_equals(ptr %51, ptr %52)
  %54 = load ptr, ptr @"text_`then | getArgumentCount | equals 0` was not satisfied", align 8
  %55 = call ptr @"anonymous_$generated__needs"(ptr %53, ptr %54, ptr null)
  %56 = call ptr @candy_builtin_type_of(ptr %2)
  %57 = load ptr, ptr @tag_Function, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = load ptr, ptr @"text_`else | typeIs Function` was not satisfied", align 8
  %60 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr null)
  %61 = call ptr @candy_builtin_type_of(ptr %2)
  %62 = load ptr, ptr @tag_Function, align 8
  %63 = call ptr @candy_builtin_equals(ptr %61, ptr %62)
  %64 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %65 = load ptr, ptr @"Builtins::ifElse:28", align 8
  %66 = call ptr @"anonymous_$generated__needs"(ptr %63, ptr %64, ptr %65)
  %67 = call ptr @candy_builtin_get_argument_count(ptr %2)
  %68 = load ptr, ptr @num_0, align 8
  %69 = call ptr @candy_builtin_equals(ptr %67, ptr %68)
  %70 = load ptr, ptr @"text_`else | getArgumentCount | equals 0` was not satisfied", align 8
  %71 = call ptr @"anonymous_$generated__needs"(ptr %69, ptr %70, ptr null)
  %72 = call ptr @candy_builtin_if_else(ptr %0, ptr %1, ptr %2)
  ret ptr %72
}

define ptr @Builtins__ifElse_1_equals_then(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.1, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.3, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.4, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.2, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.4, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.1(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @1, align 8
  ret ptr @1
}

define ptr @Builtins__ifElse_1_equals_else.3(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @2, align 8
  ret ptr @2
}

define ptr @Builtins__ifElse_1_equals_else.5(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @3, align 8
  ret ptr @3
}

define ptr @Builtins__ifElse_1_isMatch_then(ptr %0) {
Builtins__ifElse_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__ifElse_1_isMatch_else(ptr %0) {
Builtins__ifElse_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.7, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.8, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.15, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.8, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.16, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.7(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_then.9, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.13, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  %14 = load ptr, ptr @fun_Builtins__ifElse_1_equals_then.10, align 8
  %15 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.14, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__ifElse_1_equals_then.9(ptr %0) {
Builtins__ifElse_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__ifElse_1_equals_else.11, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__ifElse_1_equals_else.12, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__ifElse_1_equals_else.12, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__ifElse_1_equals_else.11(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @4, align 8
  ret ptr @4
}

define ptr @Builtins__ifElse_1_equals_else.13(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @5, align 8
  ret ptr @5
}

define ptr @Builtins__ifElse_1_equals_else.15(ptr %0) {
Builtins__ifElse_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @6, align 8
  ret ptr @6
}

define ptr @Builtins__ifElse_1_case-0_didNotMatch(ptr %0) {
Builtins__ifElse_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_function_is0(ptr %0) {
Core_function_is0:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is0_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is0_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is0_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is0_11(ptr %0) {
Core_function_is0_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is0:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_function_run(ptr %0) {
Core_function_run:
  %1 = call ptr @Core_function_is0(ptr %0)
  %2 = load ptr, ptr @"text_`is0 body` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Function, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:function:run:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_get_argument_count(ptr %0)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`function | \E2\9C\A8.getArgumentCount | equals 0` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:function:run:14", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @get_candy_function_pointer(ptr %0)
  %17 = call ptr @get_candy_function_environment(ptr %0)
  %18 = call ptr (...) %16(ptr %17)
  ret ptr %18
}

define ptr @Core_bool_is(ptr %0) {
Core_bool_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_bool_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.21, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_is_1_equals_else.22, align 8
  %10 = load ptr, ptr @fun_Core_bool_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_bool_is_1_equals_else.22, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_bool_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_bool_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_bool_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_is_1_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %34 = load ptr, ptr @fun_Core_bool_is_1_case-0_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_bool_is_1_equals_then(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.17, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.18, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.19, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.20, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.18, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.20, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.17(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @7, align 8
  ret ptr @7
}

define ptr @Core_bool_is_1_equals_else.19(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @8, align 8
  ret ptr @8
}

define ptr @Core_bool_is_1_equals_else.21(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @9, align 8
  ret ptr @9
}

define ptr @Core_bool_is_1_isMatch_then(ptr %0) {
Core_bool_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_bool_is_1_isMatch_else(ptr %0) {
Core_bool_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.23, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.24, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.31, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.32, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.24, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.32, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.23(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_then.25, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_is_1_equals_then.26, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.29, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_is_1_equals_else.30, align 8
  %14 = load ptr, ptr @fun_Core_bool_is_1_equals_then.26, align 8
  %15 = load ptr, ptr @fun_Core_bool_is_1_equals_else.30, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_is_1_equals_then.25(ptr %0) {
Core_bool_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_is_1_equals_else.27, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_is_1_equals_else.28, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_is_1_equals_else.28, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_is_1_equals_else.27(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @10, align 8
  ret ptr @10
}

define ptr @Core_bool_is_1_equals_else.29(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @11, align 8
  ret ptr @11
}

define ptr @Core_bool_is_1_equals_else.31(ptr %0) {
Core_bool_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @12, align 8
  ret ptr @12
}

define ptr @Core_bool_is_1_case-0_didNotMatch(ptr %0) {
Core_bool_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_bool_not(ptr %0) {
Core_bool_not:
  %1 = call ptr @Core_bool_is(ptr %0)
  %2 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %0, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_bool_not_6_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.37, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_bool_not_6_equals_else.38, align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_else.38, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %24 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %25 = load ptr, ptr @fun_Core_bool_not_6_case-0_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %19, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_bool_not_6_equals_then(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.33, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.34, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.35, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.36, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.34, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.36, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.33(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @13, align 8
  ret ptr @13
}

define ptr @Core_bool_not_6_equals_else.35(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @14, align 8
  ret ptr @14
}

define ptr @Core_bool_not_6_equals_else.37(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @15, align 8
  ret ptr @15
}

define ptr @Core_bool_not_6_case-0_didNotMatch(ptr %0) {
Core_bool_not_6_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.39, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_not_6_equals_then.40, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.47, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_not_6_equals_else.48, align 8
  %18 = load ptr, ptr @fun_Core_bool_not_6_equals_then.40, align 8
  %19 = load ptr, ptr @fun_Core_bool_not_6_equals_else.48, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_not_6_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @fun_Core_bool_not_6_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_not_6_equals_then.39(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_then.41, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_not_6_equals_then.42, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.45, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_not_6_equals_else.46, align 8
  %14 = load ptr, ptr @fun_Core_bool_not_6_equals_then.42, align 8
  %15 = load ptr, ptr @fun_Core_bool_not_6_equals_else.46, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_not_6_equals_then.41(ptr %0) {
Core_bool_not_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_not_6_equals_else.43, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_not_6_equals_else.44, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_not_6_equals_else.44, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_not_6_equals_else.43(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @16, align 8
  ret ptr @16
}

define ptr @Core_bool_not_6_equals_else.45(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @17, align 8
  ret ptr @17
}

define ptr @Core_bool_not_6_equals_else.47(ptr %0) {
Core_bool_not_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @18, align 8
  ret ptr @18
}

define ptr @Core_bool_not_6_case-1_didNotMatch(ptr %0) {
Core_bool_not_6_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_lazyAnd(ptr %0, ptr %1) {
Core_bool_lazyAnd:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is0(ptr %1)
  %6 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.53, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_lazyAnd_18_equals_else.54, align 8
  %17 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.54, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_matched, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 0
  store ptr %19, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 1
  store ptr %0, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-0_didNotMatch, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %31 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_matched, align 8
  %32 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-0_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %23, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_bool_lazyAnd_18_equals_then(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.49, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.50, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.51, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.52, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.50, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.52, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.49(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @19, align 8
  ret ptr @19
}

define ptr @Core_bool_lazyAnd_18_equals_else.51(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @20, align 8
  ret ptr @20
}

define ptr @Core_bool_lazyAnd_18_equals_else.53(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @21, align 8
  ret ptr @21
}

define ptr @Core_bool_lazyAnd_18_case-0_matched(ptr %0) {
Core_bool_lazyAnd_18_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  ret ptr %3
}

define ptr @Core_bool_lazyAnd_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.55, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyAnd_18_equals_then.56, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.63, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyAnd_18_equals_else.64, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.56, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.64, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %29 = load ptr, ptr @fun_Core_bool_lazyAnd_18_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_bool_lazyAnd_18_equals_then.55(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_then.57, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyAnd_18_equals_then.58, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.61, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyAnd_18_equals_else.62, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_then.58, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.62, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyAnd_18_equals_then.57(ptr %0) {
Core_bool_lazyAnd_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyAnd_18_equals_else.59, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyAnd_18_equals_else.60, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyAnd_18_equals_else.60, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyAnd_18_equals_else.59(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @22, align 8
  ret ptr @22
}

define ptr @Core_bool_lazyAnd_18_equals_else.61(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @23, align 8
  ret ptr @23
}

define ptr @Core_bool_lazyAnd_18_equals_else.63(ptr %0) {
Core_bool_lazyAnd_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @24, align 8
  ret ptr @24
}

define ptr @Core_bool_lazyAnd_18_case-1_didNotMatch(ptr %0) {
Core_bool_lazyAnd_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_bool_lazyOr(ptr %0, ptr %1) {
Core_bool_lazyOr:
  %2 = call ptr @Core_bool_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_function_is0(ptr %1)
  %6 = load ptr, ptr @"text_`function.is0 b` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %0, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.69, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_bool_lazyOr_18_equals_else.70, align 8
  %17 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.70, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %0, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %1, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %24, i32 0, i32 2
  store ptr %19, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-0_didNotMatch, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %29 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %30 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-0_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %23, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_bool_lazyOr_18_equals_then(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.65, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.66, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.67, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.68, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.66, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.68, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.65(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @25, align 8
  ret ptr @25
}

define ptr @Core_bool_lazyOr_18_equals_else.67(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @26, align 8
  ret ptr @26
}

define ptr @Core_bool_lazyOr_18_equals_else.69(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @27, align 8
  ret ptr @27
}

define ptr @Core_bool_lazyOr_18_case-0_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.71, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_bool_lazyOr_18_equals_then.72, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.79, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_bool_lazyOr_18_equals_else.80, align 8
  %18 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.72, align 8
  %19 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.80, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %20, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_case-1_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %33 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_matched, align 8
  %34 = load ptr, ptr @fun_Core_bool_lazyOr_18_case-1_didNotMatch, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %24, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_bool_lazyOr_18_equals_then.71(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_then.73, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_bool_lazyOr_18_equals_then.74, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.77, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_bool_lazyOr_18_equals_else.78, align 8
  %14 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_then.74, align 8
  %15 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.78, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_bool_lazyOr_18_equals_then.73(ptr %0) {
Core_bool_lazyOr_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_bool_lazyOr_18_equals_else.75, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_bool_lazyOr_18_equals_else.76, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_bool_lazyOr_18_equals_else.76, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_bool_lazyOr_18_equals_else.75(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @28, align 8
  ret ptr @28
}

define ptr @Core_bool_lazyOr_18_equals_else.77(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @29, align 8
  ret ptr @29
}

define ptr @Core_bool_lazyOr_18_equals_else.79(ptr %0) {
Core_bool_lazyOr_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @30, align 8
  ret ptr @30
}

define ptr @Core_bool_lazyOr_18_case-1_matched(ptr %0) {
Core_bool_lazyOr_18_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Core_bool_is(ptr %3)
  %5 = load ptr, ptr @"text_`b` didn't return a bool.", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  ret ptr %3
}

define ptr @Core_bool_lazyOr_18_case-1_didNotMatch(ptr %0) {
Core_bool_lazyOr_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_check_checkEquals(ptr %0, ptr %1) {
Core_check_checkEquals:
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %0, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_check_checkEquals_14, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_check_checkEquals_14, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %0, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_check_checkEquals_15, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_check_checkEquals_15, align 8
  %12 = load ptr, ptr @fun_Core_check_checkEquals_14, align 8
  %13 = load ptr, ptr @fun_Core_check_checkEquals_15, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = call ptr @candy_builtin_type_of(ptr %1)
  %16 = load ptr, ptr @tag_Text, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %1, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_check_checkEquals_21, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_check_checkEquals_21, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %1, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_check_checkEquals_22, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_check_checkEquals_22, align 8
  %24 = load ptr, ptr @fun_Core_check_checkEquals_21, align 8
  %25 = load ptr, ptr @fun_Core_check_checkEquals_22, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_A check failed: Expected ", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %27, ptr %14)
  %29 = load ptr, ptr @"text_ to be ", align 8
  %30 = call ptr @candy_builtin_text_concatenate(ptr %28, ptr %29)
  %31 = call ptr @candy_builtin_text_concatenate(ptr %30, ptr %26)
  %32 = load ptr, ptr @text_., align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %31, ptr %32)
  %34 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %33, ptr null)
  ret ptr %34
}

define ptr @Core_check_checkEquals_14(ptr %0) {
Core_check_checkEquals_14:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_checkEquals_15(ptr %0) {
Core_check_checkEquals_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_check_checkEquals_21(ptr %0) {
Core_check_checkEquals_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_check_checkEquals_22(ptr %0) {
Core_check_checkEquals_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_function_is2(ptr %0) {
Core_function_is2:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is2_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is2_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is2_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is2_11(ptr %0) {
Core_function_is2_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is2:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_2, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Builtins__not(ptr %0) {
Builtins__not:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Builtins__not_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.85, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__not_1_equals_else.86, align 8
  %10 = load ptr, ptr @fun_Builtins__not_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Builtins__not_1_equals_else.86, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 1
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Builtins__not_1_case-0_didNotMatch, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %21 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %22 = load ptr, ptr @fun_Builtins__not_1_case-0_didNotMatch, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %16, ptr %21, ptr %22)
  ret ptr %23
}

define ptr @Builtins__not_1_equals_then(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.81, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__not_1_equals_then.82, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.83, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__not_1_equals_else.84, align 8
  %14 = load ptr, ptr @fun_Builtins__not_1_equals_then.82, align 8
  %15 = load ptr, ptr @fun_Builtins__not_1_equals_else.84, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__not_1_equals_then.81(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__not_1_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__not_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__not_1_equals_else(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @31, align 8
  ret ptr @31
}

define ptr @Builtins__not_1_equals_else.83(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected True, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @32, align 8
  ret ptr @32
}

define ptr @Builtins__not_1_equals_else.85(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @33, align 8
  ret ptr @33
}

define ptr @Builtins__not_1_case-0_didNotMatch(ptr %0) {
Builtins__not_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.87, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Builtins__not_1_equals_then.88, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.95, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Builtins__not_1_equals_else.96, align 8
  %18 = load ptr, ptr @fun_Builtins__not_1_equals_then.88, align 8
  %19 = load ptr, ptr @fun_Builtins__not_1_equals_else.96, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__not_1_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %28 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %29 = load ptr, ptr @fun_Builtins__not_1_case-1_didNotMatch, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Builtins__not_1_equals_then.87(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_then.89, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__not_1_equals_then.90, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.93, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__not_1_equals_else.94, align 8
  %14 = load ptr, ptr @fun_Builtins__not_1_equals_then.90, align 8
  %15 = load ptr, ptr @fun_Builtins__not_1_equals_else.94, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__not_1_equals_then.89(ptr %0) {
Builtins__not_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__not_1_equals_else.91, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__not_1_equals_else.92, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__not_1_equals_else.92, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__not_1_equals_else.91(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @34, align 8
  ret ptr @34
}

define ptr @Builtins__not_1_equals_else.93(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected False, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @35, align 8
  ret ptr @35
}

define ptr @Builtins__not_1_equals_else.95(ptr %0) {
Builtins__not_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @36, align 8
  ret ptr @36
}

define ptr @Builtins__not_1_case-1_didNotMatch(ptr %0) {
Builtins__not_1_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`False` was not satisfied", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isNonNegative(ptr %0) {
Builtins__isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`int | typeIs Int` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = load ptr, ptr @num_0, align 8
  %7 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %7, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then, align 8
  %11 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then)
  %12 = call ptr @Builtins__isNonNegative_13_equals_then(ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %7, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Builtins__isNonNegative_13_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %25, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %34 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %35 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-0_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %29, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Builtins__isNonNegative_13_equals_then(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.97, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.98, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.99, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.100, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.98, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.100, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.97(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @37, align 8
  ret ptr @37
}

define ptr @Builtins__isNonNegative_13_equals_else.99(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @38, align 8
  ret ptr @38
}

define ptr @Builtins__isNonNegative_13_isMatch_then(ptr %0) {
Builtins__isNonNegative_13_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isNonNegative_13_isMatch_else(ptr %0) {
Builtins__isNonNegative_13_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.101, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isNonNegative_13_equals_then.102, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.102)
  %7 = call ptr @Builtins__isNonNegative_13_equals_then.101(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isNonNegative_13_equals_then.101(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.103, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.104, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.107, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.108, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.104, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.108, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.103(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.105, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.106, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.106, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.105(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @39, align 8
  ret ptr @39
}

define ptr @Builtins__isNonNegative_13_equals_else.107(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @40, align 8
  ret ptr @40
}

define ptr @Builtins__isNonNegative_13_case-0_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.109, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isNonNegative_13_equals_then.110, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isNonNegative_13_equals_then.110)
  %11 = call ptr @Builtins__isNonNegative_13_equals_then.109(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isNonNegative_13_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isNonNegative_13_equals_then.109(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_then.111, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isNonNegative_13_equals_then.112, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.115, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isNonNegative_13_equals_else.116, align 8
  %14 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_then.112, align 8
  %15 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.116, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isNonNegative_13_equals_then.111(ptr %0) {
Builtins__isNonNegative_13_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isNonNegative_13_equals_else.113, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isNonNegative_13_equals_else.114, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isNonNegative_13_equals_else.114, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isNonNegative_13_equals_else.113(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @41, align 8
  ret ptr @41
}

define ptr @Builtins__isNonNegative_13_equals_else.115(ptr %0) {
Builtins__isNonNegative_13_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @42, align 8
  ret ptr @42
}

define ptr @Builtins__isNonNegative_13_case-1_didNotMatch(ptr %0) {
Builtins__isNonNegative_13_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__isLessThanOrEqualTo(ptr %0, ptr %1) {
Builtins__isLessThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %12, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then)
  %17 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %12, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_0, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %30, ptr %31)
  %33 = load ptr, ptr @tag_Match, align 8
  %34 = call ptr @candy_builtin_equals(ptr %32, ptr %33)
  %35 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %36 = getelementptr inbounds { ptr, ptr }, ptr %35, i32 0, i32 0
  store ptr %12, ptr %36, align 8
  %37 = getelementptr inbounds { ptr, ptr }, ptr %35, i32 0, i32 1
  store ptr %30, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, ptr %35, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %39 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, Core_bool_is_1_case-0_matched, Core_bool_lazyOr_18_case-0_matched, Core_bool_not_6_case-1_matched, Core_check_check_1_case-0_matched, Core_text_isAsciiDigit_14_case-0_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %40 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %34, ptr %39, ptr %40)
  ret ptr %41
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Less, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.117, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.118, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.119, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.120, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.118, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.120, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.117(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @43, align 8
  ret ptr @43
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.119(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Less, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @44, align 8
  ret ptr @44
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_then(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__isLessThanOrEqualTo_19_isMatch_else(ptr %0) {
Builtins__isLessThanOrEqualTo_19_isMatch_else:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %2 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  store ptr %3, ptr %4, align 8
  %5 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.121, ptr %1, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.122, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.122)
  %7 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.121(ptr %6)
  ret ptr %7
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.121(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Equal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.123, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.124, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.127, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.128, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.124, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.128, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.123(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.125, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.126, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.126, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.125(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @45, align 8
  ret ptr @45
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.127(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Equal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @46, align 8
  ret ptr @46
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.129, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.130, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.130)
  %11 = call ptr @Builtins__isLessThanOrEqualTo_19_equals_then.129(ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_list_get(ptr %11, ptr %12)
  %14 = load ptr, ptr @tag_Match, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %11, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %19 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %20 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %15, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.129(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Greater, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_then.131, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.132, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.135, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.136, align 8
  %14 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_then.132, align 8
  %15 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.136, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_then.131(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Builtins__isLessThanOrEqualTo_19_equals_else.133, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.134, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Builtins__isLessThanOrEqualTo_19_equals_else.134, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.133(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @47, align 8
  ret ptr @47
}

define ptr @Builtins__isLessThanOrEqualTo_19_equals_else.135(ptr %0) {
Builtins__isLessThanOrEqualTo_19_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Greater, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @48, align 8
  ret ptr @48
}

define ptr @Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch(ptr %0) {
Builtins__isLessThanOrEqualTo_19_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Builtins__intDivideTruncating(ptr %0, ptr %1) {
Builtins__intDivideTruncating:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_divide_truncating(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__intShiftRight(ptr %0, ptr %1) {
Builtins__intShiftRight:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`amount | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_25, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Builtins__intShiftRight_25, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %1, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Builtins__intShiftRight_26, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Builtins__intShiftRight_26, align 8
  %22 = load ptr, ptr @fun_Builtins__intShiftRight_25, align 8
  %23 = load ptr, ptr @fun_Builtins__intShiftRight_26, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %15, ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_The shift `amount` is negative: ", align 8
  %26 = call ptr @candy_builtin_text_concatenate(ptr %25, ptr %24)
  %27 = load ptr, ptr @"text_. You might want to call `shiftLeft` instead.", align 8
  %28 = call ptr @candy_builtin_text_concatenate(ptr %26, ptr %27)
  %29 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %28, ptr null)
  %30 = call ptr @candy_builtin_type_of(ptr %1)
  %31 = load ptr, ptr @tag_Int, align 8
  %32 = call ptr @candy_builtin_equals(ptr %30, ptr %31)
  %33 = load ptr, ptr @"text_`value | typeIs Int` was not satisfied", align 8
  %34 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %35 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr %34)
  %36 = call ptr @Builtins__isNonNegative(ptr %1)
  %37 = load ptr, ptr @"text_`value | isNonNegative` was not satisfied", align 8
  %38 = load ptr, ptr @"Builtins::intShiftRight:34", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_340282366920938463463374607431768211455, align 8
  %41 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %40)
  %42 = load ptr, ptr @"text_Shifts by that much are not yet supported.", align 8
  %43 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr null)
  %44 = call ptr @candy_builtin_int_shift_right(ptr %0, ptr %1)
  ret ptr %44
}

define ptr @Builtins__intShiftRight_25(ptr %0) {
Builtins__intShiftRight_25:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Builtins__intShiftRight_26(ptr %0) {
Builtins__intShiftRight_26:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_int_compareTo(ptr %0, ptr %1) {
Core_int_compareTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Int, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:int:compareTo:20", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %1)
  %19 = load ptr, ptr @tag_Int, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:int:compareTo:20", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_int_compare_to(ptr %0, ptr %1)
  ret ptr %24
}

define ptr @Core_int_isLessThan(ptr %0, ptr %1) {
Core_int_isLessThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_compareTo(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Less, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isGreaterThan(ptr %0, ptr %1) {
Core_int_isGreaterThan:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_compareTo(ptr %0, ptr %1)
  %13 = load ptr, ptr @tag_Greater, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_int_isGreaterThanOrEqualTo(ptr %0, ptr %1) {
Core_int_isGreaterThanOrEqualTo:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_isLessThan(ptr %0, ptr %1)
  %13 = call ptr @Core_bool_not(ptr %12)
  ret ptr %13
}

define ptr @Core_int_isNonNegative(ptr %0) {
Core_int_isNonNegative:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isNonNegative:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @Core_int_isLessThan(ptr %0, ptr %12)
  %14 = call ptr @Core_bool_not(ptr %13)
  ret ptr %14
}

define ptr @Core_int_isEven(ptr %0) {
Core_int_isEven:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isEven:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_int_max(ptr %0, ptr %1) {
Core_int_max:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_isGreaterThanOrEqualTo(ptr %0, ptr %1)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_int_max_15, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_int_max_15, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %1, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_int_max_16, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_int_max_16, align 8
  %19 = load ptr, ptr @fun_Core_int_max_15, align 8
  %20 = load ptr, ptr @fun_Core_int_max_16, align 8
  %21 = call ptr @Builtins__ifElse(ptr %12, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Core_int_max_15(ptr %0) {
Core_int_max_15:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_max_16(ptr %0) {
Core_int_max_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_4_case-0_matched() {
Core_int_pow_21_4_case-0_matched:
  %0 = load ptr, ptr @num_1, align 8
  ret ptr %0
}

define ptr @Core_int_pow_21(ptr %0, ptr %1) {
Core_int_pow_21:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_int_pow_21_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_int_pow_21_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.145, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_int_pow_21_1_isMatch_else.146, align 8
  %21 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.146, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %28, ptr %27)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %27, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_equals_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  %33 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_4_equals_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %29, ptr %33, ptr %34)
  %36 = load ptr, ptr @num_0, align 8
  %37 = call ptr @candy_builtin_list_get(ptr %35, ptr %36)
  %38 = load ptr, ptr @tag_Match, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 0
  store ptr %25, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 1
  store ptr %27, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 2
  store ptr %35, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 3
  store ptr %0, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-0_didNotMatch, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  %46 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_matched, align 8
  %47 = load ptr, ptr @fun_Core_int_pow_21_4_case-0_didNotMatch, align 8
  %48 = call ptr @candy_builtin_if_else(ptr %39, ptr %46, ptr %47)
  ret ptr %48
}

define ptr @Core_int_pow_21_1_equals_then(ptr %0) {
Core_int_pow_21_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else.143, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_int_pow_21_1_isMatch_else.144, align 8
  %31 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else.144, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_int_pow_21_1_hasKey_then(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Base, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @49, align 8
  ret ptr @49
}

define ptr @Core_int_pow_21_1_hasKey_else(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Base`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @50, align 8
  ret ptr @50
}

define ptr @Core_int_pow_21_1_isMatch_then(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Exponent, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_then.137, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_int_pow_21_1_hasKey_then.138, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_hasKey_else.139, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_int_pow_21_1_hasKey_else.140, align 8
  %19 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_then.138, align 8
  %20 = load ptr, ptr @fun_Core_int_pow_21_1_hasKey_else.140, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_then.141, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_int_pow_21_1_isMatch_then.142, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_int_pow_21_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_then.142, align 8
  %34 = load ptr, ptr @fun_Core_int_pow_21_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_int_pow_21_1_hasKey_then.137(ptr %0) {
Core_int_pow_21_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Exponent, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @51, align 8
  ret ptr @51
}

define ptr @Core_int_pow_21_1_hasKey_else.139(ptr %0) {
Core_int_pow_21_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Exponent`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @52, align 8
  ret ptr @52
}

define ptr @Core_int_pow_21_1_isMatch_then.141(ptr %0) {
Core_int_pow_21_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @53, align 8
  ret ptr @53
}

define ptr @Core_int_pow_21_1_isMatch_else(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_isMatch_else.143(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_int_pow_21_1_equals_else(ptr %0) {
Core_int_pow_21_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @54, align 8
  ret ptr @54
}

define ptr @Core_int_pow_21_1_isMatch_else.145(ptr %0) {
Core_int_pow_21_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_int_pow_21_4_equals_else(ptr %0) {
Core_int_pow_21_4_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected `0`, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @55, align 8
  ret ptr @55
}

define ptr @Core_int_pow_21_4_case-0_didNotMatch(ptr %0) {
Core_int_pow_21_4_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr, ptr, ptr }, ptr %5, i32 0, i32 2
  store ptr %13, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_case-1_matched, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_int_pow_21_4_case-1_matched, align 8
  %16 = call ptr @get_candy_function_environment(ptr @fun_Core_int_pow_21_4_case-1_matched)
  %17 = call ptr @Core_int_pow_21_4_case-1_matched(ptr %16)
  ret ptr %17
}

define ptr @Core_int_pow_21_4_case-1_matched(ptr %0) {
Core_int_pow_21_4_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isEven(ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4, i32 0, i32 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %4, i32 0, i32 2
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_5, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_int_pow_21_4_5, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 0
  store ptr %17, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 1
  store ptr %20, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %15, i32 0, i32 2
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_int_pow_21_4_6, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_int_pow_21_4_6, align 8
  %26 = load ptr, ptr @fun_Core_int_pow_21_4_5, align 8
  %27 = load ptr, ptr @fun_Core_int_pow_21_4_6, align 8
  %28 = call ptr @Builtins__ifElse(ptr %3, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_int_pow_21_4_5(ptr %0) {
Core_int_pow_21_4_5:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:int:pow:21:4:5:5", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_int_multiply(ptr %18, ptr %20)
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @Builtins__intShiftRight(ptr %23, ptr %24)
  %26 = alloca ptr, i64 3, align 8
  %27 = alloca ptr, i64 3, align 8
  %28 = load ptr, ptr @tag_Exponent, align 8
  %29 = getelementptr ptr, ptr %26, i64 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr ptr, ptr %27, i64 0
  store ptr %25, ptr %30, align 8
  %31 = load ptr, ptr @tag_Base, align 8
  %32 = getelementptr ptr, ptr %26, i64 1
  store ptr %31, ptr %32, align 8
  %33 = getelementptr ptr, ptr %27, i64 1
  store ptr %21, ptr %33, align 8
  %34 = getelementptr ptr, ptr %26, i64 2
  store ptr null, ptr %34, align 8
  %35 = getelementptr ptr, ptr %27, i64 2
  store ptr null, ptr %35, align 8
  %36 = call ptr @make_candy_struct(ptr %26, ptr %27)
  %37 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8
  %39 = call ptr @get_candy_function_pointer(ptr %38)
  %40 = call ptr @get_candy_function_environment(ptr %38)
  %41 = call ptr (...) %39(ptr %36, ptr %40)
  ret ptr %41
}

define ptr @Core_int_pow_21_4_6(ptr %0) {
Core_int_pow_21_4_6:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:int:pow:21:4:6:7", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_int_multiply(ptr %18, ptr %20)
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %23 = load ptr, ptr %22, align 8
  %24 = call ptr @candy_builtin_type_of(ptr %23)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:int:pow:21:4:6:12", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @num_1, align 8
  %33 = call ptr @candy_builtin_int_subtract(ptr %31, ptr %32)
  %34 = load ptr, ptr @num_1, align 8
  %35 = call ptr @Builtins__intShiftRight(ptr %33, ptr %34)
  %36 = alloca ptr, i64 3, align 8
  %37 = alloca ptr, i64 3, align 8
  %38 = load ptr, ptr @tag_Base, align 8
  %39 = getelementptr ptr, ptr %36, i64 0
  store ptr %38, ptr %39, align 8
  %40 = getelementptr ptr, ptr %37, i64 0
  store ptr %21, ptr %40, align 8
  %41 = load ptr, ptr @tag_Exponent, align 8
  %42 = getelementptr ptr, ptr %36, i64 1
  store ptr %41, ptr %42, align 8
  %43 = getelementptr ptr, ptr %37, i64 1
  store ptr %35, ptr %43, align 8
  %44 = getelementptr ptr, ptr %36, i64 2
  store ptr null, ptr %44, align 8
  %45 = getelementptr ptr, ptr %37, i64 2
  store ptr null, ptr %45, align 8
  %46 = call ptr @make_candy_struct(ptr %36, ptr %37)
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8
  %49 = call ptr @get_candy_function_pointer(ptr %48)
  %50 = call ptr @get_candy_function_environment(ptr %48)
  %51 = call ptr (...) %49(ptr %46, ptr %50)
  %52 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %53 = load ptr, ptr %52, align 8
  %54 = call ptr @candy_builtin_type_of(ptr %53)
  %55 = load ptr, ptr @tag_Int, align 8
  %56 = call ptr @candy_builtin_equals(ptr %54, ptr %55)
  %57 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %58 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  %59 = call ptr @"anonymous_$generated__needs"(ptr %56, ptr %57, ptr %58)
  %60 = call ptr @candy_builtin_type_of(ptr %51)
  %61 = load ptr, ptr @tag_Int, align 8
  %62 = call ptr @candy_builtin_equals(ptr %60, ptr %61)
  %63 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %64 = load ptr, ptr @"Core:int:pow:21:4:6:18", align 8
  %65 = call ptr @"anonymous_$generated__needs"(ptr %62, ptr %63, ptr %64)
  %66 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %67 = load ptr, ptr %66, align 8
  %68 = call ptr @candy_builtin_int_multiply(ptr %67, ptr %51)
  ret ptr %68
}

define ptr @Core_controlFlow_recursive_18(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0, align 8
  %6 = call ptr @Core_int_pow_21(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_18_0(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_int_pow(ptr %0, ptr %1) {
Core_int_pow:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is base` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is exponent` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Core_int_isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`isNonNegative exponent` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = alloca ptr, i64 3, align 8
  %16 = alloca ptr, i64 3, align 8
  %17 = load ptr, ptr @tag_Exponent, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %17, ptr %18, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %1, ptr %19, align 8
  %20 = load ptr, ptr @tag_Base, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %20, ptr %21, align 8
  %22 = getelementptr ptr, ptr %16, i64 1
  store ptr %0, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %24, align 8
  %25 = call ptr @make_candy_struct(ptr %15, ptr %16)
  %26 = load ptr, ptr @fun_Core_int_pow_21, align 8
  %27 = call ptr @Core_function_is2(ptr %26)
  %28 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %29 = load ptr, ptr @"Core:int:pow:22", align 8
  %30 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr %29)
  %31 = load ptr, ptr @fun_Core_controlFlow_recursive_18, align 8
  %32 = call ptr @Core_controlFlow_recursive_18(ptr %31, ptr %25)
  ret ptr %32
}

define ptr @Core_fixedDecimal_is(ptr %0) {
Core_fixedDecimal_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.165, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_else.166, align 8
  %10 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.166, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_matched, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %12, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_fixedDecimal_is_1_case-0_didNotMatch, align 8
  %23 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_matched, align 8
  %24 = load ptr, ptr @fun_Core_fixedDecimal_is_1_case-0_didNotMatch, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  ret ptr %25
}

define ptr @Core_fixedDecimal_is_1_equals_then(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_FixedDecimal, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.147, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.148, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.163, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.164, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.148, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.164, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.147(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.149, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_is_1_equals_then.150, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else.161, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_equals_else.162, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.150, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else.162, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_equals_then.149(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_then.151, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_equals_then.152, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_then.152, align 8
  %14 = load ptr, ptr @fun_Core_fixedDecimal_is_1_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_fixedDecimal_is_1_equals_then.151(ptr %0) {
Core_fixedDecimal_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else.159, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.160, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else.160, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_is_1_hasKey_then(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_MinorUnits, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @57, align 8
  ret ptr @57
}

define ptr @Core_fixedDecimal_is_1_hasKey_else(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `MinorUnits`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @58, align 8
  ret ptr @58
}

define ptr @Core_fixedDecimal_is_1_isMatch_then(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Scale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_then.153, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.154, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_hasKey_else.155, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.156, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_then.154, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_is_1_hasKey_else.156, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_then.157, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.158, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_then.158, align 8
  %34 = load ptr, ptr @fun_Core_fixedDecimal_is_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_is_1_hasKey_then.153(ptr %0) {
Core_fixedDecimal_is_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Scale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @59, align 8
  ret ptr @59
}

define ptr @Core_fixedDecimal_is_1_hasKey_else.155(ptr %0) {
Core_fixedDecimal_is_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Scale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @60, align 8
  ret ptr @60
}

define ptr @Core_fixedDecimal_is_1_isMatch_then.157(ptr %0) {
Core_fixedDecimal_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @61, align 8
  ret ptr @61
}

define ptr @Core_fixedDecimal_is_1_isMatch_else(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_isMatch_else.159(ptr %0) {
Core_fixedDecimal_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_is_1_equals_else(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @62, align 8
  ret ptr @62
}

define ptr @Core_fixedDecimal_is_1_equals_else.161(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_fixedDecimal_is_1_equals_else.163(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected FixedDecimal, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @63, align 8
  ret ptr @63
}

define ptr @Core_fixedDecimal_is_1_equals_else.165(ptr %0) {
Core_fixedDecimal_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @64, align 8
  ret ptr @64
}

define ptr @Core_fixedDecimal_is_1_case-0_matched(ptr %0) {
Core_fixedDecimal_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %4)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_is_1_18, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_is_1_18, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_is_1_18, align 8
  %16 = call ptr @Core_bool_lazyAnd(ptr %11, ptr %15)
  ret ptr %16
}

define ptr @Core_fixedDecimal_is_1_18(ptr %0) {
Core_fixedDecimal_is_1_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18, align 8
  %12 = call ptr @Core_bool_lazyAnd(ptr %5, ptr %11)
  ret ptr %12
}

define ptr @Core_fixedDecimal_isScale_18(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_is_1_case-0_didNotMatch(ptr %0) {
Core_fixedDecimal_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_fixedDecimal_minorUnits(ptr %0) {
Core_fixedDecimal_minorUnits:
  %1 = call ptr @Core_fixedDecimal_is(ptr %0)
  %2 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:fixedDecimal:minorUnits:19", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:fixedDecimal:minorUnits:19", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %15 = call ptr @candy_builtin_type_of(ptr %14)
  %16 = load ptr, ptr @tag_Struct, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:minorUnits:21", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = load ptr, ptr @tag_MinorUnits, align 8
  %22 = call ptr @candy_builtin_struct_has_key(ptr %14, ptr %21)
  %23 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:fixedDecimal:minorUnits:21", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_MinorUnits, align 8
  %27 = call ptr @candy_builtin_struct_get(ptr %14, ptr %26)
  ret ptr %27
}

define ptr @Core_fixedDecimal_scale(ptr %0) {
Core_fixedDecimal_scale:
  %1 = call ptr @Core_fixedDecimal_is(ptr %0)
  %2 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Core:fixedDecimal:scale:19", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:fixedDecimal:scale:19", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %15 = call ptr @candy_builtin_type_of(ptr %14)
  %16 = load ptr, ptr @tag_Struct, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:scale:21", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = load ptr, ptr @tag_Scale, align 8
  %22 = call ptr @candy_builtin_struct_has_key(ptr %14, ptr %21)
  %23 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %24 = load ptr, ptr @"Core:fixedDecimal:scale:21", align 8
  %25 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Scale, align 8
  %27 = call ptr @candy_builtin_struct_get(ptr %14, ptr %26)
  ret ptr %27
}

define ptr @Core_fixedDecimal_fromIntScaled(ptr %0, ptr %1) {
Core_fixedDecimal_fromIntScaled:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is minorUnits` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %1, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.167, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_fixedDecimal_isScale_18.168, align 8
  %13 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.168, align 8
  %14 = call ptr @Core_bool_lazyAnd(ptr %9, ptr %13)
  %15 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_Scale, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %1, ptr %21, align 8
  %22 = load ptr, ptr @tag_MinorUnits, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %0, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = alloca i8, i64 13, align 1
  store [13 x i8] c"FixedDecimal\00", ptr %28, align 1
  %29 = call ptr @make_candy_tag(ptr %28, ptr %27)
  store ptr %29, ptr @tag_FixedDecimal.169, align 8
  ret ptr @tag_FixedDecimal.169
}

define ptr @Core_fixedDecimal_isScale_18.167(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %1) {
Core_fixedDecimal_rescaledMinorUnits:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @candy_builtin_type_of(ptr %1)
  %6 = load ptr, ptr @tag_Int, align 8
  %7 = call ptr @candy_builtin_equals(ptr %5, ptr %6)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %1, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.170, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_fixedDecimal_isScale_18.171, align 8
  %11 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.171, align 8
  %12 = call ptr @Core_bool_lazyAnd(ptr %7, ptr %11)
  %13 = load ptr, ptr @"text_`isScale targetScale` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @Core_fixedDecimal_scale(ptr %0)
  %16 = call ptr @Core_int_isGreaterThan(ptr %15, ptr %1)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 0
  store ptr %0, ptr %18, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %17, i32 0, i32 1
  store ptr %1, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits_24, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_24, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %21, i32 0, i32 1
  store ptr %1, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_fixedDecimal_rescaledMinorUnits_25, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_25, align 8
  %25 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_24, align 8
  %26 = load ptr, ptr @fun_Core_fixedDecimal_rescaledMinorUnits_25, align 8
  %27 = call ptr @Builtins__ifElse(ptr %16, ptr %25, ptr %26)
  ret ptr %27
}

define ptr @Core_fixedDecimal_isScale_18.170(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_rescaledMinorUnits_24(ptr %0) {
Core_fixedDecimal_rescaledMinorUnits_24:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_minorUnits(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @Core_fixedDecimal_scale(ptr %5)
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:24", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = call ptr @candy_builtin_type_of(ptr %14)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:24", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @candy_builtin_int_subtract(ptr %6, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr }, ptr %24, i32 0, i32 0
  store ptr %23, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.172, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_fixedDecimal_isScale_18.173, align 8
  %27 = load ptr, ptr @tag_True, align 8
  %28 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.173, align 8
  %29 = call ptr @Core_bool_lazyAnd(ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:24:25", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = load ptr, ptr @num_10, align 8
  %34 = call ptr @Core_int_pow(ptr %33, ptr %23)
  %35 = call ptr @Builtins__intDivideTruncating(ptr %3, ptr %34)
  ret ptr %35
}

define ptr @Core_fixedDecimal_isScale_18.172(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_rescaledMinorUnits_25(ptr %0) {
Core_fixedDecimal_rescaledMinorUnits_25:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_minorUnits(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @Core_fixedDecimal_scale(ptr %5)
  %7 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = call ptr @candy_builtin_type_of(ptr %8)
  %10 = load ptr, ptr @tag_Int, align 8
  %11 = call ptr @candy_builtin_equals(ptr %9, ptr %10)
  %12 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:24", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = call ptr @candy_builtin_type_of(ptr %6)
  %16 = load ptr, ptr @tag_Int, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %19 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:24", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = call ptr @candy_builtin_int_subtract(ptr %22, ptr %6)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr }, ptr %24, i32 0, i32 0
  store ptr %23, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.174, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_fixedDecimal_isScale_18.175, align 8
  %27 = load ptr, ptr @tag_True, align 8
  %28 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.175, align 8
  %29 = call ptr @Core_bool_lazyAnd(ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:25", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = load ptr, ptr @num_10, align 8
  %34 = call ptr @Core_int_pow(ptr %33, ptr %23)
  %35 = call ptr @candy_builtin_type_of(ptr %3)
  %36 = load ptr, ptr @tag_Int, align 8
  %37 = call ptr @candy_builtin_equals(ptr %35, ptr %36)
  %38 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %39 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:26", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %37, ptr %38, ptr %39)
  %41 = call ptr @candy_builtin_type_of(ptr %34)
  %42 = load ptr, ptr @tag_Int, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %45 = load ptr, ptr @"Core:fixedDecimal:rescaledMinorUnits:25:26", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %43, ptr %44, ptr %45)
  %47 = call ptr @candy_builtin_int_multiply(ptr %3, ptr %34)
  ret ptr %47
}

define ptr @Core_fixedDecimal_isScale_18.174(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1) {
Core_fixedDecimal_comparableMinorUnits:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is valueA` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_fixedDecimal_is(ptr %1)
  %6 = load ptr, ptr @"text_`is valueB` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_fixedDecimal_scale(ptr %0)
  %9 = call ptr @Core_fixedDecimal_scale(ptr %1)
  %10 = call ptr @Core_int_max(ptr %8, ptr %9)
  %11 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %0, ptr %10)
  %12 = call ptr @Core_fixedDecimal_rescaledMinorUnits(ptr %1, ptr %10)
  %13 = alloca ptr, i64 4, align 8
  %14 = alloca ptr, i64 4, align 8
  %15 = load ptr, ptr @tag_ValueA, align 8
  %16 = getelementptr ptr, ptr %13, i64 0
  store ptr %15, ptr %16, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %11, ptr %17, align 8
  %18 = load ptr, ptr @tag_ValueB, align 8
  %19 = getelementptr ptr, ptr %13, i64 1
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %12, ptr %20, align 8
  %21 = load ptr, ptr @tag_TargetScale, align 8
  %22 = getelementptr ptr, ptr %13, i64 2
  store ptr %21, ptr %22, align 8
  %23 = getelementptr ptr, ptr %14, i64 2
  store ptr %10, ptr %23, align 8
  %24 = getelementptr ptr, ptr %13, i64 3
  store ptr null, ptr %24, align 8
  %25 = getelementptr ptr, ptr %14, i64 3
  store ptr null, ptr %25, align 8
  %26 = call ptr @make_candy_struct(ptr %13, ptr %14)
  ret ptr %26
}

define ptr @Core_fixedDecimal_subtract(ptr %0, ptr %1) {
Core_fixedDecimal_subtract:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is minuend` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_fixedDecimal_is(ptr %1)
  %6 = load ptr, ptr @"text_`is subtrahend` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1)
  %9 = call ptr @candy_builtin_type_of(ptr %8)
  %10 = load ptr, ptr @tag_Struct, align 8
  %11 = call ptr @candy_builtin_equals(ptr %10, ptr %9)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_equals_then, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_subtract_14_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %9, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_equals_else, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_fixedDecimal_subtract_14_equals_else, align 8
  %18 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_equals_else, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %11, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else.192, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.193, align 8
  %28 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.193, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %24, ptr %28, ptr %29)
  %31 = load ptr, ptr @num_1, align 8
  %32 = call ptr @candy_builtin_list_get(ptr %20, ptr %31)
  %33 = load ptr, ptr @num_2, align 8
  %34 = call ptr @candy_builtin_list_get(ptr %20, ptr %33)
  %35 = load ptr, ptr @num_3, align 8
  %36 = call ptr @candy_builtin_list_get(ptr %20, ptr %35)
  %37 = call ptr @candy_builtin_type_of(ptr %32)
  %38 = load ptr, ptr @tag_Int, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %41 = load ptr, ptr @"Core:fixedDecimal:subtract:27", align 8
  %42 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr %41)
  %43 = call ptr @candy_builtin_type_of(ptr %34)
  %44 = load ptr, ptr @tag_Int, align 8
  %45 = call ptr @candy_builtin_equals(ptr %43, ptr %44)
  %46 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %47 = load ptr, ptr @"Core:fixedDecimal:subtract:27", align 8
  %48 = call ptr @"anonymous_$generated__needs"(ptr %45, ptr %46, ptr %47)
  %49 = call ptr @candy_builtin_int_subtract(ptr %32, ptr %34)
  %50 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %49, ptr %36)
  ret ptr %50
}

define ptr @Core_fixedDecimal_subtract_14_equals_then(ptr %0) {
Core_fixedDecimal_subtract_14_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else.190, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.191, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.191, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_then(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @65, align 8
  ret ptr @65
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_else(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @66, align 8
  ret ptr @66
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_then(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_then.176, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.177, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_else.178, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.179, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.177, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.179, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_then.180, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.181, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else.188, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.189, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.181, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else.189, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_then.176(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @67, align 8
  ret ptr @67
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_else.178(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @68, align 8
  ret ptr @68
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_then.180(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_TargetScale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_then.182, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.183, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_hasKey_else.184, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.185, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_then.183, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_hasKey_else.185, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %4, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_then.186, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.187, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_subtract_14_isMatch_else, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_then.187, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_subtract_14_isMatch_else, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_then.182(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_TargetScale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @69, align 8
  ret ptr @69
}

define ptr @Core_fixedDecimal_subtract_14_hasKey_else.184(ptr %0) {
Core_fixedDecimal_subtract_14_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @70, align 8
  ret ptr @70
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_then.186(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 5, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr ptr, ptr %5, i64 2
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %5, i64 3
  store ptr %4, ptr %14, align 8
  %15 = getelementptr ptr, ptr %5, i64 4
  store ptr null, ptr %15, align 8
  %16 = call ptr @make_candy_list(ptr %5)
  store ptr %16, ptr @71, align 8
  ret ptr @71
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else.188(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else.190(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_subtract_14_equals_else(ptr %0) {
Core_fixedDecimal_subtract_14_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @72, align 8
  ret ptr @72
}

define ptr @Core_fixedDecimal_subtract_14_isMatch_else.192(ptr %0) {
Core_fixedDecimal_subtract_14_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_divideTruncating(ptr %0, ptr %1) {
Core_fixedDecimal_divideTruncating:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is dividend` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_fixedDecimal_is(ptr %1)
  %6 = load ptr, ptr @"text_`is divisor` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_fixedDecimal_minorUnits(ptr %1)
  %9 = load ptr, ptr @num_0, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = call ptr @Core_bool_not(ptr %10)
  %12 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = call ptr @Core_fixedDecimal_comparableMinorUnits(ptr %0, ptr %1)
  %15 = call ptr @candy_builtin_type_of(ptr %14)
  %16 = load ptr, ptr @tag_Struct, align 8
  %17 = call ptr @candy_builtin_equals(ptr %16, ptr %15)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %14, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_equals_then, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_then, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %15, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_equals_else, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_else, align 8
  %24 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_then, align 8
  %25 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_equals_else, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_0, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %26, ptr %27)
  %29 = load ptr, ptr @tag_Match, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %26, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.210, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.211, align 8
  %34 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %35 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.211, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %30, ptr %34, ptr %35)
  %37 = load ptr, ptr @num_1, align 8
  %38 = call ptr @candy_builtin_list_get(ptr %26, ptr %37)
  %39 = load ptr, ptr @num_2, align 8
  %40 = call ptr @candy_builtin_list_get(ptr %26, ptr %39)
  %41 = load ptr, ptr @num_3, align 8
  %42 = call ptr @candy_builtin_list_get(ptr %26, ptr %41)
  %43 = call ptr @candy_builtin_type_of(ptr %42)
  %44 = load ptr, ptr @tag_Int, align 8
  %45 = call ptr @candy_builtin_equals(ptr %43, ptr %44)
  %46 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %47 = getelementptr inbounds { ptr }, ptr %46, i32 0, i32 0
  store ptr %42, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.212, ptr %46, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_fixedDecimal_isScale_18.213, align 8
  %49 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.213, align 8
  %50 = call ptr @Core_bool_lazyAnd(ptr %45, ptr %49)
  %51 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %52 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:51", align 8
  %53 = call ptr @"anonymous_$generated__needs"(ptr %50, ptr %51, ptr %52)
  %54 = load ptr, ptr @num_10, align 8
  %55 = call ptr @Core_int_pow(ptr %54, ptr %42)
  %56 = call ptr @candy_builtin_type_of(ptr %38)
  %57 = load ptr, ptr @tag_Int, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %60 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:52", align 8
  %61 = call ptr @"anonymous_$generated__needs"(ptr %58, ptr %59, ptr %60)
  %62 = call ptr @candy_builtin_type_of(ptr %55)
  %63 = load ptr, ptr @tag_Int, align 8
  %64 = call ptr @candy_builtin_equals(ptr %62, ptr %63)
  %65 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %66 = load ptr, ptr @"Core:fixedDecimal:divideTruncating:52", align 8
  %67 = call ptr @"anonymous_$generated__needs"(ptr %64, ptr %65, ptr %66)
  %68 = call ptr @candy_builtin_int_multiply(ptr %38, ptr %55)
  %69 = call ptr @Builtins__intDivideTruncating(ptr %68, ptr %40)
  %70 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %69, ptr %42)
  ret ptr %70
}

define ptr @Core_fixedDecimal_divideTruncating_37_equals_then(ptr %0) {
Core_fixedDecimal_divideTruncating_37_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.208, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.209, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.209, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueA, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @73, align 8
  ret ptr @73
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueA`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @74, align 8
  ret ptr @74
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_ValueB, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then.194, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.195, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else.196, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.197, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.195, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.197, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %30, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then.198, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.199, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.206, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.207, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.199, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else.207, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then.194(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_ValueB, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @75, align 8
  ret ptr @75
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else.196(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `ValueB`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @76, align 8
  ret ptr @76
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then.198(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_TargetScale, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then.200, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.201, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else.202, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.203, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_then.201, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_hasKey_else.203, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %30, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %4, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then.204, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.205, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %21, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else, align 8
  %36 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_then.205, align 8
  %37 = load ptr, ptr @fun_Core_fixedDecimal_divideTruncating_37_isMatch_else, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %25, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_then.200(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_TargetScale, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @77, align 8
  ret ptr @77
}

define ptr @Core_fixedDecimal_divideTruncating_37_hasKey_else.202(ptr %0) {
Core_fixedDecimal_divideTruncating_37_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `TargetScale`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @78, align 8
  ret ptr @78
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_then.204(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 5, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr ptr, ptr %5, i64 2
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %5, i64 3
  store ptr %4, ptr %14, align 8
  %15 = getelementptr ptr, ptr %5, i64 4
  store ptr null, ptr %15, align 8
  %16 = call ptr @make_candy_list(ptr %5)
  store ptr %16, ptr @79, align 8
  ret ptr @79
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.206(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.208(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_divideTruncating_37_equals_else(ptr %0) {
Core_fixedDecimal_divideTruncating_37_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @80, align 8
  ret ptr @80
}

define ptr @Core_fixedDecimal_divideTruncating_37_isMatch_else.210(ptr %0) {
Core_fixedDecimal_divideTruncating_37_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_fixedDecimal_isScale_18.212(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_function_is1(ptr %0) {
Core_function_is1:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Function, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_function_is1_11, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_function_is1_11, align 8
  %7 = load ptr, ptr @fun_Core_function_is1_11, align 8
  %8 = load ptr, ptr @"fun_Builtins__isLessThanOrEqualTo_19_case-1_matched, Builtins__isNonNegative_13_case-1_matched, Builtins__not_1_case-0_matched, Core_bool_lazyAnd_18_case-1_matched, Core_bool_not_6_case-0_matched, Core_function_is0_12, Core_function_is1_12, Core_function_is2_12, Core_function_is3_12, Core_function_is4_12, Core_function_is5_12, Core_list_isValidIndex_21, Core_list_isValidInsertIndex_21, anonymous_$generated__needs_isConditionTrue_else", align 8
  %9 = call ptr @Builtins__ifElse(ptr %3, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_function_is1_11(ptr %0) {
Core_function_is1_11:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Function, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`function | typeIs Function` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:function:is1:11:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_get_argument_count(ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_int_isOdd(ptr %0) {
Core_int_isOdd:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:int:isOdd:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @candy_builtin_int_bitwise_and(ptr %0, ptr %12)
  %14 = load ptr, ptr @num_1, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  ret ptr %15
}

declare ptr @candy_builtin_list_insert(ptr, ptr, ptr)

declare ptr @candy_builtin_list_length(ptr)

define ptr @Core_result_is(ptr %0) {
Core_result_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_result_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.220, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_result_is_1_equals_else.221, align 8
  %10 = load ptr, ptr @fun_Core_result_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_result_is_1_equals_else.221, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_then, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %0, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Core_result_is_1_isMatch_else, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %23 = load ptr, ptr @fun_Core_result_is_1_isMatch_then, align 8
  %24 = load ptr, ptr @fun_Core_result_is_1_isMatch_else, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  %26 = load ptr, ptr @num_0, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %25, ptr %26)
  %28 = load ptr, ptr @tag_Match, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_matched, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %25, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_result_is_1_case-0_didNotMatch, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %36 = load ptr, ptr @fun_Core_result_is_1_case-0_matched, align 8
  %37 = load ptr, ptr @fun_Core_result_is_1_case-0_didNotMatch, align 8
  %38 = call ptr @candy_builtin_if_else(ptr %29, ptr %36, ptr %37)
  ret ptr %38
}

define ptr @Core_result_is_1_equals_then(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.214, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.215, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.218, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.219, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.215, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.219, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.214(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.216, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.217, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.217, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.216(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @81, align 8
  ret ptr @81
}

define ptr @Core_result_is_1_equals_else(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.218(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @82, align 8
  ret ptr @82
}

define ptr @Core_result_is_1_equals_else.220(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @83, align 8
  ret ptr @83
}

define ptr @Core_result_is_1_isMatch_then(ptr %0) {
Core_result_is_1_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_is_1_isMatch_else(ptr %0) {
Core_result_is_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.222, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.223, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.232, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.233, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.223, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.233, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.222(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.224, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.225, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.230, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.231, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.225, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.231, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.224(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_then.226, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_is_1_equals_then.227, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_is_1_equals_else.228, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_is_1_equals_else.229, align 8
  %14 = load ptr, ptr @fun_Core_result_is_1_equals_then.227, align 8
  %15 = load ptr, ptr @fun_Core_result_is_1_equals_else.229, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_is_1_equals_then.226(ptr %0) {
Core_result_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @84, align 8
  ret ptr @84
}

define ptr @Core_result_is_1_equals_else.228(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_result_is_1_equals_else.230(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @85, align 8
  ret ptr @85
}

define ptr @Core_result_is_1_equals_else.232(ptr %0) {
Core_result_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @86, align 8
  ret ptr @86
}

define ptr @Core_result_is_1_case-0_matched(ptr %0) {
Core_result_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_True, align 8
  ret ptr %5
}

define ptr @Core_result_is_1_case-0_didNotMatch(ptr %0) {
Core_result_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Core_result_mapOrElse(ptr %0, ptr %1, ptr %2) {
Core_result_mapOrElse:
  %3 = call ptr @Core_result_is(ptr %0)
  %4 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 okMapper` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = call ptr @Core_function_is1(ptr %2)
  %10 = load ptr, ptr @"text_`function.is1 errorMapper` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Tag, align 8
  %14 = call ptr @candy_builtin_equals(ptr %13, ptr %12)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %0, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %12, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.240, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_result_mapOrElse_30_equals_else.241, align 8
  %21 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then, align 8
  %22 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.241, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %14, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_0, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %23, ptr %24)
  %26 = load ptr, ptr @tag_Match, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 0
  store ptr %1, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr }, ptr %28, i32 0, i32 1
  store ptr %23, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_matched, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %32 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %33 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 0
  store ptr %0, ptr %33, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 1
  store ptr %2, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %32, i32 0, i32 2
  store ptr %23, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-0_didNotMatch, ptr %32, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %37 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_matched, align 8
  %38 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-0_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %27, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Core_result_mapOrElse_30_equals_then(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Ok, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.234, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.235, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.238, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.239, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.235, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.239, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.234(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.236, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.237, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.237, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.236(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @87, align 8
  ret ptr @87
}

define ptr @Core_result_mapOrElse_30_equals_else(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.238(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Ok, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @88, align 8
  ret ptr @88
}

define ptr @Core_result_mapOrElse_30_equals_else.240(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @89, align 8
  ret ptr @89
}

define ptr @Core_result_mapOrElse_30_case-0_matched(ptr %0) {
Core_result_mapOrElse_30_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-0_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.242, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_result_mapOrElse_30_equals_then.243, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.252, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_result_mapOrElse_30_equals_else.253, align 8
  %18 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.243, align 8
  %19 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.253, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_result_mapOrElse_30_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_result_mapOrElse_30_equals_then.242(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Error, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.244, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.245, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.250, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.251, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.245, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.251, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.244(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_then.246, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_result_mapOrElse_30_equals_then.247, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_result_mapOrElse_30_equals_else.248, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_result_mapOrElse_30_equals_else.249, align 8
  %14 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_then.247, align 8
  %15 = load ptr, ptr @fun_Core_result_mapOrElse_30_equals_else.249, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_result_mapOrElse_30_equals_then.246(ptr %0) {
Core_result_mapOrElse_30_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @90, align 8
  ret ptr @90
}

define ptr @Core_result_mapOrElse_30_equals_else.248(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_result_mapOrElse_30_equals_else.250(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Error, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @91, align 8
  ret ptr @91
}

define ptr @Core_result_mapOrElse_30_equals_else.252(ptr %0) {
Core_result_mapOrElse_30_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @92, align 8
  ret ptr @92
}

define ptr @Core_result_mapOrElse_30_case-1_matched(ptr %0) {
Core_result_mapOrElse_30_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @get_candy_function_pointer(ptr %6)
  %8 = call ptr @get_candy_function_environment(ptr %6)
  %9 = call ptr (...) %7(ptr %4, ptr %8)
  ret ptr %9
}

define ptr @Core_result_mapOrElse_30_case-1_didNotMatch(ptr %0) {
Core_result_mapOrElse_30_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @"Core_iterator_range_38, Core_result_unwrapOrElse_19"(ptr %0) {
"Core_iterator_range_38, Core_result_unwrapOrElse_19":
  ret ptr %0
}

define ptr @Core_result_unwrapOr(ptr %0, ptr %1) {
Core_result_unwrapOr:
  %2 = call ptr @Core_result_is(ptr %0)
  %3 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_result_unwrapOr_7, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_result_unwrapOr_7, align 8
  %8 = call ptr @Core_result_is(ptr %0)
  %9 = load ptr, ptr @"text_`is result` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %13 = call ptr @Core_function_is0(ptr %12)
  %14 = load ptr, ptr @"text_`function.is0 defaultGetter` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:result:unwrapOr:8", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_result_unwrapOrElse_20, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_result_unwrapOrElse_20, align 8
  %19 = load ptr, ptr @"fun_Core_iterator_range_38, Core_result_unwrapOrElse_19", align 8
  %20 = load ptr, ptr @fun_Core_result_unwrapOrElse_20, align 8
  %21 = call ptr @Core_result_mapOrElse(ptr %0, ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Core_result_unwrapOr_7(ptr %0) {
Core_result_unwrapOr_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_result_unwrapOrElse_20(ptr %0) {
Core_result_unwrapOrElse_20:
  %1 = load ptr, ptr @fun_Core_result_unwrapOr_7, align 8
  %2 = call ptr @Core_function_run(ptr %1)
  ret ptr %2
}

define ptr @Builtins__listGet(ptr %0, ptr %1) {
Builtins__listGet:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @Builtins__isNonNegative(ptr %1)
  %13 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr null)
  %15 = call ptr @candy_builtin_list_length(ptr %0)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %20 = load ptr, ptr @"Builtins::listGet:25", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_int_compare_to(ptr %1, ptr %15)
  %23 = load ptr, ptr @tag_Less, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = load ptr, ptr @"text_`index | intCompareTo (list | \E2\9C\A8.listLength) | equals Less` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = call ptr @candy_builtin_list_get(ptr %0, ptr %1)
  ret ptr %27
}

define ptr @Builtins__listInsert(ptr %0, ptr %1, ptr %2) {
Builtins__listInsert:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`index | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`index | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_list_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`index | isLessThanOrEqualTo (list | \E2\9C\A8.listLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_list_insert(ptr %0, ptr %1, ptr %2)
  ret ptr %20
}

define ptr @Core_list_append(ptr %0, ptr %1) {
Core_list_append:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %0)
  %8 = load ptr, ptr @tag_List, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:list:append:9", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_list_length(ptr %0)
  %14 = call ptr @Builtins__listInsert(ptr %0, ptr %13, ptr %1)
  ret ptr %14
}

define ptr @"Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched"() {
"Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched":
  %0 = load ptr, ptr @tag_Empty, align 8
  ret ptr %0
}

define ptr @Core_iterator_wrapSafe(ptr %0, ptr %1) {
Core_iterator_wrapSafe:
  %2 = call ptr @Core_function_is0(ptr %1)
  %3 = load ptr, ptr @"text_`function.is0 notIteratorGuard` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_12, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16, ptr %8, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16, align 8
  %10 = load ptr, ptr @fun_Core_iterator_wrapSafe_16, align 8
  %11 = call ptr @Core_function_is2(ptr %10)
  %12 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %13 = load ptr, ptr @"Core:iterator:wrapSafe:17", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %16 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.294, ptr %15, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_controlFlow_recursive_18.295, align 8
  %17 = load ptr, ptr @fun_Core_controlFlow_recursive_18.295, align 8
  %18 = call ptr @Core_controlFlow_recursive_18.294(ptr %17, ptr %0)
  ret ptr %18
}

define ptr @Core_iterator_wrapSafe_12(ptr %0) {
Core_iterator_wrapSafe_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = load ptr, ptr @"text_The guard needs to panic.", align 8
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_wrapSafe_16(ptr %0, ptr %1) {
Core_iterator_wrapSafe_16:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Tag, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_else.260, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.261, align 8
  %11 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.261, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_case-0_matched, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_matched, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %13, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_case-0_didNotMatch, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch, align 8
  %24 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_matched, align 8
  %25 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_case-0_didNotMatch, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %17, ptr %24, ptr %25)
  %27 = call ptr @Core_function_is0(ptr %26)
  %28 = call ptr @Core_bool_not(ptr %27)
  %29 = call ptr @Core_bool_is(ptr %28)
  %30 = load ptr, ptr @"text_`bool.is condition` was not satisfied", align 8
  %31 = load ptr, ptr @"Core:iterator:wrapSafe:16:24", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %34 = call ptr @Core_function_is0(ptr %33)
  %35 = load ptr, ptr @"text_`function.is0 then` was not satisfied", align 8
  %36 = load ptr, ptr @"Core:iterator:wrapSafe:16:24", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %34, ptr %35, ptr %36)
  %38 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %39 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %40 = call ptr @Builtins__ifElse(ptr %28, ptr %38, ptr %39)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %0, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %26, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_iterator_wrapSafe_16_26, align 8
  %45 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26, align 8
  %46 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %46, align 1
  %47 = call ptr @make_candy_tag(ptr %46, ptr %45)
  store ptr %47, ptr @tag_Iterator.293, align 8
  ret ptr @tag_Iterator.293
}

define ptr @Core_iterator_wrapSafe_16_1_equals_then(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_then.254, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.255, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_else.258, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.259, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.255, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else.259, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_1_equals_then.254(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_then.256, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.257, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_then.257, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_1_equals_then.256(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @93, align 8
  ret ptr @93
}

define ptr @Core_iterator_wrapSafe_16_1_equals_else(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_16_1_equals_else.258(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @94, align 8
  ret ptr @94
}

define ptr @Core_iterator_wrapSafe_16_1_equals_else.260(ptr %0) {
Core_iterator_wrapSafe_16_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @95, align 8
  ret ptr @95
}

define ptr @Core_iterator_wrapSafe_16_1_case-0_matched(ptr %0) {
Core_iterator_wrapSafe_16_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_16_1_case-0_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_16_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %6 = call ptr @Core_function_run(ptr %5)
  ret ptr %6
}

define ptr @Core_iterator_wrapSafe_16_26(ptr %0) {
Core_iterator_wrapSafe_16_26:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.266, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.267, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.267, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %3, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %20, i32 0, i32 2
  store ptr %15, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, align 8
  %27 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %28 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %19, ptr %27, ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.262, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.263, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.264, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.265, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.263, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.265, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.262(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @96, align 8
  ret ptr @96
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.264(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @97, align 8
  ret ptr @97
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.266(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @98, align 8
  ret ptr @98
}

define ptr @Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_16_26_10_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.268, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.269, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.290, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.291, align 8
  %18 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.269, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.291, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.268(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.270, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.271, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.288, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.289, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.271, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.289, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.270(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.272, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.273, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.286, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.287, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.273, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.287, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.272(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_then.274, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.275, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_equals_else.284, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.285, align 8
  %13 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_then.275, align 8
  %14 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_equals_else.285, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_then.274(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else.282, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.283, align 8
  %31 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else.283, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @99, align 8
  ret ptr @99
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @100, align 8
  ret ptr @100
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then.276, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.277, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else.278, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.279, align 8
  %19 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_then.277, align 8
  %20 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_hasKey_else.279, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then.280, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.281, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_then.281, align 8
  %34 = load ptr, ptr @fun_Core_iterator_wrapSafe_16_26_10_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_then.276(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @101, align 8
  ret ptr @101
}

define ptr @Core_iterator_wrapSafe_16_26_10_hasKey_else.278(ptr %0) {
Core_iterator_wrapSafe_16_26_10_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @102, align 8
  ret ptr @102
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_then.280(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @103, align 8
  ret ptr @103
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_16_26_10_isMatch_else.282(ptr %0) {
Core_iterator_wrapSafe_16_26_10_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.284(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @104, align 8
  ret ptr @104
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.286(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.288(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @105, align 8
  ret ptr @105
}

define ptr @Core_iterator_wrapSafe_16_26_10_equals_else.290(ptr %0) {
Core_iterator_wrapSafe_16_26_10_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @106, align 8
  ret ptr @106
}

define ptr @Core_iterator_wrapSafe_16_26_10_case-1_matched(ptr %0) {
Core_iterator_wrapSafe_16_26_10_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.292, align 8
  ret ptr @tag_More.292
}

define ptr @Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch(ptr %0) {
Core_iterator_wrapSafe_16_26_10_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @fun_Core_iterator_wrapSafe_12, align 8
  %6 = call ptr @Core_function_run(ptr %5)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_18.294(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.296, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.297, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.297, align 8
  %6 = call ptr @Core_iterator_wrapSafe_16(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_18_0.296(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_next(ptr %0) {
Core_iterator_next:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_next_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_next_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_next_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = call ptr @candy_builtin_type_of(ptr %4)
  %6 = load ptr, ptr @tag_Tag, align 8
  %7 = call ptr @candy_builtin_equals(ptr %6, ptr %5)
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %4, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %5, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.304, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.305, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.305, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %7, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_0, align 8
  %18 = call ptr @candy_builtin_list_get(ptr %16, ptr %17)
  %19 = load ptr, ptr @tag_Match, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %16, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_next_6_isMatch_else, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  %24 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %25 = load ptr, ptr @fun_Core_iterator_next_6_isMatch_else, align 8
  %26 = call ptr @candy_builtin_if_else(ptr %20, ptr %24, ptr %25)
  %27 = load ptr, ptr @num_1, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %16, ptr %27)
  %29 = call ptr @Core_function_run(ptr %28)
  ret ptr %29
}

define ptr @Core_iterator_next_2() {
Core_iterator_next_2:
  %0 = load ptr, ptr @"text_`next` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_next_6_equals_then(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Iterator, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.298, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.299, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else.302, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else.303, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.299, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else.303, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.298(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_then.300, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_next_6_equals_then.301, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_next_6_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_next_6_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_iterator_next_6_equals_then.301, align 8
  %15 = load ptr, ptr @fun_Core_iterator_next_6_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_next_6_equals_then.300(ptr %0) {
Core_iterator_next_6_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @107, align 8
  ret ptr @107
}

define ptr @Core_iterator_next_6_equals_else(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_next_6_equals_else.302(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Iterator, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @108, align 8
  ret ptr @108
}

define ptr @Core_iterator_next_6_equals_else.304(ptr %0) {
Core_iterator_next_6_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @109, align 8
  ret ptr @109
}

define ptr @Core_iterator_next_6_isMatch_else(ptr %0) {
Core_iterator_next_6_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_generateWithState(ptr %0, ptr %1) {
Core_iterator_generateWithState:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_generateWithState_14, align 8
  %8 = load ptr, ptr @fun_Core_iterator_generateWithState_14, align 8
  %9 = call ptr @Core_function_is2(ptr %8)
  %10 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %11 = load ptr, ptr @"Core:iterator:generateWithState:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %14 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.338, ptr %13, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_controlFlow_recursive_18.339, align 8
  %15 = load ptr, ptr @fun_Core_controlFlow_recursive_18.339, align 8
  %16 = call ptr @Core_controlFlow_recursive_18.338(ptr %15, ptr %0)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14(ptr %0, ptr %1, ptr %2) {
Core_iterator_generateWithState_14:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 0
  store ptr %1, ptr %4, align 8
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 1
  store ptr %0, ptr %5, align 8
  %6 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr, ptr, ptr }, ptr %3, i32 0, i32 2
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1, align 8
  %10 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1, align 8
  %11 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %11, align 1
  %12 = call ptr @make_candy_tag(ptr %11, ptr %10)
  store ptr %12, ptr @tag_Iterator.337, align 8
  ret ptr @tag_Iterator.337
}

define ptr @Core_iterator_generateWithState_14_1(ptr %0) {
Core_iterator_generateWithState_14_1:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %7)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %9, ptr %8)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %7, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.324, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %16, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.325, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then, align 8
  %18 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.325, align 8
  %19 = call ptr @candy_builtin_if_else(ptr %10, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @candy_builtin_list_get(ptr %19, ptr %20)
  %22 = load ptr, ptr @tag_Match, align 8
  %23 = call ptr @candy_builtin_equals(ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %19, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %27, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-0_matched, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_matched, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 0
  store ptr %7, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr }, ptr %30, i32 0, i32 1
  store ptr %19, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-0_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %23, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.306, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.307, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.322, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.323, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.307, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.323, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.306(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.308, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.309, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.320, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.321, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.309, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.321, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.308(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.310, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.311, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.311, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.310(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_else.318, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else.319, align 8
  %31 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else.319, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_then(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @110, align 8
  ret ptr @110
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_else(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @111, align 8
  ret ptr @111
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_then(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_State, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_then.312, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then.313, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_hasKey_else.314, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else.315, align 8
  %19 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_then.313, align 8
  %20 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_hasKey_else.315, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_then.316, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then.317, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_then.317, align 8
  %34 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_then.312(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_State, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @112, align 8
  ret ptr @112
}

define ptr @Core_iterator_generateWithState_14_1_3_hasKey_else.314(ptr %0) {
Core_iterator_generateWithState_14_1_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `State`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @113, align 8
  ret ptr @113
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_then.316(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @114, align 8
  ret ptr @114
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_else(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_14_1_3_isMatch_else.318(ptr %0) {
Core_iterator_generateWithState_14_1_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @115, align 8
  ret ptr @115
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.320(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.322(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @116, align 8
  ret ptr @116
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.324(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @117, align 8
  ret ptr @117
}

define ptr @Core_iterator_generateWithState_14_1_3_case-0_matched(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-0_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %8, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_Rest, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %13, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %4, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.326, align 8
  ret ptr @tag_More.326
}

define ptr @Core_iterator_generateWithState_14_1_3_case-0_didNotMatch(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.327, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.328, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.335, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.336, align 8
  %18 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.328, align 8
  %19 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.336, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, align 8
  %31 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %32 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_case-1_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %24, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.327(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_then.329, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.330, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.333, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.334, align 8
  %14 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_then.330, align 8
  %15 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.334, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_then.329(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_equals_else.331, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.332, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_equals_else.332, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.331(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @118, align 8
  ret ptr @118
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.333(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @119, align 8
  ret ptr @119
}

define ptr @Core_iterator_generateWithState_14_1_3_equals_else.335(ptr %0) {
Core_iterator_generateWithState_14_1_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @120, align 8
  ret ptr @120
}

define ptr @Core_iterator_generateWithState_14_1_3_case-1_didNotMatch(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_case-2_matched, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_generateWithState_14_1_3_case-2_matched, align 8
  %10 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_generateWithState_14_1_3_case-2_matched)
  %11 = call ptr @Core_iterator_generateWithState_14_1_3_case-2_matched(ptr %10)
  ret ptr %11
}

define ptr @Core_iterator_generateWithState_14_1_3_case-2_matched(ptr %0) {
Core_iterator_generateWithState_14_1_3_case-2_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_21, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generateWithState_14_1_3_21, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %13, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_generateWithState_14_1_3_22, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_generateWithState_14_1_3_22, align 8
  %16 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_21, align 8
  %17 = load ptr, ptr @fun_Core_iterator_generateWithState_14_1_3_22, align 8
  %18 = call ptr @candy_builtin_if_else(ptr %5, ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_The `mapper` is bad. It should return `Empty` or `More [item, state]`, but it returned this: `", align 8
  %20 = call ptr @candy_builtin_text_concatenate(ptr %19, ptr %18)
  %21 = load ptr, ptr @"text_`", align 8
  %22 = call ptr @candy_builtin_text_concatenate(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_False, align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %23, ptr %22, ptr null)
  ret ptr %24
}

define ptr @Core_iterator_generateWithState_14_1_3_21(ptr %0) {
Core_iterator_generateWithState_14_1_3_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_generateWithState_14_1_3_22(ptr %0) {
Core_iterator_generateWithState_14_1_3_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_controlFlow_recursive_18.338(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.340, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.341, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.341, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_generateWithState_14)
  %7 = call ptr @Core_iterator_generateWithState_14(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.340(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_generate(ptr %0, ptr %1) {
Core_iterator_generate:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is length` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Core_int_isNonNegative(ptr %0)
  %8 = load ptr, ptr @"text_`int.isNonNegative length` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = call ptr @candy_builtin_type_of(ptr %0)
  %11 = load ptr, ptr @tag_Int, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:generate:33", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @Core_int_isNonNegative(ptr %0)
  %17 = load ptr, ptr @"text_`isNonNegative value` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:iterator:generate:33", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = load ptr, ptr @num_4294967295, align 8
  %21 = call ptr @Core_int_isLessThan(ptr %0, ptr %20)
  %22 = load ptr, ptr @"text_`int.fitsInRustU32 length` was not satisfied", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr null)
  %24 = call ptr @Core_function_is1(ptr %1)
  %25 = load ptr, ptr @"text_`function.is1 valueGetter` was not satisfied", align 8
  %26 = call ptr @"anonymous_$generated__needs"(ptr %24, ptr %25, ptr null)
  %27 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %28 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 0
  store ptr %0, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %27, i32 0, i32 1
  store ptr %1, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_generate_50, ptr %27, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_generate_50, align 8
  %31 = load ptr, ptr @num_0, align 8
  %32 = load ptr, ptr @fun_Core_iterator_generate_50, align 8
  %33 = call ptr @Core_iterator_generateWithState(ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_generate_50(ptr %0, ptr %1) {
Core_iterator_generate_50:
  %2 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %5, i32 0, i32 1
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_generate_50_6, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_generate_50_6, align 8
  %11 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %12 = load ptr, ptr @fun_Core_iterator_generate_50_6, align 8
  %13 = call ptr @Builtins__ifElse(ptr %4, ptr %11, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_generate_50_6(ptr %0) {
Core_iterator_generate_50_6:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_Int, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:generate:50:6:16", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = load ptr, ptr @num_1, align 8
  %19 = call ptr @candy_builtin_int_add(ptr %17, ptr %18)
  %20 = alloca ptr, i64 3, align 8
  %21 = alloca ptr, i64 3, align 8
  %22 = load ptr, ptr @tag_State, align 8
  %23 = getelementptr ptr, ptr %20, i64 0
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %21, i64 0
  store ptr %19, ptr %24, align 8
  %25 = load ptr, ptr @tag_Item, align 8
  %26 = getelementptr ptr, ptr %20, i64 1
  store ptr %25, ptr %26, align 8
  %27 = getelementptr ptr, ptr %21, i64 1
  store ptr %7, ptr %27, align 8
  %28 = getelementptr ptr, ptr %20, i64 2
  store ptr null, ptr %28, align 8
  %29 = getelementptr ptr, ptr %21, i64 2
  store ptr null, ptr %29, align 8
  %30 = call ptr @make_candy_struct(ptr %20, ptr %21)
  %31 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %31, align 1
  %32 = call ptr @make_candy_tag(ptr %31, ptr %30)
  store ptr %32, ptr @tag_More.342, align 8
  ret ptr @tag_More.342
}

define ptr @Core_iterator_map(ptr %0, ptr %1) {
Core_iterator_map:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_map_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_map_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_map_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 mapper` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_map_19, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_map_19, align 8
  %12 = load ptr, ptr @fun_Core_iterator_map_19, align 8
  %13 = call ptr @Core_iterator_generateWithState(ptr %5, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_map_2() {
Core_iterator_map_2:
  %0 = load ptr, ptr @"text_`map` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_map_19(ptr %0, ptr %1) {
Core_iterator_map_19:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_map_19_3_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.347, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_map_19_3_equals_else.348, align 8
  %12 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.348, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %2, ptr %20, align 8
  %21 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 2
  store ptr %14, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_case-0_didNotMatch, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_map_19_3_case-0_didNotMatch, align 8
  %26 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %27 = load ptr, ptr @fun_Core_iterator_map_19_3_case-0_didNotMatch, align 8
  %28 = call ptr @candy_builtin_if_else(ptr %18, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_iterator_map_19_3_equals_then(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.343, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_19_3_equals_then.344, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.345, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_equals_else.346, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.344, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.346, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_19_3_equals_then.343(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_map_19_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_map_19_3_equals_else(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @121, align 8
  ret ptr @121
}

define ptr @Core_iterator_map_19_3_equals_else.345(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @122, align 8
  ret ptr @122
}

define ptr @Core_iterator_map_19_3_equals_else.347(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @123, align 8
  ret ptr @123
}

define ptr @Core_iterator_map_19_3_case-0_didNotMatch(ptr %0) {
Core_iterator_map_19_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.349, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_map_19_3_equals_then.350, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.371, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_map_19_3_equals_else.372, align 8
  %18 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.350, align 8
  %19 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.372, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_map_19_3_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_map_19_3_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_map_19_3_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_map_19_3_equals_then.349(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.351, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_19_3_equals_then.352, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.369, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_equals_else.370, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.352, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.370, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_19_3_equals_then.351(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.353, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_map_19_3_equals_then.354, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.367, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_equals_else.368, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.354, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.368, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_map_19_3_equals_then.353(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_then.355, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_19_3_equals_then.356, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_equals_else.365, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_map_19_3_equals_else.366, align 8
  %13 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_then.356, align 8
  %14 = load ptr, ptr @fun_Core_iterator_map_19_3_equals_else.366, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_map_19_3_equals_then.355(ptr %0) {
Core_iterator_map_19_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_map_19_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_map_19_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_map_19_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_else.363, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_map_19_3_isMatch_else.364, align 8
  %31 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else.364, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_map_19_3_hasKey_then(ptr %0) {
Core_iterator_map_19_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @124, align 8
  ret ptr @124
}

define ptr @Core_iterator_map_19_3_hasKey_else(ptr %0) {
Core_iterator_map_19_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @125, align 8
  ret ptr @125
}

define ptr @Core_iterator_map_19_3_isMatch_then(ptr %0) {
Core_iterator_map_19_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_then.357, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_map_19_3_hasKey_then.358, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_hasKey_else.359, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_map_19_3_hasKey_else.360, align 8
  %19 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_then.358, align 8
  %20 = load ptr, ptr @fun_Core_iterator_map_19_3_hasKey_else.360, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_then.361, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_map_19_3_isMatch_then.362, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_map_19_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_map_19_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_then.362, align 8
  %34 = load ptr, ptr @fun_Core_iterator_map_19_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_map_19_3_hasKey_then.357(ptr %0) {
Core_iterator_map_19_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @126, align 8
  ret ptr @126
}

define ptr @Core_iterator_map_19_3_hasKey_else.359(ptr %0) {
Core_iterator_map_19_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @127, align 8
  ret ptr @127
}

define ptr @Core_iterator_map_19_3_isMatch_then.361(ptr %0) {
Core_iterator_map_19_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @128, align 8
  ret ptr @128
}

define ptr @Core_iterator_map_19_3_isMatch_else(ptr %0) {
Core_iterator_map_19_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_19_3_isMatch_else.363(ptr %0) {
Core_iterator_map_19_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_map_19_3_equals_else.365(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @129, align 8
  ret ptr @129
}

define ptr @Core_iterator_map_19_3_equals_else.367(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_map_19_3_equals_else.369(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @130, align 8
  ret ptr @130
}

define ptr @Core_iterator_map_19_3_equals_else.371(ptr %0) {
Core_iterator_map_19_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @131, align 8
  ret ptr @131
}

define ptr @Core_iterator_map_19_3_case-1_matched(ptr %0) {
Core_iterator_map_19_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca ptr, i64 3, align 8
  %16 = load ptr, ptr @tag_State, align 8
  %17 = getelementptr ptr, ptr %14, i64 0
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %15, i64 0
  store ptr %8, ptr %18, align 8
  %19 = load ptr, ptr @tag_Item, align 8
  %20 = getelementptr ptr, ptr %14, i64 1
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %15, i64 1
  store ptr %13, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %22, align 8
  %23 = getelementptr ptr, ptr %15, i64 2
  store ptr null, ptr %23, align 8
  %24 = call ptr @make_candy_struct(ptr %14, ptr %15)
  %25 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr %24)
  store ptr %26, ptr @tag_More.373, align 8
  ret ptr @tag_More.373
}

define ptr @Core_iterator_map_19_3_case-1_didNotMatch(ptr %0) {
Core_iterator_map_19_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_withIndex_11(ptr %0) {
Core_iterator_withIndex_11:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_equals_else, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  %10 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_equals_else, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else.382, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.383, align 8
  %20 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %21 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.383, align 8
  %22 = call ptr @candy_builtin_if_else(ptr %16, ptr %20, ptr %21)
  %23 = load ptr, ptr @num_1, align 8
  %24 = call ptr @candy_builtin_list_get(ptr %12, ptr %23)
  %25 = load ptr, ptr @num_2, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %12, ptr %25)
  %27 = call ptr @Core_iterator_next(ptr %24)
  %28 = call ptr @candy_builtin_type_of(ptr %27)
  %29 = load ptr, ptr @tag_Tag, align 8
  %30 = call ptr @candy_builtin_equals(ptr %29, ptr %28)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %27, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %28, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.388, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_withIndex_11_5_equals_else.389, align 8
  %37 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then, align 8
  %38 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.389, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %30, ptr %37, ptr %38)
  %40 = load ptr, ptr @num_0, align 8
  %41 = call ptr @candy_builtin_list_get(ptr %39, ptr %40)
  %42 = load ptr, ptr @tag_Match, align 8
  %43 = call ptr @candy_builtin_equals(ptr %41, ptr %42)
  %44 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %45 = getelementptr inbounds { ptr, ptr, ptr }, ptr %44, i32 0, i32 0
  store ptr %27, ptr %45, align 8
  %46 = getelementptr inbounds { ptr, ptr, ptr }, ptr %44, i32 0, i32 1
  store ptr %39, ptr %46, align 8
  %47 = getelementptr inbounds { ptr, ptr, ptr }, ptr %44, i32 0, i32 2
  store ptr %26, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-0_didNotMatch, ptr %44, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  %49 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %50 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-0_didNotMatch, align 8
  %51 = call ptr @candy_builtin_if_else(ptr %43, ptr %49, ptr %50)
  ret ptr %51
}

define ptr @Core_iterator_withIndex_11_1_equals_then(ptr %0) {
Core_iterator_withIndex_11_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else.380, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.381, align 8
  %31 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else.381, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_withIndex_11_1_hasKey_then(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @132, align 8
  ret ptr @132
}

define ptr @Core_iterator_withIndex_11_1_hasKey_else(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @133, align 8
  ret ptr @133
}

define ptr @Core_iterator_withIndex_11_1_isMatch_then(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_then.374, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.375, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_hasKey_else.376, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.377, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_then.375, align 8
  %20 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_hasKey_else.377, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_then.378, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.379, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_then.379, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_withIndex_11_1_hasKey_then.374(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @134, align 8
  ret ptr @134
}

define ptr @Core_iterator_withIndex_11_1_hasKey_else.376(ptr %0) {
Core_iterator_withIndex_11_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @135, align 8
  ret ptr @135
}

define ptr @Core_iterator_withIndex_11_1_isMatch_then.378(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @136, align 8
  ret ptr @136
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else.380(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_1_equals_else(ptr %0) {
Core_iterator_withIndex_11_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @137, align 8
  ret ptr @137
}

define ptr @Core_iterator_withIndex_11_1_isMatch_else.382(ptr %0) {
Core_iterator_withIndex_11_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_withIndex_11_5_equals_then(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.384, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.385, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.386, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.387, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.385, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.387, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.384(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_withIndex_11_5_equals_else(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @138, align 8
  ret ptr @138
}

define ptr @Core_iterator_withIndex_11_5_equals_else.386(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @139, align 8
  ret ptr @139
}

define ptr @Core_iterator_withIndex_11_5_equals_else.388(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @140, align 8
  ret ptr @140
}

define ptr @Core_iterator_withIndex_11_5_case-0_didNotMatch(ptr %0) {
Core_iterator_withIndex_11_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.390, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_5_equals_then.391, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.412, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_withIndex_11_5_equals_else.413, align 8
  %18 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.391, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.413, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_withIndex_11_5_equals_then.390(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.392, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.393, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.410, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.411, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.393, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.411, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.392(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.394, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_withIndex_11_5_equals_then.395, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.408, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_equals_else.409, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.395, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.409, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_withIndex_11_5_equals_then.394(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_then.396, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_5_equals_then.397, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_equals_else.406, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_withIndex_11_5_equals_else.407, align 8
  %13 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_then.397, align 8
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_equals_else.407, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_withIndex_11_5_equals_then.396(ptr %0) {
Core_iterator_withIndex_11_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_else.404, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.405, align 8
  %31 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else.405, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_withIndex_11_5_hasKey_then(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @141, align 8
  ret ptr @141
}

define ptr @Core_iterator_withIndex_11_5_hasKey_else(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @142, align 8
  ret ptr @142
}

define ptr @Core_iterator_withIndex_11_5_isMatch_then(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_then.398, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.399, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_hasKey_else.400, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.401, align 8
  %19 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_then.399, align 8
  %20 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_hasKey_else.401, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_then.402, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.403, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_withIndex_11_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_then.403, align 8
  %34 = load ptr, ptr @fun_Core_iterator_withIndex_11_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_withIndex_11_5_hasKey_then.398(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @143, align 8
  ret ptr @143
}

define ptr @Core_iterator_withIndex_11_5_hasKey_else.400(ptr %0) {
Core_iterator_withIndex_11_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @144, align 8
  ret ptr @144
}

define ptr @Core_iterator_withIndex_11_5_isMatch_then.402(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @145, align 8
  ret ptr @145
}

define ptr @Core_iterator_withIndex_11_5_isMatch_else(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_5_isMatch_else.404(ptr %0) {
Core_iterator_withIndex_11_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_withIndex_11_5_equals_else.406(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @146, align 8
  ret ptr @146
}

define ptr @Core_iterator_withIndex_11_5_equals_else.408(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_withIndex_11_5_equals_else.410(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @147, align 8
  ret ptr @147
}

define ptr @Core_iterator_withIndex_11_5_equals_else.412(ptr %0) {
Core_iterator_withIndex_11_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @148, align 8
  ret ptr @148
}

define ptr @Core_iterator_withIndex_11_5_case-1_matched(ptr %0) {
Core_iterator_withIndex_11_5_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = alloca ptr, i64 3, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr ptr, ptr %9, i64 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %4, ptr %13, align 8
  %14 = load ptr, ptr @tag_Index, align 8
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr ptr, ptr %9, i64 1
  store ptr %14, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 1
  store ptr %16, ptr %18, align 8
  %19 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %19, align 8
  %20 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %20, align 8
  %21 = call ptr @make_candy_struct(ptr %9, ptr %10)
  %22 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = call ptr @candy_builtin_type_of(ptr %23)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:iterator:withIndex:11:5:22", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @num_1, align 8
  %33 = call ptr @candy_builtin_int_add(ptr %31, ptr %32)
  %34 = alloca ptr, i64 3, align 8
  %35 = alloca ptr, i64 3, align 8
  %36 = load ptr, ptr @tag_Index, align 8
  %37 = getelementptr ptr, ptr %34, i64 0
  store ptr %36, ptr %37, align 8
  %38 = getelementptr ptr, ptr %35, i64 0
  store ptr %33, ptr %38, align 8
  %39 = load ptr, ptr @tag_Iterator, align 8
  %40 = getelementptr ptr, ptr %34, i64 1
  store ptr %39, ptr %40, align 8
  %41 = getelementptr ptr, ptr %35, i64 1
  store ptr %8, ptr %41, align 8
  %42 = getelementptr ptr, ptr %34, i64 2
  store ptr null, ptr %42, align 8
  %43 = getelementptr ptr, ptr %35, i64 2
  store ptr null, ptr %43, align 8
  %44 = call ptr @make_candy_struct(ptr %34, ptr %35)
  %45 = alloca ptr, i64 3, align 8
  %46 = alloca ptr, i64 3, align 8
  %47 = load ptr, ptr @tag_Item, align 8
  %48 = getelementptr ptr, ptr %45, i64 0
  store ptr %47, ptr %48, align 8
  %49 = getelementptr ptr, ptr %46, i64 0
  store ptr %21, ptr %49, align 8
  %50 = load ptr, ptr @tag_State, align 8
  %51 = getelementptr ptr, ptr %45, i64 1
  store ptr %50, ptr %51, align 8
  %52 = getelementptr ptr, ptr %46, i64 1
  store ptr %44, ptr %52, align 8
  %53 = getelementptr ptr, ptr %45, i64 2
  store ptr null, ptr %53, align 8
  %54 = getelementptr ptr, ptr %46, i64 2
  store ptr null, ptr %54, align 8
  %55 = call ptr @make_candy_struct(ptr %45, ptr %46)
  %56 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %56, align 1
  %57 = call ptr @make_candy_tag(ptr %56, ptr %55)
  store ptr %57, ptr @tag_More.414, align 8
  ret ptr @tag_More.414
}

define ptr @Core_iterator_withIndex_11_5_case-1_didNotMatch(ptr %0) {
Core_iterator_withIndex_11_5_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_ensure(ptr %0, ptr %1) {
Core_iterator_ensure:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 guard` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_ensure_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_ensure_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_ensure_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_ensure_19, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_ensure_19, align 8
  %12 = load ptr, ptr @fun_Core_iterator_ensure_19, align 8
  %13 = call ptr @Core_iterator_map(ptr %8, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_ensure_14() {
Core_iterator_ensure_14:
  %0 = load ptr, ptr @"text_`ensure` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_ensure_19(ptr %0, ptr %1) {
Core_iterator_ensure_19:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @get_candy_function_pointer(ptr %3)
  %5 = call ptr @get_candy_function_environment(ptr %3)
  %6 = call ptr (...) %4(ptr %0, ptr %5)
  ret ptr %0
}

define ptr @Core_iterator_foldLeft(ptr %0, ptr %1, ptr %2) {
Core_iterator_foldLeft:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %4 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_2, ptr %3, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_iterator_foldLeft_2, align 8
  %5 = load ptr, ptr @fun_Core_iterator_foldLeft_2, align 8
  %6 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %5)
  %7 = call ptr @Core_function_is2(ptr %2)
  %8 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = alloca ptr, i64 3, align 8
  %11 = alloca ptr, i64 3, align 8
  %12 = load ptr, ptr @tag_Value, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %12, ptr %13, align 8
  %14 = getelementptr ptr, ptr %11, i64 0
  store ptr %1, ptr %14, align 8
  %15 = load ptr, ptr @tag_Iterator, align 8
  %16 = getelementptr ptr, ptr %10, i64 1
  store ptr %15, ptr %16, align 8
  %17 = getelementptr ptr, ptr %11, i64 1
  store ptr %6, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %18, align 8
  %19 = getelementptr ptr, ptr %11, i64 2
  store ptr null, ptr %19, align 8
  %20 = call ptr @make_candy_struct(ptr %10, ptr %11)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %2, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_foldLeft_23, align 8
  %24 = load ptr, ptr @fun_Core_iterator_foldLeft_23, align 8
  %25 = call ptr @Core_function_is2(ptr %24)
  %26 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %27 = load ptr, ptr @"Core:iterator:foldLeft:24", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %30 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.455, ptr %29, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_controlFlow_recursive_18.456, align 8
  %31 = load ptr, ptr @fun_Core_controlFlow_recursive_18.456, align 8
  %32 = call ptr @Core_controlFlow_recursive_18.455(ptr %31, ptr %20)
  ret ptr %32
}

define ptr @Core_iterator_foldLeft_2() {
Core_iterator_foldLeft_2:
  %0 = load ptr, ptr @"text_`foldLeft` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_foldLeft_23(ptr %0, ptr %1, ptr %2) {
Core_iterator_foldLeft_23:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_foldLeft_23_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_equals_else, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_foldLeft_23_1_equals_else, align 8
  %12 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_else.423, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.424, align 8
  %22 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.424, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = call ptr @Core_iterator_next(ptr %26)
  %30 = call ptr @candy_builtin_type_of(ptr %29)
  %31 = load ptr, ptr @tag_Tag, align 8
  %32 = call ptr @candy_builtin_equals(ptr %31, ptr %30)
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr }, ptr %33, i32 0, i32 0
  store ptr %29, ptr %34, align 8
  %35 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %35, ptr @fun_Core_iterator_foldLeft_23_5_equals_then, align 8
  %36 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %37 = getelementptr inbounds { ptr }, ptr %36, i32 0, i32 0
  store ptr %30, ptr %37, align 8
  %38 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.429, ptr %36, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %38, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.430, align 8
  %39 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then, align 8
  %40 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.430, align 8
  %41 = call ptr @candy_builtin_if_else(ptr %32, ptr %39, ptr %40)
  %42 = load ptr, ptr @num_0, align 8
  %43 = call ptr @candy_builtin_list_get(ptr %41, ptr %42)
  %44 = load ptr, ptr @tag_Match, align 8
  %45 = call ptr @candy_builtin_equals(ptr %43, ptr %44)
  %46 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %47 = getelementptr inbounds { ptr }, ptr %46, i32 0, i32 0
  store ptr %28, ptr %47, align 8
  %48 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-0_matched, ptr %46, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %48, ptr @fun_Core_iterator_foldLeft_23_5_case-0_matched, align 8
  %49 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %49, i32 0, i32 0
  store ptr %0, ptr %50, align 8
  %51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %49, i32 0, i32 1
  store ptr %41, ptr %51, align 8
  %52 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %49, i32 0, i32 2
  store ptr %53, ptr %54, align 8
  %55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %49, i32 0, i32 3
  store ptr %28, ptr %55, align 8
  %56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %49, i32 0, i32 4
  store ptr %29, ptr %56, align 8
  %57 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-0_didNotMatch, ptr %49, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %57, ptr @fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch, align 8
  %58 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_matched, align 8
  %59 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-0_didNotMatch, align 8
  %60 = call ptr @candy_builtin_if_else(ptr %45, ptr %58, ptr %59)
  ret ptr %60
}

define ptr @Core_iterator_foldLeft_23_1_equals_then(ptr %0) {
Core_iterator_foldLeft_23_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_else.421, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.422, align 8
  %31 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else.422, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_then(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @149, align 8
  ret ptr @149
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_else(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @150, align 8
  ret ptr @150
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_then(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Value, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_then.415, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then.416, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_hasKey_else.417, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else.418, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_then.416, align 8
  %20 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_hasKey_else.418, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_then.419, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then.420, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_then.420, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_23_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_then.415(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Value, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @151, align 8
  ret ptr @151
}

define ptr @Core_iterator_foldLeft_23_1_hasKey_else.417(ptr %0) {
Core_iterator_foldLeft_23_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Value`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @152, align 8
  ret ptr @152
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_then.419(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @153, align 8
  ret ptr @153
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_else(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_else.421(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_1_equals_else(ptr %0) {
Core_iterator_foldLeft_23_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @154, align 8
  ret ptr @154
}

define ptr @Core_iterator_foldLeft_23_1_isMatch_else.423(ptr %0) {
Core_iterator_foldLeft_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_foldLeft_23_5_equals_then(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.425, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.426, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.427, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.428, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.426, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.428, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.425(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_foldLeft_23_5_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_foldLeft_23_5_equals_else(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @155, align 8
  ret ptr @155
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.427(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @156, align 8
  ret ptr @156
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.429(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @157, align 8
  ret ptr @157
}

define ptr @Core_iterator_foldLeft_23_5_case-0_matched(ptr %0) {
Core_iterator_foldLeft_23_5_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_5_case-0_didNotMatch(ptr %0) {
Core_iterator_foldLeft_23_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 4
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.431, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.432, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.453, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.454, align 8
  %18 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.432, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.454, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 2
  store ptr %31, ptr %32, align 8
  %33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %25, i32 0, i32 3
  store ptr %34, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_foldLeft_23_5_case-1_matched, align 8
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr }, ptr %37, i32 0, i32 0
  store ptr %20, ptr %38, align 8
  %39 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_case-1_didNotMatch, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %39, ptr @fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch, align 8
  %40 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_matched, align 8
  %41 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_case-1_didNotMatch, align 8
  %42 = call ptr @candy_builtin_if_else(ptr %24, ptr %40, ptr %41)
  ret ptr %42
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.431(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.433, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.434, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.451, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.452, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.434, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.452, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.433(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.435, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.436, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.449, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.450, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.436, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.450, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.435(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_then.437, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.438, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_equals_else.447, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.448, align 8
  %13 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_then.438, align 8
  %14 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_equals_else.448, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_foldLeft_23_5_equals_then.437(ptr %0) {
Core_iterator_foldLeft_23_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_else.445, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else.446, align 8
  %31 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else.446, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_then(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @158, align 8
  ret ptr @158
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_else(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @159, align 8
  ret ptr @159
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_then(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_then.439, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then.440, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_hasKey_else.441, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else.442, align 8
  %19 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_then.440, align 8
  %20 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_hasKey_else.442, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_then.443, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then.444, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_foldLeft_23_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_then.444, align 8
  %34 = load ptr, ptr @fun_Core_iterator_foldLeft_23_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_then.439(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @160, align 8
  ret ptr @160
}

define ptr @Core_iterator_foldLeft_23_5_hasKey_else.441(ptr %0) {
Core_iterator_foldLeft_23_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @161, align 8
  ret ptr @161
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_then.443(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @162, align 8
  ret ptr @162
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_else(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_5_isMatch_else.445(ptr %0) {
Core_iterator_foldLeft_23_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.447(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @163, align 8
  ret ptr @163
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.449(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.451(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @164, align 8
  ret ptr @164
}

define ptr @Core_iterator_foldLeft_23_5_equals_else.453(ptr %0) {
Core_iterator_foldLeft_23_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @165, align 8
  ret ptr @165
}

define ptr @Core_iterator_foldLeft_23_5_case-1_matched(ptr %0) {
Core_iterator_foldLeft_23_5_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %12 = load ptr, ptr %11, align 8
  %13 = call ptr @get_candy_function_pointer(ptr %12)
  %14 = call ptr @get_candy_function_environment(ptr %12)
  %15 = call ptr (...) %13(ptr %10, ptr %4, ptr %14)
  %16 = alloca ptr, i64 3, align 8
  %17 = alloca ptr, i64 3, align 8
  %18 = load ptr, ptr @tag_Iterator, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %8, ptr %20, align 8
  %21 = load ptr, ptr @tag_Value, align 8
  %22 = getelementptr ptr, ptr %16, i64 1
  store ptr %21, ptr %22, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %15, ptr %23, align 8
  %24 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = call ptr @make_candy_struct(ptr %16, ptr %17)
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %28 = load ptr, ptr %27, align 8
  %29 = call ptr @get_candy_function_pointer(ptr %28)
  %30 = call ptr @get_candy_function_environment(ptr %28)
  %31 = call ptr (...) %29(ptr %26, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_foldLeft_23_5_case-1_didNotMatch(ptr %0) {
Core_iterator_foldLeft_23_5_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_controlFlow_recursive_18.455(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.457, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.458, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.458, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_foldLeft_23)
  %7 = call ptr @Core_iterator_foldLeft_23(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.457(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_reduceLeft_18_case-0_matched() {
Core_iterator_reduceLeft_18_case-0_matched:
  %0 = load ptr, ptr @tag_Error.459, align 8
  ret ptr %0
}

define ptr @Core_iterator_reduceLeft(ptr %0, ptr %1) {
Core_iterator_reduceLeft:
  %2 = call ptr @Core_function_is2(ptr %1)
  %3 = load ptr, ptr @"text_`function.is2 combine` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_reduceLeft_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_reduceLeft_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = call ptr @Core_iterator_next(ptr %8)
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_Tag, align 8
  %12 = call ptr @candy_builtin_equals(ptr %11, ptr %10)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %9, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_reduceLeft_18_equals_then, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %10, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.464, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_reduceLeft_18_equals_else.465, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then, align 8
  %20 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.465, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %12, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %1, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %26, i32 0, i32 2
  store ptr %9, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-0_didNotMatch, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_reduceLeft_18_case-0_didNotMatch, align 8
  %31 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_matched, align 8
  %32 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-0_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %25, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_reduceLeft_14() {
Core_iterator_reduceLeft_14:
  %0 = load ptr, ptr @"text_`reduceLeft` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_reduceLeft_18_equals_then(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.460, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_18_equals_then.461, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.462, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_equals_else.463, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.461, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.463, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_18_equals_then.460(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_reduceLeft_18_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_reduceLeft_18_equals_else(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @166, align 8
  ret ptr @166
}

define ptr @Core_iterator_reduceLeft_18_equals_else.462(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @167, align 8
  ret ptr @167
}

define ptr @Core_iterator_reduceLeft_18_equals_else.464(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @168, align 8
  ret ptr @168
}

define ptr @Core_iterator_reduceLeft_18_case-0_didNotMatch(ptr %0) {
Core_iterator_reduceLeft_18_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.466, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_reduceLeft_18_equals_then.467, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.488, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_reduceLeft_18_equals_else.489, align 8
  %18 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.467, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.489, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_reduceLeft_18_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_reduceLeft_18_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_reduceLeft_18_equals_then.466(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.468, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_18_equals_then.469, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.486, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_equals_else.487, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.469, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.487, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_18_equals_then.468(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.470, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_reduceLeft_18_equals_then.471, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.484, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_equals_else.485, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.471, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.485, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_reduceLeft_18_equals_then.470(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_then.472, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_reduceLeft_18_equals_then.473, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_equals_else.482, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_reduceLeft_18_equals_else.483, align 8
  %13 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_then.473, align 8
  %14 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_equals_else.483, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_reduceLeft_18_equals_then.472(ptr %0) {
Core_iterator_reduceLeft_18_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_else.480, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else.481, align 8
  %31 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else.481, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_reduceLeft_18_hasKey_then(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @169, align 8
  ret ptr @169
}

define ptr @Core_iterator_reduceLeft_18_hasKey_else(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @170, align 8
  ret ptr @170
}

define ptr @Core_iterator_reduceLeft_18_isMatch_then(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_then.474, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then.475, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_hasKey_else.476, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else.477, align 8
  %19 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_then.475, align 8
  %20 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_hasKey_else.477, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_then.478, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then.479, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_reduceLeft_18_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_then.479, align 8
  %34 = load ptr, ptr @fun_Core_iterator_reduceLeft_18_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_reduceLeft_18_hasKey_then.474(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @171, align 8
  ret ptr @171
}

define ptr @Core_iterator_reduceLeft_18_hasKey_else.476(ptr %0) {
Core_iterator_reduceLeft_18_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @172, align 8
  ret ptr @172
}

define ptr @Core_iterator_reduceLeft_18_isMatch_then.478(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @173, align 8
  ret ptr @173
}

define ptr @Core_iterator_reduceLeft_18_isMatch_else(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_reduceLeft_18_isMatch_else.480(ptr %0) {
Core_iterator_reduceLeft_18_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_reduceLeft_18_equals_else.482(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @174, align 8
  ret ptr @174
}

define ptr @Core_iterator_reduceLeft_18_equals_else.484(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_reduceLeft_18_equals_else.486(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @175, align 8
  ret ptr @175
}

define ptr @Core_iterator_reduceLeft_18_equals_else.488(ptr %0) {
Core_iterator_reduceLeft_18_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @176, align 8
  ret ptr @176
}

define ptr @Core_iterator_reduceLeft_18_case-1_matched(ptr %0) {
Core_iterator_reduceLeft_18_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %4, ptr %10)
  %12 = alloca i8, i64 3, align 1
  store [3 x i8] c"Ok\00", ptr %12, align 1
  %13 = call ptr @make_candy_tag(ptr %12, ptr %11)
  store ptr %13, ptr @tag_Ok.490, align 8
  ret ptr @tag_Ok.490
}

define ptr @Core_iterator_reduceLeft_18_case-1_didNotMatch(ptr %0) {
Core_iterator_reduceLeft_18_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_sum_8(ptr %0, ptr %1) {
Core_iterator_sum_8:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %6 = load ptr, ptr @"Core:iterator:sum:8:10", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %12 = load ptr, ptr @"Core:iterator:sum:8:10", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_int_add(ptr %0, ptr %1)
  ret ptr %14
}

define ptr @Core_iterator_sum(ptr %0) {
Core_iterator_sum:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_sum_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_sum_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_sum_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_sum_5, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_sum_5, align 8
  %7 = load ptr, ptr @fun_Core_iterator_sum_5, align 8
  %8 = call ptr @Core_iterator_ensure(ptr %4, ptr %7)
  %9 = load ptr, ptr @fun_Core_iterator_sum_8, align 8
  %10 = call ptr @Core_iterator_reduceLeft(ptr %8, ptr %9)
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @Core_result_unwrapOr(ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Core_iterator_sum_2() {
Core_iterator_sum_2:
  %0 = load ptr, ptr @"text_`sum` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_sum_5(ptr %0) {
Core_iterator_sum_5:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_Iterator items need to be ints.", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  ret ptr %5
}

define ptr @Core_iterator_length_5(ptr %0) {
Core_iterator_length_5:
  %1 = load ptr, ptr @num_1, align 8
  ret ptr %1
}

define ptr @Core_iterator_all(ptr %0, ptr %1) {
Core_iterator_all:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_all_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_all_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_all_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_all_18, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_all_18, align 8
  %12 = load ptr, ptr @tag_True, align 8
  %13 = load ptr, ptr @fun_Core_iterator_all_18, align 8
  %14 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_all_14() {
Core_iterator_all_14:
  %0 = load ptr, ptr @"text_`all` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_all_18(ptr %0, ptr %1, ptr %2) {
Core_iterator_all_18:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = call ptr @Core_bool_is(ptr %7)
  %9 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_bool_is(ptr %0)
  %12 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:iterator:all:18:26", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = call ptr @Core_bool_is(ptr %7)
  %16 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:all:18:26", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %7, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_bool_and_12, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_bool_and_12, align 8
  %22 = load ptr, ptr @fun_Core_bool_and_12, align 8
  %23 = call ptr @Core_bool_lazyAnd(ptr %0, ptr %22)
  ret ptr %23
}

define ptr @Core_bool_and_12(ptr %0) {
Core_bool_and_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_any(ptr %0, ptr %1) {
Core_iterator_any:
  %2 = call ptr @Core_function_is1(ptr %1)
  %3 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_any_14, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_any_14, align 8
  %7 = load ptr, ptr @fun_Core_iterator_any_14, align 8
  %8 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_any_18, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_any_18, align 8
  %12 = load ptr, ptr @tag_False, align 8
  %13 = load ptr, ptr @fun_Core_iterator_any_18, align 8
  %14 = call ptr @Core_iterator_foldLeft(ptr %8, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_any_14() {
Core_iterator_any_14:
  %0 = load ptr, ptr @"text_`any` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_any_18(ptr %0, ptr %1, ptr %2) {
Core_iterator_any_18:
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %1, ptr %6)
  %8 = call ptr @Core_bool_is(ptr %7)
  %9 = load ptr, ptr @"text_`bool.is itemResult` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_bool_is(ptr %0)
  %12 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:iterator:any:18:26", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = call ptr @Core_bool_is(ptr %7)
  %16 = load ptr, ptr @"text_`is b` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:any:18:26", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %7, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_bool_or_12, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_bool_or_12, align 8
  %22 = load ptr, ptr @fun_Core_bool_or_12, align 8
  %23 = call ptr @Core_bool_lazyOr(ptr %0, ptr %22)
  ret ptr %23
}

define ptr @Core_bool_or_12(ptr %0) {
Core_bool_or_12:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_joinToText(ptr %0) {
Core_iterator_joinToText:
  %1 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %2 = call ptr @make_candy_function(ptr @Core_iterator_joinToText_2, ptr %1, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %2, ptr @fun_Core_iterator_joinToText_2, align 8
  %3 = load ptr, ptr @fun_Core_iterator_joinToText_2, align 8
  %4 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %6 = call ptr @make_candy_function(ptr @Core_iterator_joinToText_12, ptr %5, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Core_iterator_joinToText_12, align 8
  %7 = load ptr, ptr @text_, align 8
  %8 = load ptr, ptr @fun_Core_iterator_joinToText_12, align 8
  %9 = call ptr @Core_iterator_foldLeft(ptr %4, ptr %7, ptr %8)
  ret ptr %9
}

define ptr @Core_iterator_joinToText_2() {
Core_iterator_joinToText_2:
  %0 = load ptr, ptr @"text_`joinToText` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_joinToText_12(ptr %0, ptr %1) {
Core_iterator_joinToText_12:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`text.is item` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %0)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:joinToText:12:22", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:joinToText:12:22", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = call ptr @candy_builtin_text_concatenate(ptr %0, ptr %1)
  ret ptr %19
}

define ptr @Core_iterator_where(ptr %0, ptr %1) {
Core_iterator_where:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_where_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_where_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_where_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @Core_function_is1(ptr %1)
  %7 = load ptr, ptr @"text_`function.is1 tester` was not satisfied", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr null)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %1, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19, align 8
  %12 = load ptr, ptr @fun_Core_iterator_where_19, align 8
  %13 = call ptr @Core_function_is2(ptr %12)
  %14 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %15 = load ptr, ptr @"Core:iterator:where:20", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.553, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_controlFlow_recursive_18.554, align 8
  %19 = load ptr, ptr @fun_Core_controlFlow_recursive_18.554, align 8
  %20 = call ptr @Core_controlFlow_recursive_18.553(ptr %19, ptr %5)
  ret ptr %20
}

define ptr @Core_iterator_where_2() {
Core_iterator_where_2:
  %0 = load ptr, ptr @"text_`where` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_where_19(ptr %0, ptr %1, ptr %2) {
Core_iterator_where_19:
  %3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %4 = getelementptr inbounds { ptr, ptr }, ptr %3, i32 0, i32 0
  store ptr %0, ptr %4, align 8
  %5 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds { ptr, ptr }, ptr %3, i32 0, i32 1
  store ptr %6, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2, ptr %3, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_where_19_2, align 8
  %9 = load ptr, ptr @fun_Core_iterator_where_19_2, align 8
  %10 = call ptr @Core_iterator_generateWithState(ptr %1, ptr %9)
  ret ptr %10
}

define ptr @Core_iterator_where_19_2(ptr %0, ptr %1) {
Core_iterator_where_19_2:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_where_19_2_3_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.495, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19_2_3_equals_else.496, align 8
  %12 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.496, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %21, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr }, ptr %1, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %19, i32 0, i32 2
  store ptr %2, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %19, i32 0, i32 3
  store ptr %14, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_case-0_didNotMatch, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_iterator_where_19_2_3_case-0_didNotMatch, align 8
  %29 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %30 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-0_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %18, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_where_19_2_3_equals_then(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.491, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_equals_then.492, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.493, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_equals_else.494, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.492, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.494, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_equals_then.491(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19_2_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_where_19_2_3_equals_else(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @177, align 8
  ret ptr @177
}

define ptr @Core_iterator_where_19_2_3_equals_else.493(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @178, align 8
  ret ptr @178
}

define ptr @Core_iterator_where_19_2_3_equals_else.495(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @179, align 8
  ret ptr @179
}

define ptr @Core_iterator_where_19_2_3_case-0_didNotMatch(ptr %0) {
Core_iterator_where_19_2_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.497, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_equals_then.498, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.519, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_19_2_3_equals_else.520, align 8
  %18 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.498, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.520, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %30, ptr %31, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 2
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_where_19_2_3_case-1_matched, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %20, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_case-1_didNotMatch, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_where_19_2_3_case-1_didNotMatch, align 8
  %37 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_matched, align 8
  %38 = load ptr, ptr @fun_Core_iterator_where_19_2_3_case-1_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %24, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Core_iterator_where_19_2_3_equals_then.497(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.499, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_equals_then.500, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.517, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_equals_else.518, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.500, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.518, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_equals_then.499(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.501, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_equals_then.502, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.515, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_equals_else.516, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.502, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.516, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_equals_then.501(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_then.503, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_equals_then.504, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_equals_else.513, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_where_19_2_3_equals_else.514, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_then.504, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_equals_else.514, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_where_19_2_3_equals_then.503(ptr %0) {
Core_iterator_where_19_2_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_19_2_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_else.511, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_19_2_3_isMatch_else.512, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else.512, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_19_2_3_hasKey_then(ptr %0) {
Core_iterator_where_19_2_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @180, align 8
  ret ptr @180
}

define ptr @Core_iterator_where_19_2_3_hasKey_else(ptr %0) {
Core_iterator_where_19_2_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @181, align 8
  ret ptr @181
}

define ptr @Core_iterator_where_19_2_3_isMatch_then(ptr %0) {
Core_iterator_where_19_2_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_then.505, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_hasKey_then.506, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_hasKey_else.507, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_where_19_2_3_hasKey_else.508, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_then.506, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_19_2_3_hasKey_else.508, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_then.509, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_19_2_3_isMatch_then.510, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_where_19_2_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_then.510, align 8
  %34 = load ptr, ptr @fun_Core_iterator_where_19_2_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_where_19_2_3_hasKey_then.505(ptr %0) {
Core_iterator_where_19_2_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @182, align 8
  ret ptr @182
}

define ptr @Core_iterator_where_19_2_3_hasKey_else.507(ptr %0) {
Core_iterator_where_19_2_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @183, align 8
  ret ptr @183
}

define ptr @Core_iterator_where_19_2_3_isMatch_then.509(ptr %0) {
Core_iterator_where_19_2_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @184, align 8
  ret ptr @184
}

define ptr @Core_iterator_where_19_2_3_isMatch_else(ptr %0) {
Core_iterator_where_19_2_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_isMatch_else.511(ptr %0) {
Core_iterator_where_19_2_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_equals_else.513(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @185, align 8
  ret ptr @185
}

define ptr @Core_iterator_where_19_2_3_equals_else.515(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_where_19_2_3_equals_else.517(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @186, align 8
  ret ptr @186
}

define ptr @Core_iterator_where_19_2_3_equals_else.519(ptr %0) {
Core_iterator_where_19_2_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @187, align 8
  ret ptr @187
}

define ptr @Core_iterator_where_19_2_3_case-1_matched(ptr %0) {
Core_iterator_where_19_2_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %4, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_5, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_19_2_3_5, align 8
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 0
  store ptr %20, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr }, ptr %18, i32 0, i32 1
  store ptr %8, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_iterator_where_19_2_3_6, align 8
  %24 = load ptr, ptr @fun_Core_iterator_where_19_2_3_5, align 8
  %25 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6, align 8
  %26 = call ptr @Builtins__ifElse(ptr %13, ptr %24, ptr %25)
  ret ptr %26
}

define ptr @Core_iterator_where_19_2_3_5(ptr %0) {
Core_iterator_where_19_2_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_State, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.521, align 8
  ret ptr @tag_More.521
}

define ptr @Core_iterator_where_19_2_3_6(ptr %0) {
Core_iterator_where_19_2_3_6:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @get_candy_function_pointer(ptr %4)
  %6 = call ptr @get_candy_function_environment(ptr %4)
  %7 = call ptr (...) %5(ptr %2, ptr %6)
  %8 = call ptr @Core_iterator_next(ptr %7)
  %9 = call ptr @candy_builtin_type_of(ptr %8)
  %10 = load ptr, ptr @tag_Tag, align 8
  %11 = call ptr @candy_builtin_equals(ptr %10, ptr %9)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %8, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %9, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.526, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.527, align 8
  %18 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.527, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %11, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %8, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, align 8
  %29 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %30 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-0_didNotMatch, align 8
  %31 = call ptr @candy_builtin_if_else(ptr %24, ptr %29, ptr %30)
  ret ptr %31
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.522, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.523, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.524, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.525, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.523, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.525, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.522(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @188, align 8
  ret ptr @188
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.524(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @189, align 8
  ret ptr @189
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.526(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @190, align 8
  ret ptr @190
}

define ptr @Core_iterator_where_19_2_3_6_5_case-0_didNotMatch(ptr %0) {
Core_iterator_where_19_2_3_6_5_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.528, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.529, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.550, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.551, align 8
  %18 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.529, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.551, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_matched, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %20, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_matched, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_case-1_didNotMatch, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %24, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.528(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.530, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.531, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.548, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.549, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.531, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.549, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.530(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.532, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.533, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.546, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.547, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.533, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.547, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.532(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_then.534, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.535, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_equals_else.544, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.545, align 8
  %13 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_then.535, align 8
  %14 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_equals_else.545, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_then.534(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_else.542, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else.543, align 8
  %31 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else.543, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_then(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @191, align 8
  ret ptr @191
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_else(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @192, align 8
  ret ptr @192
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_then(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_then.536, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then.537, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_hasKey_else.538, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else.539, align 8
  %19 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_then.537, align 8
  %20 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_hasKey_else.539, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_then.540, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then.541, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_where_19_2_3_6_5_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_then.541, align 8
  %34 = load ptr, ptr @fun_Core_iterator_where_19_2_3_6_5_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_then.536(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @193, align 8
  ret ptr @193
}

define ptr @Core_iterator_where_19_2_3_6_5_hasKey_else.538(ptr %0) {
Core_iterator_where_19_2_3_6_5_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @194, align 8
  ret ptr @194
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_then.540(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @195, align 8
  ret ptr @195
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_else(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_6_5_isMatch_else.542(ptr %0) {
Core_iterator_where_19_2_3_6_5_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.544(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @196, align 8
  ret ptr @196
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.546(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.548(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @197, align 8
  ret ptr @197
}

define ptr @Core_iterator_where_19_2_3_6_5_equals_else.550(ptr %0) {
Core_iterator_where_19_2_3_6_5_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @198, align 8
  ret ptr @198
}

define ptr @Core_iterator_where_19_2_3_6_5_case-1_matched(ptr %0) {
Core_iterator_where_19_2_3_6_5_case-1_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 3, align 8
  %10 = alloca ptr, i64 3, align 8
  %11 = load ptr, ptr @tag_Item, align 8
  %12 = getelementptr ptr, ptr %9, i64 0
  store ptr %11, ptr %12, align 8
  %13 = getelementptr ptr, ptr %10, i64 0
  store ptr %4, ptr %13, align 8
  %14 = load ptr, ptr @tag_State, align 8
  %15 = getelementptr ptr, ptr %9, i64 1
  store ptr %14, ptr %15, align 8
  %16 = getelementptr ptr, ptr %10, i64 1
  store ptr %8, ptr %16, align 8
  %17 = getelementptr ptr, ptr %9, i64 2
  store ptr null, ptr %17, align 8
  %18 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %18, align 8
  %19 = call ptr @make_candy_struct(ptr %9, ptr %10)
  %20 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %20, align 1
  %21 = call ptr @make_candy_tag(ptr %20, ptr %19)
  store ptr %21, ptr @tag_More.552, align 8
  ret ptr @tag_More.552
}

define ptr @Core_iterator_where_19_2_3_6_5_case-1_didNotMatch(ptr %0) {
Core_iterator_where_19_2_3_6_5_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_where_19_2_3_case-1_didNotMatch(ptr %0) {
Core_iterator_where_19_2_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_controlFlow_recursive_18.553(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.555, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.556, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.556, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_iterator_where_19)
  %7 = call ptr @Core_iterator_where_19(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.555(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_takeWhile(ptr %0, ptr %1) {
Core_iterator_takeWhile:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_takeWhile_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_takeWhile_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_takeWhile_7, align 8
  %9 = load ptr, ptr @fun_Core_iterator_takeWhile_7, align 8
  %10 = call ptr @Core_iterator_generateWithState(ptr %5, ptr %9)
  ret ptr %10
}

define ptr @Core_iterator_takeWhile_2() {
Core_iterator_takeWhile_2:
  %0 = load ptr, ptr @"text_`takeWhile` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_takeWhile_7(ptr %0, ptr %1) {
Core_iterator_takeWhile_7:
  %2 = call ptr @Core_iterator_next(ptr %0)
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Tag, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %2, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.561, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.562, align 8
  %12 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.562, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %2, ptr %20, align 8
  %21 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %14, ptr %21, align 8
  %22 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 2
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  %26 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %27 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-0_didNotMatch, align 8
  %28 = call ptr @candy_builtin_if_else(ptr %18, ptr %26, ptr %27)
  ret ptr %28
}

define ptr @Core_iterator_takeWhile_7_3_equals_then(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.557, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.558, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.559, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.560, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.558, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.560, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.557(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_takeWhile_7_3_equals_else(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @199, align 8
  ret ptr @199
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.559(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @200, align 8
  ret ptr @200
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.561(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @201, align 8
  ret ptr @201
}

define ptr @Core_iterator_takeWhile_7_3_case-0_didNotMatch(ptr %0) {
Core_iterator_takeWhile_7_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.563, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.564, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.585, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.586, align 8
  %18 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.564, align 8
  %19 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.586, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %20, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %28, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %20, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_case-1_didNotMatch, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %34 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_matched, align 8
  %35 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_case-1_didNotMatch, align 8
  %36 = call ptr @candy_builtin_if_else(ptr %24, ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.563(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.565, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.566, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.583, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.584, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.566, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.584, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.565(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.567, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.568, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.581, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.582, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.568, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.582, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.567(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_then.569, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.570, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_equals_else.579, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.580, align 8
  %13 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_then.570, align 8
  %14 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_equals_else.580, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_takeWhile_7_3_equals_then.569(ptr %0) {
Core_iterator_takeWhile_7_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else.577, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.578, align 8
  %31 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else.578, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @202, align 8
  ret ptr @202
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @203, align 8
  ret ptr @203
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_then.571, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.572, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_hasKey_else.573, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.574, align 8
  %19 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_then.572, align 8
  %20 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_hasKey_else.574, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_then.575, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.576, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_then.576, align 8
  %34 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_then.571(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @204, align 8
  ret ptr @204
}

define ptr @Core_iterator_takeWhile_7_3_hasKey_else.573(ptr %0) {
Core_iterator_takeWhile_7_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @205, align 8
  ret ptr @205
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_then.575(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @206, align 8
  ret ptr @206
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_isMatch_else.577(ptr %0) {
Core_iterator_takeWhile_7_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.579(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @207, align 8
  ret ptr @207
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.581(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.583(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @208, align 8
  ret ptr @208
}

define ptr @Core_iterator_takeWhile_7_3_equals_else.585(ptr %0) {
Core_iterator_takeWhile_7_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @209, align 8
  ret ptr @209
}

define ptr @Core_iterator_takeWhile_7_3_case-1_matched(ptr %0) {
Core_iterator_takeWhile_7_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @get_candy_function_pointer(ptr %10)
  %12 = call ptr @get_candy_function_environment(ptr %10)
  %13 = call ptr (...) %11(ptr %4, ptr %12)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %8, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %4, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_takeWhile_7_3_5, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  %18 = load ptr, ptr @fun_Core_iterator_takeWhile_7_3_5, align 8
  %19 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %20 = call ptr @Builtins__ifElse(ptr %13, ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Core_iterator_takeWhile_7_3_5(ptr %0) {
Core_iterator_takeWhile_7_3_5:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_State, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_More.587, align 8
  ret ptr @tag_More.587
}

define ptr @Core_iterator_takeWhile_7_3_case-1_didNotMatch(ptr %0) {
Core_iterator_takeWhile_7_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_iterator_withIndex_2() {
Core_iterator_withIndex_2:
  %0 = load ptr, ptr @"text_`withIndex` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_take_34(ptr %0) {
Core_iterator_take_34:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:take:34:7", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Item, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:iterator:take:34:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Item, align 8
  %13 = call ptr @candy_builtin_struct_get(ptr %0, ptr %12)
  ret ptr %13
}

define ptr @Core_iterator_take(ptr %0, ptr %1) {
Core_iterator_take:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Core_int_isNonNegative(ptr %1)
  %8 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %11 = call ptr @make_candy_function(ptr @Core_iterator_take_26, ptr %10, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_take_26, align 8
  %12 = load ptr, ptr @fun_Core_iterator_take_26, align 8
  %13 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %12)
  %14 = load ptr, ptr @fun_Core_iterator_withIndex_2, align 8
  %15 = call ptr @Core_iterator_wrapSafe(ptr %13, ptr %14)
  %16 = alloca ptr, i64 3, align 8
  %17 = alloca ptr, i64 3, align 8
  %18 = load ptr, ptr @tag_Iterator, align 8
  %19 = getelementptr ptr, ptr %16, i64 0
  store ptr %18, ptr %19, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %15, ptr %20, align 8
  %21 = load ptr, ptr @tag_Index, align 8
  %22 = load ptr, ptr @num_0, align 8
  %23 = getelementptr ptr, ptr %16, i64 1
  store ptr %21, ptr %23, align 8
  %24 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %24, align 8
  %25 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %16, ptr %17)
  %28 = load ptr, ptr @fun_Core_iterator_withIndex_11, align 8
  %29 = call ptr @Core_iterator_generateWithState(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %1, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_31, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_31, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_31, align 8
  %34 = call ptr @Core_iterator_takeWhile(ptr %29, ptr %33)
  %35 = load ptr, ptr @fun_Core_iterator_take_34, align 8
  %36 = call ptr @Core_iterator_map(ptr %34, ptr %35)
  ret ptr %36
}

define ptr @Core_iterator_take_26() {
Core_iterator_take_26:
  %0 = load ptr, ptr @"text_`take` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_take_31(ptr %0, ptr %1) {
Core_iterator_take_31:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_take_31_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_take_31_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_take_31_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_else.596, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_take_31_1_isMatch_else.597, align 8
  %21 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.597, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @Core_int_isLessThan(ptr %27, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_take_31_1_equals_then(ptr %0) {
Core_iterator_take_31_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_take_31_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_take_31_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_take_31_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_else.594, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_take_31_1_isMatch_else.595, align 8
  %31 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else.595, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_take_31_1_hasKey_then(ptr %0) {
Core_iterator_take_31_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @210, align 8
  ret ptr @210
}

define ptr @Core_iterator_take_31_1_hasKey_else(ptr %0) {
Core_iterator_take_31_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @211, align 8
  ret ptr @211
}

define ptr @Core_iterator_take_31_1_isMatch_then(ptr %0) {
Core_iterator_take_31_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_then.588, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_take_31_1_hasKey_then.589, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_hasKey_else.590, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_take_31_1_hasKey_else.591, align 8
  %19 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_then.589, align 8
  %20 = load ptr, ptr @fun_Core_iterator_take_31_1_hasKey_else.591, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_then.592, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_take_31_1_isMatch_then.593, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_take_31_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_take_31_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_then.593, align 8
  %34 = load ptr, ptr @fun_Core_iterator_take_31_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_take_31_1_hasKey_then.588(ptr %0) {
Core_iterator_take_31_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @212, align 8
  ret ptr @212
}

define ptr @Core_iterator_take_31_1_hasKey_else.590(ptr %0) {
Core_iterator_take_31_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @213, align 8
  ret ptr @213
}

define ptr @Core_iterator_take_31_1_isMatch_then.592(ptr %0) {
Core_iterator_take_31_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @214, align 8
  ret ptr @214
}

define ptr @Core_iterator_take_31_1_isMatch_else(ptr %0) {
Core_iterator_take_31_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_31_1_isMatch_else.594(ptr %0) {
Core_iterator_take_31_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_take_31_1_equals_else(ptr %0) {
Core_iterator_take_31_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @215, align 8
  ret ptr @215
}

define ptr @Core_iterator_take_31_1_isMatch_else.596(ptr %0) {
Core_iterator_take_31_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_skip_30_6(ptr %0, ptr %1) {
Core_iterator_skip_30_6:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Struct, align 8
  %4 = call ptr @candy_builtin_equals(ptr %3, ptr %2)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %1, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_equals_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_iterator_skip_30_6_1_equals_then, align 8
  %8 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %9 = getelementptr inbounds { ptr }, ptr %8, i32 0, i32 0
  store ptr %2, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_equals_else, ptr %8, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_1_equals_else, align 8
  %11 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_then, align 8
  %12 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_equals_else, align 8
  %13 = call ptr @candy_builtin_if_else(ptr %4, ptr %11, ptr %12)
  %14 = load ptr, ptr @num_0, align 8
  %15 = call ptr @candy_builtin_list_get(ptr %13, ptr %14)
  %16 = load ptr, ptr @tag_Match, align 8
  %17 = call ptr @candy_builtin_equals(ptr %15, ptr %16)
  %18 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %19 = getelementptr inbounds { ptr }, ptr %18, i32 0, i32 0
  store ptr %13, ptr %19, align 8
  %20 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_else.606, ptr %18, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %20, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.607, align 8
  %21 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.607, align 8
  %23 = call ptr @candy_builtin_if_else(ptr %17, ptr %21, ptr %22)
  %24 = load ptr, ptr @num_1, align 8
  %25 = call ptr @candy_builtin_list_get(ptr %13, ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = call ptr @candy_builtin_list_get(ptr %13, ptr %26)
  %28 = load ptr, ptr @num_0, align 8
  %29 = call ptr @candy_builtin_equals(ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %25, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_7, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_skip_30_6_7, align 8
  %33 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 0
  store ptr %27, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 1
  store ptr %0, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr }, ptr %33, i32 0, i32 2
  store ptr %25, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8, ptr %33, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_skip_30_6_8, align 8
  %38 = load ptr, ptr @fun_Core_iterator_skip_30_6_7, align 8
  %39 = load ptr, ptr @fun_Core_iterator_skip_30_6_8, align 8
  %40 = call ptr @Builtins__ifElse(ptr %29, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_skip_30_6_1_equals_then(ptr %0) {
Core_iterator_skip_30_6_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_else.604, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.605, align 8
  %31 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else.605, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_skip_30_6_1_hasKey_then(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @216, align 8
  ret ptr @216
}

define ptr @Core_iterator_skip_30_6_1_hasKey_else(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Iterator`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @217, align 8
  ret ptr @217
}

define ptr @Core_iterator_skip_30_6_1_isMatch_then(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_N, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_then.598, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then.599, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_hasKey_else.600, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else.601, align 8
  %19 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_then.599, align 8
  %20 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_hasKey_else.601, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_then.602, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then.603, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_then.603, align 8
  %34 = load ptr, ptr @fun_Core_iterator_skip_30_6_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_skip_30_6_1_hasKey_then.598(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_N, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @218, align 8
  ret ptr @218
}

define ptr @Core_iterator_skip_30_6_1_hasKey_else.600(ptr %0) {
Core_iterator_skip_30_6_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `N`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @219, align 8
  ret ptr @219
}

define ptr @Core_iterator_skip_30_6_1_isMatch_then.602(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @220, align 8
  ret ptr @220
}

define ptr @Core_iterator_skip_30_6_1_isMatch_else(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_30_6_1_isMatch_else.604(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_30_6_1_equals_else(ptr %0) {
Core_iterator_skip_30_6_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @221, align 8
  ret ptr @221
}

define ptr @Core_iterator_skip_30_6_1_isMatch_else.606(ptr %0) {
Core_iterator_skip_30_6_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_skip_30_6_7(ptr %0) {
Core_iterator_skip_30_6_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_iterator_next(ptr %2)
  ret ptr %3
}

define ptr @Core_iterator_skip_30_6_8(ptr %0) {
Core_iterator_skip_30_6_8:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_iterator_next(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.612, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.613, align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.613, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @candy_builtin_list_get(ptr %15, ptr %16)
  %18 = load ptr, ptr @tag_Match, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %15, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %20, i32 0, i32 2
  store ptr %3, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %20, i32 0, i32 3
  store ptr %27, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch, align 8
  %30 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %31 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-0_didNotMatch, align 8
  %32 = call ptr @candy_builtin_if_else(ptr %19, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Empty, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.608, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.609, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.610, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.611, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.609, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.611, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.608(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_False, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 0
  store ptr %3, ptr %7, align 8
  %8 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds { ptr, ptr }, ptr %6, i32 0, i32 1
  store ptr %9, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else, align 8
  %12 = load ptr, ptr @"fun_Builtins__ifElse_1_equals_then, Builtins__isLessThanOrEqualTo_19_equals_then, Builtins__isNonNegative_13_equals_then, Builtins__not_1_equals_then, Core_bool_is_1_equals_then, Core_bool_lazyAnd_18_equals_then, Core_bool_lazyOr_18_equals_then, Core_bool_not_6_equals_then, Core_check_check_1_equals_then, Core_int_pow_21_4_equals_then, Core_iterator_foldLeft_23_5_equals_then, Core_iterator_generateWithState_14_1_3_equals_then, Core_iterator_map_19_3_equals_then, Core_iterator_reduceLeft_18_equals_then, Core_iterator_skip_30_6_8_3_equals_then, Core_iterator_takeWhile_7_3_equals_then, Core_iterator_where_19_2_3_equals_then, Core_iterator_where_19_2_3_6_5_equals_then, Core_iterator_withIndex_11_5_equals_then, Core_iterator_wrapSafe_16_26_10_equals_then, Core_list_first_6_equals_then, Core_list_firstWhere_21_equals_then, Core_list_lastWhere_21_equals_then, Core_list_single_6_equals_then, Core_text_isAsciiDigit_14_equals_then", align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  ret ptr %14
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @candy_builtin_tag_get_value(ptr %5)
  %7 = call ptr @candy_builtin_to_debug_text(ptr %6)
  %8 = load ptr, ptr @"text_Expected tag to not have a value, but it has one: `", align 8
  %9 = call ptr @candy_builtin_text_concatenate(ptr %8, ptr %7)
  %10 = load ptr, ptr @"text_`.", align 8
  %11 = call ptr @candy_builtin_text_concatenate(ptr %9, ptr %10)
  %12 = alloca ptr, i64 3, align 8
  %13 = load ptr, ptr @tag_NoMatch, align 8
  %14 = getelementptr ptr, ptr %12, i64 0
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %12, i64 1
  store ptr %11, ptr %15, align 8
  %16 = getelementptr ptr, ptr %12, i64 2
  store ptr null, ptr %16, align 8
  %17 = call ptr @make_candy_list(ptr %12)
  store ptr %17, ptr @222, align 8
  ret ptr @222
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.610(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Empty, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @223, align 8
  ret ptr @223
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.612(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @224, align 8
  ret ptr @224
}

define ptr @Core_iterator_skip_30_6_8_3_case-0_didNotMatch(ptr %0) {
Core_iterator_skip_30_6_8_3_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Tag, align 8
  %9 = call ptr @candy_builtin_equals(ptr %8, ptr %7)
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.614, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.615, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %7, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.628, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.629, align 8
  %18 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.615, align 8
  %19 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.629, align 8
  %20 = call ptr @candy_builtin_if_else(ptr %9, ptr %18, ptr %19)
  %21 = load ptr, ptr @num_0, align 8
  %22 = call ptr @candy_builtin_list_get(ptr %20, ptr %21)
  %23 = load ptr, ptr @tag_Match, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %27, ptr %28, align 8
  %29 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %20, ptr %29, align 8
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %25, i32 0, i32 2
  store ptr %31, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_case-1_matched, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_matched, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %34, i32 0, i32 0
  store ptr %20, ptr %35, align 8
  %36 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_case-1_didNotMatch, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %36, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch, align 8
  %37 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_matched, align 8
  %38 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_case-1_didNotMatch, align 8
  %39 = call ptr @candy_builtin_if_else(ptr %24, ptr %37, ptr %38)
  ret ptr %39
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.614(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.616, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.617, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.626, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.627, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.617, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.627, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.616(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.618, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.619, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.624, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.625, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.619, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.625, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.618(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_then.620, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.621, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_equals_else.622, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.623, align 8
  %13 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_then.621, align 8
  %14 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_equals_else.623, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_skip_30_6_8_3_equals_then.620(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_then, align 8
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_skip_30_6_8_3_isMatch_else, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_else, align 8
  %28 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_then, align 8
  %29 = load ptr, ptr @fun_Core_iterator_skip_30_6_8_3_isMatch_else, align 8
  %30 = call ptr @candy_builtin_if_else(ptr %21, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @Core_iterator_skip_30_6_8_3_hasKey_then(ptr %0) {
Core_iterator_skip_30_6_8_3_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @225, align 8
  ret ptr @225
}

define ptr @Core_iterator_skip_30_6_8_3_hasKey_else(ptr %0) {
Core_iterator_skip_30_6_8_3_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @226, align 8
  ret ptr @226
}

define ptr @Core_iterator_skip_30_6_8_3_isMatch_then(ptr %0) {
Core_iterator_skip_30_6_8_3_isMatch_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @227, align 8
  ret ptr @227
}

define ptr @Core_iterator_skip_30_6_8_3_isMatch_else(ptr %0) {
Core_iterator_skip_30_6_8_3_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.622(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @228, align 8
  ret ptr @228
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.624(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.626(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @229, align 8
  ret ptr @229
}

define ptr @Core_iterator_skip_30_6_8_3_equals_else.628(ptr %0) {
Core_iterator_skip_30_6_8_3_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @230, align 8
  ret ptr @230
}

define ptr @Core_iterator_skip_30_6_8_3_case-1_matched(ptr %0) {
Core_iterator_skip_30_6_8_3_case-1_matched:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = call ptr @candy_builtin_type_of(ptr %6)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:skip:30:6:8:3:15", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr @num_1, align 8
  %16 = call ptr @candy_builtin_int_subtract(ptr %14, ptr %15)
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca ptr, i64 3, align 8
  %19 = load ptr, ptr @tag_N, align 8
  %20 = getelementptr ptr, ptr %17, i64 0
  store ptr %19, ptr %20, align 8
  %21 = getelementptr ptr, ptr %18, i64 0
  store ptr %16, ptr %21, align 8
  %22 = load ptr, ptr @tag_Iterator, align 8
  %23 = getelementptr ptr, ptr %17, i64 1
  store ptr %22, ptr %23, align 8
  %24 = getelementptr ptr, ptr %18, i64 1
  store ptr %4, ptr %24, align 8
  %25 = getelementptr ptr, ptr %17, i64 2
  store ptr null, ptr %25, align 8
  %26 = getelementptr ptr, ptr %18, i64 2
  store ptr null, ptr %26, align 8
  %27 = call ptr @make_candy_struct(ptr %17, ptr %18)
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %29 = load ptr, ptr %28, align 8
  %30 = call ptr @get_candy_function_pointer(ptr %29)
  %31 = call ptr @get_candy_function_environment(ptr %29)
  %32 = call ptr (...) %30(ptr %27, ptr %31)
  ret ptr %32
}

define ptr @Core_iterator_skip_30_6_8_3_case-1_didNotMatch(ptr %0) {
Core_iterator_skip_30_6_8_3_case-1_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_No case matched the given expression.", align 8
  call void @candy_panic(ptr %5)
  unreachable
}

define ptr @Core_controlFlow_recursive_18.630(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.632, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.633, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.633, align 8
  %6 = call ptr @Core_iterator_skip_30_6(ptr %5, ptr %1)
  ret ptr %6
}

define ptr @Core_controlFlow_recursive_18_0.632(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_skip(ptr %0, ptr %1) {
Core_iterator_skip:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %3 = call ptr @make_candy_function(ptr @Core_iterator_skip_2, ptr %2, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %3, ptr @fun_Core_iterator_skip_2, align 8
  %4 = load ptr, ptr @fun_Core_iterator_skip_2, align 8
  %5 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %4)
  %6 = call ptr @candy_builtin_type_of(ptr %1)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`int.is n` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_int_isNonNegative(ptr %1)
  %12 = load ptr, ptr @"text_`int.isNonNegative n` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 0
  store ptr %1, ptr %15, align 8
  %16 = getelementptr inbounds { ptr, ptr }, ptr %14, i32 0, i32 1
  store ptr %5, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Core_iterator_skip_30, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Core_iterator_skip_30, align 8
  %18 = load ptr, ptr @fun_Core_iterator_skip_30, align 8
  %19 = alloca i8, i64 9, align 1
  store [9 x i8] c"Iterator\00", ptr %19, align 1
  %20 = call ptr @make_candy_tag(ptr %19, ptr %18)
  store ptr %20, ptr @tag_Iterator.634, align 8
  ret ptr @tag_Iterator.634
}

define ptr @Core_iterator_skip_2() {
Core_iterator_skip_2:
  %0 = load ptr, ptr @"text_`skip` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_skip_30(ptr %0) {
Core_iterator_skip_30:
  %1 = alloca ptr, i64 3, align 8
  %2 = alloca ptr, i64 3, align 8
  %3 = load ptr, ptr @tag_Iterator, align 8
  %4 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr ptr, ptr %1, i64 0
  store ptr %3, ptr %6, align 8
  %7 = getelementptr ptr, ptr %2, i64 0
  store ptr %5, ptr %7, align 8
  %8 = load ptr, ptr @tag_N, align 8
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %1, i64 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %2, i64 1
  store ptr %10, ptr %12, align 8
  %13 = getelementptr ptr, ptr %1, i64 2
  store ptr null, ptr %13, align 8
  %14 = getelementptr ptr, ptr %2, i64 2
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_struct(ptr %1, ptr %2)
  %16 = load ptr, ptr @fun_Core_iterator_skip_30_6, align 8
  %17 = call ptr @Core_function_is2(ptr %16)
  %18 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %19 = load ptr, ptr @"Core:iterator:skip:30:7", align 8
  %20 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr %19)
  %21 = load ptr, ptr @fun_Core_controlFlow_recursive_18.631, align 8
  %22 = call ptr @Core_controlFlow_recursive_18.630(ptr %21, ptr %15)
  ret ptr %22
}

define ptr @Core_iterator_fromList(ptr %0) {
Core_iterator_fromList:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_List, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`list.is l` was not satisfied", align 8
  %5 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr null)
  %6 = call ptr @candy_builtin_type_of(ptr %0)
  %7 = load ptr, ptr @tag_List, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %10 = load ptr, ptr @"Core:iterator:fromList:22", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = call ptr @candy_builtin_list_length(ptr %0)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %0, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_iterator_fromList_23, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_iterator_fromList_23, align 8
  %16 = load ptr, ptr @fun_Core_iterator_fromList_23, align 8
  %17 = call ptr @Core_iterator_generate(ptr %12, ptr %16)
  ret ptr %17
}

define ptr @Core_iterator_fromList_23(ptr %0, ptr %1) {
Core_iterator_fromList_23:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @Builtins__listGet(ptr %3, ptr %0)
  ret ptr %4
}

define ptr @Core_iterator_toList_6(ptr %0, ptr %1) {
Core_iterator_toList_6:
  %2 = call ptr @Core_list_append(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_toList_2() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_windowed(ptr %0, ptr %1, ptr %2, ptr %3) {
Core_iterator_windowed:
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %5 = call ptr @make_candy_function(ptr @Core_iterator_windowed_2, ptr %4, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %5, ptr @fun_Core_iterator_windowed_2, align 8
  %6 = load ptr, ptr @fun_Core_iterator_windowed_2, align 8
  %7 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %6)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @candy_builtin_type_of(ptr %1)
  %14 = load ptr, ptr @tag_Int, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %17 = load ptr, ptr @"Core:iterator:windowed:26", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = load ptr, ptr @num_0, align 8
  %20 = call ptr @Core_int_isGreaterThan(ptr %1, ptr %19)
  %21 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @candy_builtin_type_of(ptr %2)
  %24 = load ptr, ptr @tag_Int, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"text_`int.is step` was not satisfied", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr null)
  %28 = call ptr @candy_builtin_type_of(ptr %2)
  %29 = load ptr, ptr @tag_Int, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %32 = load ptr, ptr @"Core:iterator:windowed:50", align 8
  %33 = call ptr @"anonymous_$generated__needs"(ptr %30, ptr %31, ptr %32)
  %34 = load ptr, ptr @num_0, align 8
  %35 = call ptr @Core_int_isGreaterThan(ptr %2, ptr %34)
  %36 = load ptr, ptr @"text_`int.isPositive step` was not satisfied", align 8
  %37 = call ptr @"anonymous_$generated__needs"(ptr %35, ptr %36, ptr null)
  %38 = call ptr @Core_bool_is(ptr %3)
  %39 = load ptr, ptr @"text_`bool.is allowPartialWindows` was not satisfied", align 8
  %40 = call ptr @"anonymous_$generated__needs"(ptr %38, ptr %39, ptr null)
  %41 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %42 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 0
  store ptr %3, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 1
  store ptr %1, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr }, ptr %41, i32 0, i32 2
  store ptr %2, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67, ptr %41, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_iterator_windowed_67, align 8
  %46 = load ptr, ptr @fun_Core_iterator_windowed_67, align 8
  %47 = call ptr @Core_iterator_generateWithState(ptr %7, ptr %46)
  ret ptr %47
}

define ptr @Core_iterator_windowed_2() {
Core_iterator_windowed_2:
  %0 = load ptr, ptr @"text_`windowed` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_windowed_67(ptr %0, ptr %1) {
Core_iterator_windowed_67:
  %2 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @Core_iterator_take(ptr %0, ptr %3)
  %5 = load ptr, ptr @fun_Core_iterator_toList_2, align 8
  %6 = call ptr @Core_iterator_wrapSafe(ptr %4, ptr %5)
  %7 = load ptr, ptr @231, align 8
  %8 = load ptr, ptr @fun_Core_iterator_toList_6, align 8
  %9 = call ptr @Core_iterator_foldLeft(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_type_of(ptr %9)
  %11 = load ptr, ptr @tag_List, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:iterator:windowed:67:16", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_list_length(ptr %9)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %16, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67_20, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Core_iterator_windowed_67_20, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 0
  store ptr %16, ptr %21, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %20, i32 0, i32 1
  store ptr %23, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67_21, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_iterator_windowed_67_21, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr @fun_Core_iterator_windowed_67_20, align 8
  %29 = load ptr, ptr @fun_Core_iterator_windowed_67_21, align 8
  %30 = call ptr @Builtins__ifElse(ptr %27, ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr, ptr, ptr }, ptr %1, i32 0, i32 2
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 0
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 1
  store ptr %0, ptr %35, align 8
  %36 = getelementptr inbounds { ptr, ptr, ptr }, ptr %31, i32 0, i32 2
  store ptr %9, ptr %36, align 8
  %37 = call ptr @make_candy_function(ptr @Core_iterator_windowed_67_26, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %37, ptr @fun_Core_iterator_windowed_67_26, align 8
  %38 = load ptr, ptr @fun_Core_iterator_windowed_67_26, align 8
  %39 = load ptr, ptr @"fun_Core_iterator_generate_50_5, Core_iterator_generateWithState_14_1_3_case-1_matched, Core_iterator_map_19_3_case-0_matched, Core_iterator_skip_30_6_8_3_case-0_matched, Core_iterator_takeWhile_7_3_case-0_matched, Core_iterator_takeWhile_7_3_6, Core_iterator_where_19_2_3_case-0_matched, Core_iterator_where_19_2_3_6_5_case-0_matched, Core_iterator_windowed_67_27, Core_iterator_withIndex_11_5_case-0_matched, Core_iterator_wrapSafe_16_26_10_case-0_matched", align 8
  %40 = call ptr @Builtins__ifElse(ptr %30, ptr %38, ptr %39)
  ret ptr %40
}

define ptr @Core_iterator_windowed_67_20(ptr %0) {
Core_iterator_windowed_67_20:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_0, align 8
  %4 = call ptr @Core_int_isGreaterThan(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @Core_iterator_windowed_67_21(ptr %0) {
Core_iterator_windowed_67_21:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @candy_builtin_equals(ptr %2, ptr %4)
  ret ptr %5
}

define ptr @Core_iterator_windowed_67_26(ptr %0) {
Core_iterator_windowed_67_26:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @Core_iterator_skip(ptr %2, ptr %4)
  %6 = alloca ptr, i64 3, align 8
  %7 = alloca ptr, i64 3, align 8
  %8 = load ptr, ptr @tag_Item, align 8
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr ptr, ptr %6, i64 0
  store ptr %8, ptr %11, align 8
  %12 = getelementptr ptr, ptr %7, i64 0
  store ptr %10, ptr %12, align 8
  %13 = load ptr, ptr @tag_State, align 8
  %14 = getelementptr ptr, ptr %6, i64 1
  store ptr %13, ptr %14, align 8
  %15 = getelementptr ptr, ptr %7, i64 1
  store ptr %5, ptr %15, align 8
  %16 = getelementptr ptr, ptr %6, i64 2
  store ptr null, ptr %16, align 8
  %17 = getelementptr ptr, ptr %7, i64 2
  store ptr null, ptr %17, align 8
  %18 = call ptr @make_candy_struct(ptr %6, ptr %7)
  %19 = alloca i8, i64 5, align 1
  store [5 x i8] c"More\00", ptr %19, align 1
  %20 = call ptr @make_candy_tag(ptr %19, ptr %18)
  store ptr %20, ptr @tag_More.635, align 8
  ret ptr @tag_More.635
}

define ptr @Core_iterator_chunked(ptr %0, ptr %1) {
Core_iterator_chunked:
  %2 = call ptr @candy_builtin_type_of(ptr %1)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`int.is size` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %11 = load ptr, ptr @"Core:iterator:chunked:21", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @Core_int_isGreaterThan(ptr %1, ptr %13)
  %15 = load ptr, ptr @"text_`int.isPositive size` was not satisfied", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %18 = call ptr @make_candy_function(ptr @Core_iterator_chunked_26, ptr %17, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_chunked_26, align 8
  %19 = load ptr, ptr @fun_Core_iterator_chunked_26, align 8
  %20 = call ptr @Core_iterator_wrapSafe(ptr %0, ptr %19)
  %21 = load ptr, ptr @tag_True, align 8
  %22 = call ptr @Core_iterator_windowed(ptr %20, ptr %1, ptr %1, ptr %21)
  ret ptr %22
}

define ptr @Core_iterator_chunked_26() {
Core_iterator_chunked_26:
  %0 = load ptr, ptr @"text_`chunked` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText"(ptr %0) {
"Builtins__toDebugText, Core_iterator_199, Core_toDebugText_toDebugText":
  %1 = call ptr @candy_builtin_to_debug_text(ptr %0)
  ret ptr %1
}

define ptr @Core_iterator_128_equals_then(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.636, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.637, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.652, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.653, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.637, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.653, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.636(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.638, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.639, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.650, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.651, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.639, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.651, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.638(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.640, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.641, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.641, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.640(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.648, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.649, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.649, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @234, align 8
  ret ptr @234
}

define ptr @Core_iterator_128_hasKey_else(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @235, align 8
  ret ptr @235
}

define ptr @Core_iterator_128_isMatch_then(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.642, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.643, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.644, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.645, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.643, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.645, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.646, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.647, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.647, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.642(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @236, align 8
  ret ptr @236
}

define ptr @Core_iterator_128_hasKey_else.644(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @237, align 8
  ret ptr @237
}

define ptr @Core_iterator_128_isMatch_then.646(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @238, align 8
  ret ptr @238
}

define ptr @Core_iterator_128_isMatch_else(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.648(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @239, align 8
  ret ptr @239
}

define ptr @Core_iterator_128_equals_else.650(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.652(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @240, align 8
  ret ptr @240
}

define ptr @Core_iterator_128_equals_else.654(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @241, align 8
  ret ptr @241
}

define ptr @Core_iterator_128_isMatch_else.656(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.658, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.659, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.674, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.675, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.659, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.675, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.658(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.660, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.661, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.672, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.673, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.661, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.673, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.660(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.662, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.663, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.663, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.662(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.670, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.671, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.671, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @242, align 8
  ret ptr @242
}

define ptr @Core_iterator_137_hasKey_else(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @243, align 8
  ret ptr @243
}

define ptr @Core_iterator_137_isMatch_then(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.664, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.665, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.666, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.667, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.665, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.667, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.668, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.669, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.669, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.664(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @244, align 8
  ret ptr @244
}

define ptr @Core_iterator_137_hasKey_else.666(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @245, align 8
  ret ptr @245
}

define ptr @Core_iterator_137_isMatch_then.668(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @246, align 8
  ret ptr @246
}

define ptr @Core_iterator_137_isMatch_else(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.670(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @247, align 8
  ret ptr @247
}

define ptr @Core_iterator_137_equals_else.672(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.674(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @248, align 8
  ret ptr @248
}

define ptr @Core_iterator_137_equals_else.676(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @249, align 8
  ret ptr @249
}

define ptr @Core_iterator_137_isMatch_else.678(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_isEmpty_2() {
Core_iterator_isEmpty_2:
  %0 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_isEmpty_2.680() {
Core_iterator_isEmpty_2:
  %0 = load ptr, ptr @"text_`isEmpty` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_161(ptr %0) {
Core_iterator_161:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:161:10", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @num_2, align 8
  %8 = call ptr @candy_builtin_int_multiply(ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_toList_2.682() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_length_2() {
Core_iterator_length_2:
  %0 = load ptr, ptr @"text_`length` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_185(ptr %0) {
Core_iterator_185:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %5 = load ptr, ptr @"Core:iterator:185:9", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @num_0, align 8
  %8 = call ptr @Core_int_isGreaterThan(ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_iterator_192(ptr %0) {
Core_iterator_192:
  %1 = load ptr, ptr @num_2, align 8
  %2 = call ptr @candy_builtin_equals(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_214(ptr %0) {
Core_iterator_214:
  %1 = call ptr @Core_int_isOdd(ptr %0)
  ret ptr %1
}

define ptr @Core_iterator_toList_2.684() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_228(ptr %0) {
Core_iterator_228:
  %1 = load ptr, ptr @num_4, align 8
  %2 = call ptr @Core_int_isLessThan(ptr %0, ptr %1)
  ret ptr %2
}

define ptr @Core_iterator_toList_2.686() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.688() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.690() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.692() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.694() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.696() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_toList_2.698() {
Core_iterator_toList_2:
  %0 = load ptr, ptr @"text_`toList` needs an iterator.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @Core_iterator_128_equals_then.700(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.702, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.703, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.728, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.729, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.703, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.729, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.702(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.704, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.705, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.726, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.727, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.705, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.727, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.704(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.706, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.707, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.724, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.725, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.707, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.725, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.706(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.708, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.709, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.710, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.711, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.709, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.711, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.712, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.713, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.722, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.723, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.713, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.723, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.708(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @261, align 8
  ret ptr @261
}

define ptr @Core_iterator_128_hasKey_else.710(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @262, align 8
  ret ptr @262
}

define ptr @Core_iterator_128_isMatch_then.712(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.714, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.715, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.716, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.717, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.715, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.717, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.718, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.719, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.720, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.721, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.719, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.721, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.714(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @263, align 8
  ret ptr @263
}

define ptr @Core_iterator_128_hasKey_else.716(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @264, align 8
  ret ptr @264
}

define ptr @Core_iterator_128_isMatch_then.718(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @265, align 8
  ret ptr @265
}

define ptr @Core_iterator_128_isMatch_else.720(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.722(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.724(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @266, align 8
  ret ptr @266
}

define ptr @Core_iterator_128_equals_else.726(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.728(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @267, align 8
  ret ptr @267
}

define ptr @Core_iterator_128_equals_else.730(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @268, align 8
  ret ptr @268
}

define ptr @Core_iterator_128_isMatch_else.732(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.734(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.736, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.737, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.762, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.763, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.737, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.763, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.736(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.738, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.739, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.760, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.761, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.739, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.761, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.738(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.740, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.741, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.758, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.759, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.741, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.759, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.740(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.742, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.743, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.744, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.745, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.743, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.745, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.746, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.747, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.756, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.757, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.747, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.757, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.742(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @269, align 8
  ret ptr @269
}

define ptr @Core_iterator_137_hasKey_else.744(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @270, align 8
  ret ptr @270
}

define ptr @Core_iterator_137_isMatch_then.746(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.748, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.749, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.750, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.751, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.749, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.751, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.752, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.753, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.754, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.755, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.753, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.755, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.748(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @271, align 8
  ret ptr @271
}

define ptr @Core_iterator_137_hasKey_else.750(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @272, align 8
  ret ptr @272
}

define ptr @Core_iterator_137_isMatch_then.752(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @273, align 8
  ret ptr @273
}

define ptr @Core_iterator_137_isMatch_else.754(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.756(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.758(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @274, align 8
  ret ptr @274
}

define ptr @Core_iterator_137_equals_else.760(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.762(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @275, align 8
  ret ptr @275
}

define ptr @Core_iterator_137_equals_else.764(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @276, align 8
  ret ptr @276
}

define ptr @Core_iterator_137_isMatch_else.766(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_128_equals_then.768(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.770, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.771, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.796, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.797, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.771, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.797, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.770(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.772, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.773, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.794, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.795, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.773, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.795, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.772(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.774, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.775, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.792, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.793, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.775, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.793, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.774(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.776, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.777, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.778, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.779, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.777, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.779, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.780, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.781, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.790, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.791, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.781, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.791, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.776(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @277, align 8
  ret ptr @277
}

define ptr @Core_iterator_128_hasKey_else.778(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @278, align 8
  ret ptr @278
}

define ptr @Core_iterator_128_isMatch_then.780(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.782, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.783, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.784, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.785, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.783, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.785, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.786, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.787, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.788, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.789, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.787, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.789, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.782(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @279, align 8
  ret ptr @279
}

define ptr @Core_iterator_128_hasKey_else.784(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @280, align 8
  ret ptr @280
}

define ptr @Core_iterator_128_isMatch_then.786(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @281, align 8
  ret ptr @281
}

define ptr @Core_iterator_128_isMatch_else.788(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.790(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.792(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @282, align 8
  ret ptr @282
}

define ptr @Core_iterator_128_equals_else.794(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.796(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @283, align 8
  ret ptr @283
}

define ptr @Core_iterator_128_equals_else.798(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @284, align 8
  ret ptr @284
}

define ptr @Core_iterator_128_isMatch_else.800(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.802(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.804, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.805, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.830, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.831, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.805, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.831, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.804(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.806, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.807, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.828, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.829, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.807, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.829, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.806(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.808, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.809, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.826, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.827, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.809, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.827, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.808(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.810, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.811, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.812, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.813, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.811, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.813, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.814, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.815, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.824, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.825, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.815, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.825, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.810(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @285, align 8
  ret ptr @285
}

define ptr @Core_iterator_137_hasKey_else.812(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @286, align 8
  ret ptr @286
}

define ptr @Core_iterator_137_isMatch_then.814(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.816, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.817, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.818, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.819, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.817, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.819, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.820, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.821, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.822, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.823, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.821, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.823, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.816(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @287, align 8
  ret ptr @287
}

define ptr @Core_iterator_137_hasKey_else.818(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @288, align 8
  ret ptr @288
}

define ptr @Core_iterator_137_isMatch_then.820(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @289, align 8
  ret ptr @289
}

define ptr @Core_iterator_137_isMatch_else.822(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.824(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.826(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @290, align 8
  ret ptr @290
}

define ptr @Core_iterator_137_equals_else.828(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.830(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @291, align 8
  ret ptr @291
}

define ptr @Core_iterator_137_equals_else.832(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @292, align 8
  ret ptr @292
}

define ptr @Core_iterator_137_isMatch_else.834(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_128_equals_then.836(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.838, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.839, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.864, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.865, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.839, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.865, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.838(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.840, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.841, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.862, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.863, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.841, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.863, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.840(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.842, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.843, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.860, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.861, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.843, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.861, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.842(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.844, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.845, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.846, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.847, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.845, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.847, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.848, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.849, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.858, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.859, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.849, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.859, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.844(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @293, align 8
  ret ptr @293
}

define ptr @Core_iterator_128_hasKey_else.846(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @294, align 8
  ret ptr @294
}

define ptr @Core_iterator_128_isMatch_then.848(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.850, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.851, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.852, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.853, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.851, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.853, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.854, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.855, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.856, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.857, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.855, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.857, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.850(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @295, align 8
  ret ptr @295
}

define ptr @Core_iterator_128_hasKey_else.852(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @296, align 8
  ret ptr @296
}

define ptr @Core_iterator_128_isMatch_then.854(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @297, align 8
  ret ptr @297
}

define ptr @Core_iterator_128_isMatch_else.856(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.858(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.860(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @298, align 8
  ret ptr @298
}

define ptr @Core_iterator_128_equals_else.862(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.864(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @299, align 8
  ret ptr @299
}

define ptr @Core_iterator_128_equals_else.866(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @300, align 8
  ret ptr @300
}

define ptr @Core_iterator_128_isMatch_else.868(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.870(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.872, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.873, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.898, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.899, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.873, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.899, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.872(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.874, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.875, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.896, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.897, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.875, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.897, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.874(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.876, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.877, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.894, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.895, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.877, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.895, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.876(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.878, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.879, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.880, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.881, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.879, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.881, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.882, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.883, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.892, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.893, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.883, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.893, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.878(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @301, align 8
  ret ptr @301
}

define ptr @Core_iterator_137_hasKey_else.880(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @302, align 8
  ret ptr @302
}

define ptr @Core_iterator_137_isMatch_then.882(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.884, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.885, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.886, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.887, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.885, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.887, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.888, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.889, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.890, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.891, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.889, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.891, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.884(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @303, align 8
  ret ptr @303
}

define ptr @Core_iterator_137_hasKey_else.886(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @304, align 8
  ret ptr @304
}

define ptr @Core_iterator_137_isMatch_then.888(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @305, align 8
  ret ptr @305
}

define ptr @Core_iterator_137_isMatch_else.890(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.892(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.894(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @306, align 8
  ret ptr @306
}

define ptr @Core_iterator_137_equals_else.896(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.898(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @307, align 8
  ret ptr @307
}

define ptr @Core_iterator_137_equals_else.900(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @308, align 8
  ret ptr @308
}

define ptr @Core_iterator_137_isMatch_else.902(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_128_equals_then.904(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.906, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.907, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.932, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.933, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.907, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.933, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.906(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.908, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.909, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.930, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.931, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.909, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.931, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.908(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.910, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.911, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.928, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.929, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.911, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.929, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.910(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.912, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.913, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.914, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.915, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.913, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.915, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.916, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.917, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.926, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.927, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.917, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.927, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.912(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @309, align 8
  ret ptr @309
}

define ptr @Core_iterator_128_hasKey_else.914(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @310, align 8
  ret ptr @310
}

define ptr @Core_iterator_128_isMatch_then.916(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.918, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.919, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.920, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.921, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.919, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.921, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.922, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.923, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.924, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.925, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.923, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.925, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.918(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @311, align 8
  ret ptr @311
}

define ptr @Core_iterator_128_hasKey_else.920(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @312, align 8
  ret ptr @312
}

define ptr @Core_iterator_128_isMatch_then.922(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @313, align 8
  ret ptr @313
}

define ptr @Core_iterator_128_isMatch_else.924(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.926(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.928(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @314, align 8
  ret ptr @314
}

define ptr @Core_iterator_128_equals_else.930(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.932(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @315, align 8
  ret ptr @315
}

define ptr @Core_iterator_128_equals_else.934(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @316, align 8
  ret ptr @316
}

define ptr @Core_iterator_128_isMatch_else.936(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.938(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.940, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.941, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.966, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.967, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.941, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.967, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.940(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.942, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.943, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.964, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.965, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.943, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.965, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.942(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.944, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.945, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.962, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.963, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.945, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.963, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.944(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.946, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.947, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.948, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.949, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.947, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.949, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.950, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.951, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.960, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.961, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.951, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.961, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.946(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @317, align 8
  ret ptr @317
}

define ptr @Core_iterator_137_hasKey_else.948(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @318, align 8
  ret ptr @318
}

define ptr @Core_iterator_137_isMatch_then.950(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.952, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.953, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.954, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.955, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.953, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.955, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.956, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.957, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.958, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.959, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.957, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.959, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.952(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @319, align 8
  ret ptr @319
}

define ptr @Core_iterator_137_hasKey_else.954(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @320, align 8
  ret ptr @320
}

define ptr @Core_iterator_137_isMatch_then.956(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @321, align 8
  ret ptr @321
}

define ptr @Core_iterator_137_isMatch_else.958(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.960(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.962(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @322, align 8
  ret ptr @322
}

define ptr @Core_iterator_137_equals_else.964(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.966(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @323, align 8
  ret ptr @323
}

define ptr @Core_iterator_137_equals_else.968(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @324, align 8
  ret ptr @324
}

define ptr @Core_iterator_137_isMatch_else.970(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Chrono_duration_is(ptr %0) {
Chrono_duration_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Chrono_duration_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Chrono_duration_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Chrono_duration_is_1_equals_else.978, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Chrono_duration_is_1_equals_else.979, align 8
  %10 = load ptr, ptr @fun_Chrono_duration_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Chrono_duration_is_1_equals_else.979, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Chrono_duration_is_1_case-0_matched, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Chrono_duration_is_1_case-0_matched, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %12, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Chrono_duration_is_1_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Chrono_duration_is_1_case-0_didNotMatch, align 8
  %23 = load ptr, ptr @fun_Chrono_duration_is_1_case-0_matched, align 8
  %24 = load ptr, ptr @fun_Chrono_duration_is_1_case-0_didNotMatch, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  ret ptr %25
}

define ptr @Chrono_duration_is_1_equals_then(ptr %0) {
Chrono_duration_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Duration, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Chrono_duration_is_1_equals_then.972, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Chrono_duration_is_1_equals_then.973, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Chrono_duration_is_1_equals_else.976, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Chrono_duration_is_1_equals_else.977, align 8
  %14 = load ptr, ptr @fun_Chrono_duration_is_1_equals_then.973, align 8
  %15 = load ptr, ptr @fun_Chrono_duration_is_1_equals_else.977, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Chrono_duration_is_1_equals_then.972(ptr %0) {
Chrono_duration_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Chrono_duration_is_1_equals_then.974, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Chrono_duration_is_1_equals_then.975, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Chrono_duration_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Chrono_duration_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Chrono_duration_is_1_equals_then.975, align 8
  %15 = load ptr, ptr @fun_Chrono_duration_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Chrono_duration_is_1_equals_then.974(ptr %0) {
Chrono_duration_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @325, align 8
  ret ptr @325
}

define ptr @Chrono_duration_is_1_equals_else(ptr %0) {
Chrono_duration_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Chrono_duration_is_1_equals_else.976(ptr %0) {
Chrono_duration_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Duration, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @326, align 8
  ret ptr @326
}

define ptr @Chrono_duration_is_1_equals_else.978(ptr %0) {
Chrono_duration_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @327, align 8
  ret ptr @327
}

define ptr @Chrono_duration_is_1_case-0_matched(ptr %0) {
Chrono_duration_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = call ptr @Core_fixedDecimal_is(ptr %4)
  ret ptr %5
}

define ptr @Chrono_duration_is_1_case-0_didNotMatch(ptr %0) {
Chrono_duration_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Chrono_duration_subtract(ptr %0, ptr %1) {
Chrono_duration_subtract:
  %2 = call ptr @Chrono_duration_is(ptr %0)
  %3 = load ptr, ptr @"text_`is minuend` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Chrono_duration_is(ptr %1)
  %6 = load ptr, ptr @"text_`is subtrahend` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %0)
  %9 = load ptr, ptr @tag_Tag, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %12 = load ptr, ptr @"Chrono:duration:subtract:28", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %15 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %16 = load ptr, ptr @"Chrono:duration:subtract:28", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %19 = call ptr @candy_builtin_type_of(ptr %1)
  %20 = load ptr, ptr @tag_Tag, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %23 = load ptr, ptr @"Chrono:duration:subtract:38", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr %23)
  %25 = call ptr @candy_builtin_tag_has_value(ptr %1)
  %26 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %27 = load ptr, ptr @"Chrono:duration:subtract:38", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = call ptr @candy_builtin_tag_get_value(ptr %1)
  %30 = call ptr @Core_fixedDecimal_subtract(ptr %18, ptr %29)
  %31 = alloca i8, i64 9, align 1
  store [9 x i8] c"Duration\00", ptr %31, align 1
  %32 = call ptr @make_candy_tag(ptr %31, ptr %30)
  store ptr %32, ptr @tag_Duration.980, align 8
  ret ptr @tag_Duration.980
}

define ptr @Chrono_instant_is(ptr %0) {
Chrono_instant_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Chrono_instant_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Chrono_instant_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Chrono_instant_is_1_equals_else.987, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Chrono_instant_is_1_equals_else.988, align 8
  %10 = load ptr, ptr @fun_Chrono_instant_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Chrono_instant_is_1_equals_else.988, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Chrono_instant_is_1_case-0_matched, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Chrono_instant_is_1_case-0_matched, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %12, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Chrono_instant_is_1_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Chrono_instant_is_1_case-0_didNotMatch, align 8
  %23 = load ptr, ptr @fun_Chrono_instant_is_1_case-0_matched, align 8
  %24 = load ptr, ptr @fun_Chrono_instant_is_1_case-0_didNotMatch, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  ret ptr %25
}

define ptr @Chrono_instant_is_1_equals_then(ptr %0) {
Chrono_instant_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Instant, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Chrono_instant_is_1_equals_then.981, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Chrono_instant_is_1_equals_then.982, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Chrono_instant_is_1_equals_else.985, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Chrono_instant_is_1_equals_else.986, align 8
  %14 = load ptr, ptr @fun_Chrono_instant_is_1_equals_then.982, align 8
  %15 = load ptr, ptr @fun_Chrono_instant_is_1_equals_else.986, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Chrono_instant_is_1_equals_then.981(ptr %0) {
Chrono_instant_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Chrono_instant_is_1_equals_then.983, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Chrono_instant_is_1_equals_then.984, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Chrono_instant_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Chrono_instant_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Chrono_instant_is_1_equals_then.984, align 8
  %15 = load ptr, ptr @fun_Chrono_instant_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Chrono_instant_is_1_equals_then.983(ptr %0) {
Chrono_instant_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @328, align 8
  ret ptr @328
}

define ptr @Chrono_instant_is_1_equals_else(ptr %0) {
Chrono_instant_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Chrono_instant_is_1_equals_else.985(ptr %0) {
Chrono_instant_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Instant, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @329, align 8
  ret ptr @329
}

define ptr @Chrono_instant_is_1_equals_else.987(ptr %0) {
Chrono_instant_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @330, align 8
  ret ptr @330
}

define ptr @Chrono_instant_is_1_case-0_matched(ptr %0) {
Chrono_instant_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = call ptr @Chrono_duration_is(ptr %4)
  ret ptr %5
}

define ptr @Chrono_instant_is_1_case-0_didNotMatch(ptr %0) {
Chrono_instant_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Chrono_instant_toUnixTimeDuration(ptr %0) {
Chrono_instant_toUnixTimeDuration:
  %1 = call ptr @Chrono_instant_is(ptr %0)
  %2 = load ptr, ptr @"text_`is instant` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Chrono:instant:toUnixTimeDuration:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Chrono:instant:toUnixTimeDuration:14", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  ret ptr %14
}

define ptr @Core_iterator_128_equals_then.989(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.991, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.992, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1017, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1018, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.992, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1018, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.991(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.993, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.994, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1015, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1016, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.994, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1016, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.993(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.995, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.996, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1013, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.1014, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.996, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.1014, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.995(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.997, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.998, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.999, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.1000, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.998, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1000, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1001, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.1002, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1011, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.1012, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1002, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1012, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.997(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @331, align 8
  ret ptr @331
}

define ptr @Core_iterator_128_hasKey_else.999(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @332, align 8
  ret ptr @332
}

define ptr @Core_iterator_128_isMatch_then.1001(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1003, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.1004, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1005, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.1006, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1004, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1006, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1007, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.1008, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1009, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.1010, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1008, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1010, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.1003(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @333, align 8
  ret ptr @333
}

define ptr @Core_iterator_128_hasKey_else.1005(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @334, align 8
  ret ptr @334
}

define ptr @Core_iterator_128_isMatch_then.1007(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @335, align 8
  ret ptr @335
}

define ptr @Core_iterator_128_isMatch_else.1009(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.1011(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.1013(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @336, align 8
  ret ptr @336
}

define ptr @Core_iterator_128_equals_else.1015(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.1017(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @337, align 8
  ret ptr @337
}

define ptr @Core_iterator_128_equals_else.1019(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @338, align 8
  ret ptr @338
}

define ptr @Core_iterator_128_isMatch_else.1021(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.1023(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1025, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1026, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1051, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1052, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1026, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1052, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1025(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1027, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1028, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1049, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1050, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1028, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1050, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1027(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1029, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.1030, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1047, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.1048, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.1030, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.1048, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.1029(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1031, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.1032, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1033, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.1034, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1032, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1034, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1035, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.1036, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1045, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.1046, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1036, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1046, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.1031(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @339, align 8
  ret ptr @339
}

define ptr @Core_iterator_137_hasKey_else.1033(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @340, align 8
  ret ptr @340
}

define ptr @Core_iterator_137_isMatch_then.1035(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1037, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.1038, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1039, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.1040, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1038, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1040, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1041, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.1042, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1043, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.1044, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1042, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1044, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.1037(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @341, align 8
  ret ptr @341
}

define ptr @Core_iterator_137_hasKey_else.1039(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @342, align 8
  ret ptr @342
}

define ptr @Core_iterator_137_isMatch_then.1041(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @343, align 8
  ret ptr @343
}

define ptr @Core_iterator_137_isMatch_else.1043(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.1045(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.1047(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @344, align 8
  ret ptr @344
}

define ptr @Core_iterator_137_equals_else.1049(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.1051(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @345, align 8
  ret ptr @345
}

define ptr @Core_iterator_137_equals_else.1053(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @346, align 8
  ret ptr @346
}

define ptr @Core_iterator_137_isMatch_else.1055(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_128_equals_then.1057(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1059, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1060, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1085, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1086, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1060, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1086, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1059(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1061, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1062, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1083, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1084, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1062, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1084, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1061(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1063, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.1064, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1081, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.1082, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.1064, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.1082, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.1063(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1065, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.1066, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1067, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.1068, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1066, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1068, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1069, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.1070, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1079, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.1080, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1070, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1080, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.1065(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @347, align 8
  ret ptr @347
}

define ptr @Core_iterator_128_hasKey_else.1067(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @348, align 8
  ret ptr @348
}

define ptr @Core_iterator_128_isMatch_then.1069(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1071, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.1072, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1073, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.1074, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1072, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1074, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1075, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.1076, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1077, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.1078, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1076, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1078, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.1071(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @349, align 8
  ret ptr @349
}

define ptr @Core_iterator_128_hasKey_else.1073(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @350, align 8
  ret ptr @350
}

define ptr @Core_iterator_128_isMatch_then.1075(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @351, align 8
  ret ptr @351
}

define ptr @Core_iterator_128_isMatch_else.1077(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.1079(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.1081(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @352, align 8
  ret ptr @352
}

define ptr @Core_iterator_128_equals_else.1083(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.1085(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @353, align 8
  ret ptr @353
}

define ptr @Core_iterator_128_equals_else.1087(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @354, align 8
  ret ptr @354
}

define ptr @Core_iterator_128_isMatch_else.1089(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.1091(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1093, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1094, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1119, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1120, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1094, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1120, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1093(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1095, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1096, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1117, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1118, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1096, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1118, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1095(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1097, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.1098, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1115, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.1116, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.1098, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.1116, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.1097(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1099, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.1100, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1101, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.1102, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1100, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1102, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1103, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.1104, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1113, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.1114, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1104, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1114, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.1099(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @355, align 8
  ret ptr @355
}

define ptr @Core_iterator_137_hasKey_else.1101(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @356, align 8
  ret ptr @356
}

define ptr @Core_iterator_137_isMatch_then.1103(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1105, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.1106, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1107, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.1108, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1106, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1108, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1109, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.1110, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1111, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.1112, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1110, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1112, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.1105(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @357, align 8
  ret ptr @357
}

define ptr @Core_iterator_137_hasKey_else.1107(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @358, align 8
  ret ptr @358
}

define ptr @Core_iterator_137_isMatch_then.1109(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @359, align 8
  ret ptr @359
}

define ptr @Core_iterator_137_isMatch_else.1111(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.1113(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.1115(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @360, align 8
  ret ptr @360
}

define ptr @Core_iterator_137_equals_else.1117(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.1119(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @361, align 8
  ret ptr @361
}

define ptr @Core_iterator_137_equals_else.1121(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @362, align 8
  ret ptr @362
}

define ptr @Core_iterator_137_isMatch_else.1123(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Chrono_duration_numberAsFixedDecimal(ptr %0) {
Chrono_duration_numberAsFixedDecimal:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Chrono_duration_isNumber_18, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Chrono_duration_isNumber_18, align 8
  %7 = load ptr, ptr @fun_Chrono_duration_isNumber_18, align 8
  %8 = call ptr @Core_bool_lazyOr(ptr %3, ptr %7)
  %9 = load ptr, ptr @"text_`isNumber n` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Core_fixedDecimal_is(ptr %0)
  %12 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %13 = getelementptr inbounds { ptr }, ptr %12, i32 0, i32 0
  store ptr %0, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Chrono_duration_numberAsFixedDecimal_16, ptr %12, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Chrono_duration_numberAsFixedDecimal_16, align 8
  %15 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %16 = getelementptr inbounds { ptr }, ptr %15, i32 0, i32 0
  store ptr %0, ptr %16, align 8
  %17 = call ptr @make_candy_function(ptr @Chrono_duration_numberAsFixedDecimal_17, ptr %15, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %17, ptr @fun_Chrono_duration_numberAsFixedDecimal_17, align 8
  %18 = load ptr, ptr @fun_Chrono_duration_numberAsFixedDecimal_16, align 8
  %19 = load ptr, ptr @fun_Chrono_duration_numberAsFixedDecimal_17, align 8
  %20 = call ptr @Builtins__ifElse(ptr %11, ptr %18, ptr %19)
  ret ptr %20
}

define ptr @Chrono_duration_isNumber_18(ptr %0) {
Chrono_duration_isNumber_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_is(ptr %2)
  ret ptr %3
}

define ptr @Chrono_duration_numberAsFixedDecimal_16(ptr %0) {
Chrono_duration_numberAsFixedDecimal_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Chrono_duration_numberAsFixedDecimal_17(ptr %0) {
Chrono_duration_numberAsFixedDecimal_17:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`int.is a` was not satisfied", align 8
  %7 = load ptr, ptr @"Chrono:duration:numberAsFixedDecimal:17:9", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @num_0, align 8
  %12 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %10, ptr %11)
  ret ptr %12
}

define ptr @Chrono_duration_fromNanoseconds(ptr %0) {
Chrono_duration_fromNanoseconds:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Chrono_duration_isNumber_18.1125, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Chrono_duration_isNumber_18.1126, align 8
  %7 = load ptr, ptr @fun_Chrono_duration_isNumber_18.1126, align 8
  %8 = call ptr @Core_bool_lazyOr(ptr %3, ptr %7)
  %9 = load ptr, ptr @"text_`isNumber nanoseconds` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Chrono_duration_numberAsFixedDecimal(ptr %0)
  %12 = load ptr, ptr @num_1000000000, align 8
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %12, ptr %13)
  %15 = call ptr @Core_fixedDecimal_divideTruncating(ptr %11, ptr %14)
  %16 = alloca i8, i64 9, align 1
  store [9 x i8] c"Duration\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_Duration.1127, align 8
  ret ptr @tag_Duration.1127
}

define ptr @Chrono_duration_isNumber_18.1125(ptr %0) {
Chrono_duration_isNumber_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_is(ptr %2)
  ret ptr %3
}

define ptr @Chrono_clock_is(ptr %0) {
Chrono_clock_is:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Tag, align 8
  %3 = call ptr @candy_builtin_equals(ptr %2, ptr %1)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Chrono_clock_is_1_equals_then, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Chrono_clock_is_1_equals_then, align 8
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %1, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Chrono_clock_is_1_equals_else.1134, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Chrono_clock_is_1_equals_else.1135, align 8
  %10 = load ptr, ptr @fun_Chrono_clock_is_1_equals_then, align 8
  %11 = load ptr, ptr @fun_Chrono_clock_is_1_equals_else.1135, align 8
  %12 = call ptr @candy_builtin_if_else(ptr %3, ptr %10, ptr %11)
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @candy_builtin_list_get(ptr %12, ptr %13)
  %15 = load ptr, ptr @tag_Match, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %18 = getelementptr inbounds { ptr }, ptr %17, i32 0, i32 0
  store ptr %12, ptr %18, align 8
  %19 = call ptr @make_candy_function(ptr @Chrono_clock_is_1_case-0_matched, ptr %17, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %19, ptr @fun_Chrono_clock_is_1_case-0_matched, align 8
  %20 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %21 = getelementptr inbounds { ptr }, ptr %20, i32 0, i32 0
  store ptr %12, ptr %21, align 8
  %22 = call ptr @make_candy_function(ptr @Chrono_clock_is_1_case-0_didNotMatch, ptr %20, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %22, ptr @fun_Chrono_clock_is_1_case-0_didNotMatch, align 8
  %23 = load ptr, ptr @fun_Chrono_clock_is_1_case-0_matched, align 8
  %24 = load ptr, ptr @fun_Chrono_clock_is_1_case-0_didNotMatch, align 8
  %25 = call ptr @candy_builtin_if_else(ptr %16, ptr %23, ptr %24)
  ret ptr %25
}

define ptr @Chrono_clock_is_1_equals_then(ptr %0) {
Chrono_clock_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_Clock, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Chrono_clock_is_1_equals_then.1128, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Chrono_clock_is_1_equals_then.1129, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Chrono_clock_is_1_equals_else.1132, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Chrono_clock_is_1_equals_else.1133, align 8
  %14 = load ptr, ptr @fun_Chrono_clock_is_1_equals_then.1129, align 8
  %15 = load ptr, ptr @fun_Chrono_clock_is_1_equals_else.1133, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Chrono_clock_is_1_equals_then.1128(ptr %0) {
Chrono_clock_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Chrono_clock_is_1_equals_then.1130, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Chrono_clock_is_1_equals_then.1131, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Chrono_clock_is_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Chrono_clock_is_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Chrono_clock_is_1_equals_then.1131, align 8
  %15 = load ptr, ptr @fun_Chrono_clock_is_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Chrono_clock_is_1_equals_then.1130(ptr %0) {
Chrono_clock_is_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = alloca ptr, i64 3, align 8
  %5 = load ptr, ptr @tag_Match, align 8
  %6 = getelementptr ptr, ptr %4, i64 0
  store ptr %5, ptr %6, align 8
  %7 = getelementptr ptr, ptr %4, i64 1
  store ptr %3, ptr %7, align 8
  %8 = getelementptr ptr, ptr %4, i64 2
  store ptr null, ptr %8, align 8
  %9 = call ptr @make_candy_list(ptr %4)
  store ptr %9, ptr @363, align 8
  ret ptr @363
}

define ptr @Chrono_clock_is_1_equals_else(ptr %0) {
Chrono_clock_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Chrono_clock_is_1_equals_else.1132(ptr %0) {
Chrono_clock_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected Clock, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @364, align 8
  ret ptr @364
}

define ptr @Chrono_clock_is_1_equals_else.1134(ptr %0) {
Chrono_clock_is_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @365, align 8
  ret ptr @365
}

define ptr @Chrono_clock_is_1_case-0_matched(ptr %0) {
Chrono_clock_is_1_case-0_matched:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = call ptr @Core_function_is0(ptr %4)
  ret ptr %5
}

define ptr @Chrono_clock_is_1_case-0_didNotMatch(ptr %0) {
Chrono_clock_is_1_case-0_didNotMatch:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = load ptr, ptr @tag_False, align 8
  ret ptr %5
}

define ptr @Chrono_clock_fromSystemClock(ptr %0) {
Chrono_clock_fromSystemClock:
  %1 = call ptr @Core_function_is0(ptr %0)
  %2 = load ptr, ptr @"text_`function.is0 systemClock` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Chrono_clock_fromSystemClock_13, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Chrono_clock_fromSystemClock_13, align 8
  %7 = load ptr, ptr @fun_Chrono_clock_fromSystemClock_13, align 8
  %8 = alloca i8, i64 6, align 1
  store [6 x i8] c"Clock\00", ptr %8, align 1
  %9 = call ptr @make_candy_tag(ptr %8, ptr %7)
  store ptr %9, ptr @tag_Clock.1137, align 8
  ret ptr @tag_Clock.1137
}

define ptr @Chrono_clock_fromSystemClock_13(ptr %0) {
Chrono_clock_fromSystemClock_13:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_function_run(ptr %2)
  %4 = call ptr @Chrono_duration_fromNanoseconds(ptr %3)
  %5 = call ptr @Chrono_duration_is(ptr %4)
  %6 = load ptr, ptr @"text_`duration.is dur` was not satisfied", align 8
  %7 = load ptr, ptr @"Chrono:clock:fromSystemClock:13:27", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = alloca i8, i64 8, align 1
  store [8 x i8] c"Instant\00", ptr %9, align 1
  %10 = call ptr @make_candy_tag(ptr %9, ptr %4)
  store ptr %10, ptr @tag_Instant.1136, align 8
  ret ptr @tag_Instant.1136
}

define ptr @Chrono_clock_now(ptr %0) {
Chrono_clock_now:
  %1 = call ptr @Chrono_clock_is(ptr %0)
  %2 = load ptr, ptr @"text_`is clock` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Chrono:clock:now:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Chrono:clock:now:14", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %15 = call ptr @Core_function_run(ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.1138(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1140, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1141, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1166, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1167, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1141, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1167, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1140(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1142, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1143, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1164, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1165, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1143, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1165, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1142(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1144, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.1145, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1162, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.1163, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.1145, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.1163, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.1144(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1146, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.1147, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1148, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.1149, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1147, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1149, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1150, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.1151, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1160, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.1161, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1151, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1161, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.1146(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @366, align 8
  ret ptr @366
}

define ptr @Core_iterator_128_hasKey_else.1148(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @367, align 8
  ret ptr @367
}

define ptr @Core_iterator_128_isMatch_then.1150(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1152, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.1153, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1154, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.1155, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1153, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1155, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1156, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.1157, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1158, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.1159, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1157, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1159, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.1152(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @368, align 8
  ret ptr @368
}

define ptr @Core_iterator_128_hasKey_else.1154(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @369, align 8
  ret ptr @369
}

define ptr @Core_iterator_128_isMatch_then.1156(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @370, align 8
  ret ptr @370
}

define ptr @Core_iterator_128_isMatch_else.1158(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.1160(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.1162(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @371, align 8
  ret ptr @371
}

define ptr @Core_iterator_128_equals_else.1164(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.1166(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @372, align 8
  ret ptr @372
}

define ptr @Core_iterator_128_equals_else.1168(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @373, align 8
  ret ptr @373
}

define ptr @Core_iterator_128_isMatch_else.1170(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.1172(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1174, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1175, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1200, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1201, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1175, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1201, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1174(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1176, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1177, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1198, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1199, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1177, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1199, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1176(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1178, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.1179, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1196, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.1197, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.1179, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.1197, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.1178(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1180, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.1181, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1182, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.1183, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1181, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1183, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1184, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.1185, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1194, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.1195, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1185, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1195, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.1180(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @374, align 8
  ret ptr @374
}

define ptr @Core_iterator_137_hasKey_else.1182(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @375, align 8
  ret ptr @375
}

define ptr @Core_iterator_137_isMatch_then.1184(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1186, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.1187, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1188, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.1189, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1187, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1189, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1190, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.1191, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1192, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.1193, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1191, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1193, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.1186(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @376, align 8
  ret ptr @376
}

define ptr @Core_iterator_137_hasKey_else.1188(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @377, align 8
  ret ptr @377
}

define ptr @Core_iterator_137_isMatch_then.1190(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @378, align 8
  ret ptr @378
}

define ptr @Core_iterator_137_isMatch_else.1192(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.1194(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.1196(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @379, align 8
  ret ptr @379
}

define ptr @Core_iterator_137_equals_else.1198(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.1200(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @380, align 8
  ret ptr @380
}

define ptr @Core_iterator_137_equals_else.1202(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @381, align 8
  ret ptr @381
}

define ptr @Core_iterator_137_isMatch_else.1204(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

declare ptr @candy_builtin_int_remainder(ptr, ptr)

declare ptr @candy_builtin_text_get_range(ptr, ptr, ptr)

declare ptr @candy_builtin_text_length(ptr)

declare ptr @candy_builtin_text_starts_with(ptr, ptr)

define ptr @Builtins__intRemainder(ptr %0, ptr %1) {
Builtins__intRemainder:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Int, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`dividend | typeIs Int` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`divisor | typeIs Int` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_0, align 8
  %13 = call ptr @candy_builtin_equals(ptr %1, ptr %12)
  %14 = call ptr @Builtins__not(ptr %13)
  %15 = load ptr, ptr @"text_You can't divide by zero.", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr null)
  %17 = call ptr @candy_builtin_int_remainder(ptr %0, ptr %1)
  ret ptr %17
}

define ptr @Builtins__textGetRange(ptr %0, ptr %1, ptr %2) {
Builtins__textGetRange:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`startInclusive | typeIs Int` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @Builtins__isNonNegative(ptr %1)
  %14 = load ptr, ptr @"text_`startInclusive | isNonNegative` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = call ptr @candy_builtin_text_length(ptr %0)
  %17 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %16)
  %18 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %17, ptr %18, ptr null)
  %20 = call ptr @candy_builtin_type_of(ptr %2)
  %21 = load ptr, ptr @tag_Int, align 8
  %22 = call ptr @candy_builtin_equals(ptr %20, ptr %21)
  %23 = load ptr, ptr @"text_`endExclusive | typeIs Int` was not satisfied", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %22, ptr %23, ptr null)
  %25 = call ptr @Builtins__isNonNegative(ptr %2)
  %26 = load ptr, ptr @"text_`endExclusive | isNonNegative` was not satisfied", align 8
  %27 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr null)
  %28 = call ptr @candy_builtin_text_length(ptr %0)
  %29 = call ptr @Builtins__isLessThanOrEqualTo(ptr %2, ptr %28)
  %30 = load ptr, ptr @"text_`endExclusive | isLessThanOrEqualTo (text | \E2\9C\A8.textLength)` was not satisfied", align 8
  %31 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr null)
  %32 = call ptr @Builtins__isLessThanOrEqualTo(ptr %1, ptr %2)
  %33 = load ptr, ptr @"text_`startInclusive | isLessThanOrEqualTo endExclusive` was not satisfied", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %32, ptr %33, ptr null)
  %35 = call ptr @candy_builtin_text_get_range(ptr %0, ptr %1, ptr %2)
  ret ptr %35
}

define ptr @Core_text_removePrefix(ptr %0, ptr %1) {
Core_text_removePrefix:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is prefix` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %0)
  %13 = load ptr, ptr @tag_Text, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:text:removePrefix:14", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %1)
  %19 = load ptr, ptr @tag_Text, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`prefix | typeIs Text` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:text:removePrefix:14", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_text_starts_with(ptr %0, ptr %1)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 0
  store ptr %1, ptr %26, align 8
  %27 = getelementptr inbounds { ptr, ptr }, ptr %25, i32 0, i32 1
  store ptr %0, ptr %27, align 8
  %28 = call ptr @make_candy_function(ptr @Core_text_removePrefix_15, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %28, ptr @fun_Core_text_removePrefix_15, align 8
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %30 = getelementptr inbounds { ptr }, ptr %29, i32 0, i32 0
  store ptr %0, ptr %30, align 8
  %31 = call ptr @make_candy_function(ptr @Core_text_removePrefix_16, ptr %29, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_text_removePrefix_16, align 8
  %32 = load ptr, ptr @fun_Core_text_removePrefix_15, align 8
  %33 = load ptr, ptr @fun_Core_text_removePrefix_16, align 8
  %34 = call ptr @Builtins__ifElse(ptr %24, ptr %32, ptr %33)
  ret ptr %34
}

define ptr @Core_text_removePrefix_15(ptr %0) {
Core_text_removePrefix_15:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:text:removePrefix:15:4", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_text_length(ptr %10)
  %12 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = call ptr @candy_builtin_type_of(ptr %13)
  %15 = load ptr, ptr @tag_Text, align 8
  %16 = call ptr @candy_builtin_equals(ptr %14, ptr %15)
  %17 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %18 = load ptr, ptr @"Core:text:removePrefix:15:7", align 8
  %19 = call ptr @"anonymous_$generated__needs"(ptr %16, ptr %17, ptr %18)
  %20 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = call ptr @candy_builtin_text_length(ptr %21)
  %23 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @Builtins__textGetRange(ptr %24, ptr %11, ptr %22)
  ret ptr %25
}

define ptr @Core_text_removePrefix_16(ptr %0) {
Core_text_removePrefix_16:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_floorToInt(ptr %0) {
Core_fixedDecimal_floorToInt:
  %1 = call ptr @Core_fixedDecimal_is(ptr %0)
  %2 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Core_fixedDecimal_minorUnits(ptr %0)
  %5 = call ptr @Core_fixedDecimal_scale(ptr %0)
  %6 = call ptr @candy_builtin_type_of(ptr %5)
  %7 = load ptr, ptr @tag_Int, align 8
  %8 = call ptr @candy_builtin_equals(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %5, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.1206, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_fixedDecimal_isScale_18.1207, align 8
  %12 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1207, align 8
  %13 = call ptr @Core_bool_lazyAnd(ptr %8, ptr %12)
  %14 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:fixedDecimal:floorToInt:20", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = load ptr, ptr @num_10, align 8
  %18 = call ptr @Core_int_pow(ptr %17, ptr %5)
  %19 = call ptr @Builtins__intDivideTruncating(ptr %4, ptr %18)
  ret ptr %19
}

define ptr @Core_fixedDecimal_isScale_18.1206(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_multiply(ptr %0, ptr %1) {
Core_fixedDecimal_multiply:
  %2 = call ptr @Core_fixedDecimal_is(ptr %0)
  %3 = load ptr, ptr @"text_`is factorA` was not satisfied", align 8
  %4 = call ptr @"anonymous_$generated__needs"(ptr %2, ptr %3, ptr null)
  %5 = call ptr @Core_fixedDecimal_is(ptr %1)
  %6 = load ptr, ptr @"text_`is factorB` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @Core_fixedDecimal_minorUnits(ptr %0)
  %9 = call ptr @Core_fixedDecimal_minorUnits(ptr %1)
  %10 = call ptr @candy_builtin_type_of(ptr %8)
  %11 = load ptr, ptr @tag_Int, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = load ptr, ptr @"text_`factorA | typeIs Int` was not satisfied", align 8
  %14 = load ptr, ptr @"Core:fixedDecimal:multiply:25", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %12, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %9)
  %17 = load ptr, ptr @tag_Int, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = load ptr, ptr @"text_`factorB | typeIs Int` was not satisfied", align 8
  %20 = load ptr, ptr @"Core:fixedDecimal:multiply:25", align 8
  %21 = call ptr @"anonymous_$generated__needs"(ptr %18, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_int_multiply(ptr %8, ptr %9)
  %23 = call ptr @Core_fixedDecimal_scale(ptr %0)
  %24 = call ptr @Core_fixedDecimal_scale(ptr %1)
  %25 = call ptr @candy_builtin_type_of(ptr %23)
  %26 = load ptr, ptr @tag_Int, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %29 = load ptr, ptr @"Core:fixedDecimal:multiply:40", align 8
  %30 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr %29)
  %31 = call ptr @candy_builtin_type_of(ptr %24)
  %32 = load ptr, ptr @tag_Int, align 8
  %33 = call ptr @candy_builtin_equals(ptr %31, ptr %32)
  %34 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %35 = load ptr, ptr @"Core:fixedDecimal:multiply:40", align 8
  %36 = call ptr @"anonymous_$generated__needs"(ptr %33, ptr %34, ptr %35)
  %37 = call ptr @candy_builtin_int_add(ptr %23, ptr %24)
  %38 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %22, ptr %37)
  ret ptr %38
}

define ptr @Core_fixedDecimal_toText(ptr %0) {
Core_fixedDecimal_toText:
  %1 = call ptr @Core_fixedDecimal_is(ptr %0)
  %2 = load ptr, ptr @"text_`is a` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Core_fixedDecimal_floorToInt(ptr %0)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @fun_Core_fixedDecimal_toText_10, align 8
  %8 = load ptr, ptr @fun_Core_fixedDecimal_toText_10, align 8
  %9 = call ptr @Core_function_run(ptr %8)
  %10 = call ptr @candy_builtin_type_of(ptr %4)
  %11 = load ptr, ptr @tag_Text, align 8
  %12 = call ptr @candy_builtin_equals(ptr %10, ptr %11)
  %13 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %14 = getelementptr inbounds { ptr }, ptr %13, i32 0, i32 0
  store ptr %4, ptr %14, align 8
  %15 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_22, ptr %13, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %15, ptr @fun_Core_fixedDecimal_toText_22, align 8
  %16 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %17 = getelementptr inbounds { ptr }, ptr %16, i32 0, i32 0
  store ptr %4, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_23, ptr %16, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_fixedDecimal_toText_23, align 8
  %19 = load ptr, ptr @fun_Core_fixedDecimal_toText_22, align 8
  %20 = load ptr, ptr @fun_Core_fixedDecimal_toText_23, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %12, ptr %19, ptr %20)
  %22 = call ptr @candy_builtin_type_of(ptr %9)
  %23 = load ptr, ptr @tag_Text, align 8
  %24 = call ptr @candy_builtin_equals(ptr %22, ptr %23)
  %25 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %26 = getelementptr inbounds { ptr }, ptr %25, i32 0, i32 0
  store ptr %9, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_29, ptr %25, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_fixedDecimal_toText_29, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %9, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_30, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_fixedDecimal_toText_30, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_toText_29, align 8
  %32 = load ptr, ptr @fun_Core_fixedDecimal_toText_30, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %24, ptr %31, ptr %32)
  %34 = load ptr, ptr @text_., align 8
  %35 = call ptr @candy_builtin_text_concatenate(ptr %21, ptr %34)
  %36 = call ptr @candy_builtin_text_concatenate(ptr %35, ptr %33)
  ret ptr %36
}

define ptr @Core_fixedDecimal_toText_10(ptr %0) {
Core_fixedDecimal_toText_10:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_scale(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Int, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_fixedDecimal_isScale_18.1208, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_fixedDecimal_isScale_18.1209, align 8
  %10 = load ptr, ptr @fun_Core_fixedDecimal_isScale_18.1209, align 8
  %11 = call ptr @Core_bool_lazyAnd(ptr %6, ptr %10)
  %12 = load ptr, ptr @"text_`isScale scale` was not satisfied", align 8
  %13 = load ptr, ptr @"Core:fixedDecimal:toText:10:4", align 8
  %14 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_10, align 8
  %16 = call ptr @Core_int_pow(ptr %15, ptr %3)
  %17 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @Core_fixedDecimal_minorUnits(ptr %18)
  %20 = call ptr @Builtins__intRemainder(ptr %19, ptr %16)
  %21 = call ptr @Core_int_isNonNegative(ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %16, ptr %23, align 8
  %24 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %20, ptr %24, align 8
  %25 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10_31, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %25, ptr @fun_Core_fixedDecimal_toText_10_31, align 8
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %16, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %20, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_fixedDecimal_toText_10_32, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_fixedDecimal_toText_10_32, align 8
  %30 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_31, align 8
  %31 = load ptr, ptr @fun_Core_fixedDecimal_toText_10_32, align 8
  %32 = call ptr @Builtins__ifElse(ptr %21, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_fixedDecimal_isScale_18.1208(ptr %0) {
Core_fixedDecimal_isScale_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_int_isNonNegative(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_toText_10_31(ptr %0) {
Core_fixedDecimal_toText_10_31:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:10", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`b | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:fixedDecimal:toText:10:31:10", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_int_add(ptr %18, ptr %20)
  %22 = call ptr @candy_builtin_to_debug_text(ptr %21)
  %23 = load ptr, ptr @text_1, align 8
  %24 = call ptr @Core_text_removePrefix(ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_fixedDecimal_toText_10_32(ptr %0) {
Core_fixedDecimal_toText_10_32:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:10", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Int, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`subtrahend | typeIs Int` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:fixedDecimal:toText:10:32:10", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_int_subtract(ptr %18, ptr %20)
  %22 = call ptr @candy_builtin_to_debug_text(ptr %21)
  %23 = load ptr, ptr @text_-1, align 8
  %24 = call ptr @Core_text_removePrefix(ptr %22, ptr %23)
  ret ptr %24
}

define ptr @Core_fixedDecimal_toText_22(ptr %0) {
Core_fixedDecimal_toText_22:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_toText_23(ptr %0) {
Core_fixedDecimal_toText_23:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_fixedDecimal_toText_29(ptr %0) {
Core_fixedDecimal_toText_29:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_fixedDecimal_toText_30(ptr %0) {
Core_fixedDecimal_toText_30:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_iterator_128_equals_then.1210(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1212, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1213, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1238, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1239, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1213, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1239, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1212(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1214, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1215, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1236, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1237, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1215, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1237, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1214(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1216, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.1217, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1234, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.1235, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.1217, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.1235, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.1216(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1218, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.1219, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1220, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.1221, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1219, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1221, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1222, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.1223, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1232, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.1233, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1223, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1233, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.1218(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @382, align 8
  ret ptr @382
}

define ptr @Core_iterator_128_hasKey_else.1220(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @383, align 8
  ret ptr @383
}

define ptr @Core_iterator_128_isMatch_then.1222(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1224, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.1225, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1226, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.1227, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1225, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1227, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1228, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.1229, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1230, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.1231, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1229, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1231, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.1224(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @384, align 8
  ret ptr @384
}

define ptr @Core_iterator_128_hasKey_else.1226(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @385, align 8
  ret ptr @385
}

define ptr @Core_iterator_128_isMatch_then.1228(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @386, align 8
  ret ptr @386
}

define ptr @Core_iterator_128_isMatch_else.1230(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.1232(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.1234(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @387, align 8
  ret ptr @387
}

define ptr @Core_iterator_128_equals_else.1236(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.1238(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @388, align 8
  ret ptr @388
}

define ptr @Core_iterator_128_equals_else.1240(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @389, align 8
  ret ptr @389
}

define ptr @Core_iterator_128_isMatch_else.1242(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.1244(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1246, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1247, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1272, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1273, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1247, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1273, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1246(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1248, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1249, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1270, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1271, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1249, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1271, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1248(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1250, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.1251, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1268, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.1269, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.1251, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.1269, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.1250(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1252, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.1253, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1254, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.1255, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1253, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1255, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1256, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.1257, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1266, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.1267, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1257, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1267, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.1252(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @390, align 8
  ret ptr @390
}

define ptr @Core_iterator_137_hasKey_else.1254(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @391, align 8
  ret ptr @391
}

define ptr @Core_iterator_137_isMatch_then.1256(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1258, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.1259, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1260, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.1261, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1259, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1261, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1262, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.1263, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1264, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.1265, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1263, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1265, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.1258(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @392, align 8
  ret ptr @392
}

define ptr @Core_iterator_137_hasKey_else.1260(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @393, align 8
  ret ptr @393
}

define ptr @Core_iterator_137_isMatch_then.1262(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @394, align 8
  ret ptr @394
}

define ptr @Core_iterator_137_isMatch_else.1264(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.1266(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.1268(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @395, align 8
  ret ptr @395
}

define ptr @Core_iterator_137_equals_else.1270(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.1272(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @396, align 8
  ret ptr @396
}

define ptr @Core_iterator_137_equals_else.1274(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @397, align 8
  ret ptr @397
}

define ptr @Core_iterator_137_isMatch_else.1276(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @"Core_list_firstIndexWhere_23_9, Core_list_firstWhere_21_case-1_matched, Core_list_lastIndexWhere_44_16, Core_list_lastWhere_21_case-1_matched"() {
"Core_list_firstIndexWhere_23_9, Core_list_firstWhere_21_case-1_matched, Core_list_lastIndexWhere_44_16, Core_list_lastWhere_21_case-1_matched":
  %0 = load ptr, ptr @tag_NotFound, align 8
  ret ptr %0
}

define ptr @Core_list_firstIndexWhere(ptr %0, ptr %1) {
Core_list_firstIndexWhere:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is list` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @Core_function_is1(ptr %1)
  %8 = load ptr, ptr @"text_`function.is1 predicate` was not satisfied", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %7, ptr %8, ptr null)
  %10 = alloca ptr, i64 3, align 8
  %11 = alloca ptr, i64 3, align 8
  %12 = load ptr, ptr @tag_Index, align 8
  %13 = load ptr, ptr @num_0, align 8
  %14 = getelementptr ptr, ptr %10, i64 0
  store ptr %12, ptr %14, align 8
  %15 = getelementptr ptr, ptr %11, i64 0
  store ptr %13, ptr %15, align 8
  %16 = load ptr, ptr @tag_List, align 8
  %17 = getelementptr ptr, ptr %10, i64 1
  store ptr %16, ptr %17, align 8
  %18 = getelementptr ptr, ptr %11, i64 1
  store ptr %0, ptr %18, align 8
  %19 = getelementptr ptr, ptr %10, i64 2
  store ptr null, ptr %19, align 8
  %20 = getelementptr ptr, ptr %11, i64 2
  store ptr null, ptr %20, align 8
  %21 = call ptr @make_candy_struct(ptr %10, ptr %11)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %22, i32 0, i32 0
  store ptr %1, ptr %23, align 8
  %24 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %24, ptr @fun_Core_list_firstIndexWhere_23, align 8
  %25 = load ptr, ptr @fun_Core_list_firstIndexWhere_23, align 8
  %26 = call ptr @Core_function_is2(ptr %25)
  %27 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %28 = load ptr, ptr @"Core:list:firstIndexWhere:24", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %31 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.1288, ptr %30, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %31, ptr @fun_Core_controlFlow_recursive_18.1289, align 8
  %32 = load ptr, ptr @fun_Core_controlFlow_recursive_18.1289, align 8
  %33 = call ptr @Core_controlFlow_recursive_18.1288(ptr %32, ptr %21)
  ret ptr %33
}

define ptr @Core_list_firstIndexWhere_23(ptr %0, ptr %1, ptr %2) {
Core_list_firstIndexWhere_23:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_Struct, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_list_firstIndexWhere_23_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_equals_else, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_list_firstIndexWhere_23_1_equals_else, align 8
  %12 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_equals_else, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_isMatch_else.1286, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_else.1287, align 8
  %22 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_else.1287, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = call ptr @candy_builtin_type_of(ptr %26)
  %30 = load ptr, ptr @tag_List, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_`list | typeIs List` was not satisfied", align 8
  %33 = load ptr, ptr @"Core:list:firstIndexWhere:23:7", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr %33)
  %35 = call ptr @candy_builtin_list_length(ptr %26)
  %36 = call ptr @candy_builtin_equals(ptr %28, ptr %35)
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %37, i32 0, i32 0
  store ptr %26, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %37, i32 0, i32 1
  store ptr %0, ptr %39, align 8
  %40 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %37, i32 0, i32 2
  store ptr %41, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %37, i32 0, i32 3
  store ptr %28, ptr %43, align 8
  %44 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_10, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %44, ptr @fun_Core_list_firstIndexWhere_23_10, align 8
  %45 = load ptr, ptr @"fun_Core_list_firstIndexWhere_23_9, Core_list_firstWhere_21_case-1_matched, Core_list_lastIndexWhere_44_16, Core_list_lastWhere_21_case-1_matched", align 8
  %46 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_10, align 8
  %47 = call ptr @Builtins__ifElse(ptr %36, ptr %45, ptr %46)
  ret ptr %47
}

define ptr @Core_list_firstIndexWhere_23_1_equals_then(ptr %0) {
Core_list_firstIndexWhere_23_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_hasKey_then, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_then, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_hasKey_else, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_else, align 8
  %15 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_then, align 8
  %16 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_else, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_isMatch_then, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_then, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_isMatch_else.1284, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_else.1285, align 8
  %31 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_then, align 8
  %32 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_else.1285, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_list_firstIndexWhere_23_1_hasKey_then(ptr %0) {
Core_list_firstIndexWhere_23_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_List, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @398, align 8
  ret ptr @398
}

define ptr @Core_list_firstIndexWhere_23_1_hasKey_else(ptr %0) {
Core_list_firstIndexWhere_23_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `List`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @399, align 8
  ret ptr @399
}

define ptr @Core_list_firstIndexWhere_23_1_isMatch_then(ptr %0) {
Core_list_firstIndexWhere_23_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Index, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_hasKey_then.1278, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_then.1279, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_hasKey_else.1280, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_else.1281, align 8
  %19 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_then.1279, align 8
  %20 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_hasKey_else.1281, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_isMatch_then.1282, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_then.1283, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_1_isMatch_else, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_else, align 8
  %33 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_then.1283, align 8
  %34 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_1_isMatch_else, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_list_firstIndexWhere_23_1_hasKey_then.1278(ptr %0) {
Core_list_firstIndexWhere_23_1_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Index, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @400, align 8
  ret ptr @400
}

define ptr @Core_list_firstIndexWhere_23_1_hasKey_else.1280(ptr %0) {
Core_list_firstIndexWhere_23_1_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Index`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @401, align 8
  ret ptr @401
}

define ptr @Core_list_firstIndexWhere_23_1_isMatch_then.1282(ptr %0) {
Core_list_firstIndexWhere_23_1_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @402, align 8
  ret ptr @402
}

define ptr @Core_list_firstIndexWhere_23_1_isMatch_else(ptr %0) {
Core_list_firstIndexWhere_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_list_firstIndexWhere_23_1_isMatch_else.1284(ptr %0) {
Core_list_firstIndexWhere_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_list_firstIndexWhere_23_1_equals_else(ptr %0) {
Core_list_firstIndexWhere_23_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @403, align 8
  ret ptr @403
}

define ptr @Core_list_firstIndexWhere_23_1_isMatch_else.1286(ptr %0) {
Core_list_firstIndexWhere_23_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_list_firstIndexWhere_23_10(ptr %0) {
Core_list_firstIndexWhere_23_10:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 8
  %5 = call ptr @Builtins__listGet(ptr %2, ptr %4)
  %6 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = call ptr @get_candy_function_pointer(ptr %7)
  %9 = call ptr @get_candy_function_environment(ptr %7)
  %10 = call ptr (...) %8(ptr %5, ptr %9)
  %11 = call ptr @Core_bool_is(ptr %10)
  %12 = load ptr, ptr @"text_`bool.is predicateResult` was not satisfied", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %11, ptr %12, ptr null)
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_10_21, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_list_firstIndexWhere_23_10_21, align 8
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 0
  store ptr %21, ptr %22, align 8
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 1
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds { ptr, ptr, ptr }, ptr %19, i32 0, i32 2
  store ptr %27, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_list_firstIndexWhere_23_10_22, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_list_firstIndexWhere_23_10_22, align 8
  %30 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_10_21, align 8
  %31 = load ptr, ptr @fun_Core_list_firstIndexWhere_23_10_22, align 8
  %32 = call ptr @Builtins__ifElse(ptr %10, ptr %30, ptr %31)
  ret ptr %32
}

define ptr @Core_list_firstIndexWhere_23_10_21(ptr %0) {
Core_list_firstIndexWhere_23_10_21:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = alloca i8, i64 8, align 1
  store [8 x i8] c"FoundAt\00", ptr %3, align 1
  %4 = call ptr @make_candy_tag(ptr %3, ptr %2)
  store ptr %4, ptr @tag_FoundAt, align 8
  ret ptr @tag_FoundAt
}

define ptr @Core_list_firstIndexWhere_23_10_22(ptr %0) {
Core_list_firstIndexWhere_23_10_22:
  %1 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`a | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:list:firstIndexWhere:23:10:22:14", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr @num_1, align 8
  %12 = call ptr @candy_builtin_int_add(ptr %10, ptr %11)
  %13 = alloca ptr, i64 3, align 8
  %14 = alloca ptr, i64 3, align 8
  %15 = load ptr, ptr @tag_List, align 8
  %16 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr ptr, ptr %13, i64 0
  store ptr %15, ptr %18, align 8
  %19 = getelementptr ptr, ptr %14, i64 0
  store ptr %17, ptr %19, align 8
  %20 = load ptr, ptr @tag_Index, align 8
  %21 = getelementptr ptr, ptr %13, i64 1
  store ptr %20, ptr %21, align 8
  %22 = getelementptr ptr, ptr %14, i64 1
  store ptr %12, ptr %22, align 8
  %23 = getelementptr ptr, ptr %13, i64 2
  store ptr null, ptr %23, align 8
  %24 = getelementptr ptr, ptr %14, i64 2
  store ptr null, ptr %24, align 8
  %25 = call ptr @make_candy_struct(ptr %13, ptr %14)
  %26 = getelementptr inbounds { ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  %28 = call ptr @get_candy_function_pointer(ptr %27)
  %29 = call ptr @get_candy_function_environment(ptr %27)
  %30 = call ptr (...) %28(ptr %25, ptr %29)
  ret ptr %30
}

define ptr @Core_controlFlow_recursive_18.1288(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.1290, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.1291, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.1291, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_list_firstIndexWhere_23)
  %7 = call ptr @Core_list_firstIndexWhere_23(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.1290(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

declare ptr @candy_builtin_text_characters(ptr)

define ptr @Core_text_firstIndexOf(ptr %0, ptr %1) {
Core_text_firstIndexOf:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Text, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`is character` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = call ptr @candy_builtin_type_of(ptr %1)
  %13 = load ptr, ptr @tag_Text, align 8
  %14 = call ptr @candy_builtin_equals(ptr %12, ptr %13)
  %15 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %16 = load ptr, ptr @"Core:text:firstIndexOf:12", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %14, ptr %15, ptr %16)
  %18 = call ptr @candy_builtin_text_length(ptr %1)
  %19 = load ptr, ptr @num_1, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`character | length | equals 1` was not satisfied", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr null)
  %23 = call ptr @candy_builtin_type_of(ptr %0)
  %24 = load ptr, ptr @tag_Text, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %27 = load ptr, ptr @"Core:text:firstIndexOf:20", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = call ptr @candy_builtin_text_characters(ptr %0)
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %1, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_list_firstIndexOf_7, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_list_firstIndexOf_7, align 8
  %33 = load ptr, ptr @fun_Core_list_firstIndexOf_7, align 8
  %34 = call ptr @Core_list_firstIndexWhere(ptr %29, ptr %33)
  ret ptr %34
}

define ptr @Core_list_firstIndexOf_7(ptr %0, ptr %1) {
Core_list_firstIndexOf_7:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  ret ptr %4
}

define ptr @Core_text_repeat(ptr %0, ptr %1) {
Core_text_repeat:
  %2 = call ptr @candy_builtin_type_of(ptr %0)
  %3 = load ptr, ptr @tag_Text, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  %5 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr null)
  %7 = call ptr @candy_builtin_type_of(ptr %1)
  %8 = load ptr, ptr @tag_Int, align 8
  %9 = call ptr @candy_builtin_equals(ptr %7, ptr %8)
  %10 = load ptr, ptr @"text_`int.is times` was not satisfied", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %9, ptr %10, ptr null)
  %12 = load ptr, ptr @num_1, align 8
  %13 = call ptr @Core_int_isGreaterThanOrEqualTo(ptr %1, ptr %12)
  %14 = load ptr, ptr @"text_`times | int.isGreaterThanOrEqualTo 1` was not satisfied", align 8
  %15 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr null)
  %16 = alloca ptr, i64 3, align 8
  %17 = getelementptr ptr, ptr %16, i64 0
  store ptr %0, ptr %17, align 8
  %18 = getelementptr ptr, ptr %16, i64 1
  store ptr %1, ptr %18, align 8
  %19 = getelementptr ptr, ptr %16, i64 2
  store ptr null, ptr %19, align 8
  %20 = call ptr @make_candy_list(ptr %16)
  store ptr %20, ptr @404, align 8
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %0, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Core_text_repeat_34, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Core_text_repeat_34, align 8
  %24 = load ptr, ptr @fun_Core_text_repeat_34, align 8
  %25 = call ptr @Core_function_is2(ptr %24)
  %26 = load ptr, ptr @"text_The `body` should take the recursive function and the argument.", align 8
  %27 = load ptr, ptr @"Core:text:repeat:35", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %25, ptr %26, ptr %27)
  %29 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %30 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18.1296, ptr %29, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_controlFlow_recursive_18.1297, align 8
  %31 = load ptr, ptr @fun_Core_controlFlow_recursive_18.1297, align 8
  %32 = load ptr, ptr @404, align 8
  %33 = call ptr @Core_controlFlow_recursive_18.1296(ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_text_repeat_34(ptr %0, ptr %1, ptr %2) {
Core_text_repeat_34:
  %3 = call ptr @candy_builtin_type_of(ptr %1)
  %4 = load ptr, ptr @tag_List, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %1, ptr %7, align 8
  %8 = call ptr @make_candy_function(ptr @Core_text_repeat_34_1_equals_then, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %8, ptr @fun_Core_text_repeat_34_1_equals_then, align 8
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %3, ptr %10, align 8
  %11 = call ptr @make_candy_function(ptr @Core_text_repeat_34_1_equals_else.1294, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %11, ptr @fun_Core_text_repeat_34_1_equals_else.1295, align 8
  %12 = load ptr, ptr @fun_Core_text_repeat_34_1_equals_then, align 8
  %13 = load ptr, ptr @fun_Core_text_repeat_34_1_equals_else.1295, align 8
  %14 = call ptr @candy_builtin_if_else(ptr %5, ptr %12, ptr %13)
  %15 = load ptr, ptr @num_0, align 8
  %16 = call ptr @candy_builtin_list_get(ptr %14, ptr %15)
  %17 = load ptr, ptr @tag_Match, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %20 = getelementptr inbounds { ptr }, ptr %19, i32 0, i32 0
  store ptr %14, ptr %20, align 8
  %21 = call ptr @make_candy_function(ptr @Core_text_repeat_34_1_isMatch_else, ptr %19, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %21, ptr @fun_Core_text_repeat_34_1_isMatch_else, align 8
  %22 = load ptr, ptr @"fun_Chrono_clock_9_isMatch_then, Chrono_constants_9_isMatch_then, Chrono_duration_9_isMatch_then, Chrono_instant_9_isMatch_then, Core__19_isMatch_then, Core__30_isMatch_then, Core__41_isMatch_then, Core__102_isMatch_then, Core__153_isMatch_then, Core__164_isMatch_then, Core_bool_9_isMatch_then, Core_check_9_isMatch_then, Core_controlFlow_if_27, Core_controlFlow_29_isMatch_then, Core_controlFlow_50_isMatch_then, Core_fixedDecimal_add_14_isMatch_then, Core_fixedDecimal_compareTo_14_isMatch_then, Core_fixedDecimal_divideTruncating_37_isMatch_then, Core_fixedDecimal_divideTruncatingAtScale_42_isMatch_then, Core_fixedDecimal_subtract_14_isMatch_then, Core_fixedDecimal_19_isMatch_then, Core_fixedDecimal_30_isMatch_then, Core_fixedDecimal_41_isMatch_then, Core_fixedDecimal_52_isMatch_then, Core_fixedDecimal_103_isMatch_then, Core_function_19_isMatch_then, Core_int_pow_21_1_isMatch_then, Core_int_29_isMatch_then, Core_int_40_isMatch_then, Core_iterator_foldLeft_23_1_isMatch_then, Core_iterator_next_6_isMatch_then, Core_iterator_skip_30_6_1_isMatch_then, Core_iterator_take_31_1_isMatch_then, Core_iterator_withIndex_11_1_isMatch_then, Core_iterator_19_isMatch_then, Core_iterator_30_isMatch_then, Core_iterator_91_isMatch_then, Core_iterator_102_isMatch_then, Core_iterator_128_isMatch_then, Core_iterator_137_isMatch_then, Core_list_firstIndexWhere_23_1_isMatch_then, Core_list_generate_59_1_isMatch_then, Core_list_lastIndexWhere_44_1_isMatch_then, Core_list_29_isMatch_then, Core_list_40_isMatch_then, Core_result_19_isMatch_then, Core_result_30_isMatch_then, Core_struct_19_isMatch_then, Core_tag_29_isMatch_then, Core_text_repeat_34_1_isMatch_then, Core_text_29_isMatch_then, Core_text_40_isMatch_then, Core_type_19_isMatch_then, Examples_clock_then, Examples_clock_9_isMatch_then, Examples_clock_20_isMatch_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %23 = load ptr, ptr @fun_Core_text_repeat_34_1_isMatch_else, align 8
  %24 = call ptr @candy_builtin_if_else(ptr %18, ptr %22, ptr %23)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_list_get(ptr %14, ptr %25)
  %27 = load ptr, ptr @num_2, align 8
  %28 = call ptr @candy_builtin_list_get(ptr %14, ptr %27)
  %29 = load ptr, ptr @num_1, align 8
  %30 = call ptr @candy_builtin_equals(ptr %28, ptr %29)
  %31 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %32 = getelementptr inbounds { ptr }, ptr %31, i32 0, i32 0
  store ptr %26, ptr %32, align 8
  %33 = call ptr @make_candy_function(ptr @Core_text_repeat_34_7, ptr %31, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %33, ptr @fun_Core_text_repeat_34_7, align 8
  %34 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %35 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %34, i32 0, i32 0
  store ptr %36, ptr %37, align 8
  %38 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %34, i32 0, i32 1
  store ptr %28, ptr %38, align 8
  %39 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %34, i32 0, i32 2
  store ptr %0, ptr %39, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %34, i32 0, i32 3
  store ptr %26, ptr %40, align 8
  %41 = call ptr @make_candy_function(ptr @Core_text_repeat_34_8, ptr %34, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %41, ptr @fun_Core_text_repeat_34_8, align 8
  %42 = load ptr, ptr @fun_Core_text_repeat_34_7, align 8
  %43 = load ptr, ptr @fun_Core_text_repeat_34_8, align 8
  %44 = call ptr @Builtins__ifElse(ptr %30, ptr %42, ptr %43)
  ret ptr %44
}

define ptr @Core_text_repeat_34_1_equals_then(ptr %0) {
Core_text_repeat_34_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_list_length(ptr %2)
  %4 = load ptr, ptr @num_2, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_text_repeat_34_1_equals_then.1292, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_text_repeat_34_1_equals_then.1293, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_text_repeat_34_1_equals_else, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_text_repeat_34_1_equals_else, align 8
  %14 = load ptr, ptr @fun_Core_text_repeat_34_1_equals_then.1293, align 8
  %15 = load ptr, ptr @fun_Core_text_repeat_34_1_equals_else, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_text_repeat_34_1_equals_then.1292(ptr %0) {
Core_text_repeat_34_1_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_0, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @num_1, align 8
  %8 = call ptr @candy_builtin_list_get(ptr %6, ptr %7)
  %9 = alloca ptr, i64 4, align 8
  %10 = load ptr, ptr @tag_Match, align 8
  %11 = getelementptr ptr, ptr %9, i64 0
  store ptr %10, ptr %11, align 8
  %12 = getelementptr ptr, ptr %9, i64 1
  store ptr %4, ptr %12, align 8
  %13 = getelementptr ptr, ptr %9, i64 2
  store ptr %8, ptr %13, align 8
  %14 = getelementptr ptr, ptr %9, i64 3
  store ptr null, ptr %14, align 8
  %15 = call ptr @make_candy_list(ptr %9)
  store ptr %15, ptr @405, align 8
  ret ptr @405
}

define ptr @Core_text_repeat_34_1_equals_else(ptr %0) {
Core_text_repeat_34_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected 2 items, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @406, align 8
  ret ptr @406
}

define ptr @Core_text_repeat_34_1_equals_else.1294(ptr %0) {
Core_text_repeat_34_1_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a List, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @407, align 8
  ret ptr @407
}

define ptr @Core_text_repeat_34_1_isMatch_else(ptr %0) {
Core_text_repeat_34_1_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_text_repeat_34_7(ptr %0) {
Core_text_repeat_34_7:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_text_repeat_34_8(ptr %0) {
Core_text_repeat_34_8:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:text:repeat:34:8:3", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = call ptr @candy_builtin_type_of(ptr %10)
  %12 = load ptr, ptr @tag_Text, align 8
  %13 = call ptr @candy_builtin_equals(ptr %11, ptr %12)
  %14 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %15 = load ptr, ptr @"Core:text:repeat:34:8:3", align 8
  %16 = call ptr @"anonymous_$generated__needs"(ptr %13, ptr %14, ptr %15)
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = call ptr @candy_builtin_text_concatenate(ptr %18, ptr %20)
  %22 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = call ptr @candy_builtin_type_of(ptr %23)
  %25 = load ptr, ptr @tag_Int, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %28 = load ptr, ptr @"Core:text:repeat:34:8:14", align 8
  %29 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr %28)
  %30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr @num_1, align 8
  %33 = call ptr @candy_builtin_int_subtract(ptr %31, ptr %32)
  %34 = alloca ptr, i64 3, align 8
  %35 = getelementptr ptr, ptr %34, i64 0
  store ptr %21, ptr %35, align 8
  %36 = getelementptr ptr, ptr %34, i64 1
  store ptr %33, ptr %36, align 8
  %37 = getelementptr ptr, ptr %34, i64 2
  store ptr null, ptr %37, align 8
  %38 = call ptr @make_candy_list(ptr %34)
  store ptr %38, ptr @408, align 8
  %39 = load ptr, ptr @408, align 8
  %40 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %41 = load ptr, ptr %40, align 8
  %42 = call ptr @get_candy_function_pointer(ptr %41)
  %43 = call ptr @get_candy_function_environment(ptr %41)
  %44 = call ptr (...) %42(ptr %39, ptr %43)
  ret ptr %44
}

define ptr @Core_controlFlow_recursive_18.1296(ptr %0, ptr %1) {
Core_controlFlow_recursive_18:
  %2 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %3 = getelementptr inbounds { ptr }, ptr %2, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = call ptr @make_candy_function(ptr @Core_controlFlow_recursive_18_0.1298, ptr %2, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %4, ptr @fun_Core_controlFlow_recursive_18_0.1299, align 8
  %5 = load ptr, ptr @fun_Core_controlFlow_recursive_18_0.1299, align 8
  %6 = call ptr @get_candy_function_environment(ptr @fun_Core_text_repeat_34)
  %7 = call ptr @Core_text_repeat_34(ptr %5, ptr %1, ptr %6)
  ret ptr %7
}

define ptr @Core_controlFlow_recursive_18_0.1298(ptr %0, ptr %1) {
Core_controlFlow_recursive_18_0:
  %2 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds { ptr }, ptr %1, i32 0, i32 0
  %5 = load ptr, ptr %4, align 8
  %6 = call ptr @get_candy_function_pointer(ptr %5)
  %7 = call ptr @get_candy_function_environment(ptr %5)
  %8 = call ptr (...) %6(ptr %3, ptr %0, ptr %7)
  ret ptr %8
}

define ptr @Core_text_padStart(ptr %0, ptr %1, ptr %2) {
Core_text_padStart:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`int.is len` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @candy_builtin_type_of(ptr %2)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`is character` was not satisfied", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr null)
  %18 = call ptr @candy_builtin_type_of(ptr %2)
  %19 = load ptr, ptr @tag_Text, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:text:padStart:24", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_text_length(ptr %2)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`character | length | equals 1` was not satisfied", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr null)
  %29 = call ptr @candy_builtin_type_of(ptr %0)
  %30 = load ptr, ptr @tag_Text, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %33 = load ptr, ptr @"Core:text:padStart:32", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr %33)
  %35 = call ptr @candy_builtin_text_length(ptr %0)
  %36 = call ptr @Core_int_isGreaterThanOrEqualTo(ptr %35, ptr %1)
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = call ptr @make_candy_function(ptr @Core_text_padStart_46, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %39, ptr @fun_Core_text_padStart_46, align 8
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 0
  store ptr %0, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 1
  store ptr %35, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 2
  store ptr %1, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 3
  store ptr %2, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_text_padStart_47, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_text_padStart_47, align 8
  %46 = load ptr, ptr @fun_Core_text_padStart_46, align 8
  %47 = load ptr, ptr @fun_Core_text_padStart_47, align 8
  %48 = call ptr @Builtins__ifElse(ptr %36, ptr %46, ptr %47)
  ret ptr %48
}

define ptr @Core_text_padStart_46(ptr %0) {
Core_text_padStart_46:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_text_padStart_47(ptr %0) {
Core_text_padStart_47:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:text:padStart:47:12", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8
  %13 = call ptr @candy_builtin_int_subtract(ptr %10, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %15 = load ptr, ptr %14, align 8
  %16 = call ptr @Core_text_repeat(ptr %15, ptr %13)
  %17 = call ptr @candy_builtin_type_of(ptr %16)
  %18 = load ptr, ptr @tag_Text, align 8
  %19 = call ptr @candy_builtin_equals(ptr %17, ptr %18)
  %20 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %21 = load ptr, ptr @"Core:text:padStart:47:16", align 8
  %22 = call ptr @"anonymous_$generated__needs"(ptr %19, ptr %20, ptr %21)
  %23 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = call ptr @candy_builtin_type_of(ptr %24)
  %26 = load ptr, ptr @tag_Text, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %29 = load ptr, ptr @"Core:text:padStart:47:16", align 8
  %30 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr %29)
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %16, ptr %32)
  ret ptr %33
}

define ptr @Core_text_padEnd(ptr %0, ptr %1, ptr %2) {
Core_text_padEnd:
  %3 = call ptr @candy_builtin_type_of(ptr %0)
  %4 = load ptr, ptr @tag_Text, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`is text` was not satisfied", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr null)
  %8 = call ptr @candy_builtin_type_of(ptr %1)
  %9 = load ptr, ptr @tag_Int, align 8
  %10 = call ptr @candy_builtin_equals(ptr %8, ptr %9)
  %11 = load ptr, ptr @"text_`int.is len` was not satisfied", align 8
  %12 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr null)
  %13 = call ptr @candy_builtin_type_of(ptr %2)
  %14 = load ptr, ptr @tag_Text, align 8
  %15 = call ptr @candy_builtin_equals(ptr %13, ptr %14)
  %16 = load ptr, ptr @"text_`is character` was not satisfied", align 8
  %17 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr null)
  %18 = call ptr @candy_builtin_type_of(ptr %2)
  %19 = load ptr, ptr @tag_Text, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %22 = load ptr, ptr @"Core:text:padEnd:24", align 8
  %23 = call ptr @"anonymous_$generated__needs"(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @candy_builtin_text_length(ptr %2)
  %25 = load ptr, ptr @num_1, align 8
  %26 = call ptr @candy_builtin_equals(ptr %24, ptr %25)
  %27 = load ptr, ptr @"text_`character | length | equals 1` was not satisfied", align 8
  %28 = call ptr @"anonymous_$generated__needs"(ptr %26, ptr %27, ptr null)
  %29 = call ptr @candy_builtin_type_of(ptr %0)
  %30 = load ptr, ptr @tag_Text, align 8
  %31 = call ptr @candy_builtin_equals(ptr %29, ptr %30)
  %32 = load ptr, ptr @"text_`text | typeIs Text` was not satisfied", align 8
  %33 = load ptr, ptr @"Core:text:padEnd:32", align 8
  %34 = call ptr @"anonymous_$generated__needs"(ptr %31, ptr %32, ptr %33)
  %35 = call ptr @candy_builtin_text_length(ptr %0)
  %36 = call ptr @Core_int_isGreaterThanOrEqualTo(ptr %35, ptr %1)
  %37 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %38 = getelementptr inbounds { ptr }, ptr %37, i32 0, i32 0
  store ptr %0, ptr %38, align 8
  %39 = call ptr @make_candy_function(ptr @Core_text_padEnd_46, ptr %37, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %39, ptr @fun_Core_text_padEnd_46, align 8
  %40 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i32))
  %41 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 0
  store ptr %2, ptr %41, align 8
  %42 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 1
  store ptr %0, ptr %42, align 8
  %43 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 2
  store ptr %35, ptr %43, align 8
  %44 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %40, i32 0, i32 3
  store ptr %1, ptr %44, align 8
  %45 = call ptr @make_candy_function(ptr @Core_text_padEnd_47, ptr %40, i64 ptrtoint (ptr getelementptr ({ ptr, ptr, ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %45, ptr @fun_Core_text_padEnd_47, align 8
  %46 = load ptr, ptr @fun_Core_text_padEnd_46, align 8
  %47 = load ptr, ptr @fun_Core_text_padEnd_47, align 8
  %48 = call ptr @Builtins__ifElse(ptr %36, ptr %46, ptr %47)
  ret ptr %48
}

define ptr @Core_text_padEnd_46(ptr %0) {
Core_text_padEnd_46:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_text_padEnd_47(ptr %0) {
Core_text_padEnd_47:
  %1 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_type_of(ptr %2)
  %4 = load ptr, ptr @tag_Int, align 8
  %5 = call ptr @candy_builtin_equals(ptr %3, ptr %4)
  %6 = load ptr, ptr @"text_`minuend | typeIs Int` was not satisfied", align 8
  %7 = load ptr, ptr @"Core:text:padEnd:47:14", align 8
  %8 = call ptr @"anonymous_$generated__needs"(ptr %5, ptr %6, ptr %7)
  %9 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 3
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = call ptr @candy_builtin_int_subtract(ptr %10, ptr %12)
  %14 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = call ptr @Core_text_repeat(ptr %15, ptr %13)
  %17 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = call ptr @candy_builtin_type_of(ptr %18)
  %20 = load ptr, ptr @tag_Text, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = load ptr, ptr @"text_`a | typeIs Text` was not satisfied", align 8
  %23 = load ptr, ptr @"Core:text:padEnd:47:16", align 8
  %24 = call ptr @"anonymous_$generated__needs"(ptr %21, ptr %22, ptr %23)
  %25 = call ptr @candy_builtin_type_of(ptr %16)
  %26 = load ptr, ptr @tag_Text, align 8
  %27 = call ptr @candy_builtin_equals(ptr %25, ptr %26)
  %28 = load ptr, ptr @"text_`b | typeIs Text` was not satisfied", align 8
  %29 = load ptr, ptr @"Core:text:padEnd:47:16", align 8
  %30 = call ptr @"anonymous_$generated__needs"(ptr %27, ptr %28, ptr %29)
  %31 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %0, i32 0, i32 1
  %32 = load ptr, ptr %31, align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %32, ptr %16)
  ret ptr %33
}

define ptr @Core_iterator_128_equals_then.1300(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1302, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1303, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1328, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1329, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1303, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1329, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1302(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1304, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1305, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1326, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1327, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1305, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1327, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1304(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1306, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.1307, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1324, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.1325, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.1307, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.1325, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.1306(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1308, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.1309, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1310, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.1311, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1309, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1311, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1312, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.1313, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1322, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.1323, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1313, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1323, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.1308(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @409, align 8
  ret ptr @409
}

define ptr @Core_iterator_128_hasKey_else.1310(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @410, align 8
  ret ptr @410
}

define ptr @Core_iterator_128_isMatch_then.1312(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1314, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.1315, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1316, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.1317, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1315, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1317, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1318, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.1319, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1320, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.1321, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1319, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1321, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.1314(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @411, align 8
  ret ptr @411
}

define ptr @Core_iterator_128_hasKey_else.1316(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @412, align 8
  ret ptr @412
}

define ptr @Core_iterator_128_isMatch_then.1318(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @413, align 8
  ret ptr @413
}

define ptr @Core_iterator_128_isMatch_else.1320(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.1322(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.1324(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @414, align 8
  ret ptr @414
}

define ptr @Core_iterator_128_equals_else.1326(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.1328(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @415, align 8
  ret ptr @415
}

define ptr @Core_iterator_128_equals_else.1330(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @416, align 8
  ret ptr @416
}

define ptr @Core_iterator_128_isMatch_else.1332(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.1334(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1336, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1337, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1362, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1363, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1337, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1363, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1336(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1338, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1339, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1360, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1361, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1339, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1361, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1338(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1340, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.1341, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1358, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.1359, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.1341, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.1359, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.1340(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1342, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.1343, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1344, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.1345, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1343, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1345, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1346, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.1347, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1356, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.1357, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1347, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1357, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.1342(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @417, align 8
  ret ptr @417
}

define ptr @Core_iterator_137_hasKey_else.1344(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @418, align 8
  ret ptr @418
}

define ptr @Core_iterator_137_isMatch_then.1346(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1348, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.1349, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1350, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.1351, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1349, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1351, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1352, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.1353, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1354, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.1355, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1353, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1355, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.1348(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @419, align 8
  ret ptr @419
}

define ptr @Core_iterator_137_hasKey_else.1350(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @420, align 8
  ret ptr @420
}

define ptr @Core_iterator_137_isMatch_then.1352(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @421, align 8
  ret ptr @421
}

define ptr @Core_iterator_137_isMatch_else.1354(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.1356(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.1358(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @422, align 8
  ret ptr @422
}

define ptr @Core_iterator_137_equals_else.1360(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.1362(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @423, align 8
  ret ptr @423
}

define ptr @Core_iterator_137_equals_else.1364(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @424, align 8
  ret ptr @424
}

define ptr @Core_iterator_137_isMatch_else.1366(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Chrono_duration_fromSeconds(ptr %0) {
Chrono_duration_fromSeconds:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Chrono_duration_isNumber_18.1368, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Chrono_duration_isNumber_18.1369, align 8
  %7 = load ptr, ptr @fun_Chrono_duration_isNumber_18.1369, align 8
  %8 = call ptr @Core_bool_lazyOr(ptr %3, ptr %7)
  %9 = load ptr, ptr @"text_`isNumber seconds` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Chrono_duration_numberAsFixedDecimal(ptr %0)
  %12 = alloca i8, i64 9, align 1
  store [9 x i8] c"Duration\00", ptr %12, align 1
  %13 = call ptr @make_candy_tag(ptr %12, ptr %11)
  store ptr %13, ptr @tag_Duration.1370, align 8
  ret ptr @tag_Duration.1370
}

define ptr @Chrono_duration_isNumber_18.1368(ptr %0) {
Chrono_duration_isNumber_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_is(ptr %2)
  ret ptr %3
}

define ptr @Chrono_duration_fromMinutes(ptr %0) {
Chrono_duration_fromMinutes:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Chrono_duration_isNumber_18.1371, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Chrono_duration_isNumber_18.1372, align 8
  %7 = load ptr, ptr @fun_Chrono_duration_isNumber_18.1372, align 8
  %8 = call ptr @Core_bool_lazyOr(ptr %3, ptr %7)
  %9 = load ptr, ptr @"text_`isNumber minutes` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Chrono_duration_numberAsFixedDecimal(ptr %0)
  %12 = load ptr, ptr @num_60, align 8
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %12, ptr %13)
  %15 = call ptr @Core_fixedDecimal_multiply(ptr %11, ptr %14)
  %16 = alloca i8, i64 9, align 1
  store [9 x i8] c"Duration\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_Duration.1373, align 8
  ret ptr @tag_Duration.1373
}

define ptr @Chrono_duration_isNumber_18.1371(ptr %0) {
Chrono_duration_isNumber_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_is(ptr %2)
  ret ptr %3
}

define ptr @Chrono_duration_fromHours(ptr %0) {
Chrono_duration_fromHours:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Chrono_duration_isNumber_18.1374, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Chrono_duration_isNumber_18.1375, align 8
  %7 = load ptr, ptr @fun_Chrono_duration_isNumber_18.1375, align 8
  %8 = call ptr @Core_bool_lazyOr(ptr %3, ptr %7)
  %9 = load ptr, ptr @"text_`isNumber hours` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Chrono_duration_numberAsFixedDecimal(ptr %0)
  %12 = load ptr, ptr @num_3600, align 8
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %12, ptr %13)
  %15 = call ptr @Core_fixedDecimal_multiply(ptr %11, ptr %14)
  %16 = alloca i8, i64 9, align 1
  store [9 x i8] c"Duration\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_Duration.1376, align 8
  ret ptr @tag_Duration.1376
}

define ptr @Chrono_duration_isNumber_18.1374(ptr %0) {
Chrono_duration_isNumber_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_is(ptr %2)
  ret ptr %3
}

define ptr @Chrono_duration_fromNormalDays(ptr %0) {
Chrono_duration_fromNormalDays:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Int, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %5 = getelementptr inbounds { ptr }, ptr %4, i32 0, i32 0
  store ptr %0, ptr %5, align 8
  %6 = call ptr @make_candy_function(ptr @Chrono_duration_isNumber_18.1377, ptr %4, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %6, ptr @fun_Chrono_duration_isNumber_18.1378, align 8
  %7 = load ptr, ptr @fun_Chrono_duration_isNumber_18.1378, align 8
  %8 = call ptr @Core_bool_lazyOr(ptr %3, ptr %7)
  %9 = load ptr, ptr @"text_`isNumber days` was not satisfied", align 8
  %10 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr null)
  %11 = call ptr @Chrono_duration_numberAsFixedDecimal(ptr %0)
  %12 = load ptr, ptr @num_86400, align 8
  %13 = load ptr, ptr @num_0, align 8
  %14 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %12, ptr %13)
  %15 = call ptr @Core_fixedDecimal_multiply(ptr %11, ptr %14)
  %16 = alloca i8, i64 9, align 1
  store [9 x i8] c"Duration\00", ptr %16, align 1
  %17 = call ptr @make_candy_tag(ptr %16, ptr %15)
  store ptr %17, ptr @tag_Duration.1379, align 8
  ret ptr @tag_Duration.1379
}

define ptr @Chrono_duration_isNumber_18.1377(ptr %0) {
Chrono_duration_isNumber_18:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @Core_fixedDecimal_is(ptr %2)
  ret ptr %3
}

define ptr @Chrono_duration_totalSeconds(ptr %0) {
Chrono_duration_totalSeconds:
  %1 = call ptr @Chrono_duration_is(ptr %0)
  %2 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Chrono:duration:totalSeconds:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Chrono:duration:totalSeconds:14", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  ret ptr %14
}

define ptr @Chrono_duration_totalMinutes(ptr %0) {
Chrono_duration_totalMinutes:
  %1 = call ptr @Chrono_duration_is(ptr %0)
  %2 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Chrono:duration:totalMinutes:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Chrono:duration:totalMinutes:14", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %15 = load ptr, ptr @num_60, align 8
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %15, ptr %16)
  %18 = call ptr @Core_fixedDecimal_divideTruncating(ptr %14, ptr %17)
  ret ptr %18
}

define ptr @Chrono_duration_totalHours(ptr %0) {
Chrono_duration_totalHours:
  %1 = call ptr @Chrono_duration_is(ptr %0)
  %2 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Chrono:duration:totalHours:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Chrono:duration:totalHours:14", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %15 = load ptr, ptr @num_3600, align 8
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %15, ptr %16)
  %18 = call ptr @Core_fixedDecimal_divideTruncating(ptr %14, ptr %17)
  ret ptr %18
}

define ptr @Chrono_duration_totalNormalDays(ptr %0) {
Chrono_duration_totalNormalDays:
  %1 = call ptr @Chrono_duration_is(ptr %0)
  %2 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Chrono:duration:totalNormalDays:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Chrono:duration:totalNormalDays:14", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %15 = load ptr, ptr @num_86400, align 8
  %16 = load ptr, ptr @num_0, align 8
  %17 = call ptr @Core_fixedDecimal_fromIntScaled(ptr %15, ptr %16)
  %18 = call ptr @Core_fixedDecimal_divideTruncating(ptr %14, ptr %17)
  ret ptr %18
}

define ptr @Chrono_duration_hours(ptr %0) {
Chrono_duration_hours:
  %1 = call ptr @Chrono_duration_is(ptr %0)
  %2 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Chrono_duration_is(ptr %0)
  %5 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %6 = load ptr, ptr @"Chrono:duration:hours:7", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @Chrono_duration_totalNormalDays(ptr %0)
  %9 = call ptr @Core_fixedDecimal_floorToInt(ptr %8)
  %10 = call ptr @Chrono_duration_fromNormalDays(ptr %9)
  %11 = call ptr @Chrono_duration_subtract(ptr %0, ptr %10)
  %12 = call ptr @Chrono_duration_totalHours(ptr %11)
  %13 = call ptr @Core_fixedDecimal_floorToInt(ptr %12)
  ret ptr %13
}

define ptr @Chrono_duration_minutes(ptr %0) {
Chrono_duration_minutes:
  %1 = call ptr @Chrono_duration_is(ptr %0)
  %2 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Chrono_duration_is(ptr %0)
  %5 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %6 = load ptr, ptr @"Chrono:duration:minutes:7", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @Chrono_duration_totalHours(ptr %0)
  %9 = call ptr @Core_fixedDecimal_floorToInt(ptr %8)
  %10 = call ptr @Chrono_duration_fromHours(ptr %9)
  %11 = call ptr @Chrono_duration_subtract(ptr %0, ptr %10)
  %12 = call ptr @Chrono_duration_totalMinutes(ptr %11)
  %13 = call ptr @Core_fixedDecimal_floorToInt(ptr %12)
  ret ptr %13
}

define ptr @Chrono_duration_seconds(ptr %0) {
Chrono_duration_seconds:
  %1 = call ptr @Chrono_duration_is(ptr %0)
  %2 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Chrono_duration_is(ptr %0)
  %5 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %6 = load ptr, ptr @"Chrono:duration:seconds:7", align 8
  %7 = call ptr @"anonymous_$generated__needs"(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @Chrono_duration_totalMinutes(ptr %0)
  %9 = call ptr @Core_fixedDecimal_floorToInt(ptr %8)
  %10 = call ptr @Chrono_duration_fromMinutes(ptr %9)
  %11 = call ptr @Chrono_duration_subtract(ptr %0, ptr %10)
  %12 = call ptr @Chrono_duration_totalSeconds(ptr %11)
  %13 = call ptr @Core_fixedDecimal_floorToInt(ptr %12)
  ret ptr %13
}

define ptr @Chrono_duration_isNegative(ptr %0) {
Chrono_duration_isNegative:
  %1 = call ptr @Chrono_duration_is(ptr %0)
  %2 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @candy_builtin_type_of(ptr %0)
  %5 = load ptr, ptr @tag_Tag, align 8
  %6 = call ptr @candy_builtin_equals(ptr %4, ptr %5)
  %7 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %8 = load ptr, ptr @"Chrono:duration:isNegative:14", align 8
  %9 = call ptr @"anonymous_$generated__needs"(ptr %6, ptr %7, ptr %8)
  %10 = call ptr @candy_builtin_tag_has_value(ptr %0)
  %11 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %12 = load ptr, ptr @"Chrono:duration:isNegative:14", align 8
  %13 = call ptr @"anonymous_$generated__needs"(ptr %10, ptr %11, ptr %12)
  %14 = call ptr @candy_builtin_tag_get_value(ptr %0)
  %15 = call ptr @Core_fixedDecimal_is(ptr %14)
  %16 = load ptr, ptr @"text_`is value` was not satisfied", align 8
  %17 = load ptr, ptr @"Chrono:duration:isNegative:23", align 8
  %18 = call ptr @"anonymous_$generated__needs"(ptr %15, ptr %16, ptr %17)
  %19 = call ptr @Core_fixedDecimal_minorUnits(ptr %14)
  %20 = load ptr, ptr @num_0, align 8
  %21 = call ptr @Core_int_isLessThan(ptr %19, ptr %20)
  ret ptr %21
}

define ptr @Chrono_duration_toText_9() {
Chrono_duration_toText_9:
  %0 = load ptr, ptr @text_-, align 8
  ret ptr %0
}

define ptr @Chrono_duration_toText_10() {
Chrono_duration_toText_10:
  %0 = load ptr, ptr @text_, align 8
  ret ptr %0
}

define ptr @Chrono_duration_toText(ptr %0) {
Chrono_duration_toText:
  %1 = call ptr @Chrono_duration_is(ptr %0)
  %2 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %3 = call ptr @"anonymous_$generated__needs"(ptr %1, ptr %2, ptr null)
  %4 = call ptr @Chrono_duration_isNegative(ptr %0)
  %5 = load ptr, ptr @fun_Chrono_duration_toText_9, align 8
  %6 = load ptr, ptr @fun_Chrono_duration_toText_10, align 8
  %7 = call ptr @Builtins__ifElse(ptr %4, ptr %5, ptr %6)
  %8 = call ptr @Chrono_duration_is(ptr %0)
  %9 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %10 = load ptr, ptr @"Chrono:duration:toText:15", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = call ptr @Chrono_duration_totalNormalDays(ptr %0)
  %13 = call ptr @Core_fixedDecimal_floorToInt(ptr %12)
  %14 = call ptr @Chrono_duration_hours(ptr %0)
  %15 = call ptr @candy_builtin_to_debug_text(ptr %14)
  %16 = load ptr, ptr @num_2, align 8
  %17 = load ptr, ptr @text_0, align 8
  %18 = call ptr @Core_text_padStart(ptr %15, ptr %16, ptr %17)
  %19 = call ptr @Chrono_duration_minutes(ptr %0)
  %20 = call ptr @candy_builtin_to_debug_text(ptr %19)
  %21 = load ptr, ptr @num_2, align 8
  %22 = load ptr, ptr @text_0, align 8
  %23 = call ptr @Core_text_padStart(ptr %20, ptr %21, ptr %22)
  %24 = call ptr @Chrono_duration_seconds(ptr %0)
  %25 = call ptr @candy_builtin_to_debug_text(ptr %24)
  %26 = load ptr, ptr @num_2, align 8
  %27 = load ptr, ptr @text_0, align 8
  %28 = call ptr @Core_text_padStart(ptr %25, ptr %26, ptr %27)
  %29 = call ptr @Chrono_duration_is(ptr %0)
  %30 = load ptr, ptr @"text_`is duration` was not satisfied", align 8
  %31 = load ptr, ptr @"Chrono:duration:toText:88", align 8
  %32 = call ptr @"anonymous_$generated__needs"(ptr %29, ptr %30, ptr %31)
  %33 = call ptr @Chrono_duration_totalSeconds(ptr %0)
  %34 = call ptr @Core_fixedDecimal_floorToInt(ptr %33)
  %35 = call ptr @Chrono_duration_fromSeconds(ptr %34)
  %36 = call ptr @Chrono_duration_subtract(ptr %0, ptr %35)
  %37 = call ptr @candy_builtin_type_of(ptr %36)
  %38 = load ptr, ptr @tag_Tag, align 8
  %39 = call ptr @candy_builtin_equals(ptr %37, ptr %38)
  %40 = load ptr, ptr @"text_`tag | typeIs Tag` was not satisfied", align 8
  %41 = load ptr, ptr @"Chrono:duration:toText:97", align 8
  %42 = call ptr @"anonymous_$generated__needs"(ptr %39, ptr %40, ptr %41)
  %43 = call ptr @candy_builtin_tag_has_value(ptr %36)
  %44 = load ptr, ptr @"text_`tag | \E2\9C\A8.tagHasValue` was not satisfied", align 8
  %45 = load ptr, ptr @"Chrono:duration:toText:97", align 8
  %46 = call ptr @"anonymous_$generated__needs"(ptr %43, ptr %44, ptr %45)
  %47 = call ptr @candy_builtin_tag_get_value(ptr %36)
  %48 = call ptr @Core_fixedDecimal_toText(ptr %47)
  %49 = load ptr, ptr @text_., align 8
  %50 = call ptr @Core_text_firstIndexOf(ptr %48, ptr %49)
  %51 = load ptr, ptr @num_0, align 8
  %52 = call ptr @Builtins__textGetRange(ptr %48, ptr %51, ptr %50)
  %53 = load ptr, ptr @num_9, align 8
  %54 = load ptr, ptr @text_0, align 8
  %55 = call ptr @Core_text_padEnd(ptr %52, ptr %53, ptr %54)
  %56 = call ptr @candy_builtin_type_of(ptr %7)
  %57 = load ptr, ptr @tag_Text, align 8
  %58 = call ptr @candy_builtin_equals(ptr %56, ptr %57)
  %59 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %60 = getelementptr inbounds { ptr }, ptr %59, i32 0, i32 0
  store ptr %7, ptr %60, align 8
  %61 = call ptr @make_candy_function(ptr @Chrono_duration_toText_163, ptr %59, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %61, ptr @fun_Chrono_duration_toText_163, align 8
  %62 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %63 = getelementptr inbounds { ptr }, ptr %62, i32 0, i32 0
  store ptr %7, ptr %63, align 8
  %64 = call ptr @make_candy_function(ptr @Chrono_duration_toText_164, ptr %62, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %64, ptr @fun_Chrono_duration_toText_164, align 8
  %65 = load ptr, ptr @fun_Chrono_duration_toText_163, align 8
  %66 = load ptr, ptr @fun_Chrono_duration_toText_164, align 8
  %67 = call ptr @candy_builtin_if_else(ptr %58, ptr %65, ptr %66)
  %68 = call ptr @candy_builtin_type_of(ptr %13)
  %69 = load ptr, ptr @tag_Text, align 8
  %70 = call ptr @candy_builtin_equals(ptr %68, ptr %69)
  %71 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %72 = getelementptr inbounds { ptr }, ptr %71, i32 0, i32 0
  store ptr %13, ptr %72, align 8
  %73 = call ptr @make_candy_function(ptr @Chrono_duration_toText_169, ptr %71, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %73, ptr @fun_Chrono_duration_toText_169, align 8
  %74 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %75 = getelementptr inbounds { ptr }, ptr %74, i32 0, i32 0
  store ptr %13, ptr %75, align 8
  %76 = call ptr @make_candy_function(ptr @Chrono_duration_toText_170, ptr %74, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %76, ptr @fun_Chrono_duration_toText_170, align 8
  %77 = load ptr, ptr @fun_Chrono_duration_toText_169, align 8
  %78 = load ptr, ptr @fun_Chrono_duration_toText_170, align 8
  %79 = call ptr @candy_builtin_if_else(ptr %70, ptr %77, ptr %78)
  %80 = call ptr @candy_builtin_type_of(ptr %18)
  %81 = load ptr, ptr @tag_Text, align 8
  %82 = call ptr @candy_builtin_equals(ptr %80, ptr %81)
  %83 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %84 = getelementptr inbounds { ptr }, ptr %83, i32 0, i32 0
  store ptr %18, ptr %84, align 8
  %85 = call ptr @make_candy_function(ptr @Chrono_duration_toText_176, ptr %83, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %85, ptr @fun_Chrono_duration_toText_176, align 8
  %86 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %87 = getelementptr inbounds { ptr }, ptr %86, i32 0, i32 0
  store ptr %18, ptr %87, align 8
  %88 = call ptr @make_candy_function(ptr @Chrono_duration_toText_177, ptr %86, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %88, ptr @fun_Chrono_duration_toText_177, align 8
  %89 = load ptr, ptr @fun_Chrono_duration_toText_176, align 8
  %90 = load ptr, ptr @fun_Chrono_duration_toText_177, align 8
  %91 = call ptr @candy_builtin_if_else(ptr %82, ptr %89, ptr %90)
  %92 = call ptr @candy_builtin_type_of(ptr %23)
  %93 = load ptr, ptr @tag_Text, align 8
  %94 = call ptr @candy_builtin_equals(ptr %92, ptr %93)
  %95 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %96 = getelementptr inbounds { ptr }, ptr %95, i32 0, i32 0
  store ptr %23, ptr %96, align 8
  %97 = call ptr @make_candy_function(ptr @Chrono_duration_toText_183, ptr %95, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %97, ptr @fun_Chrono_duration_toText_183, align 8
  %98 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %99 = getelementptr inbounds { ptr }, ptr %98, i32 0, i32 0
  store ptr %23, ptr %99, align 8
  %100 = call ptr @make_candy_function(ptr @Chrono_duration_toText_184, ptr %98, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %100, ptr @fun_Chrono_duration_toText_184, align 8
  %101 = load ptr, ptr @fun_Chrono_duration_toText_183, align 8
  %102 = load ptr, ptr @fun_Chrono_duration_toText_184, align 8
  %103 = call ptr @candy_builtin_if_else(ptr %94, ptr %101, ptr %102)
  %104 = call ptr @candy_builtin_type_of(ptr %28)
  %105 = load ptr, ptr @tag_Text, align 8
  %106 = call ptr @candy_builtin_equals(ptr %104, ptr %105)
  %107 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %108 = getelementptr inbounds { ptr }, ptr %107, i32 0, i32 0
  store ptr %28, ptr %108, align 8
  %109 = call ptr @make_candy_function(ptr @Chrono_duration_toText_190, ptr %107, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %109, ptr @fun_Chrono_duration_toText_190, align 8
  %110 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %111 = getelementptr inbounds { ptr }, ptr %110, i32 0, i32 0
  store ptr %28, ptr %111, align 8
  %112 = call ptr @make_candy_function(ptr @Chrono_duration_toText_191, ptr %110, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %112, ptr @fun_Chrono_duration_toText_191, align 8
  %113 = load ptr, ptr @fun_Chrono_duration_toText_190, align 8
  %114 = load ptr, ptr @fun_Chrono_duration_toText_191, align 8
  %115 = call ptr @candy_builtin_if_else(ptr %106, ptr %113, ptr %114)
  %116 = call ptr @candy_builtin_type_of(ptr %55)
  %117 = load ptr, ptr @tag_Text, align 8
  %118 = call ptr @candy_builtin_equals(ptr %116, ptr %117)
  %119 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %120 = getelementptr inbounds { ptr }, ptr %119, i32 0, i32 0
  store ptr %55, ptr %120, align 8
  %121 = call ptr @make_candy_function(ptr @Chrono_duration_toText_197, ptr %119, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %121, ptr @fun_Chrono_duration_toText_197, align 8
  %122 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %123 = getelementptr inbounds { ptr }, ptr %122, i32 0, i32 0
  store ptr %55, ptr %123, align 8
  %124 = call ptr @make_candy_function(ptr @Chrono_duration_toText_198, ptr %122, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %124, ptr @fun_Chrono_duration_toText_198, align 8
  %125 = load ptr, ptr @fun_Chrono_duration_toText_197, align 8
  %126 = load ptr, ptr @fun_Chrono_duration_toText_198, align 8
  %127 = call ptr @candy_builtin_if_else(ptr %118, ptr %125, ptr %126)
  %128 = call ptr @candy_builtin_text_concatenate(ptr %67, ptr %79)
  %129 = load ptr, ptr @"text_:", align 8
  %130 = call ptr @candy_builtin_text_concatenate(ptr %128, ptr %129)
  %131 = call ptr @candy_builtin_text_concatenate(ptr %130, ptr %91)
  %132 = load ptr, ptr @"text_:", align 8
  %133 = call ptr @candy_builtin_text_concatenate(ptr %131, ptr %132)
  %134 = call ptr @candy_builtin_text_concatenate(ptr %133, ptr %103)
  %135 = load ptr, ptr @"text_:", align 8
  %136 = call ptr @candy_builtin_text_concatenate(ptr %134, ptr %135)
  %137 = call ptr @candy_builtin_text_concatenate(ptr %136, ptr %115)
  %138 = load ptr, ptr @text_., align 8
  %139 = call ptr @candy_builtin_text_concatenate(ptr %137, ptr %138)
  %140 = call ptr @candy_builtin_text_concatenate(ptr %139, ptr %127)
  ret ptr %140
}

define ptr @Chrono_duration_toText_163(ptr %0) {
Chrono_duration_toText_163:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Chrono_duration_toText_164(ptr %0) {
Chrono_duration_toText_164:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Chrono_duration_toText_169(ptr %0) {
Chrono_duration_toText_169:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Chrono_duration_toText_170(ptr %0) {
Chrono_duration_toText_170:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Chrono_duration_toText_176(ptr %0) {
Chrono_duration_toText_176:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Chrono_duration_toText_177(ptr %0) {
Chrono_duration_toText_177:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Chrono_duration_toText_183(ptr %0) {
Chrono_duration_toText_183:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Chrono_duration_toText_184(ptr %0) {
Chrono_duration_toText_184:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Chrono_duration_toText_190(ptr %0) {
Chrono_duration_toText_190:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Chrono_duration_toText_191(ptr %0) {
Chrono_duration_toText_191:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Chrono_duration_toText_197(ptr %0) {
Chrono_duration_toText_197:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Chrono_duration_toText_198(ptr %0) {
Chrono_duration_toText_198:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}

define ptr @Core_iterator_128_equals_then.1380(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1382, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1383, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1408, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1409, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1383, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1409, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1382(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1384, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1385, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1406, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1407, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1385, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1407, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1384(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1386, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.1387, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1404, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.1405, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.1387, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.1405, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.1386(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1388, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.1389, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1390, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.1391, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1389, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1391, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1392, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.1393, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1402, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.1403, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1393, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1403, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.1388(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @425, align 8
  ret ptr @425
}

define ptr @Core_iterator_128_hasKey_else.1390(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @426, align 8
  ret ptr @426
}

define ptr @Core_iterator_128_isMatch_then.1392(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1394, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.1395, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1396, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.1397, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1395, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1397, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1398, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.1399, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1400, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.1401, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1399, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1401, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.1394(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @427, align 8
  ret ptr @427
}

define ptr @Core_iterator_128_hasKey_else.1396(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @428, align 8
  ret ptr @428
}

define ptr @Core_iterator_128_isMatch_then.1398(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @429, align 8
  ret ptr @429
}

define ptr @Core_iterator_128_isMatch_else.1400(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.1402(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.1404(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @430, align 8
  ret ptr @430
}

define ptr @Core_iterator_128_equals_else.1406(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.1408(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @431, align 8
  ret ptr @431
}

define ptr @Core_iterator_128_equals_else.1410(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @432, align 8
  ret ptr @432
}

define ptr @Core_iterator_128_isMatch_else.1412(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.1414(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1416, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1417, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1442, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1443, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1417, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1443, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1416(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1418, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1419, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1440, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1441, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1419, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1441, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1418(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1420, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.1421, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1438, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.1439, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.1421, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.1439, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.1420(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1422, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.1423, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1424, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.1425, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1423, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1425, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1426, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.1427, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1436, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.1437, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1427, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1437, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.1422(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @433, align 8
  ret ptr @433
}

define ptr @Core_iterator_137_hasKey_else.1424(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @434, align 8
  ret ptr @434
}

define ptr @Core_iterator_137_isMatch_then.1426(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1428, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.1429, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1430, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.1431, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1429, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1431, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1432, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.1433, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1434, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.1435, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1433, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1435, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.1428(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @435, align 8
  ret ptr @435
}

define ptr @Core_iterator_137_hasKey_else.1430(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @436, align 8
  ret ptr @436
}

define ptr @Core_iterator_137_isMatch_then.1432(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @437, align 8
  ret ptr @437
}

define ptr @Core_iterator_137_isMatch_else.1434(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.1436(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.1438(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @438, align 8
  ret ptr @438
}

define ptr @Core_iterator_137_equals_else.1440(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.1442(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @439, align 8
  ret ptr @439
}

define ptr @Core_iterator_137_equals_else.1444(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @440, align 8
  ret ptr @440
}

define ptr @Core_iterator_137_isMatch_else.1446(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_128_equals_then.1448(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1450, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1451, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1476, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1477, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1451, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1477, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1450(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1452, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1453, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1474, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1475, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1453, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1475, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1452(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1454, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.1455, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1472, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.1473, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.1455, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.1473, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.1454(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1456, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.1457, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1458, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.1459, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1457, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1459, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1460, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.1461, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1470, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.1471, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1461, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1471, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.1456(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @441, align 8
  ret ptr @441
}

define ptr @Core_iterator_128_hasKey_else.1458(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @442, align 8
  ret ptr @442
}

define ptr @Core_iterator_128_isMatch_then.1460(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1462, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.1463, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1464, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.1465, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1463, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1465, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1466, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.1467, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1468, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.1469, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1467, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1469, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.1462(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @443, align 8
  ret ptr @443
}

define ptr @Core_iterator_128_hasKey_else.1464(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @444, align 8
  ret ptr @444
}

define ptr @Core_iterator_128_isMatch_then.1466(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @445, align 8
  ret ptr @445
}

define ptr @Core_iterator_128_isMatch_else.1468(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.1470(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.1472(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @446, align 8
  ret ptr @446
}

define ptr @Core_iterator_128_equals_else.1474(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.1476(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @447, align 8
  ret ptr @447
}

define ptr @Core_iterator_128_equals_else.1478(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @448, align 8
  ret ptr @448
}

define ptr @Core_iterator_128_isMatch_else.1480(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.1482(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1484, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1485, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1510, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1511, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1485, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1511, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1484(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1486, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1487, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1508, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1509, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1487, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1509, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1486(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1488, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.1489, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1506, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.1507, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.1489, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.1507, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.1488(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1490, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.1491, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1492, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.1493, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1491, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1493, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1494, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.1495, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1504, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.1505, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1495, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1505, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.1490(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @449, align 8
  ret ptr @449
}

define ptr @Core_iterator_137_hasKey_else.1492(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @450, align 8
  ret ptr @450
}

define ptr @Core_iterator_137_isMatch_then.1494(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1496, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.1497, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1498, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.1499, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1497, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1499, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1500, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.1501, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1502, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.1503, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1501, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1503, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.1496(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @451, align 8
  ret ptr @451
}

define ptr @Core_iterator_137_hasKey_else.1498(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @452, align 8
  ret ptr @452
}

define ptr @Core_iterator_137_isMatch_then.1500(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @453, align 8
  ret ptr @453
}

define ptr @Core_iterator_137_isMatch_else.1502(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.1504(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.1506(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @454, align 8
  ret ptr @454
}

define ptr @Core_iterator_137_equals_else.1508(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.1510(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @455, align 8
  ret ptr @455
}

define ptr @Core_iterator_137_equals_else.1512(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @456, align 8
  ret ptr @456
}

define ptr @Core_iterator_137_isMatch_else.1514(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_128_equals_then.1516(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1518, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1519, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1544, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1545, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1519, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1545, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1518(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1520, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1521, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1542, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1543, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1521, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1543, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1520(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1522, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.1523, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1540, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.1541, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.1523, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.1541, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.1522(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1524, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.1525, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1526, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.1527, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1525, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1527, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1528, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.1529, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1538, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.1539, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1529, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1539, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.1524(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @457, align 8
  ret ptr @457
}

define ptr @Core_iterator_128_hasKey_else.1526(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @458, align 8
  ret ptr @458
}

define ptr @Core_iterator_128_isMatch_then.1528(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1530, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.1531, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1532, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.1533, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1531, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1533, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1534, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.1535, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1536, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.1537, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1535, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1537, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.1530(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @459, align 8
  ret ptr @459
}

define ptr @Core_iterator_128_hasKey_else.1532(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @460, align 8
  ret ptr @460
}

define ptr @Core_iterator_128_isMatch_then.1534(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @461, align 8
  ret ptr @461
}

define ptr @Core_iterator_128_isMatch_else.1536(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.1538(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.1540(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @462, align 8
  ret ptr @462
}

define ptr @Core_iterator_128_equals_else.1542(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.1544(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @463, align 8
  ret ptr @463
}

define ptr @Core_iterator_128_equals_else.1546(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @464, align 8
  ret ptr @464
}

define ptr @Core_iterator_128_isMatch_else.1548(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.1550(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1552, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1553, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1578, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1579, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1553, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1579, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1552(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1554, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1555, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1576, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1577, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1555, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1577, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1554(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1556, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.1557, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1574, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.1575, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.1557, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.1575, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.1556(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1558, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.1559, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1560, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.1561, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1559, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1561, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1562, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.1563, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1572, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.1573, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1563, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1573, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.1558(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @465, align 8
  ret ptr @465
}

define ptr @Core_iterator_137_hasKey_else.1560(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @466, align 8
  ret ptr @466
}

define ptr @Core_iterator_137_isMatch_then.1562(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1564, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.1565, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1566, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.1567, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1565, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1567, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1568, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.1569, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1570, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.1571, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1569, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1571, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.1564(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @467, align 8
  ret ptr @467
}

define ptr @Core_iterator_137_hasKey_else.1566(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @468, align 8
  ret ptr @468
}

define ptr @Core_iterator_137_isMatch_then.1568(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @469, align 8
  ret ptr @469
}

define ptr @Core_iterator_137_isMatch_else.1570(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.1572(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.1574(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @470, align 8
  ret ptr @470
}

define ptr @Core_iterator_137_equals_else.1576(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.1578(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @471, align 8
  ret ptr @471
}

define ptr @Core_iterator_137_equals_else.1580(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @472, align 8
  ret ptr @472
}

define ptr @Core_iterator_137_isMatch_else.1582(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_128_equals_then.1584(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1586, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1587, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1612, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1613, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1587, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1613, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1586(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1588, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1589, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1610, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1611, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1589, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1611, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1588(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1590, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.1591, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1608, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.1609, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.1591, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.1609, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.1590(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1592, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.1593, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1594, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.1595, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1593, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1595, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1596, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.1597, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1606, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.1607, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1597, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1607, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.1592(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @473, align 8
  ret ptr @473
}

define ptr @Core_iterator_128_hasKey_else.1594(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @474, align 8
  ret ptr @474
}

define ptr @Core_iterator_128_isMatch_then.1596(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1598, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.1599, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1600, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.1601, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1599, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1601, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1602, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.1603, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1604, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.1605, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1603, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1605, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.1598(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @475, align 8
  ret ptr @475
}

define ptr @Core_iterator_128_hasKey_else.1600(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @476, align 8
  ret ptr @476
}

define ptr @Core_iterator_128_isMatch_then.1602(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @477, align 8
  ret ptr @477
}

define ptr @Core_iterator_128_isMatch_else.1604(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.1606(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.1608(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @478, align 8
  ret ptr @478
}

define ptr @Core_iterator_128_equals_else.1610(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.1612(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @479, align 8
  ret ptr @479
}

define ptr @Core_iterator_128_equals_else.1614(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @480, align 8
  ret ptr @480
}

define ptr @Core_iterator_128_isMatch_else.1616(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.1618(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1620, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1621, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1646, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1647, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1621, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1647, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1620(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1622, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1623, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1644, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1645, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1623, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1645, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1622(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1624, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.1625, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1642, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.1643, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.1625, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.1643, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.1624(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1626, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.1627, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1628, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.1629, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1627, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1629, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1630, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.1631, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1640, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.1641, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1631, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1641, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.1626(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @481, align 8
  ret ptr @481
}

define ptr @Core_iterator_137_hasKey_else.1628(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @482, align 8
  ret ptr @482
}

define ptr @Core_iterator_137_isMatch_then.1630(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1632, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.1633, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1634, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.1635, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1633, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1635, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %21, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %4, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1636, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.1637, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1638, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.1639, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1637, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1639, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.1632(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @483, align 8
  ret ptr @483
}

define ptr @Core_iterator_137_hasKey_else.1634(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @484, align 8
  ret ptr @484
}

define ptr @Core_iterator_137_isMatch_then.1636(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @485, align 8
  ret ptr @485
}

define ptr @Core_iterator_137_isMatch_else.1638(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.1640(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.1642(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @486, align 8
  ret ptr @486
}

define ptr @Core_iterator_137_equals_else.1644(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.1646(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @487, align 8
  ret ptr @487
}

define ptr @Core_iterator_137_equals_else.1648(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @488, align 8
  ret ptr @488
}

define ptr @Core_iterator_137_isMatch_else.1650(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_128_equals_then.1652(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1654, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1655, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1680, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1681, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1655, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1681, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1654(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1656, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_128_equals_then.1657, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1678, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_equals_else.1679, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_then.1657, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_equals_else.1679, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_128_equals_then.1656(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_then.1658, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_equals_then.1659, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_128_equals_else.1676, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_128_equals_else.1677, align 8
  %13 = load ptr, ptr @fun_Core_iterator_128_equals_then.1659, align 8
  %14 = load ptr, ptr @fun_Core_iterator_128_equals_else.1677, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_128_equals_then.1658(ptr %0) {
Core_iterator_128_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1660, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_128_hasKey_then.1661, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1662, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_128_hasKey_else.1663, align 8
  %15 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1661, align 8
  %16 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1663, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %17, ptr %23, align 8
  %24 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %25, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1664, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_128_isMatch_then.1665, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1674, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_128_isMatch_else.1675, align 8
  %31 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1665, align 8
  %32 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1675, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_128_hasKey_then.1660(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @489, align 8
  ret ptr @489
}

define ptr @Core_iterator_128_hasKey_else.1662(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @490, align 8
  ret ptr @490
}

define ptr @Core_iterator_128_isMatch_then.1664(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_then.1666, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_128_hasKey_then.1667, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_128_hasKey_else.1668, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_128_hasKey_else.1669, align 8
  %19 = load ptr, ptr @fun_Core_iterator_128_hasKey_then.1667, align 8
  %20 = load ptr, ptr @fun_Core_iterator_128_hasKey_else.1669, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_then.1670, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_128_isMatch_then.1671, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_128_isMatch_else.1672, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_128_isMatch_else.1673, align 8
  %33 = load ptr, ptr @fun_Core_iterator_128_isMatch_then.1671, align 8
  %34 = load ptr, ptr @fun_Core_iterator_128_isMatch_else.1673, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_128_hasKey_then.1666(ptr %0) {
Core_iterator_128_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @491, align 8
  ret ptr @491
}

define ptr @Core_iterator_128_hasKey_else.1668(ptr %0) {
Core_iterator_128_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @492, align 8
  ret ptr @492
}

define ptr @Core_iterator_128_isMatch_then.1670(ptr %0) {
Core_iterator_128_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @493, align 8
  ret ptr @493
}

define ptr @Core_iterator_128_isMatch_else.1672(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_isMatch_else.1674(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_128_equals_else.1676(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @494, align 8
  ret ptr @494
}

define ptr @Core_iterator_128_equals_else.1678(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_128_equals_else.1680(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @495, align 8
  ret ptr @495
}

define ptr @Core_iterator_128_equals_else.1682(ptr %0) {
Core_iterator_128_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @496, align 8
  ret ptr @496
}

define ptr @Core_iterator_128_isMatch_else.1684(ptr %0) {
Core_iterator_128_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Core_iterator_137_equals_then.1686(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_without_value(ptr %2)
  %4 = load ptr, ptr @tag_More, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1688, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1689, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1714, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1715, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1689, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1715, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1688(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_has_value(ptr %2)
  %4 = load ptr, ptr @tag_True, align 8
  %5 = call ptr @candy_builtin_equals(ptr %4, ptr %3)
  %6 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %7 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds { ptr }, ptr %6, i32 0, i32 0
  store ptr %8, ptr %9, align 8
  %10 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1690, ptr %6, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %10, ptr @fun_Core_iterator_137_equals_then.1691, align 8
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %12 = getelementptr inbounds { ptr }, ptr %11, i32 0, i32 0
  store ptr %3, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1712, ptr %11, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_equals_else.1713, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_then.1691, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_equals_else.1713, align 8
  %16 = call ptr @candy_builtin_if_else(ptr %5, ptr %14, ptr %15)
  ret ptr %16
}

define ptr @Core_iterator_137_equals_then.1690(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_tag_get_value(ptr %2)
  %4 = call ptr @candy_builtin_type_of(ptr %3)
  %5 = load ptr, ptr @tag_Struct, align 8
  %6 = call ptr @candy_builtin_equals(ptr %5, ptr %4)
  %7 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %8 = getelementptr inbounds { ptr }, ptr %7, i32 0, i32 0
  store ptr %3, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_then.1692, ptr %7, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_equals_then.1693, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %4, ptr %11, align 8
  %12 = call ptr @make_candy_function(ptr @Core_iterator_137_equals_else.1710, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %12, ptr @fun_Core_iterator_137_equals_else.1711, align 8
  %13 = load ptr, ptr @fun_Core_iterator_137_equals_then.1693, align 8
  %14 = load ptr, ptr @fun_Core_iterator_137_equals_else.1711, align 8
  %15 = call ptr @candy_builtin_if_else(ptr %6, ptr %13, ptr %14)
  ret ptr %15
}

define ptr @Core_iterator_137_equals_then.1692(ptr %0) {
Core_iterator_137_equals_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_has_key(ptr %2, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %7, ptr %8, align 8
  %9 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1694, ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %9, ptr @fun_Core_iterator_137_hasKey_then.1695, align 8
  %10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %11 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds { ptr }, ptr %10, i32 0, i32 0
  store ptr %12, ptr %13, align 8
  %14 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1696, ptr %10, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %14, ptr @fun_Core_iterator_137_hasKey_else.1697, align 8
  %15 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1695, align 8
  %16 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1697, align 8
  %17 = call ptr @candy_builtin_if_else(ptr %4, ptr %15, ptr %16)
  %18 = load ptr, ptr @num_0, align 8
  %19 = call ptr @candy_builtin_list_get(ptr %17, ptr %18)
  %20 = load ptr, ptr @tag_Match, align 8
  %21 = call ptr @candy_builtin_equals(ptr %19, ptr %20)
  %22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %23 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 0
  store ptr %24, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %22, i32 0, i32 1
  store ptr %17, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1698, ptr %22, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @fun_Core_iterator_137_isMatch_then.1699, align 8
  %28 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %29 = getelementptr inbounds { ptr }, ptr %28, i32 0, i32 0
  store ptr %17, ptr %29, align 8
  %30 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1708, ptr %28, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %30, ptr @fun_Core_iterator_137_isMatch_else.1709, align 8
  %31 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1699, align 8
  %32 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1709, align 8
  %33 = call ptr @candy_builtin_if_else(ptr %21, ptr %31, ptr %32)
  ret ptr %33
}

define ptr @Core_iterator_137_hasKey_then.1694(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Item, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @497, align 8
  ret ptr @497
}

define ptr @Core_iterator_137_hasKey_else.1696(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Item`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @498, align 8
  ret ptr @498
}

define ptr @Core_iterator_137_isMatch_then.1698(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr @tag_Rest, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %6, ptr %7)
  %9 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %10 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds { ptr }, ptr %9, i32 0, i32 0
  store ptr %11, ptr %12, align 8
  %13 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_then.1700, ptr %9, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %13, ptr @fun_Core_iterator_137_hasKey_then.1701, align 8
  %14 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %15 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds { ptr }, ptr %14, i32 0, i32 0
  store ptr %16, ptr %17, align 8
  %18 = call ptr @make_candy_function(ptr @Core_iterator_137_hasKey_else.1702, ptr %14, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %18, ptr @fun_Core_iterator_137_hasKey_else.1703, align 8
  %19 = load ptr, ptr @fun_Core_iterator_137_hasKey_then.1701, align 8
  %20 = load ptr, ptr @fun_Core_iterator_137_hasKey_else.1703, align 8
  %21 = call ptr @candy_builtin_if_else(ptr %8, ptr %19, ptr %20)
  %22 = load ptr, ptr @num_0, align 8
  %23 = call ptr @candy_builtin_list_get(ptr %21, ptr %22)
  %24 = load ptr, ptr @tag_Match, align 8
  %25 = call ptr @candy_builtin_equals(ptr %23, ptr %24)
  %26 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %27 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 0
  store ptr %4, ptr %27, align 8
  %28 = getelementptr inbounds { ptr, ptr }, ptr %26, i32 0, i32 1
  store ptr %21, ptr %28, align 8
  %29 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_then.1704, ptr %26, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %29, ptr @fun_Core_iterator_137_isMatch_then.1705, align 8
  %30 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %31 = getelementptr inbounds { ptr }, ptr %30, i32 0, i32 0
  store ptr %21, ptr %31, align 8
  %32 = call ptr @make_candy_function(ptr @Core_iterator_137_isMatch_else.1706, ptr %30, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %32, ptr @fun_Core_iterator_137_isMatch_else.1707, align 8
  %33 = load ptr, ptr @fun_Core_iterator_137_isMatch_then.1705, align 8
  %34 = load ptr, ptr @fun_Core_iterator_137_isMatch_else.1707, align 8
  %35 = call ptr @candy_builtin_if_else(ptr %25, ptr %33, ptr %34)
  ret ptr %35
}

define ptr @Core_iterator_137_hasKey_then.1700(ptr %0) {
Core_iterator_137_hasKey_then:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_Rest, align 8
  %4 = call ptr @candy_builtin_struct_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 3, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr ptr, ptr %5, i64 1
  store ptr %4, ptr %8, align 8
  %9 = getelementptr ptr, ptr %5, i64 2
  store ptr null, ptr %9, align 8
  %10 = call ptr @make_candy_list(ptr %5)
  store ptr %10, ptr @499, align 8
  ret ptr @499
}

define ptr @Core_iterator_137_hasKey_else.1702(ptr %0) {
Core_iterator_137_hasKey_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Struct doesn't contain key `Rest`: `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @500, align 8
  ret ptr @500
}

define ptr @Core_iterator_137_isMatch_then.1704(ptr %0) {
Core_iterator_137_isMatch_then:
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  %5 = alloca ptr, i64 4, align 8
  %6 = load ptr, ptr @tag_Match, align 8
  %7 = getelementptr ptr, ptr %5, i64 0
  store ptr %6, ptr %7, align 8
  %8 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr ptr, ptr %5, i64 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %5, i64 2
  store ptr %4, ptr %11, align 8
  %12 = getelementptr ptr, ptr %5, i64 3
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %5)
  store ptr %13, ptr @501, align 8
  ret ptr @501
}

define ptr @Core_iterator_137_isMatch_else.1706(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_isMatch_else.1708(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Core_iterator_137_equals_else.1710(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Struct, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @502, align 8
  ret ptr @502
}

define ptr @Core_iterator_137_equals_else.1712(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @56, align 8
  ret ptr %4
}

define ptr @Core_iterator_137_equals_else.1714(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected More, got ", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @text_., align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @503, align 8
  ret ptr @503
}

define ptr @Core_iterator_137_equals_else.1716(ptr %0) {
Core_iterator_137_equals_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  %4 = load ptr, ptr @"text_Expected a Tag, got `", align 8
  %5 = call ptr @candy_builtin_text_concatenate(ptr %4, ptr %3)
  %6 = load ptr, ptr @"text_`.", align 8
  %7 = call ptr @candy_builtin_text_concatenate(ptr %5, ptr %6)
  %8 = alloca ptr, i64 3, align 8
  %9 = load ptr, ptr @tag_NoMatch, align 8
  %10 = getelementptr ptr, ptr %8, i64 0
  store ptr %9, ptr %10, align 8
  %11 = getelementptr ptr, ptr %8, i64 1
  store ptr %7, ptr %11, align 8
  %12 = getelementptr ptr, ptr %8, i64 2
  store ptr null, ptr %12, align 8
  %13 = call ptr @make_candy_list(ptr %8)
  store ptr %13, ptr @504, align 8
  ret ptr @504
}

define ptr @Core_iterator_137_isMatch_else.1718(ptr %0) {
Core_iterator_137_isMatch_else:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @num_1, align 8
  %4 = call ptr @candy_builtin_list_get(ptr %2, ptr %3)
  call void @candy_panic(ptr %4)
  unreachable
}

define ptr @Examples_clock_22(ptr %0) {
Examples_clock_22:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = load ptr, ptr @"Examples:clock:22:15", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_SystemClock, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %10 = load ptr, ptr @"Examples:clock:22:15", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_SystemClock, align 8
  %13 = call ptr @candy_builtin_struct_get(ptr %0, ptr %12)
  %14 = call ptr @Chrono_clock_fromSystemClock(ptr %13)
  %15 = call ptr @Chrono_clock_now(ptr %14)
  %16 = call ptr @Chrono_instant_toUnixTimeDuration(ptr %15)
  %17 = call ptr @Chrono_duration_toText(ptr %16)
  %18 = call ptr @candy_builtin_type_of(ptr %17)
  %19 = load ptr, ptr @tag_Text, align 8
  %20 = call ptr @candy_builtin_equals(ptr %18, ptr %19)
  %21 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %22 = getelementptr inbounds { ptr }, ptr %21, i32 0, i32 0
  store ptr %17, ptr %22, align 8
  %23 = call ptr @make_candy_function(ptr @Examples_clock_22_58, ptr %21, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %23, ptr @fun_Examples_clock_22_58, align 8
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr }, ptr %24, i32 0, i32 0
  store ptr %17, ptr %25, align 8
  %26 = call ptr @make_candy_function(ptr @Examples_clock_22_59, ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %26, ptr @fun_Examples_clock_22_59, align 8
  %27 = load ptr, ptr @fun_Examples_clock_22_58, align 8
  %28 = load ptr, ptr @fun_Examples_clock_22_59, align 8
  %29 = call ptr @candy_builtin_if_else(ptr %20, ptr %27, ptr %28)
  %30 = load ptr, ptr @"text_It has been ", align 8
  %31 = call ptr @candy_builtin_text_concatenate(ptr %30, ptr %29)
  %32 = load ptr, ptr @"text_ since the start the of Unix epoch", align 8
  %33 = call ptr @candy_builtin_text_concatenate(ptr %31, ptr %32)
  %34 = call ptr @candy_builtin_type_of(ptr %0)
  %35 = load ptr, ptr @tag_Struct, align 8
  %36 = call ptr @candy_builtin_equals(ptr %34, ptr %35)
  %37 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %38 = load ptr, ptr @"Examples:clock:22:print:7", align 8
  %39 = call ptr @"anonymous_$generated__needs"(ptr %36, ptr %37, ptr %38)
  %40 = load ptr, ptr @tag_Stdout, align 8
  %41 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %40)
  %42 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %43 = load ptr, ptr @"Examples:clock:22:print:7", align 8
  %44 = call ptr @"anonymous_$generated__needs"(ptr %41, ptr %42, ptr %43)
  %45 = load ptr, ptr @tag_Stdout, align 8
  %46 = call ptr @candy_builtin_struct_get(ptr %0, ptr %45)
  %47 = call ptr @get_candy_function_pointer(ptr %46)
  %48 = call ptr @get_candy_function_environment(ptr %46)
  %49 = call ptr (...) %47(ptr %33, ptr %48)
  ret ptr %49
}

define ptr @Examples_clock_22_58(ptr %0) {
Examples_clock_22_58:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  ret ptr %2
}

define ptr @Examples_clock_22_59(ptr %0) {
Examples_clock_22_59:
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = call ptr @candy_builtin_to_debug_text(ptr %2)
  ret ptr %3
}
