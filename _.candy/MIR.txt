# MIR for module Examples:
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

# anonymous:$generated::needs
$49 = { $2 $3 $4 (+ responsible $1) ->
  $5 = anonymous:$generated::needs
  $6 = builtinEquals
  $7 = Nothing
  $8 = True
  $9 = False
  $10 = call $6 with $2 $8 ($5 is responsible)
  $11 = builtinIfElse
  # anonymous:$generated::needs:isConditionTrue:then
  $14 = { (responsible $12) ->
    $13 = $8
  }
  # anonymous:$generated::needs:isConditionTrue:else
  $17 = { (responsible $15) ->
    $16 = call $6 with $2 $9 ($5 is responsible)
  }
  $18 = call $11 with $10 $14 $17 ($5 is responsible)
  $19 = builtinIfElse
  # anonymous:$generated::needs:isConditionBool:then
  $22 = { (responsible $20) ->
    $21 = $7
  }
  # anonymous:$generated::needs:isConditionBool:else
  $26 = { (responsible $23) ->
    $24 = "The `condition` must be either `True` or `False`."
    $25 = panicking because $24 ($1 is at fault)
  }
  $27 = call $19 with $18 $22 $26 ($5 is responsible)
  $28 = builtinTypeOf
  $29 = call $28 with $3 ($1 is responsible)
  $30 = Text
  $31 = call $6 with $29 $30 ($1 is responsible)
  $32 = builtinIfElse
  # anonymous:$generated::needs:isReasonText:then
  $35 = { (responsible $33) ->
    $34 = $7
  }
  # anonymous:$generated::needs:isReasonText:else
  $39 = { (responsible $36) ->
    $37 = "The `reason` must be a text."
    $38 = panicking because $37 ($1 is at fault)
  }
  $40 = call $32 with $31 $35 $39 ($5 is responsible)
  $41 = builtinIfElse
  # anonymous:$generated::needs:condition:then
  $44 = { (responsible $42) ->
    $43 = $7
  }
  # anonymous:$generated::needs:condition:else
  $47 = { (responsible $45) ->
    $46 = panicking because $3 ($4 is at fault)
  }
  $48 = call $41 with $2 $44 $47 ($5 is responsible)
}
$50 = Examples::
# Examples::use
$54 = { $52 (+ responsible $51) ->
  $53 = use $52 (relative to Examples:; $51 is responsible)
}
$55 = $54
$56 = builtinTextConcatenate
$57 = builtinTypeOf
$58 = Text
$59 = builtinEquals
$60 = builtinIfElse
$61 = builtinToDebugText
$62 = "Builtins"
$63 = Examples::8
$64 = call $55 with $62 ($63 is responsible)
$65 = $64
$66 = $65
$67 = Nothing
# Examples::10
$115 = { $69 (+ responsible $68) ->
  $70 = 1
  $71 = "Builtins"
  $72 = Examples::10:2
  $73 = call $54 with $71 ($72 is responsible)
  $74 = builtinStructGet
  $75 = StructGet
  $76 = Examples::10:5
  $77 = call $74 with $73 $75 ($76 is responsible)
  $78 = $66
  $79 = IntAdd
  $80 = Examples::10:8
  $81 = call $77 with $78 $79 ($80 is responsible)
  $82 = 2
  $83 = Examples::10:10
  $84 = call $81 with $70 $82 ($83 is responsible)
  $85 = $84
  $86 = $85
  $87 = Nothing
  $88 = $86
  $89 = "Builtins"
  $90 = Examples::10:14
  $91 = call $54 with $89 ($90 is responsible)
  $92 = builtinStructGet
  $93 = StructGet
  $94 = Examples::10:17
  $95 = call $92 with $91 $93 ($94 is responsible)
  $96 = $66
  $97 = ToDebugText
  $98 = Examples::10:20
  $99 = call $95 with $96 $97 ($98 is responsible)
  $100 = Examples::10:21
  $101 = call $99 with $88 ($100 is responsible)
  $102 = "Builtins"
  $103 = Examples::10:23
  $104 = call $54 with $102 ($103 is responsible)
  $105 = builtinStructGet
  $106 = StructGet
  $107 = Examples::10:26
  $108 = call $105 with $104 $106 ($107 is responsible)
  $109 = $66
  $110 = Print
  $111 = Examples::10:29
  $112 = call $108 with $109 $110 ($111 is responsible)
  $113 = Examples::10:30
  $114 = call $112 with $101 ($113 is responsible)
}
$116 = $115
$117 = $116
$118 = Nothing
$119 = Main
$120 = [$119: $117]
$121 = builtinStructHasKey
$122 = Main
$123 = call $121 with $120 $122 ($50 is responsible)
$124 = "The module doesn't export a main function."
$125 = builtinIfElse
# Examples::then
$128 = { (responsible $126) ->
  $127 = Nothing
}
# Examples::else
$131 = { (responsible $129) ->
  $130 = panicking because $124 ($50 is at fault)
}
$132 = call $125 with $123 $128 $131 ($50 is responsible)
$133 = builtinStructGet
$134 = call $133 with $120 $122 ($50 is responsible)
$135 = builtinTypeOf
$136 = call $135 with $134 ($50 is responsible)
$137 = builtinEquals
$138 = Function
$139 = call $137 with $136 $138 ($50 is responsible)
$140 = "The exported main value is not a function."
$141 = builtinIfElse
# Examples::then
$144 = { (responsible $142) ->
  $143 = Nothing
}
# Examples::else
$147 = { (responsible $145) ->
  $146 = panicking because $140 ($50 is at fault)
}
$148 = call $141 with $139 $144 $147 ($50 is responsible)
$149 = builtinGetArgumentCount
$150 = call $149 with $134 ($50 is responsible)
$151 = 1
$152 = call $137 with $150 $151 ($50 is responsible)
$153 = "The exported main function doesn't accept exactly one parameter."
$154 = builtinIfElse
# Examples::then
$157 = { (responsible $155) ->
  $156 = Nothing
}
# Examples::else
$160 = { (responsible $158) ->
  $159 = panicking because $153 ($50 is at fault)
}
$161 = call $154 with $152 $157 $160 ($50 is responsible)
$162 = $134
