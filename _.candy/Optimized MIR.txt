# Optimized MIR for module Examples:
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

$1 = Builtins::print:11
$2 = Builtins::print:5
$3 = Builtins::typeIs:19
$4 = Builtins::typeIs:25
$5 = Examples::12:24
$6 = anonymous:$generated::needs
$7 = builtinEquals
$8 = builtinIfElse
$9 = builtinPrint
$10 = builtinTypeOf
$11 = False
$12 = Nothing
$13 = Text
$14 = True
$15 = "3"
$16 = "The `condition` must be either `True` or `False`."
$17 = "The `reason` must be a text."
$18 = "`message | typeIs Text` was not satisfied"
# Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, anonymous:$generated::needs:isConditionTrue:then
$19 = { (responsible $20) ->
  $21 = $14
}
# Examples::then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
$22 = { (responsible $23) ->
  $24 = $12
}
# anonymous:$generated::needs
$25 = { $26 $27 $28 (+ responsible $29) ->
  $30 = call $7 with $26 $14 ($6 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $31 = { (responsible $32) ->
    $33 = call $7 with $26 $11 ($6 is responsible)
  }
  $34 = call $8 with $30 $19 $31 ($6 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $35 = { (responsible $36) ->
    $37 = panicking because $16 ($29 is at fault)
  }
  $38 = call $8 with $34 $22 $35 ($6 is responsible)
  $39 = call $10 with $27 ($29 is responsible)
  $40 = call $7 with $39 $13 ($29 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $41 = { (responsible $42) ->
    $43 = panicking because $17 ($29 is at fault)
  }
  $44 = call $8 with $40 $22 $41 ($6 is responsible)
  # anonymous:$generated::needs:condition:else
  $45 = { (responsible $46) ->
    $47 = panicking because $27 ($28 is at fault)
  }
  $48 = call $8 with $26 $22 $45 ($6 is responsible)
}
# anonymous:$generated::needs:isConditionBool:else
$49 = { (responsible $50) ->
  $51 = panicking because $16 ($2 is at fault)
}
# Builtins::print
$52 = { $53 (+ responsible $54) ->
  $55 = call $10 with $53 ($3 is responsible)
  $56 = call $7 with $55 $13 ($4 is responsible)
  $57 = trace: start of call of $25 with $56 $18 $54 ($2 is responsible, code is at $2)
  $58 = call $7 with $56 $14 ($6 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $59 = { (responsible $60) ->
    $61 = call $7 with $56 $11 ($6 is responsible)
  }
  $62 = call $8 with $58 $19 $59 ($6 is responsible)
  $63 = call $8 with $62 $22 $49 ($6 is responsible)
  # anonymous:$generated::needs:condition:else
  $64 = { (responsible $65) ->
    $66 = panicking because $18 ($54 is at fault)
  }
  $67 = call $8 with $56 $22 $64 ($6 is responsible)
  $68 = trace: end of call
  $69 = trace: tail call of $9 with $53 ($1 is responsible, code is at $1)
  $70 = call $9 with $53 ($1 is responsible)
}
# Examples::12
$73 = { $74 (+ responsible $75) ->
  $76 = trace: start of call of $52 with $15 ($5 is responsible, code is at $5)
  $77 = trace: start of call of $9 with $15 ($1 is responsible, code is at $1)
  $78 = call $9 with $15 ($1 is responsible)
  $79 = trace: end of call
  $80 = trace: end of call
  $81 = $78
}
