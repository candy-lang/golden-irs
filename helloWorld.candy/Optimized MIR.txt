# Optimized MIR for module Examples:helloWorld
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

$1 = Builtins::structGet:12
$2 = Builtins::structGet:14
$3 = Builtins::structGet:21
$4 = Builtins::structGet:5
$5 = Builtins::typeIs:19
$6 = Builtins::typeIs:25
$7 = Examples:helloWorld:2:13
$8 = Examples:helloWorld:2:5
$9 = anonymous:$generated::needs
$10 = builtinEquals
$11 = builtinGetArgumentCount
$12 = builtinIfElse
$13 = builtinStructGet
$14 = builtinStructHasKey
$15 = builtinTagHasValue
$16 = builtinTagWithValue
$17 = builtinTextConcatenate
$18 = builtinToDebugText
$19 = builtinTypeOf
$20 = False
$21 = Function
$22 = Nothing
$23 = Stdout
$24 = Struct
$25 = Tag
$26 = Text
$27 = True
$28 = 1
$29 = " arguments with 1 arguments."
$30 = "Hello, world!"
$31 = "The `condition` must be either `True` or `False`."
$32 = "The `reason` must be a text."
$33 = "You called a function that expects "
$34 = "You called a tag that already has a value."
$35 = "You can only call tags or functions."
$36 = "`struct | typeIs Struct` was not satisfied"
$37 = "`struct | ✨.structHasKey key` was not satisfied"
# Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, anonymous:$generated::needs:isConditionTrue:then
$38 = { (responsible $39) ->
  $40 = $27
}
# Examples:helloWorld:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
$41 = { (responsible $42) ->
  $43 = $22
}
# anonymous:$generated::needs
$44 = { $45 $46 $47 (+ responsible $48) ->
  $49 = call $10 with $45 $27 ($9 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $50 = { (responsible $51) ->
    $52 = call $10 with $45 $20 ($9 is responsible)
  }
  $53 = call $12 with $49 $38 $50 ($9 is responsible)
  # anonymous:$generated::needs:isConditionBool:else
  $54 = { (responsible $55) ->
    $56 = panicking because $31 ($48 is at fault)
  }
  $57 = call $12 with $53 $41 $54 ($9 is responsible)
  $58 = call $19 with $46 ($48 is responsible)
  $59 = call $10 with $58 $26 ($48 is responsible)
  # anonymous:$generated::needs:isReasonText:else
  $60 = { (responsible $61) ->
    $62 = panicking because $32 ($48 is at fault)
  }
  $63 = call $12 with $59 $41 $60 ($9 is responsible)
  # anonymous:$generated::needs:condition:else
  $64 = { (responsible $65) ->
    $66 = panicking because $46 ($47 is at fault)
  }
  $67 = call $12 with $45 $41 $64 ($9 is responsible)
}
# anonymous:$generated::needs:isConditionBool:else
$68 = { (responsible $69) ->
  $70 = panicking because $31 ($4 is at fault)
}
# anonymous:$generated::needs:isConditionBool:else
$71 = { (responsible $72) ->
  $73 = panicking because $31 ($2 is at fault)
}
# Builtins::structGet
$74 = { $75 $76 (+ responsible $77) ->
  $78 = call $19 with $75 ($5 is responsible)
  $79 = call $10 with $78 $24 ($6 is responsible)
  $80 = trace: start of call of $44 with $79 $36 $77 ($4 is responsible, code is at $4)
  $81 = call $10 with $79 $27 ($9 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $82 = { (responsible $83) ->
    $84 = call $10 with $79 $20 ($9 is responsible)
  }
  $85 = call $12 with $81 $38 $82 ($9 is responsible)
  $86 = call $12 with $85 $41 $68 ($9 is responsible)
  # anonymous:$generated::needs:condition:else
  $87 = { (responsible $88) ->
    $89 = panicking because $36 ($77 is at fault)
  }
  $90 = call $12 with $79 $41 $87 ($9 is responsible)
  $91 = trace: end of call
  $92 = call $14 with $75 $76 ($1 is responsible)
  $93 = trace: start of call of $44 with $92 $37 $77 ($2 is responsible, code is at $2)
  $94 = call $10 with $92 $27 ($9 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $95 = { (responsible $96) ->
    $97 = call $10 with $92 $20 ($9 is responsible)
  }
  $98 = call $12 with $94 $38 $95 ($9 is responsible)
  $99 = call $12 with $98 $41 $71 ($9 is responsible)
  # anonymous:$generated::needs:condition:else
  $100 = { (responsible $101) ->
    $102 = panicking because $37 ($77 is at fault)
  }
  $103 = call $12 with $92 $41 $100 ($9 is responsible)
  $104 = trace: end of call
  $105 = call $13 with $75 $76 ($3 is responsible)
}
# anonymous:$generated::needs:condition:else
$106 = { (responsible $107) ->
  $108 = panicking because $36 ($8 is at fault)
}
# anonymous:$generated::needs:condition:else
$109 = { (responsible $110) ->
  $111 = panicking because $37 ($8 is at fault)
}
# Examples:helloWorld:2:13:doesTagHaveValue:then
$112 = { (responsible $113) ->
  $114 = panicking because $34 ($7 is at fault)
}
# Examples:helloWorld:2:13:calleeIsFunction:else
$115 = { (responsible $116) ->
  $117 = panicking because $35 ($7 is at fault)
}
# Examples:helloWorld:2
$118 = { $119 (+ responsible $120) ->
  $121 = trace: start of call of $74 with $119 $23 ($8 is responsible, code is at $8)
  $122 = call $19 with $119 ($5 is responsible)
  $123 = call $10 with $122 $24 ($6 is responsible)
  $124 = trace: start of call of $44 with $123 $36 $8 ($4 is responsible, code is at $4)
  $125 = call $10 with $123 $27 ($9 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $126 = { (responsible $127) ->
    $128 = call $10 with $123 $20 ($9 is responsible)
  }
  $129 = call $12 with $125 $38 $126 ($9 is responsible)
  $130 = call $12 with $129 $41 $68 ($9 is responsible)
  $131 = call $12 with $123 $41 $106 ($9 is responsible)
  $132 = trace: end of call
  $133 = call $14 with $119 $23 ($1 is responsible)
  $134 = trace: start of call of $44 with $133 $37 $8 ($2 is responsible, code is at $2)
  $135 = call $10 with $133 $27 ($9 is responsible)
  # anonymous:$generated::needs:isConditionTrue:else
  $136 = { (responsible $137) ->
    $138 = call $10 with $133 $20 ($9 is responsible)
  }
  $139 = call $12 with $135 $38 $136 ($9 is responsible)
  $140 = call $12 with $139 $41 $71 ($9 is responsible)
  $141 = call $12 with $133 $41 $109 ($9 is responsible)
  $142 = trace: end of call
  $143 = call $13 with $119 $23 ($3 is responsible)
  $144 = trace: end of call
  $145 = call $19 with $143 ($7 is responsible)
  $146 = call $10 with $145 $25 ($7 is responsible)
  # Examples:helloWorld:2:13:calleeIsTag:then
  $147 = { (responsible $148) ->
    $149 = call $15 with $143 ($7 is responsible)
    # Examples:helloWorld:2:13:doesTagHaveValue:else
    $150 = { (responsible $151) ->
      $152 = call $16 with $143 $30 ($7 is responsible)
    }
    $153 = call $12 with $149 $112 $150 ($7 is responsible)
  }
  # Examples:helloWorld:2:13:calleeIsTag:else
  $154 = { (responsible $155) ->
    $156 = call $10 with $145 $21 ($7 is responsible)
    # Examples:helloWorld:2:13:calleeIsFunction:then
    $157 = { (responsible $158) ->
      $159 = call $11 with $143 ($7 is responsible)
      $160 = call $10 with $159 $28 ($7 is responsible)
      # Examples:helloWorld:2:13:hasCorrectNumberOfArguments:then
      $161 = { (responsible $162) ->
        $163 = trace: tail call of $143 with $30 ($7 is responsible, code is at $7)
        $164 = call $143 with $30 ($7 is responsible)
      }
      # Examples:helloWorld:2:13:hasCorrectNumberOfArguments:else
      $167 = { (responsible $168) ->
        $169 = call $18 with $159 ($7 is responsible)
        $170 = call $17 with $33 $169 ($7 is responsible)
        $171 = call $17 with $170 $29 ($7 is responsible)
        $172 = panicking because $171 ($7 is at fault)
      }
      $173 = call $12 with $160 $161 $167 ($7 is responsible)
    }
    $174 = call $12 with $156 $157 $115 ($7 is responsible)
  }
  $175 = call $12 with $146 $147 $154 ($7 is responsible)
}
