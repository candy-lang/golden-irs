# Optimized MIR for module Examples:helloWorld
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? No
# • Include tracing of evaluated expressions? No

$1 = Builtins::structGet:12
$2 = Builtins::structGet:14
$3 = Builtins::structGet:21
$4 = Builtins::structGet:5
$5 = Builtins::typeIs:19
$6 = Builtins::typeIs:25
$7 = Examples:helloWorld:0:15
$8 = Examples:helloWorld:0:7
$9 = anonymous:$generated::needs
$10 = builtinEquals
$11 = builtinIfElse
$12 = builtinStructGet
$13 = builtinStructHasKey
$14 = builtinTypeOf
$15 = False
$16 = Main
$17 = Nothing
$18 = Stdout
$19 = Struct
$20 = Text
$21 = True
$22 = "Hello, world!"
$23 = "The `condition` must be either `True` or `False`."
$24 = "The `reason` must be a text."
$25 = "`struct | typeIs Struct` was not satisfied"
$26 = "`struct | ✨.structHasKey key` was not satisfied"
# Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, anonymous:$generated::needs:isConditionTrue:then
$27 = { $28 ->
  $29 = $21
}
# anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
$30 = { $31 ->
  $32 = $17
}
# anonymous:$generated::needs
$33 = { $34 $35 $36 $37 ->
  $38 = call $10 with $34 $21 $9
  # anonymous:$generated::needs:isConditionTrue:else
  $39 = { $40 ->
    $41 = call $10 with $34 $15 $9
  }
  $42 = call $11 with $38 $27 $39 $9
  # anonymous:$generated::needs:isConditionBool:else
  $43 = { $44 ->
    $45 = panicking because $23 ($37 is at fault)
  }
  $46 = call $11 with $42 $30 $43 $9
  $47 = call $14 with $35 $37
  $48 = call $10 with $47 $20 $37
  # anonymous:$generated::needs:isReasonText:else
  $49 = { $50 ->
    $51 = panicking because $24 ($37 is at fault)
  }
  $52 = call $11 with $48 $30 $49 $9
  # anonymous:$generated::needs:condition:else
  $53 = { $54 ->
    $55 = panicking because $35 ($36 is at fault)
  }
  $56 = call $11 with $34 $30 $53 $9
}
# Examples:helloWorld:0
$57 = { $58 $59 ->
  $60 = call $14 with $58 $5
  $61 = call $10 with $60 $19 $6
  $62 = call $33 with $61 $25 $8 $4
  $63 = call $13 with $58 $18 $1
  $64 = call $33 with $63 $26 $8 $2
  $65 = call $12 with $58 $18 $3
  $66 = call $65 with $22 $7
}
$67 = [$16: $57]
