; ModuleID = 'module'
source_filename = "module"

@"Builtins::structGet:12" = global ptr null
@"Builtins::structGet:14" = global ptr null
@"Builtins::structGet:21" = global ptr null
@"Builtins::structGet:5" = global ptr null
@"Builtins::typeIs:19" = global ptr null
@"Builtins::typeIs:25" = global ptr null
@"Examples:helloWorld:0:15" = global ptr null
@"Examples:helloWorld:0:7" = global ptr null
@"anonymous:$generated::needs" = global ptr null
@fun_candy_builtin_equals = global ptr null
@fun_candy_builtin_if_else = global ptr null
@fun_candy_builtin_struct_get = global ptr null
@fun_candy_builtin_struct_has_key = global ptr null
@fun_candy_builtin_type_of = global ptr null
@tag_False = global ptr null
@tag_Nothing = global ptr null
@tag_Stdout = global ptr null
@tag_Struct = global ptr null
@tag_Text = global ptr null
@tag_True = global ptr null
@"text_Hello, world!" = global ptr null
@"text_The `condition` must be either `True` or `False`." = global ptr null
@"text_The `reason` must be a text." = global ptr null
@"text_`struct | typeIs Struct` was not satisfied" = global ptr null
@"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied" = global ptr null
@"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then" = global ptr null
@"fun_Examples_helloWorld_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then" = global ptr null
@"fun_anonymous_$generated__needs" = global ptr null
@"fun_anonymous_$generated__needs_isConditionTrue_else" = global ptr null
@"fun_anonymous_$generated__needs_isConditionBool_else" = global ptr null
@"fun_anonymous_$generated__needs_isReasonText_else" = global ptr null
@"fun_anonymous_$generated__needs_condition_else" = global ptr null
@fun_Examples_helloWorld_0 = global ptr null
@candy_environment = external global ptr

declare ptr @make_candy_int(i64)

declare ptr @make_candy_tag(ptr, ptr)

declare ptr @make_candy_text(ptr)

declare ptr @make_candy_list(ptr)

declare ptr @make_candy_function(ptr, ptr, i64)

declare ptr @make_candy_struct(ptr, ptr)

declare void @candy_panic(ptr)

declare void @free_candy_value(ptr)

declare void @print_candy_value(ptr)

declare ptr @get_candy_function_pointer(ptr)

declare ptr @get_candy_function_environment(ptr)

define i32 @main() {
entry:
  %0 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:12\00", ptr %0, align 1
  %1 = call ptr @make_candy_text(ptr %0)
  store ptr %1, ptr @"Builtins::structGet:12", align 8
  %2 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:14\00", ptr %2, align 1
  %3 = call ptr @make_candy_text(ptr %2)
  store ptr %3, ptr @"Builtins::structGet:14", align 8
  %4 = alloca i8, i64 23, align 1
  store [23 x i8] c"Builtins::structGet:21\00", ptr %4, align 1
  %5 = call ptr @make_candy_text(ptr %4)
  store ptr %5, ptr @"Builtins::structGet:21", align 8
  %6 = alloca i8, i64 22, align 1
  store [22 x i8] c"Builtins::structGet:5\00", ptr %6, align 1
  %7 = call ptr @make_candy_text(ptr %6)
  store ptr %7, ptr @"Builtins::structGet:5", align 8
  %8 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:19\00", ptr %8, align 1
  %9 = call ptr @make_candy_text(ptr %8)
  store ptr %9, ptr @"Builtins::typeIs:19", align 8
  %10 = alloca i8, i64 20, align 1
  store [20 x i8] c"Builtins::typeIs:25\00", ptr %10, align 1
  %11 = call ptr @make_candy_text(ptr %10)
  store ptr %11, ptr @"Builtins::typeIs:25", align 8
  %12 = alloca i8, i64 25, align 1
  store [25 x i8] c"Examples:helloWorld:0:15\00", ptr %12, align 1
  %13 = call ptr @make_candy_text(ptr %12)
  store ptr %13, ptr @"Examples:helloWorld:0:15", align 8
  %14 = alloca i8, i64 24, align 1
  store [24 x i8] c"Examples:helloWorld:0:7\00", ptr %14, align 1
  %15 = call ptr @make_candy_text(ptr %14)
  store ptr %15, ptr @"Examples:helloWorld:0:7", align 8
  %16 = alloca i8, i64 28, align 1
  store [28 x i8] c"anonymous:$generated::needs\00", ptr %16, align 1
  %17 = call ptr @make_candy_text(ptr %16)
  store ptr %17, ptr @"anonymous:$generated::needs", align 8
  %18 = call ptr @make_candy_function(ptr @candy_builtin_equals, ptr null, i64 0)
  store ptr %18, ptr @fun_candy_builtin_equals, align 8
  %19 = call ptr @make_candy_function(ptr @candy_builtin_if_else, ptr null, i64 0)
  store ptr %19, ptr @fun_candy_builtin_if_else, align 8
  %20 = call ptr @make_candy_function(ptr @candy_builtin_struct_get, ptr null, i64 0)
  store ptr %20, ptr @fun_candy_builtin_struct_get, align 8
  %21 = call ptr @make_candy_function(ptr @candy_builtin_struct_has_key, ptr null, i64 0)
  store ptr %21, ptr @fun_candy_builtin_struct_has_key, align 8
  %22 = call ptr @make_candy_function(ptr @candy_builtin_type_of, ptr null, i64 0)
  store ptr %22, ptr @fun_candy_builtin_type_of, align 8
  %23 = alloca i8, i64 6, align 1
  store [6 x i8] c"False\00", ptr %23, align 1
  %24 = call ptr @make_candy_tag(ptr %23, ptr null)
  store ptr %24, ptr @tag_False, align 8
  %25 = alloca i8, i64 8, align 1
  store [8 x i8] c"Nothing\00", ptr %25, align 1
  %26 = call ptr @make_candy_tag(ptr %25, ptr null)
  store ptr %26, ptr @tag_Nothing, align 8
  %27 = alloca i8, i64 7, align 1
  store [7 x i8] c"Stdout\00", ptr %27, align 1
  %28 = call ptr @make_candy_tag(ptr %27, ptr null)
  store ptr %28, ptr @tag_Stdout, align 8
  %29 = alloca i8, i64 7, align 1
  store [7 x i8] c"Struct\00", ptr %29, align 1
  %30 = call ptr @make_candy_tag(ptr %29, ptr null)
  store ptr %30, ptr @tag_Struct, align 8
  %31 = alloca i8, i64 5, align 1
  store [5 x i8] c"Text\00", ptr %31, align 1
  %32 = call ptr @make_candy_tag(ptr %31, ptr null)
  store ptr %32, ptr @tag_Text, align 8
  %33 = alloca i8, i64 5, align 1
  store [5 x i8] c"True\00", ptr %33, align 1
  %34 = call ptr @make_candy_tag(ptr %33, ptr null)
  store ptr %34, ptr @tag_True, align 8
  %35 = alloca i8, i64 14, align 1
  store [14 x i8] c"Hello, world!\00", ptr %35, align 1
  %36 = call ptr @make_candy_text(ptr %35)
  store ptr %36, ptr @"text_Hello, world!", align 8
  %37 = alloca i8, i64 50, align 1
  store [50 x i8] c"The `condition` must be either `True` or `False`.\00", ptr %37, align 1
  %38 = call ptr @make_candy_text(ptr %37)
  store ptr %38, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  %39 = alloca i8, i64 29, align 1
  store [29 x i8] c"The `reason` must be a text.\00", ptr %39, align 1
  %40 = call ptr @make_candy_text(ptr %39)
  store ptr %40, ptr @"text_The `reason` must be a text.", align 8
  %41 = alloca i8, i64 43, align 1
  store [43 x i8] c"`struct | typeIs Struct` was not satisfied\00", ptr %41, align 1
  %42 = call ptr @make_candy_text(ptr %41)
  store ptr %42, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %43 = alloca i8, i64 50, align 1
  store [48 x i8] c"`struct | (.structHasKey key` was not satisfied\00", ptr %43, align 1
  %44 = call ptr @make_candy_text(ptr %43)
  store ptr %44, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %45 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %46 = call ptr @make_candy_function(ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", ptr %45, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %46, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %47 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %48 = call ptr @make_candy_function(ptr @"Examples_helloWorld_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", ptr %47, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %48, ptr @"fun_Examples_helloWorld_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %49 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %50 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs", ptr %49, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %50, ptr @"fun_anonymous_$generated__needs", align 8
  %51 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %52 = call ptr @make_candy_function(ptr @Examples_helloWorld_0, ptr %51, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %52, ptr @fun_Examples_helloWorld_0, align 8
  %53 = call ptr @run_candy_main(ptr @fun_Examples_helloWorld_0, ptr @candy_environment)
  call void @print_candy_value(ptr %53)
  %54 = load ptr, ptr @"Builtins::structGet:12", align 8
  call void @free_candy_value(ptr %54)
  %55 = load ptr, ptr @"Builtins::structGet:14", align 8
  call void @free_candy_value(ptr %55)
  %56 = load ptr, ptr @"Builtins::structGet:21", align 8
  call void @free_candy_value(ptr %56)
  %57 = load ptr, ptr @"Builtins::structGet:5", align 8
  call void @free_candy_value(ptr %57)
  %58 = load ptr, ptr @"Builtins::typeIs:19", align 8
  call void @free_candy_value(ptr %58)
  %59 = load ptr, ptr @"Builtins::typeIs:25", align 8
  call void @free_candy_value(ptr %59)
  %60 = load ptr, ptr @"Examples:helloWorld:0:15", align 8
  call void @free_candy_value(ptr %60)
  %61 = load ptr, ptr @"Examples:helloWorld:0:7", align 8
  call void @free_candy_value(ptr %61)
  %62 = load ptr, ptr @"anonymous:$generated::needs", align 8
  call void @free_candy_value(ptr %62)
  %63 = load ptr, ptr @fun_candy_builtin_equals, align 8
  call void @free_candy_value(ptr %63)
  %64 = load ptr, ptr @fun_candy_builtin_if_else, align 8
  call void @free_candy_value(ptr %64)
  %65 = load ptr, ptr @fun_candy_builtin_struct_get, align 8
  call void @free_candy_value(ptr %65)
  %66 = load ptr, ptr @fun_candy_builtin_struct_has_key, align 8
  call void @free_candy_value(ptr %66)
  %67 = load ptr, ptr @fun_candy_builtin_type_of, align 8
  call void @free_candy_value(ptr %67)
  %68 = load ptr, ptr @tag_False, align 8
  call void @free_candy_value(ptr %68)
  %69 = load ptr, ptr @tag_Nothing, align 8
  call void @free_candy_value(ptr %69)
  %70 = load ptr, ptr @tag_Stdout, align 8
  call void @free_candy_value(ptr %70)
  %71 = load ptr, ptr @tag_Struct, align 8
  call void @free_candy_value(ptr %71)
  %72 = load ptr, ptr @tag_Text, align 8
  call void @free_candy_value(ptr %72)
  %73 = load ptr, ptr @tag_True, align 8
  call void @free_candy_value(ptr %73)
  %74 = load ptr, ptr @"text_Hello, world!", align 8
  call void @free_candy_value(ptr %74)
  %75 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @free_candy_value(ptr %75)
  %76 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @free_candy_value(ptr %76)
  %77 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  call void @free_candy_value(ptr %77)
  %78 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  call void @free_candy_value(ptr %78)
  %79 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  call void @free_candy_value(ptr %79)
  %80 = load ptr, ptr @"fun_Examples_helloWorld_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  call void @free_candy_value(ptr %80)
  %81 = load ptr, ptr @"fun_anonymous_$generated__needs", align 8
  call void @free_candy_value(ptr %81)
  %82 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  call void @free_candy_value(ptr %82)
  %83 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  call void @free_candy_value(ptr %83)
  %84 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  call void @free_candy_value(ptr %84)
  %85 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  call void @free_candy_value(ptr %85)
  %86 = load ptr, ptr @fun_Examples_helloWorld_0, align 8
  call void @free_candy_value(ptr %86)
  ret i32 0
}

declare ptr @run_candy_main(ptr, ptr)

declare ptr @candy_builtin_equals(ptr, ptr)

declare ptr @candy_builtin_if_else(ptr, ptr, ptr)

declare ptr @candy_builtin_struct_get(ptr, ptr)

declare ptr @candy_builtin_struct_has_key(ptr, ptr)

declare ptr @candy_builtin_type_of(ptr)

declare noalias ptr @malloc(i32)

define ptr @"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then"() {
"Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then":
  %0 = load ptr, ptr @tag_True, align 8
  ret ptr %0
}

define ptr @"Examples_helloWorld_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then"() {
"Examples_helloWorld_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then":
  %0 = load ptr, ptr @tag_Nothing, align 8
  ret ptr %0
}

define ptr @"anonymous_$generated__needs"(ptr %0, ptr %1, ptr %2) {
"anonymous_$generated__needs":
  %3 = load ptr, ptr @tag_True, align 8
  %4 = call ptr @candy_builtin_equals(ptr %0, ptr %3)
  %5 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i32))
  %6 = getelementptr inbounds { ptr }, ptr %5, i32 0, i32 0
  store ptr %0, ptr %6, align 8
  %7 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionTrue_else", ptr %5, i64 ptrtoint (ptr getelementptr ({ ptr }, ptr null, i32 1) to i64))
  store ptr %7, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %8 = load ptr, ptr @"fun_Builtins__ifElse_1_case-0_matched, Builtins__isLessThanOrEqualTo_19_case-0_matched, Builtins__isNonNegative_13_case-0_matched, Builtins__not_1_case-1_matched, anonymous_$generated__needs_isConditionTrue_then", align 8
  %9 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionTrue_else", align 8
  %10 = call ptr @candy_builtin_if_else(ptr %4, ptr %8, ptr %9)
  %11 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %12 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isConditionBool_else", ptr %11, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %12, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %13 = load ptr, ptr @"fun_Examples_helloWorld_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %14 = load ptr, ptr @"fun_anonymous_$generated__needs_isConditionBool_else", align 8
  %15 = call ptr @candy_builtin_if_else(ptr %10, ptr %13, ptr %14)
  %16 = call ptr @candy_builtin_type_of(ptr %1)
  %17 = load ptr, ptr @tag_Text, align 8
  %18 = call ptr @candy_builtin_equals(ptr %16, ptr %17)
  %19 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i32))
  %20 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_isReasonText_else", ptr %19, i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64))
  store ptr %20, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %21 = load ptr, ptr @"fun_Examples_helloWorld_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %22 = load ptr, ptr @"fun_anonymous_$generated__needs_isReasonText_else", align 8
  %23 = call ptr @candy_builtin_if_else(ptr %18, ptr %21, ptr %22)
  %24 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i32))
  %25 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 0
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds { ptr, ptr }, ptr %24, i32 0, i32 1
  store ptr %2, ptr %26, align 8
  %27 = call ptr @make_candy_function(ptr @"anonymous_$generated__needs_condition_else", ptr %24, i64 ptrtoint (ptr getelementptr ({ ptr, ptr }, ptr null, i32 1) to i64))
  store ptr %27, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %28 = load ptr, ptr @"fun_Examples_helloWorld_then, anonymous_$generated__needs_condition_then, anonymous_$generated__needs_isConditionBool_then, anonymous_$generated__needs_isReasonText_then", align 8
  %29 = load ptr, ptr @"fun_anonymous_$generated__needs_condition_else", align 8
  %30 = call ptr @candy_builtin_if_else(ptr %0, ptr %28, ptr %29)
  ret ptr %30
}

define ptr @"anonymous_$generated__needs_isConditionTrue_else"(ptr %0) {
"anonymous_$generated__needs_isConditionTrue_else":
  %1 = getelementptr inbounds { ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  %3 = load ptr, ptr @tag_False, align 8
  %4 = call ptr @candy_builtin_equals(ptr %2, ptr %3)
  ret ptr %4
}

define ptr @"anonymous_$generated__needs_isConditionBool_else"() {
"anonymous_$generated__needs_isConditionBool_else":
  %0 = load ptr, ptr @"text_The `condition` must be either `True` or `False`.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_isReasonText_else"() {
"anonymous_$generated__needs_isReasonText_else":
  %0 = load ptr, ptr @"text_The `reason` must be a text.", align 8
  call void @candy_panic(ptr %0)
  unreachable
}

define ptr @"anonymous_$generated__needs_condition_else"(ptr %0) {
"anonymous_$generated__needs_condition_else":
  %1 = getelementptr inbounds { ptr, ptr }, ptr %0, i32 0, i32 0
  %2 = load ptr, ptr %1, align 8
  call void @candy_panic(ptr %2)
  unreachable
}

define ptr @Examples_helloWorld_0(ptr %0) {
Examples_helloWorld_0:
  %1 = call ptr @candy_builtin_type_of(ptr %0)
  %2 = load ptr, ptr @tag_Struct, align 8
  %3 = call ptr @candy_builtin_equals(ptr %1, ptr %2)
  %4 = load ptr, ptr @"text_`struct | typeIs Struct` was not satisfied", align 8
  %5 = load ptr, ptr @"Examples:helloWorld:0:7", align 8
  %6 = call ptr @"anonymous_$generated__needs"(ptr %3, ptr %4, ptr %5)
  %7 = load ptr, ptr @tag_Stdout, align 8
  %8 = call ptr @candy_builtin_struct_has_key(ptr %0, ptr %7)
  %9 = load ptr, ptr @"text_`struct | \E2\9C\A8.structHasKey key` was not satisfied", align 8
  %10 = load ptr, ptr @"Examples:helloWorld:0:7", align 8
  %11 = call ptr @"anonymous_$generated__needs"(ptr %8, ptr %9, ptr %10)
  %12 = load ptr, ptr @tag_Stdout, align 8
  %13 = call ptr @candy_builtin_struct_get(ptr %0, ptr %12)
  %14 = load ptr, ptr @"text_Hello, world!", align 8
  %15 = call ptr @get_candy_function_pointer(ptr %13)
  %16 = call ptr @get_candy_function_environment(ptr %13)
  %17 = call ptr (...) %15(ptr %14, ptr %16)
  ret ptr %17
}
