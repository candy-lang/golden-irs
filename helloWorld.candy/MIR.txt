# MIR for module Examples:helloWorld
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# anonymous:$generated::needs
$49 = { $2 $3 $4 (+ responsible $1) ->
  $5 = anonymous:$generated::needs
  $6 = builtinEquals
  $7 = Nothing
  $8 = True
  $9 = False
  $10 = call $6 with $2 $8 ($5 is responsible)
  $11 = builtinIfElse
  # anonymous:$generated::needs:isConditionTrue:then
  $14 = { (responsible $12) ->
    $13 = $8
  }
  # anonymous:$generated::needs:isConditionTrue:else
  $17 = { (responsible $15) ->
    $16 = call $6 with $2 $9 ($5 is responsible)
  }
  $18 = call $11 with $10 $14 $17 ($5 is responsible)
  $19 = builtinIfElse
  # anonymous:$generated::needs:isConditionBool:then
  $22 = { (responsible $20) ->
    $21 = $7
  }
  # anonymous:$generated::needs:isConditionBool:else
  $26 = { (responsible $23) ->
    $24 = "The `condition` must be either `True` or `False`."
    $25 = panicking because $24 ($1 is at fault)
  }
  $27 = call $19 with $18 $22 $26 ($5 is responsible)
  $28 = builtinTypeOf
  $29 = call $28 with $3 ($1 is responsible)
  $30 = Text
  $31 = call $6 with $29 $30 ($1 is responsible)
  $32 = builtinIfElse
  # anonymous:$generated::needs:isReasonText:then
  $35 = { (responsible $33) ->
    $34 = $7
  }
  # anonymous:$generated::needs:isReasonText:else
  $39 = { (responsible $36) ->
    $37 = "The `reason` must be a text."
    $38 = panicking because $37 ($1 is at fault)
  }
  $40 = call $32 with $31 $35 $39 ($5 is responsible)
  $41 = builtinIfElse
  # anonymous:$generated::needs:condition:then
  $44 = { (responsible $42) ->
    $43 = $7
  }
  # anonymous:$generated::needs:condition:else
  $47 = { (responsible $45) ->
    $46 = panicking because $3 ($4 is at fault)
  }
  $48 = call $41 with $2 $44 $47 ($5 is responsible)
}
$50 = Examples:helloWorld:
# Examples:helloWorld:use
$54 = { $52 (+ responsible $51) ->
  $53 = use $52 (relative to Examples:helloWorld; $51 is responsible)
}
$55 = "Builtins"
$56 = Examples:helloWorld:1
$57 = Examples:helloWorld:1
$58 = trace: start of call of $54 with $55 ($56 is responsible, code is at $57)
$59 = call $54 with $55 ($56 is responsible)
$60 = trace: end of call
$61 = $59
# Examples:helloWorld:2
$93 = { $63 (+ responsible $62) ->
  $64 = builtinStructGet
  $65 = StructGet
  $66 = Examples:helloWorld:2:2
  $67 = Examples:helloWorld:2:2
  $68 = trace: start of call of $64 with $61 $65 ($66 is responsible, code is at $67)
  $69 = call $64 with $61 $65 ($66 is responsible)
  $70 = trace: end of call
  $71 = $69
  $72 = $63
  $73 = Stdout
  $74 = Examples:helloWorld:2:5
  $75 = Examples:helloWorld:2:5
  $76 = trace: start of call of $71 with $72 $73 ($74 is responsible, code is at $75)
  $77 = call $71 with $72 $73 ($74 is responsible)
  $78 = trace: end of call
  $79 = $77
  $80 = builtinTextConcatenate
  $81 = builtinTypeOf
  $82 = Text
  $83 = builtinEquals
  $84 = builtinIfElse
  $85 = builtinToDebugText
  $86 = "Hello, world!"
  $87 = Examples:helloWorld:2:13
  $88 = Examples:helloWorld:2:13
  $89 = trace: start of call of $79 with $86 ($87 is responsible, code is at $88)
  $90 = call $79 with $86 ($87 is responsible)
  $91 = trace: end of call
  $92 = $90
}
$94 = $93
$95 = $94
$96 = Nothing
$97 = Main
$98 = [$97: $95]
$99 = builtinStructHasKey
$100 = Main
$101 = call $99 with $98 $100 ($50 is responsible)
$102 = "The module doesn't export a main function."
$103 = builtinIfElse
# Examples:helloWorld:then
$106 = { (responsible $104) ->
  $105 = Nothing
}
# Examples:helloWorld:else
$109 = { (responsible $107) ->
  $108 = panicking because $102 ($50 is at fault)
}
$110 = call $103 with $101 $106 $109 ($50 is responsible)
$111 = builtinStructGet
$112 = call $111 with $98 $100 ($50 is responsible)
$113 = builtinTypeOf
$114 = call $113 with $112 ($50 is responsible)
$115 = builtinEquals
$116 = Function
$117 = call $115 with $114 $116 ($50 is responsible)
$118 = "The exported main value is not a function."
$119 = builtinIfElse
# Examples:helloWorld:then
$122 = { (responsible $120) ->
  $121 = Nothing
}
# Examples:helloWorld:else
$125 = { (responsible $123) ->
  $124 = panicking because $118 ($50 is at fault)
}
$126 = call $119 with $117 $122 $125 ($50 is responsible)
$127 = builtinGetArgumentCount
$128 = call $127 with $112 ($50 is responsible)
$129 = 1
$130 = call $115 with $128 $129 ($50 is responsible)
$131 = "The exported main function doesn't accept exactly one parameter."
$132 = builtinIfElse
# Examples:helloWorld:then
$135 = { (responsible $133) ->
  $134 = Nothing
}
# Examples:helloWorld:else
$138 = { (responsible $136) ->
  $137 = panicking because $131 ($50 is at fault)
}
$139 = call $132 with $130 $135 $138 ($50 is responsible)
$140 = $112
