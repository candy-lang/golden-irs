# LIR for module Examples:helloWorld
#
# Tracing Config:
#
# • Include tracing of fuzzable functions? No
# • Include tracing of calls? Only for panic traces
# • Include tracing of evaluated expressions? No

# Constants
%0 = Builtins::structGet:12
%1 = Builtins::structGet:14
%2 = Builtins::structGet:21
%3 = Builtins::structGet:5
%4 = Builtins::typeIs:19
%5 = Builtins::typeIs:25
%6 = Examples:helloWorld:2:13
%7 = Examples:helloWorld:2:5
%8 = anonymous:$generated::needs
%9 = builtinEquals
%10 = builtinIfElse
%11 = builtinStructGet
%12 = builtinStructHasKey
%13 = builtinTypeOf
%14 = False
%15 = Nothing
%16 = Stdout
%17 = Struct
%18 = Text
%19 = True
%20 = "Hello, world!"
%21 = "The `condition` must be either `True` or `False`."
%22 = "The `reason` must be a text."
%23 = "`struct | typeIs Struct` was not satisfied"
%24 = "`struct | ✨.structHasKey key` was not satisfied"
%25 = { body_0 }
%26 = { body_1 }
%27 = { body_6 }
%28 = { body_7 }
%29 = { body_8 }

# Bodies
body_0 (responsible $0) =
  # Original HIR IDs: Builtins::ifElse:1:case-0:matched, Builtins::isLessThanOrEqualTo:19:case-0:matched, Builtins::isNonNegative:13:case-0:matched, Builtins::not:1:case-1:matched, anonymous:$generated::needs:isConditionTrue:then
  # Captured IDs: none
  $1 = %19<True>
body_1 (responsible $0) =
  # Original HIR IDs: Examples:helloWorld:then, anonymous:$generated::needs:condition:then, anonymous:$generated::needs:isConditionBool:then, anonymous:$generated::needs:isReasonText:then
  # Captured IDs: none
  $1 = %15<Nothing>
body_2 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionTrue:else
  # Captured IDs: $0
  $2 = %9<builtinEquals>
  $3 = dup $0 by 1
  $4 = %14<False>
  $5 = %8<anonymous:$generated::needs>
  $6 = call $2<%9<builtinEquals>> with $0 $4<%14<False>> ($5<%8<anonymous:$generated::needs>> is responsible)
body_3 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isConditionBool:else
  # Captured IDs: $0
  $2 = %21<"The `condition` must be either `True` or `False`.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%21<"The `condition` must be either `True` or `False`.">> ($0 is at fault)
body_4 (responsible $1) =
  # Original HIR IDs: anonymous:$generated::needs:isReasonText:else
  # Captured IDs: $0
  $2 = %22<"The `reason` must be a text.">
  $3 = dup $0 by 1
  $4 = panicking because $2<%22<"The `reason` must be a text.">> ($0 is at fault)
body_5 (responsible $2) =
  # Original HIR IDs: anonymous:$generated::needs:condition:else
  # Captured IDs: $0, $1
  $3 = dup $0 by 1
  $4 = dup $1 by 1
  $5 = panicking because $0 ($1 is at fault)
body_6 $0 $1 $2 (+ responsible $3) =
  # Original HIR IDs: anonymous:$generated::needs
  # Captured IDs: none
  $4 = %9<builtinEquals>
  $5 = dup $0 by 1
  $6 = %19<True>
  $7 = %8<anonymous:$generated::needs>
  $8 = call $4<%9<builtinEquals>> with $0 $6<%19<True>> ($7<%8<anonymous:$generated::needs>> is responsible)
  $9 = dup $0 by 1
  $10 = { body_2 capturing $0 }
  $11 = %10<builtinIfElse>
  $12 = dup $8 by 1
  $13 = %25<{ body_0 }>
  $14 = dup $10 by 1
  $15 = call $11<%10<builtinIfElse>> with $8 $13<%25<{ body_0 }>> $10 ($7<%8<anonymous:$generated::needs>> is responsible)
  $16 = dup $3 by 1
  $17 = { body_3 capturing $3 }
  $18 = dup $15 by 1
  $19 = %26<{ body_1 }>
  $20 = dup $17 by 1
  $21 = call $11<%10<builtinIfElse>> with $15 $19<%26<{ body_1 }>> $17 ($7<%8<anonymous:$generated::needs>> is responsible)
  $22 = %13<builtinTypeOf>
  $23 = dup $1 by 1
  $24 = call $22<%13<builtinTypeOf>> with $1 ($3 is responsible)
  $25 = dup $24 by 1
  $26 = %18<Text>
  $27 = call $4<%9<builtinEquals>> with $24 $26<%18<Text>> ($3 is responsible)
  $28 = dup $3 by 1
  $29 = { body_4 capturing $3 }
  $30 = dup $27 by 1
  $31 = dup $29 by 1
  $32 = call $11<%10<builtinIfElse>> with $27 $19<%26<{ body_1 }>> $29 ($7<%8<anonymous:$generated::needs>> is responsible)
  $33 = dup $1 by 1
  $34 = dup $2 by 1
  $35 = { body_5 capturing $1, $2 }
  $36 = dup $0 by 1
  $37 = dup $35 by 1
  $38 = call $11<%10<builtinIfElse>> with $0 $19<%26<{ body_1 }>> $35 ($7<%8<anonymous:$generated::needs>> is responsible)
  $39 = drop $35
  $40 = drop $32
  $41 = drop $29
  $42 = drop $27
  $43 = drop $24
  $44 = drop $21
  $45 = drop $17
  $46 = drop $15
  $47 = drop $10
  $48 = drop $8
  $49 = drop $2
  $50 = drop $1
  $51 = drop $0
  $52 = $38
body_7 $0 $1 (+ responsible $2) =
  # Original HIR IDs: Builtins::structGet
  # Captured IDs: none
  $3 = %13<builtinTypeOf>
  $4 = dup $0 by 1
  $5 = %4<Builtins::typeIs:19>
  $6 = call $3<%13<builtinTypeOf>> with $0 ($5<%4<Builtins::typeIs:19>> is responsible)
  $7 = %9<builtinEquals>
  $8 = dup $6 by 1
  $9 = %17<Struct>
  $10 = %5<Builtins::typeIs:25>
  $11 = call $7<%9<builtinEquals>> with $6 $9<%17<Struct>> ($10<%5<Builtins::typeIs:25>> is responsible)
  $12 = %3<Builtins::structGet:5>
  $13 = %27<{ body_6 }>
  $14 = dup $11 by 1
  $15 = %23<"`struct | typeIs Struct` was not satisfied">
  $16 = dup $2 by 1
  $17 = trace: start of call of $13<%27<{ body_6 }>> with $11 $15<%23<"`struct | typeIs Struct` was not satisfied">> $2 ($12<%3<Builtins::structGet:5>> is responsible, code is at $12<%3<Builtins::structGet:5>>)
  $18 = dup $11 by 1
  $19 = dup $2 by 1
  $20 = call $13<%27<{ body_6 }>> with $11 $15<%23<"`struct | typeIs Struct` was not satisfied">> $2 ($12<%3<Builtins::structGet:5>> is responsible)
  $21 = trace: end of call
  $22 = %12<builtinStructHasKey>
  $23 = dup $0 by 1
  $24 = dup $1 by 1
  $25 = %0<Builtins::structGet:12>
  $26 = call $22<%12<builtinStructHasKey>> with $0 $1 ($25<%0<Builtins::structGet:12>> is responsible)
  $27 = %1<Builtins::structGet:14>
  $28 = dup $26 by 1
  $29 = %24<"`struct | ✨.structHasKey key` was not satisfied">
  $30 = dup $2 by 1
  $31 = trace: start of call of $13<%27<{ body_6 }>> with $26 $29<%24<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($27<%1<Builtins::structGet:14>> is responsible, code is at $27<%1<Builtins::structGet:14>>)
  $32 = dup $26 by 1
  $33 = dup $2 by 1
  $34 = call $13<%27<{ body_6 }>> with $26 $29<%24<"`struct | ✨.structHasKey key` was not satisfied">> $2 ($27<%1<Builtins::structGet:14>> is responsible)
  $35 = trace: end of call
  $36 = %11<builtinStructGet>
  $37 = dup $0 by 1
  $38 = dup $1 by 1
  $39 = %2<Builtins::structGet:21>
  $40 = call $36<%11<builtinStructGet>> with $0 $1 ($39<%2<Builtins::structGet:21>> is responsible)
  $41 = drop $34
  $42 = drop $26
  $43 = drop $20
  $44 = drop $11
  $45 = drop $6
  $46 = drop $1
  $47 = drop $0
  $48 = $40
body_8 $0 (+ responsible $1) =
  # Original HIR IDs: Examples:helloWorld:2
  # Captured IDs: none
  $2 = %7<Examples:helloWorld:2:5>
  $3 = %28<{ body_7 }>
  $4 = dup $0 by 1
  $5 = %16<Stdout>
  $6 = trace: start of call of $3<%28<{ body_7 }>> with $0 $5<%16<Stdout>> ($2<%7<Examples:helloWorld:2:5>> is responsible, code is at $2<%7<Examples:helloWorld:2:5>>)
  $7 = %13<builtinTypeOf>
  $8 = dup $0 by 1
  $9 = %4<Builtins::typeIs:19>
  $10 = call $7<%13<builtinTypeOf>> with $0 ($9<%4<Builtins::typeIs:19>> is responsible)
  $11 = %9<builtinEquals>
  $12 = dup $10 by 1
  $13 = %17<Struct>
  $14 = %5<Builtins::typeIs:25>
  $15 = call $11<%9<builtinEquals>> with $10 $13<%17<Struct>> ($14<%5<Builtins::typeIs:25>> is responsible)
  $16 = %3<Builtins::structGet:5>
  $17 = %27<{ body_6 }>
  $18 = dup $15 by 1
  $19 = %23<"`struct | typeIs Struct` was not satisfied">
  $20 = trace: start of call of $17<%27<{ body_6 }>> with $15 $19<%23<"`struct | typeIs Struct` was not satisfied">> $2<%7<Examples:helloWorld:2:5>> ($16<%3<Builtins::structGet:5>> is responsible, code is at $16<%3<Builtins::structGet:5>>)
  $21 = dup $15 by 1
  $22 = call $17<%27<{ body_6 }>> with $15 $19<%23<"`struct | typeIs Struct` was not satisfied">> $2<%7<Examples:helloWorld:2:5>> ($16<%3<Builtins::structGet:5>> is responsible)
  $23 = trace: end of call
  $24 = %12<builtinStructHasKey>
  $25 = dup $0 by 1
  $26 = %0<Builtins::structGet:12>
  $27 = call $24<%12<builtinStructHasKey>> with $0 $5<%16<Stdout>> ($26<%0<Builtins::structGet:12>> is responsible)
  $28 = %1<Builtins::structGet:14>
  $29 = dup $27 by 1
  $30 = %24<"`struct | ✨.structHasKey key` was not satisfied">
  $31 = trace: start of call of $17<%27<{ body_6 }>> with $27 $30<%24<"`struct | ✨.structHasKey key` was not satisfied">> $2<%7<Examples:helloWorld:2:5>> ($28<%1<Builtins::structGet:14>> is responsible, code is at $28<%1<Builtins::structGet:14>>)
  $32 = dup $27 by 1
  $33 = call $17<%27<{ body_6 }>> with $27 $30<%24<"`struct | ✨.structHasKey key` was not satisfied">> $2<%7<Examples:helloWorld:2:5>> ($28<%1<Builtins::structGet:14>> is responsible)
  $34 = trace: end of call
  $35 = %11<builtinStructGet>
  $36 = dup $0 by 1
  $37 = %2<Builtins::structGet:21>
  $38 = call $35<%11<builtinStructGet>> with $0 $5<%16<Stdout>> ($37<%2<Builtins::structGet:21>> is responsible)
  $39 = trace: end of call
  $40 = %6<Examples:helloWorld:2:13>
  $41 = dup $38 by 1
  $42 = %20<"Hello, world!">
  $43 = trace: tail call of $38 with $42<%20<"Hello, world!">> ($40<%6<Examples:helloWorld:2:13>> is responsible, code is at $40<%6<Examples:helloWorld:2:13>>)
  $44 = dup $38 by 1
  $45 = call $38 with $42<%20<"Hello, world!">> ($40<%6<Examples:helloWorld:2:13>> is responsible)
  $46 = drop $38
  $47 = drop $33
  $48 = drop $27
  $49 = drop $22
  $50 = drop $15
  $51 = drop $10
  $52 = drop $0
  $53 = $45
body_9 (responsible $0) =
  # Original HIR IDs: Examples:helloWorld:
  # Captured IDs: none
  $1 = %29<{ body_8 }>
